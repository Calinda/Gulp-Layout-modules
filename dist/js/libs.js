!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(S,e){"use strict";var t=[],i=Object.getPrototypeOf,a=t.slice,g=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},l=t.push,o=t.indexOf,n={},r=n.toString,v=n.hasOwnProperty,s=v.toString,c=s.call(Object),m={},y=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType&&"function"!=typeof e.item},w=function(e){return null!=e&&e===e.window},k=S.document,u={type:!0,src:!0,nonce:!0,noModule:!0};function b(e,t,n){var i,o,r=(n=n||k).createElement("script");if(r.text=e,t)for(i in u)(o=t[i]||t.getAttribute&&t.getAttribute(i))&&r.setAttribute(i,o);n.head.appendChild(r).parentNode.removeChild(r)}function x(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?n[r.call(e)]||"object":typeof e}var d="3.6.3",$=function(e,t){return new $.fn.init(e,t)};function p(e){var t=!!e&&"length"in e&&e.length,n=x(e);return!y(e)&&!w(e)&&("array"===n||0===t||"number"==typeof t&&0<t&&t-1 in e)}$.fn=$.prototype={jquery:d,constructor:$,length:0,toArray:function(){return a.call(this)},get:function(e){return null==e?a.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=$.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return $.each(this,e)},map:function(n){return this.pushStack($.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(a.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack($.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack($.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},$.extend=$.fn.extend=function(){var e,t,n,i,o,r,s=arguments[0]||{},a=1,l=arguments.length,c=!1;for("boolean"==typeof s&&(c=s,s=arguments[a]||{},a++),"object"==typeof s||y(s)||(s={}),a===l&&(s=this,a--);a<l;a++)if(null!=(e=arguments[a]))for(t in e)i=e[t],"__proto__"!==t&&s!==i&&(c&&i&&($.isPlainObject(i)||(o=Array.isArray(i)))?(n=s[t],r=o&&!Array.isArray(n)?[]:o||$.isPlainObject(n)?n:{},o=!1,s[t]=$.extend(c,r,i)):void 0!==i&&(s[t]=i));return s},$.extend({expando:"jQuery"+(d+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==r.call(e))&&(!(t=i(e))||"function"==typeof(n=v.call(t,"constructor")&&t.constructor)&&s.call(n)===c)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,n){b(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,i=0;if(p(e))for(n=e.length;i<n&&!1!==t.call(e[i],i,e[i]);i++);else for(i in e)if(!1===t.call(e[i],i,e[i]))break;return e},makeArray:function(e,t){var n=t||[];return null!=e&&(p(Object(e))?$.merge(n,"string"==typeof e?[e]:e):l.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:o.call(t,e,n)},merge:function(e,t){for(var n=+t.length,i=0,o=e.length;i<n;i++)e[o++]=t[i];return e.length=o,e},grep:function(e,t,n){for(var i=[],o=0,r=e.length,s=!n;o<r;o++)!t(e[o],o)!==s&&i.push(e[o]);return i},map:function(e,t,n){var i,o,r=0,s=[];if(p(e))for(i=e.length;r<i;r++)null!=(o=t(e[r],r,n))&&s.push(o);else for(r in e)null!=(o=t(e[r],r,n))&&s.push(o);return g(s)},guid:1,support:m}),"function"==typeof Symbol&&($.fn[Symbol.iterator]=t[Symbol.iterator]),$.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){n["[object "+t+"]"]=t.toLowerCase()});var h=function(n){var e,h,b,r,o,f,d,g,x,l,c,T,S,s,k,v,a,u,m,$="sizzle"+1*new Date,p=n.document,C=0,i=0,y=le(),w=le(),A=le(),_=le(),E=function(e,t){return e===t&&(c=!0),0},D={}.hasOwnProperty,t=[],O=t.pop,j=t.push,L=t.push,q=t.slice,P=function(e,t){for(var n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1},H="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",N="[\\x20\\t\\r\\n\\f]",M="(?:\\\\[\\da-fA-F]{1,6}"+N+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",I="\\["+N+"*("+M+")(?:"+N+"*([*^$|!~]?=)"+N+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+M+"))|)"+N+"*\\]",R=":("+M+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+I+")*)|.*)\\)|)",z=new RegExp(N+"+","g"),W=new RegExp("^"+N+"+|((?:^|[^\\\\])(?:\\\\.)*)"+N+"+$","g"),U=new RegExp("^"+N+"*,"+N+"*"),F=new RegExp("^"+N+"*([>+~]|"+N+")"+N+"*"),B=new RegExp(N+"|>"),G=new RegExp(R),X=new RegExp("^"+M+"$"),Y={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M+"|[*])"),ATTR:new RegExp("^"+I),PSEUDO:new RegExp("^"+R),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+N+"*(even|odd|(([+-]|)(\\d*)n|)"+N+"*(?:([+-]|)"+N+"*(\\d+)|))"+N+"*\\)|)","i"),bool:new RegExp("^(?:"+H+")$","i"),needsContext:new RegExp("^"+N+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+N+"*((?:-\\d)?\\d*)"+N+"*\\)|)(?=[^-]|$)","i")},K=/HTML$/i,V=/^(?:input|select|textarea|button)$/i,Q=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,J=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=new RegExp("\\\\[\\da-fA-F]{1,6}"+N+"?|\\\\([^\\r\\n\\f])","g"),ne=function(e,t){var n="0x"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},ie=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,oe=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},re=function(){T()},se=be(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{L.apply(t=q.call(p.childNodes),p.childNodes),t[p.childNodes.length].nodeType}catch(e){L={apply:t.length?function(e,t){j.apply(e,q.call(t))}:function(e,t){for(var n=e.length,i=0;e[n++]=t[i++];);e.length=n-1}}}function ae(t,e,n,i){var o,r,s,a,l,c,u,d=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!i&&(T(e),e=e||S,k)){if(11!==p&&(l=J.exec(t)))if(o=l[1]){if(9===p){if(!(s=e.getElementById(o)))return n;if(s.id===o)return n.push(s),n}else if(d&&(s=d.getElementById(o))&&m(e,s)&&s.id===o)return n.push(s),n}else{if(l[2])return L.apply(n,e.getElementsByTagName(t)),n;if((o=l[3])&&h.getElementsByClassName&&e.getElementsByClassName)return L.apply(n,e.getElementsByClassName(o)),n}if(h.qsa&&!_[t+" "]&&(!v||!v.test(t))&&(1!==p||"object"!==e.nodeName.toLowerCase())){if(u=t,d=e,1===p&&(B.test(t)||F.test(t))){for((d=ee.test(t)&&me(e.parentNode)||e)===e&&h.scope||((a=e.getAttribute("id"))?a=a.replace(ie,oe):e.setAttribute("id",a=$)),r=(c=f(t)).length;r--;)c[r]=(a?"#"+a:":scope")+" "+we(c[r]);u=c.join(",")}try{if(h.cssSupportsSelector&&!CSS.supports("selector(:is("+u+"))"))throw new Error;return L.apply(n,d.querySelectorAll(u)),n}catch(e){_(t,!0)}finally{a===$&&e.removeAttribute("id")}}}return g(t.replace(W,"$1"),e,n,i)}function le(){var i=[];return function e(t,n){return i.push(t+" ")>b.cacheLength&&delete e[i.shift()],e[t+" "]=n}}function ce(e){return e[$]=!0,e}function ue(e){var t=S.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function de(e,t){for(var n=e.split("|"),i=n.length;i--;)b.attrHandle[n[i]]=t}function pe(e,t){var n=t&&e,i=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function he(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function fe(n){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===n}}function ge(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&se(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function ve(s){return ce(function(r){return r=+r,ce(function(e,t){for(var n,i=s([],e.length,r),o=i.length;o--;)e[n=i[o]]&&(e[n]=!(t[n]=e[n]))})})}function me(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in h=ae.support={},o=ae.isXML=function(e){var t=e&&e.namespaceURI,n=e&&(e.ownerDocument||e).documentElement;return!K.test(t||n&&n.nodeName||"HTML")},T=ae.setDocument=function(e){var t,n,i=e?e.ownerDocument||e:p;return i!=S&&9===i.nodeType&&i.documentElement&&(s=(S=i).documentElement,k=!o(S),p!=S&&(n=S.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",re,!1):n.attachEvent&&n.attachEvent("onunload",re)),h.scope=ue(function(e){return s.appendChild(e).appendChild(S.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),h.cssSupportsSelector=ue(function(){return CSS.supports("selector(*)")&&S.querySelectorAll(":is(:jqfake)")&&!CSS.supports("selector(:is(*,:jqfake))")}),h.attributes=ue(function(e){return e.className="i",!e.getAttribute("className")}),h.getElementsByTagName=ue(function(e){return e.appendChild(S.createComment("")),!e.getElementsByTagName("*").length}),h.getElementsByClassName=Z.test(S.getElementsByClassName),h.getById=ue(function(e){return s.appendChild(e).id=$,!S.getElementsByName||!S.getElementsByName($).length}),h.getById?(b.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute("id")===t}},b.find.ID=function(e,t){if(void 0!==t.getElementById&&k){var n=t.getElementById(e);return n?[n]:[]}}):(b.filter.ID=function(e){var n=e.replace(te,ne);return function(e){var t=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===n}},b.find.ID=function(e,t){if(void 0!==t.getElementById&&k){var n,i,o,r=t.getElementById(e);if(r){if((n=r.getAttributeNode("id"))&&n.value===e)return[r];for(o=t.getElementsByName(e),i=0;r=o[i++];)if((n=r.getAttributeNode("id"))&&n.value===e)return[r]}return[]}}),b.find.TAG=h.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):h.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,i=[],o=0,r=t.getElementsByTagName(e);if("*"!==e)return r;for(;n=r[o++];)1===n.nodeType&&i.push(n);return i},b.find.CLASS=h.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&k)return t.getElementsByClassName(e)},a=[],v=[],(h.qsa=Z.test(S.querySelectorAll))&&(ue(function(e){var t;s.appendChild(e).innerHTML="<a id='"+$+"'></a><select id='"+$+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&v.push("[*^$]="+N+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||v.push("\\["+N+"*(?:value|"+H+")"),e.querySelectorAll("[id~="+$+"-]").length||v.push("~="),(t=S.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||v.push("\\["+N+"*name"+N+"*="+N+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||v.push(":checked"),e.querySelectorAll("a#"+$+"+*").length||v.push(".#.+[+~]"),e.querySelectorAll("\\\f"),v.push("[\\r\\n\\f]")}),ue(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=S.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&v.push("name"+N+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&v.push(":enabled",":disabled"),s.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&v.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),v.push(",.*:")})),(h.matchesSelector=Z.test(u=s.matches||s.webkitMatchesSelector||s.mozMatchesSelector||s.oMatchesSelector||s.msMatchesSelector))&&ue(function(e){h.disconnectedMatch=u.call(e,"*"),u.call(e,"[s!='']:x"),a.push("!=",R)}),h.cssSupportsSelector||v.push(":has"),v=v.length&&new RegExp(v.join("|")),a=a.length&&new RegExp(a.join("|")),t=Z.test(s.compareDocumentPosition),m=t||Z.test(s.contains)?function(e,t){var n=9===e.nodeType&&e.documentElement||e,i=t&&t.parentNode;return e===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):e.compareDocumentPosition&&16&e.compareDocumentPosition(i)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},E=t?function(e,t){if(e===t)return c=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!h.sortDetached&&t.compareDocumentPosition(e)===n?e==S||e.ownerDocument==p&&m(p,e)?-1:t==S||t.ownerDocument==p&&m(p,t)?1:l?P(l,e)-P(l,t):0:4&n?-1:1)}:function(e,t){if(e===t)return c=!0,0;var n,i=0,o=e.parentNode,r=t.parentNode,s=[e],a=[t];if(!o||!r)return e==S?-1:t==S?1:o?-1:r?1:l?P(l,e)-P(l,t):0;if(o===r)return pe(e,t);for(n=e;n=n.parentNode;)s.unshift(n);for(n=t;n=n.parentNode;)a.unshift(n);for(;s[i]===a[i];)i++;return i?pe(s[i],a[i]):s[i]==p?-1:a[i]==p?1:0}),S},ae.matches=function(e,t){return ae(e,null,null,t)},ae.matchesSelector=function(e,t){if(T(e),h.matchesSelector&&k&&!_[t+" "]&&(!a||!a.test(t))&&(!v||!v.test(t)))try{var n=u.call(e,t);if(n||h.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){_(t,!0)}return 0<ae(t,S,null,[e]).length},ae.contains=function(e,t){return(e.ownerDocument||e)!=S&&T(e),m(e,t)},ae.attr=function(e,t){(e.ownerDocument||e)!=S&&T(e);var n=b.attrHandle[t.toLowerCase()],i=n&&D.call(b.attrHandle,t.toLowerCase())?n(e,t,!k):void 0;return void 0!==i?i:h.attributes||!k?e.getAttribute(t):(i=e.getAttributeNode(t))&&i.specified?i.value:null},ae.escape=function(e){return(e+"").replace(ie,oe)},ae.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},ae.uniqueSort=function(e){var t,n=[],i=0,o=0;if(c=!h.detectDuplicates,l=!h.sortStable&&e.slice(0),e.sort(E),c){for(;t=e[o++];)t===e[o]&&(i=n.push(o));for(;i--;)e.splice(n[i],1)}return l=null,e},r=ae.getText=function(e){var t,n="",i=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=r(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[i++];)n+=r(t);return n},(b=ae.selectors={cacheLength:50,createPseudo:ce,match:Y,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||"").replace(te,ne),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||ae.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&ae.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return Y.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&G.test(n)&&(t=f(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=y[e+" "];return t||(t=new RegExp("(^|"+N+")"+e+"("+N+"|$)"))&&y(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(n,i,o){return function(e){var t=ae.attr(e,n);return null==t?"!="===i:!i||(t+="","="===i?t===o:"!="===i?t!==o:"^="===i?o&&0===t.indexOf(o):"*="===i?o&&-1<t.indexOf(o):"$="===i?o&&t.slice(-o.length)===o:"~="===i?-1<(" "+t.replace(z," ")+" ").indexOf(o):"|="===i&&(t===o||t.slice(0,o.length+1)===o+"-"))}},CHILD:function(f,e,t,g,v){var m="nth"!==f.slice(0,3),y="last"!==f.slice(-4),w="of-type"===e;return 1===g&&0===v?function(e){return!!e.parentNode}:function(e,t,n){var i,o,r,s,a,l,c=m!==y?"nextSibling":"previousSibling",u=e.parentNode,d=w&&e.nodeName.toLowerCase(),p=!n&&!w,h=!1;if(u){if(m){for(;c;){for(s=e;s=s[c];)if(w?s.nodeName.toLowerCase()===d:1===s.nodeType)return!1;l=c="only"===f&&!l&&"nextSibling"}return!0}if(l=[y?u.firstChild:u.lastChild],y&&p){for(h=(a=(i=(o=(r=(s=u)[$]||(s[$]={}))[s.uniqueID]||(r[s.uniqueID]={}))[f]||[])[0]===C&&i[1])&&i[2],s=a&&u.childNodes[a];s=++a&&s&&s[c]||(h=a=0)||l.pop();)if(1===s.nodeType&&++h&&s===e){o[f]=[C,a,h];break}}else if(p&&(h=a=(i=(o=(r=(s=e)[$]||(s[$]={}))[s.uniqueID]||(r[s.uniqueID]={}))[f]||[])[0]===C&&i[1]),!1===h)for(;(s=++a&&s&&s[c]||(h=a=0)||l.pop())&&((w?s.nodeName.toLowerCase()!==d:1!==s.nodeType)||!++h||(p&&((o=(r=s[$]||(s[$]={}))[s.uniqueID]||(r[s.uniqueID]={}))[f]=[C,h]),s!==e)););return(h-=v)===g||h%g==0&&0<=h/g}}},PSEUDO:function(e,r){var t,s=b.pseudos[e]||b.setFilters[e.toLowerCase()]||ae.error("unsupported pseudo: "+e);return s[$]?s(r):1<s.length?(t=[e,e,"",r],b.setFilters.hasOwnProperty(e.toLowerCase())?ce(function(e,t){for(var n,i=s(e,r),o=i.length;o--;)e[n=P(e,i[o])]=!(t[n]=i[o])}):function(e){return s(e,0,t)}):s}},pseudos:{not:ce(function(e){var i=[],o=[],a=d(e.replace(W,"$1"));return a[$]?ce(function(e,t,n,i){for(var o,r=a(e,null,i,[]),s=e.length;s--;)(o=r[s])&&(e[s]=!(t[s]=o))}):function(e,t,n){return i[0]=e,a(i,null,n,o),i[0]=null,!o.pop()}}),has:ce(function(t){return function(e){return 0<ae(t,e).length}}),contains:ce(function(t){return t=t.replace(te,ne),function(e){return-1<(e.textContent||r(e)).indexOf(t)}}),lang:ce(function(n){return X.test(n||"")||ae.error("unsupported lang: "+n),n=n.replace(te,ne).toLowerCase(),function(e){var t;do{if(t=k?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=n.location&&n.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===s},focus:function(e){return e===S.activeElement&&(!S.hasFocus||S.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:ge(!1),disabled:ge(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return Q.test(e.nodeName)},input:function(e){return V.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ve(function(){return[0]}),last:ve(function(e,t){return[t-1]}),eq:ve(function(e,t,n){return[n<0?n+t:n]}),even:ve(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:ve(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:ve(function(e,t,n){for(var i=n<0?n+t:t<n?t:n;0<=--i;)e.push(i);return e}),gt:ve(function(e,t,n){for(var i=n<0?n+t:n;++i<t;)e.push(i);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=he(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=fe(e);function ye(){}function we(e){for(var t=0,n=e.length,i="";t<n;t++)i+=e[t].value;return i}function be(a,e,t){var l=e.dir,c=e.next,u=c||l,d=t&&"parentNode"===u,p=i++;return e.first?function(e,t,n){for(;e=e[l];)if(1===e.nodeType||d)return a(e,t,n);return!1}:function(e,t,n){var i,o,r,s=[C,p];if(n){for(;e=e[l];)if((1===e.nodeType||d)&&a(e,t,n))return!0}else for(;e=e[l];)if(1===e.nodeType||d)if(o=(r=e[$]||(e[$]={}))[e.uniqueID]||(r[e.uniqueID]={}),c&&c===e.nodeName.toLowerCase())e=e[l]||e;else{if((i=o[u])&&i[0]===C&&i[1]===p)return s[2]=i[2];if((o[u]=s)[2]=a(e,t,n))return!0}return!1}}function xe(o){return 1<o.length?function(e,t,n){for(var i=o.length;i--;)if(!o[i](e,t,n))return!1;return!0}:o[0]}function Te(e,t,n,i,o){for(var r,s=[],a=0,l=e.length,c=null!=t;a<l;a++)(r=e[a])&&(n&&!n(r,i,o)||(s.push(r),c&&t.push(a)));return s}function Se(h,f,g,v,m,e){return v&&!v[$]&&(v=Se(v)),m&&!m[$]&&(m=Se(m,e)),ce(function(e,t,n,i){var o,r,s,a=[],l=[],c=t.length,u=e||function(e,t,n){for(var i=0,o=t.length;i<o;i++)ae(e,t[i],n);return n}(f||"*",n.nodeType?[n]:n,[]),d=!h||!e&&f?u:Te(u,a,h,n,i),p=g?m||(e?h:c||v)?[]:t:d;if(g&&g(d,p,n,i),v)for(o=Te(p,l),v(o,[],n,i),r=o.length;r--;)(s=o[r])&&(p[l[r]]=!(d[l[r]]=s));if(e){if(m||h){if(m){for(o=[],r=p.length;r--;)(s=p[r])&&o.push(d[r]=s);m(null,p=[],o,i)}for(r=p.length;r--;)(s=p[r])&&-1<(o=m?P(e,s):a[r])&&(e[o]=!(t[o]=s))}}else p=Te(p===t?p.splice(c,p.length):p),m?m(null,t,p,i):L.apply(t,p)})}function ke(e){for(var o,t,n,i=e.length,r=b.relative[e[0].type],s=r||b.relative[" "],a=r?1:0,l=be(function(e){return e===o},s,!0),c=be(function(e){return-1<P(o,e)},s,!0),u=[function(e,t,n){var i=!r&&(n||t!==x)||((o=t).nodeType?l(e,t,n):c(e,t,n));return o=null,i}];a<i;a++)if(t=b.relative[e[a].type])u=[be(xe(u),t)];else{if((t=b.filter[e[a].type].apply(null,e[a].matches))[$]){for(n=++a;n<i&&!b.relative[e[n].type];n++);return Se(1<a&&xe(u),1<a&&we(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(W,"$1"),t,a<n&&ke(e.slice(a,n)),n<i&&ke(e=e.slice(n)),n<i&&we(e))}u.push(t)}return xe(u)}return ye.prototype=b.filters=b.pseudos,b.setFilters=new ye,f=ae.tokenize=function(e,t){var n,i,o,r,s,a,l,c=w[e+" "];if(c)return t?0:c.slice(0);for(s=e,a=[],l=b.preFilter;s;){for(r in n&&!(i=U.exec(s))||(i&&(s=s.slice(i[0].length)||s),a.push(o=[])),n=!1,(i=F.exec(s))&&(n=i.shift(),o.push({value:n,type:i[0].replace(W," ")}),s=s.slice(n.length)),b.filter)!(i=Y[r].exec(s))||l[r]&&!(i=l[r](i))||(n=i.shift(),o.push({value:n,type:r,matches:i}),s=s.slice(n.length));if(!n)break}return t?s.length:s?ae.error(e):w(e,a).slice(0)},d=ae.compile=function(e,t){var n,v,m,y,w,i,o=[],r=[],s=A[e+" "];if(!s){for(t||(t=f(e)),n=t.length;n--;)(s=ke(t[n]))[$]?o.push(s):r.push(s);(s=A(e,(v=r,y=0<(m=o).length,w=0<v.length,i=function(e,t,n,i,o){var r,s,a,l=0,c="0",u=e&&[],d=[],p=x,h=e||w&&b.find.TAG("*",o),f=C+=null==p?1:Math.random()||.1,g=h.length;for(o&&(x=t==S||t||o);c!==g&&null!=(r=h[c]);c++){if(w&&r){for(s=0,t||r.ownerDocument==S||(T(r),n=!k);a=v[s++];)if(a(r,t||S,n)){i.push(r);break}o&&(C=f)}y&&((r=!a&&r)&&l--,e&&u.push(r))}if(l+=c,y&&c!==l){for(s=0;a=m[s++];)a(u,d,t,n);if(e){if(0<l)for(;c--;)u[c]||d[c]||(d[c]=O.call(i));d=Te(d)}L.apply(i,d),o&&!e&&0<d.length&&1<l+m.length&&ae.uniqueSort(i)}return o&&(C=f,x=p),u},y?ce(i):i))).selector=e}return s},g=ae.select=function(e,t,n,i){var o,r,s,a,l,c="function"==typeof e&&e,u=!i&&f(e=c.selector||e);if(n=n||[],1===u.length){if(2<(r=u[0]=u[0].slice(0)).length&&"ID"===(s=r[0]).type&&9===t.nodeType&&k&&b.relative[r[1].type]){if(!(t=(b.find.ID(s.matches[0].replace(te,ne),t)||[])[0]))return n;c&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(o=Y.needsContext.test(e)?0:r.length;o--&&(s=r[o],!b.relative[a=s.type]);)if((l=b.find[a])&&(i=l(s.matches[0].replace(te,ne),ee.test(r[0].type)&&me(t.parentNode)||t))){if(r.splice(o,1),!(e=i.length&&we(r)))return L.apply(n,i),n;break}}return(c||d(e,u))(i,t,!k,n,!t||ee.test(e)&&me(t.parentNode)||t),n},h.sortStable=$.split("").sort(E).join("")===$,h.detectDuplicates=!!c,T(),h.sortDetached=ue(function(e){return 1&e.compareDocumentPosition(S.createElement("fieldset"))}),ue(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||de("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),h.attributes&&ue(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||de("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ue(function(e){return null==e.getAttribute("disabled")})||de(H,function(e,t,n){var i;if(!n)return!0===e[t]?t.toLowerCase():(i=e.getAttributeNode(t))&&i.specified?i.value:null}),ae}(S);$.find=h,$.expr=h.selectors,$.expr[":"]=$.expr.pseudos,$.uniqueSort=$.unique=h.uniqueSort,$.text=h.getText,$.isXMLDoc=h.isXML,$.contains=h.contains,$.escapeSelector=h.escape;var f=function(e,t,n){for(var i=[],o=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(o&&$(e).is(n))break;i.push(e)}return i},T=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},C=$.expr.match.needsContext;function A(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var _=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function E(e,n,i){return y(n)?$.grep(e,function(e,t){return!!n.call(e,t,e)!==i}):n.nodeType?$.grep(e,function(e){return e===n!==i}):"string"!=typeof n?$.grep(e,function(e){return-1<o.call(n,e)!==i}):$.filter(n,e,i)}$.filter=function(e,t,n){var i=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?$.find.matchesSelector(i,e)?[i]:[]:$.find.matches(e,$.grep(t,function(e){return 1===e.nodeType}))},$.fn.extend({find:function(e){var t,n,i=this.length,o=this;if("string"!=typeof e)return this.pushStack($(e).filter(function(){for(t=0;t<i;t++)if($.contains(o[t],this))return!0}));for(n=this.pushStack([]),t=0;t<i;t++)$.find(e,o[t],n);return 1<i?$.uniqueSort(n):n},filter:function(e){return this.pushStack(E(this,e||[],!1))},not:function(e){return this.pushStack(E(this,e||[],!0))},is:function(e){return!!E(this,"string"==typeof e&&C.test(e)?$(e):e||[],!1).length}});var D,O=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;($.fn.init=function(e,t,n){var i,o;if(!e)return this;if(n=n||D,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):y(e)?void 0!==n.ready?n.ready(e):e($):$.makeArray(e,this);if(!(i="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:O.exec(e))||!i[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(i[1]){if(t=t instanceof $?t[0]:t,$.merge(this,$.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:k,!0)),_.test(i[1])&&$.isPlainObject(t))for(i in t)y(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}return(o=k.getElementById(i[2]))&&(this[0]=o,this.length=1),this}).prototype=$.fn,D=$(k);var j=/^(?:parents|prev(?:Until|All))/,L={children:!0,contents:!0,next:!0,prev:!0};function q(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}$.fn.extend({has:function(e){var t=$(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if($.contains(this,t[e]))return!0})},closest:function(e,t){var n,i=0,o=this.length,r=[],s="string"!=typeof e&&$(e);if(!C.test(e))for(;i<o;i++)for(n=this[i];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(s?-1<s.index(n):1===n.nodeType&&$.find.matchesSelector(n,e))){r.push(n);break}return this.pushStack(1<r.length?$.uniqueSort(r):r)},index:function(e){return e?"string"==typeof e?o.call($(e),this[0]):o.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack($.uniqueSort($.merge(this.get(),$(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),$.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return f(e,"parentNode")},parentsUntil:function(e,t,n){return f(e,"parentNode",n)},next:function(e){return q(e,"nextSibling")},prev:function(e){return q(e,"previousSibling")},nextAll:function(e){return f(e,"nextSibling")},prevAll:function(e){return f(e,"previousSibling")},nextUntil:function(e,t,n){return f(e,"nextSibling",n)},prevUntil:function(e,t,n){return f(e,"previousSibling",n)},siblings:function(e){return T((e.parentNode||{}).firstChild,e)},children:function(e){return T(e.firstChild)},contents:function(e){return null!=e.contentDocument&&i(e.contentDocument)?e.contentDocument:(A(e,"template")&&(e=e.content||e),$.merge([],e.childNodes))}},function(i,o){$.fn[i]=function(e,t){var n=$.map(this,o,e);return"Until"!==i.slice(-5)&&(t=e),t&&"string"==typeof t&&(n=$.filter(t,n)),1<this.length&&(L[i]||$.uniqueSort(n),j.test(i)&&n.reverse()),this.pushStack(n)}});var P=/[^\x20\t\r\n\f]+/g;function H(e){return e}function N(e){throw e}function M(e,t,n,i){var o;try{e&&y(o=e.promise)?o.call(e).done(t).fail(n):e&&y(o=e.then)?o.call(e,t,n):t.apply(void 0,[e].slice(i))}catch(e){n.apply(void 0,[e])}}$.Callbacks=function(i){var e,n;i="string"==typeof i?(e=i,n={},$.each(e.match(P)||[],function(e,t){n[t]=!0}),n):$.extend({},i);var o,t,r,s,a=[],l=[],c=-1,u=function(){for(s=s||i.once,r=o=!0;l.length;c=-1)for(t=l.shift();++c<a.length;)!1===a[c].apply(t[0],t[1])&&i.stopOnFalse&&(c=a.length,t=!1);i.memory||(t=!1),o=!1,s&&(a=t?[]:"")},d={add:function(){return a&&(t&&!o&&(c=a.length-1,l.push(t)),function n(e){$.each(e,function(e,t){y(t)?i.unique&&d.has(t)||a.push(t):t&&t.length&&"string"!==x(t)&&n(t)})}(arguments),t&&!o&&u()),this},remove:function(){return $.each(arguments,function(e,t){for(var n;-1<(n=$.inArray(t,a,n));)a.splice(n,1),n<=c&&c--}),this},has:function(e){return e?-1<$.inArray(e,a):0<a.length},empty:function(){return a&&(a=[]),this},disable:function(){return s=l=[],a=t="",this},disabled:function(){return!a},lock:function(){return s=l=[],t||o||(a=t=""),this},locked:function(){return!!s},fireWith:function(e,t){return s||(t=[e,(t=t||[]).slice?t.slice():t],l.push(t),o||u()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!r}};return d},$.extend({Deferred:function(e){var r=[["notify","progress",$.Callbacks("memory"),$.Callbacks("memory"),2],["resolve","done",$.Callbacks("once memory"),$.Callbacks("once memory"),0,"resolved"],["reject","fail",$.Callbacks("once memory"),$.Callbacks("once memory"),1,"rejected"]],o="pending",s={state:function(){return o},always:function(){return a.done(arguments).fail(arguments),this},catch:function(e){return s.then(null,e)},pipe:function(){var o=arguments;return $.Deferred(function(i){$.each(r,function(e,t){var n=y(o[t[4]])&&o[t[4]];a[t[1]](function(){var e=n&&n.apply(this,arguments);e&&y(e.promise)?e.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[t[0]+"With"](this,n?[e]:arguments)})}),o=null}).promise()},then:function(t,n,i){var l=0;function c(o,r,s,a){return function(){var n=this,i=arguments,e=function(){var e,t;if(!(o<l)){if((e=s.apply(n,i))===r.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,y(t)?a?t.call(e,c(l,r,H,a),c(l,r,N,a)):(l++,t.call(e,c(l,r,H,a),c(l,r,N,a),c(l,r,H,r.notifyWith))):(s!==H&&(n=void 0,i=[e]),(a||r.resolveWith)(n,i))}},t=a?e:function(){try{e()}catch(e){$.Deferred.exceptionHook&&$.Deferred.exceptionHook(e,t.stackTrace),l<=o+1&&(s!==N&&(n=void 0,i=[e]),r.rejectWith(n,i))}};o?t():($.Deferred.getStackHook&&(t.stackTrace=$.Deferred.getStackHook()),S.setTimeout(t))}}return $.Deferred(function(e){r[0][3].add(c(0,e,y(i)?i:H,e.notifyWith)),r[1][3].add(c(0,e,y(t)?t:H)),r[2][3].add(c(0,e,y(n)?n:N))}).promise()},promise:function(e){return null!=e?$.extend(e,s):s}},a={};return $.each(r,function(e,t){var n=t[2],i=t[5];s[t[1]]=n.add,i&&n.add(function(){o=i},r[3-e][2].disable,r[3-e][3].disable,r[0][2].lock,r[0][3].lock),n.add(t[3].fire),a[t[0]]=function(){return a[t[0]+"With"](this===a?void 0:this,arguments),this},a[t[0]+"With"]=n.fireWith}),s.promise(a),e&&e.call(a,a),a},when:function(e){var n=arguments.length,t=n,i=Array(t),o=a.call(arguments),r=$.Deferred(),s=function(t){return function(e){i[t]=this,o[t]=1<arguments.length?a.call(arguments):e,--n||r.resolveWith(i,o)}};if(n<=1&&(M(e,r.done(s(t)).resolve,r.reject,!n),"pending"===r.state()||y(o[t]&&o[t].then)))return r.then();for(;t--;)M(o[t],s(t),r.reject);return r.promise()}});var I=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;$.Deferred.exceptionHook=function(e,t){S.console&&S.console.warn&&e&&I.test(e.name)&&S.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},$.readyException=function(e){S.setTimeout(function(){throw e})};var R=$.Deferred();function z(){k.removeEventListener("DOMContentLoaded",z),S.removeEventListener("load",z),$.ready()}$.fn.ready=function(e){return R.then(e).catch(function(e){$.readyException(e)}),this},$.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--$.readyWait:$.isReady)||($.isReady=!0)!==e&&0<--$.readyWait||R.resolveWith(k,[$])}}),$.ready.then=R.then,"complete"===k.readyState||"loading"!==k.readyState&&!k.documentElement.doScroll?S.setTimeout($.ready):(k.addEventListener("DOMContentLoaded",z),S.addEventListener("load",z));var W=function(e,t,n,i,o,r,s){var a=0,l=e.length,c=null==n;if("object"===x(n))for(a in o=!0,n)W(e,t,a,n[a],!0,r,s);else if(void 0!==i&&(o=!0,y(i)||(s=!0),c&&(t=s?(t.call(e,i),null):(c=t,function(e,t,n){return c.call($(e),n)})),t))for(;a<l;a++)t(e[a],n,s?i:i.call(e[a],a,t(e[a],n)));return o?e:c?t.call(e):l?t(e[0],n):r},U=/^-ms-/,F=/-([a-z])/g;function B(e,t){return t.toUpperCase()}function G(e){return e.replace(U,"ms-").replace(F,B)}var X=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function Y(){this.expando=$.expando+Y.uid++}Y.uid=1,Y.prototype={cache:function(e){var t=e[this.expando];return t||(t={},X(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var i,o=this.cache(e);if("string"==typeof t)o[G(t)]=n;else for(i in t)o[G(i)]=t[i];return o},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][G(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,i=e[this.expando];if(void 0!==i){if(void 0!==t){n=(t=Array.isArray(t)?t.map(G):(t=G(t))in i?[t]:t.match(P)||[]).length;for(;n--;)delete i[t[n]]}(void 0===t||$.isEmptyObject(i))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!$.isEmptyObject(t)}};var K=new Y,V=new Y,Q=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/[A-Z]/g;function J(e,t,n){var i,o;if(void 0===n&&1===e.nodeType)if(i="data-"+t.replace(Z,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(i))){try{n="true"===(o=n)||"false"!==o&&("null"===o?null:o===+o+""?+o:Q.test(o)?JSON.parse(o):o)}catch(e){}V.set(e,t,n)}else n=void 0;return n}$.extend({hasData:function(e){return V.hasData(e)||K.hasData(e)},data:function(e,t,n){return V.access(e,t,n)},removeData:function(e,t){V.remove(e,t)},_data:function(e,t,n){return K.access(e,t,n)},_removeData:function(e,t){K.remove(e,t)}}),$.fn.extend({data:function(n,e){var t,i,o,r=this[0],s=r&&r.attributes;if(void 0!==n)return"object"==typeof n?this.each(function(){V.set(this,n)}):W(this,function(e){var t;if(r&&void 0===e)return void 0!==(t=V.get(r,n))?t:void 0!==(t=J(r,n))?t:void 0;this.each(function(){V.set(this,n,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(o=V.get(r),1===r.nodeType&&!K.get(r,"hasDataAttrs"))){for(t=s.length;t--;)s[t]&&0===(i=s[t].name).indexOf("data-")&&(i=G(i.slice(5)),J(r,i,o[i]));K.set(r,"hasDataAttrs",!0)}return o},removeData:function(e){return this.each(function(){V.remove(this,e)})}}),$.extend({queue:function(e,t,n){var i;if(e)return t=(t||"fx")+"queue",i=K.get(e,t),n&&(!i||Array.isArray(n)?i=K.access(e,t,$.makeArray(n)):i.push(n)),i||[]},dequeue:function(e,t){t=t||"fx";var n=$.queue(e,t),i=n.length,o=n.shift(),r=$._queueHooks(e,t);"inprogress"===o&&(o=n.shift(),i--),o&&("fx"===t&&n.unshift("inprogress"),delete r.stop,o.call(e,function(){$.dequeue(e,t)},r)),!i&&r&&r.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return K.get(e,n)||K.access(e,n,{empty:$.Callbacks("once memory").add(function(){K.remove(e,[t+"queue",n])})})}}),$.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?$.queue(this[0],t):void 0===n?this:this.each(function(){var e=$.queue(this,t,n);$._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&$.dequeue(this,t)})},dequeue:function(e){return this.each(function(){$.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,i=1,o=$.Deferred(),r=this,s=this.length,a=function(){--i||o.resolveWith(r,[r])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";s--;)(n=K.get(r[s],e+"queueHooks"))&&n.empty&&(i++,n.empty.add(a));return a(),o.promise(t)}});var ee=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,te=new RegExp("^(?:([+-])=|)("+ee+")([a-z%]*)$","i"),ne=["Top","Right","Bottom","Left"],ie=k.documentElement,oe=function(e){return $.contains(e.ownerDocument,e)},re={composed:!0};ie.getRootNode&&(oe=function(e){return $.contains(e.ownerDocument,e)||e.getRootNode(re)===e.ownerDocument});var se=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&oe(e)&&"none"===$.css(e,"display")};function ae(e,t,n,i){var o,r,s=20,a=i?function(){return i.cur()}:function(){return $.css(e,t,"")},l=a(),c=n&&n[3]||($.cssNumber[t]?"":"px"),u=e.nodeType&&($.cssNumber[t]||"px"!==c&&+l)&&te.exec($.css(e,t));if(u&&u[3]!==c){for(l/=2,c=c||u[3],u=+l||1;s--;)$.style(e,t,u+c),(1-r)*(1-(r=a()/l||.5))<=0&&(s=0),u/=r;u*=2,$.style(e,t,u+c),n=n||[]}return n&&(u=+u||+l||0,o=n[1]?u+(n[1]+1)*n[2]:+n[2],i&&(i.unit=c,i.start=u,i.end=o)),o}var le={};function ce(e,t){for(var n,i,o,r,s,a,l,c=[],u=0,d=e.length;u<d;u++)(i=e[u]).style&&(n=i.style.display,t?("none"===n&&(c[u]=K.get(i,"display")||null,c[u]||(i.style.display="")),""===i.style.display&&se(i)&&(c[u]=(l=s=r=void 0,s=(o=i).ownerDocument,a=o.nodeName,(l=le[a])||(r=s.body.appendChild(s.createElement(a)),l=$.css(r,"display"),r.parentNode.removeChild(r),"none"===l&&(l="block"),le[a]=l)))):"none"!==n&&(c[u]="none",K.set(i,"display",n)));for(u=0;u<d;u++)null!=c[u]&&(e[u].style.display=c[u]);return e}$.fn.extend({show:function(){return ce(this,!0)},hide:function(){return ce(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){se(this)?$(this).show():$(this).hide()})}});var ue,de,pe=/^(?:checkbox|radio)$/i,he=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,fe=/^$|^module$|\/(?:java|ecma)script/i;ue=k.createDocumentFragment().appendChild(k.createElement("div")),(de=k.createElement("input")).setAttribute("type","radio"),de.setAttribute("checked","checked"),de.setAttribute("name","t"),ue.appendChild(de),m.checkClone=ue.cloneNode(!0).cloneNode(!0).lastChild.checked,ue.innerHTML="<textarea>x</textarea>",m.noCloneChecked=!!ue.cloneNode(!0).lastChild.defaultValue,ue.innerHTML="<option></option>",m.option=!!ue.lastChild;var ge={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ve(e,t){var n;return n=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&A(e,t)?$.merge([e],n):n}function me(e,t){for(var n=0,i=e.length;n<i;n++)K.set(e[n],"globalEval",!t||K.get(t[n],"globalEval"))}ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td,m.option||(ge.optgroup=ge.option=[1,"<select multiple='multiple'>","</select>"]);var ye=/<|&#?\w+;/;function we(e,t,n,i,o){for(var r,s,a,l,c,u,d=t.createDocumentFragment(),p=[],h=0,f=e.length;h<f;h++)if((r=e[h])||0===r)if("object"===x(r))$.merge(p,r.nodeType?[r]:r);else if(ye.test(r)){for(s=s||d.appendChild(t.createElement("div")),a=(he.exec(r)||["",""])[1].toLowerCase(),l=ge[a]||ge._default,s.innerHTML=l[1]+$.htmlPrefilter(r)+l[2],u=l[0];u--;)s=s.lastChild;$.merge(p,s.childNodes),(s=d.firstChild).textContent=""}else p.push(t.createTextNode(r));for(d.textContent="",h=0;r=p[h++];)if(i&&-1<$.inArray(r,i))o&&o.push(r);else if(c=oe(r),s=ve(d.appendChild(r),"script"),c&&me(s),n)for(u=0;r=s[u++];)fe.test(r.type||"")&&n.push(r);return d}var be=/^([^.]*)(?:\.(.+)|)/;function xe(){return!0}function Te(){return!1}function Se(e,t){return e===function(){try{return k.activeElement}catch(e){}}()==("focus"===t)}function ke(e,t,n,i,o,r){var s,a;if("object"==typeof t){for(a in"string"!=typeof n&&(i=i||n,n=void 0),t)ke(e,a,n,i,t[a],r);return e}if(null==i&&null==o?(o=n,i=n=void 0):null==o&&("string"==typeof n?(o=i,i=void 0):(o=i,i=n,n=void 0)),!1===o)o=Te;else if(!o)return e;return 1===r&&(s=o,(o=function(e){return $().off(e),s.apply(this,arguments)}).guid=s.guid||(s.guid=$.guid++)),e.each(function(){$.event.add(this,t,o,i,n)})}function $e(e,o,r){r?(K.set(e,o,!1),$.event.add(e,o,{namespace:!1,handler:function(e){var t,n,i=K.get(this,o);if(1&e.isTrigger&&this[o]){if(i.length)($.event.special[o]||{}).delegateType&&e.stopPropagation();else if(i=a.call(arguments),K.set(this,o,i),t=r(this,o),this[o](),i!==(n=K.get(this,o))||t?K.set(this,o,!1):n={},i!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else i.length&&(K.set(this,o,{value:$.event.trigger($.extend(i[0],$.Event.prototype),i.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===K.get(e,o)&&$.event.add(e,o,xe)}$.event={global:{},add:function(t,e,n,i,o){var r,s,a,l,c,u,d,p,h,f,g,v=K.get(t);if(X(t))for(n.handler&&(n=(r=n).handler,o=r.selector),o&&$.find.matchesSelector(ie,o),n.guid||(n.guid=$.guid++),(l=v.events)||(l=v.events=Object.create(null)),(s=v.handle)||(s=v.handle=function(e){return void 0!==$&&$.event.triggered!==e.type?$.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(P)||[""]).length;c--;)h=g=(a=be.exec(e[c])||[])[1],f=(a[2]||"").split(".").sort(),h&&(d=$.event.special[h]||{},h=(o?d.delegateType:d.bindType)||h,d=$.event.special[h]||{},u=$.extend({type:h,origType:g,data:i,handler:n,guid:n.guid,selector:o,needsContext:o&&$.expr.match.needsContext.test(o),namespace:f.join(".")},r),(p=l[h])||((p=l[h]=[]).delegateCount=0,d.setup&&!1!==d.setup.call(t,i,f,s)||t.addEventListener&&t.addEventListener(h,s)),d.add&&(d.add.call(t,u),u.handler.guid||(u.handler.guid=n.guid)),o?p.splice(p.delegateCount++,0,u):p.push(u),$.event.global[h]=!0)},remove:function(e,t,n,i,o){var r,s,a,l,c,u,d,p,h,f,g,v=K.hasData(e)&&K.get(e);if(v&&(l=v.events)){for(c=(t=(t||"").match(P)||[""]).length;c--;)if(h=g=(a=be.exec(t[c])||[])[1],f=(a[2]||"").split(".").sort(),h){for(d=$.event.special[h]||{},p=l[h=(i?d.delegateType:d.bindType)||h]||[],a=a[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=r=p.length;r--;)u=p[r],!o&&g!==u.origType||n&&n.guid!==u.guid||a&&!a.test(u.namespace)||i&&i!==u.selector&&("**"!==i||!u.selector)||(p.splice(r,1),u.selector&&p.delegateCount--,d.remove&&d.remove.call(e,u));s&&!p.length&&(d.teardown&&!1!==d.teardown.call(e,f,v.handle)||$.removeEvent(e,h,v.handle),delete l[h])}else for(h in l)$.event.remove(e,h+t[c],n,i,!0);$.isEmptyObject(l)&&K.remove(e,"handle events")}},dispatch:function(e){var t,n,i,o,r,s,a=new Array(arguments.length),l=$.event.fix(e),c=(K.get(this,"events")||Object.create(null))[l.type]||[],u=$.event.special[l.type]||{};for(a[0]=l,t=1;t<arguments.length;t++)a[t]=arguments[t];if(l.delegateTarget=this,!u.preDispatch||!1!==u.preDispatch.call(this,l)){for(s=$.event.handlers.call(this,l,c),t=0;(o=s[t++])&&!l.isPropagationStopped();)for(l.currentTarget=o.elem,n=0;(r=o.handlers[n++])&&!l.isImmediatePropagationStopped();)l.rnamespace&&!1!==r.namespace&&!l.rnamespace.test(r.namespace)||(l.handleObj=r,l.data=r.data,void 0!==(i=(($.event.special[r.origType]||{}).handle||r.handler).apply(o.elem,a))&&!1===(l.result=i)&&(l.preventDefault(),l.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,l),l.result}},handlers:function(e,t){var n,i,o,r,s,a=[],l=t.delegateCount,c=e.target;if(l&&c.nodeType&&!("click"===e.type&&1<=e.button))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==e.type||!0!==c.disabled)){for(r=[],s={},n=0;n<l;n++)void 0===s[o=(i=t[n]).selector+" "]&&(s[o]=i.needsContext?-1<$(o,this).index(c):$.find(o,this,null,[c]).length),s[o]&&r.push(i);r.length&&a.push({elem:c,handlers:r})}return c=this,l<t.length&&a.push({elem:c,handlers:t.slice(l)}),a},addProp:function(t,e){Object.defineProperty($.Event.prototype,t,{enumerable:!0,configurable:!0,get:y(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[$.expando]?e:new $.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,"input")&&$e(t,"click",xe),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,"input")&&$e(t,"click"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&A(t,"input")&&K.get(t,"click")||A(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},$.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},$.Event=function(e,t){if(!(this instanceof $.Event))return new $.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?xe:Te,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&$.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[$.expando]=!0},$.Event.prototype={constructor:$.Event,isDefaultPrevented:Te,isPropagationStopped:Te,isImmediatePropagationStopped:Te,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=xe,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=xe,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=xe,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},$.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},$.event.addProp),$.each({focus:"focusin",blur:"focusout"},function(t,e){$.event.special[t]={setup:function(){return $e(this,t,Se),!1},trigger:function(){return $e(this,t),!0},_default:function(e){return K.get(e.target,t)},delegateType:e}}),$.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,o){$.event.special[e]={delegateType:o,bindType:o,handle:function(e){var t,n=e.relatedTarget,i=e.handleObj;return n&&(n===this||$.contains(this,n))||(e.type=i.origType,t=i.handler.apply(this,arguments),e.type=o),t}}}),$.fn.extend({on:function(e,t,n,i){return ke(this,e,t,n,i)},one:function(e,t,n,i){return ke(this,e,t,n,i,1)},off:function(e,t,n){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,$(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=Te),this.each(function(){$.event.remove(this,e,n,t)});for(o in e)this.off(o,t,e[o]);return this}});var Ce=/<script|<style|<link/i,Ae=/checked\s*(?:[^=]|=\s*.checked.)/i,_e=/^\s*<!\[CDATA\[|\]\]>\s*$/g;function Ee(e,t){return A(e,"table")&&A(11!==t.nodeType?t:t.firstChild,"tr")&&$(e).children("tbody")[0]||e}function De(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Oe(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function je(e,t){var n,i,o,r,s,a;if(1===t.nodeType){if(K.hasData(e)&&(a=K.get(e).events))for(o in K.remove(t,"handle events"),a)for(n=0,i=a[o].length;n<i;n++)$.event.add(t,o,a[o][n]);V.hasData(e)&&(r=V.access(e),s=$.extend({},r),V.set(t,s))}}function Le(n,i,o,r){i=g(i);var e,t,s,a,l,c,u=0,d=n.length,p=d-1,h=i[0],f=y(h);if(f||1<d&&"string"==typeof h&&!m.checkClone&&Ae.test(h))return n.each(function(e){var t=n.eq(e);f&&(i[0]=h.call(this,e,t.html())),Le(t,i,o,r)});if(d&&(t=(e=we(i,n[0].ownerDocument,!1,n,r)).firstChild,1===e.childNodes.length&&(e=t),t||r)){for(a=(s=$.map(ve(e,"script"),De)).length;u<d;u++)l=e,u!==p&&(l=$.clone(l,!0,!0),a&&$.merge(s,ve(l,"script"))),o.call(n[u],l,u);if(a)for(c=s[s.length-1].ownerDocument,$.map(s,Oe),u=0;u<a;u++)l=s[u],fe.test(l.type||"")&&!K.access(l,"globalEval")&&$.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?$._evalUrl&&!l.noModule&&$._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")},c):b(l.textContent.replace(_e,""),l,c))}return n}function qe(e,t,n){for(var i,o=t?$.filter(t,e):e,r=0;null!=(i=o[r]);r++)n||1!==i.nodeType||$.cleanData(ve(i)),i.parentNode&&(n&&oe(i)&&me(ve(i,"script")),i.parentNode.removeChild(i));return e}$.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var i,o,r,s,a,l,c,u=e.cloneNode(!0),d=oe(e);if(!(m.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||$.isXMLDoc(e)))for(s=ve(u),i=0,o=(r=ve(e)).length;i<o;i++)a=r[i],l=s[i],void 0,"input"===(c=l.nodeName.toLowerCase())&&pe.test(a.type)?l.checked=a.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=a.defaultValue);if(t)if(n)for(r=r||ve(e),s=s||ve(u),i=0,o=r.length;i<o;i++)je(r[i],s[i]);else je(e,u);return 0<(s=ve(u,"script")).length&&me(s,!d&&ve(e,"script")),u},cleanData:function(e){for(var t,n,i,o=$.event.special,r=0;void 0!==(n=e[r]);r++)if(X(n)){if(t=n[K.expando]){if(t.events)for(i in t.events)o[i]?$.event.remove(n,i):$.removeEvent(n,i,t.handle);n[K.expando]=void 0}n[V.expando]&&(n[V.expando]=void 0)}}}),$.fn.extend({detach:function(e){return qe(this,e,!0)},remove:function(e){return qe(this,e)},text:function(e){return W(this,function(e){return void 0===e?$.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Le(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Ee(this,e).appendChild(e)})},prepend:function(){return Le(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Ee(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return Le(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Le(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&($.cleanData(ve(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return $.clone(this,e,t)})},html:function(e){return W(this,function(e){var t=this[0]||{},n=0,i=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Ce.test(e)&&!ge[(he.exec(e)||["",""])[1].toLowerCase()]){e=$.htmlPrefilter(e);try{for(;n<i;n++)1===(t=this[n]||{}).nodeType&&($.cleanData(ve(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return Le(this,arguments,function(e){var t=this.parentNode;$.inArray(this,n)<0&&($.cleanData(ve(this)),t&&t.replaceChild(e,this))},n)}}),$.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,s){$.fn[e]=function(e){for(var t,n=[],i=$(e),o=i.length-1,r=0;r<=o;r++)t=r===o?this:this.clone(!0),$(i[r])[s](t),l.apply(n,t.get());return this.pushStack(n)}});var Pe=new RegExp("^("+ee+")(?!px)[a-z%]+$","i"),He=/^--/,Ne=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=S),t.getComputedStyle(e)},Me=function(e,t,n){var i,o,r={};for(o in t)r[o]=e.style[o],e.style[o]=t[o];for(o in i=n.call(e),t)e.style[o]=r[o];return i},Ie=new RegExp(ne.join("|"),"i"),Re="[\\x20\\t\\r\\n\\f]",ze=new RegExp("^"+Re+"+|((?:^|[^\\\\])(?:\\\\.)*)"+Re+"+$","g");function We(e,t,n){var i,o,r,s,a=He.test(t),l=e.style;return(n=n||Ne(e))&&(s=n.getPropertyValue(t)||n[t],a&&s&&(s=s.replace(ze,"$1")||void 0),""!==s||oe(e)||(s=$.style(e,t)),!m.pixelBoxStyles()&&Pe.test(s)&&Ie.test(t)&&(i=l.width,o=l.minWidth,r=l.maxWidth,l.minWidth=l.maxWidth=l.width=s,s=n.width,l.width=i,l.minWidth=o,l.maxWidth=r)),void 0!==s?s+"":s}function Ue(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(c){l.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",c.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ie.appendChild(l).appendChild(c);var e=S.getComputedStyle(c);n="1%"!==e.top,a=12===t(e.marginLeft),c.style.right="60%",r=36===t(e.right),i=36===t(e.width),c.style.position="absolute",o=12===t(c.offsetWidth/3),ie.removeChild(l),c=null}}function t(e){return Math.round(parseFloat(e))}var n,i,o,r,s,a,l=k.createElement("div"),c=k.createElement("div");c.style&&(c.style.backgroundClip="content-box",c.cloneNode(!0).style.backgroundClip="",m.clearCloneStyle="content-box"===c.style.backgroundClip,$.extend(m,{boxSizingReliable:function(){return e(),i},pixelBoxStyles:function(){return e(),r},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),a},scrollboxSize:function(){return e(),o},reliableTrDimensions:function(){var e,t,n,i;return null==s&&(e=k.createElement("table"),t=k.createElement("tr"),n=k.createElement("div"),e.style.cssText="position:absolute;left:-11111px;border-collapse:separate",t.style.cssText="border:1px solid",t.style.height="1px",n.style.height="9px",n.style.display="block",ie.appendChild(e).appendChild(t).appendChild(n),i=S.getComputedStyle(t),s=parseInt(i.height,10)+parseInt(i.borderTopWidth,10)+parseInt(i.borderBottomWidth,10)===t.offsetHeight,ie.removeChild(e)),s}}))}();var Fe=["Webkit","Moz","ms"],Be=k.createElement("div").style,Ge={};function Xe(e){var t=$.cssProps[e]||Ge[e];return t||(e in Be?e:Ge[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),n=Fe.length;n--;)if((e=Fe[n]+t)in Be)return e}(e)||e)}var Ye=/^(none|table(?!-c[ea]).+)/,Ke={position:"absolute",visibility:"hidden",display:"block"},Ve={letterSpacing:"0",fontWeight:"400"};function Qe(e,t,n){var i=te.exec(t);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):t}function Ze(e,t,n,i,o,r){var s="width"===t?1:0,a=0,l=0;if(n===(i?"border":"content"))return 0;for(;s<4;s+=2)"margin"===n&&(l+=$.css(e,n+ne[s],!0,o)),i?("content"===n&&(l-=$.css(e,"padding"+ne[s],!0,o)),"margin"!==n&&(l-=$.css(e,"border"+ne[s]+"Width",!0,o))):(l+=$.css(e,"padding"+ne[s],!0,o),"padding"!==n?l+=$.css(e,"border"+ne[s]+"Width",!0,o):a+=$.css(e,"border"+ne[s]+"Width",!0,o));return!i&&0<=r&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-r-l-a-.5))||0),l}function Je(e,t,n){var i=Ne(e),o=(!m.boxSizingReliable()||n)&&"border-box"===$.css(e,"boxSizing",!1,i),r=o,s=We(e,t,i),a="offset"+t[0].toUpperCase()+t.slice(1);if(Pe.test(s)){if(!n)return s;s="auto"}return(!m.boxSizingReliable()&&o||!m.reliableTrDimensions()&&A(e,"tr")||"auto"===s||!parseFloat(s)&&"inline"===$.css(e,"display",!1,i))&&e.getClientRects().length&&(o="border-box"===$.css(e,"boxSizing",!1,i),(r=a in e)&&(s=e[a])),(s=parseFloat(s)||0)+Ze(e,t,n||(o?"border":"content"),r,i,s)+"px"}function et(e,t,n,i,o){return new et.prototype.init(e,t,n,i,o)}$.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=We(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,r,s,a=G(t),l=He.test(t),c=e.style;if(l||(t=Xe(a)),s=$.cssHooks[t]||$.cssHooks[a],void 0===n)return s&&"get"in s&&void 0!==(o=s.get(e,!1,i))?o:c[t];"string"===(r=typeof n)&&(o=te.exec(n))&&o[1]&&(n=ae(e,t,o),r="number"),null!=n&&n==n&&("number"!==r||l||(n+=o&&o[3]||($.cssNumber[a]?"":"px")),m.clearCloneStyle||""!==n||0!==t.indexOf("background")||(c[t]="inherit"),s&&"set"in s&&void 0===(n=s.set(e,n,i))||(l?c.setProperty(t,n):c[t]=n))}},css:function(e,t,n,i){var o,r,s,a=G(t);return He.test(t)||(t=Xe(a)),(s=$.cssHooks[t]||$.cssHooks[a])&&"get"in s&&(o=s.get(e,!0,n)),void 0===o&&(o=We(e,t,i)),"normal"===o&&t in Ve&&(o=Ve[t]),""===n||n?(r=parseFloat(o),!0===n||isFinite(r)?r||0:o):o}}),$.each(["height","width"],function(e,l){$.cssHooks[l]={get:function(e,t,n){if(t)return!Ye.test($.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?Je(e,l,n):Me(e,Ke,function(){return Je(e,l,n)})},set:function(e,t,n){var i,o=Ne(e),r=!m.scrollboxSize()&&"absolute"===o.position,s=(r||n)&&"border-box"===$.css(e,"boxSizing",!1,o),a=n?Ze(e,l,n,s,o):0;return s&&r&&(a-=Math.ceil(e["offset"+l[0].toUpperCase()+l.slice(1)]-parseFloat(o[l])-Ze(e,l,"border",!1,o)-.5)),a&&(i=te.exec(t))&&"px"!==(i[3]||"px")&&(e.style[l]=t,t=$.css(e,l)),Qe(0,t,a)}}}),$.cssHooks.marginLeft=Ue(m.reliableMarginLeft,function(e,t){if(t)return(parseFloat(We(e,"marginLeft"))||e.getBoundingClientRect().left-Me(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),$.each({margin:"",padding:"",border:"Width"},function(o,r){$.cssHooks[o+r]={expand:function(e){for(var t=0,n={},i="string"==typeof e?e.split(" "):[e];t<4;t++)n[o+ne[t]+r]=i[t]||i[t-2]||i[0];return n}},"margin"!==o&&($.cssHooks[o+r].set=Qe)}),$.fn.extend({css:function(e,t){return W(this,function(e,t,n){var i,o,r={},s=0;if(Array.isArray(t)){for(i=Ne(e),o=t.length;s<o;s++)r[t[s]]=$.css(e,t[s],!1,i);return r}return void 0!==n?$.style(e,t,n):$.css(e,t)},e,t,1<arguments.length)}}),(($.Tween=et).prototype={constructor:et,init:function(e,t,n,i,o,r){this.elem=e,this.prop=n,this.easing=o||$.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=r||($.cssNumber[n]?"":"px")},cur:function(){var e=et.propHooks[this.prop];return e&&e.get?e.get(this):et.propHooks._default.get(this)},run:function(e){var t,n=et.propHooks[this.prop];return this.options.duration?this.pos=t=$.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):et.propHooks._default.set(this),this}}).init.prototype=et.prototype,(et.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=$.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){$.fx.step[e.prop]?$.fx.step[e.prop](e):1!==e.elem.nodeType||!$.cssHooks[e.prop]&&null==e.elem.style[Xe(e.prop)]?e.elem[e.prop]=e.now:$.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=et.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},$.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},$.fx=et.prototype.init,$.fx.step={};var tt,nt,it,ot,rt=/^(?:toggle|show|hide)$/,st=/queueHooks$/;function at(){nt&&(!1===k.hidden&&S.requestAnimationFrame?S.requestAnimationFrame(at):S.setTimeout(at,$.fx.interval),$.fx.tick())}function lt(){return S.setTimeout(function(){tt=void 0}),tt=Date.now()}function ct(e,t){var n,i=0,o={height:e};for(t=t?1:0;i<4;i+=2-t)o["margin"+(n=ne[i])]=o["padding"+n]=e;return t&&(o.opacity=o.width=e),o}function ut(e,t,n){for(var i,o=(dt.tweeners[t]||[]).concat(dt.tweeners["*"]),r=0,s=o.length;r<s;r++)if(i=o[r].call(n,t,e))return i}function dt(r,e,t){var n,s,i=0,o=dt.prefilters.length,a=$.Deferred().always(function(){delete l.elem}),l=function(){if(s)return!1;for(var e=tt||lt(),t=Math.max(0,c.startTime+c.duration-e),n=1-(t/c.duration||0),i=0,o=c.tweens.length;i<o;i++)c.tweens[i].run(n);return a.notifyWith(r,[c,n,t]),n<1&&o?t:(o||a.notifyWith(r,[c,1,0]),a.resolveWith(r,[c]),!1)},c=a.promise({elem:r,props:$.extend({},e),opts:$.extend(!0,{specialEasing:{},easing:$.easing._default},t),originalProperties:e,originalOptions:t,startTime:tt||lt(),duration:t.duration,tweens:[],createTween:function(e,t){var n=$.Tween(r,c.opts,e,t,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(n),n},stop:function(e){var t=0,n=e?c.tweens.length:0;if(s)return this;for(s=!0;t<n;t++)c.tweens[t].run(1);return e?(a.notifyWith(r,[c,1,0]),a.resolveWith(r,[c,e])):a.rejectWith(r,[c,e]),this}}),u=c.props;for(!function(e,t){var n,i,o,r,s;for(n in e)if(o=t[i=G(n)],r=e[n],Array.isArray(r)&&(o=r[1],r=e[n]=r[0]),n!==i&&(e[i]=r,delete e[n]),(s=$.cssHooks[i])&&"expand"in s)for(n in r=s.expand(r),delete e[i],r)n in e||(e[n]=r[n],t[n]=o);else t[i]=o}(u,c.opts.specialEasing);i<o;i++)if(n=dt.prefilters[i].call(c,r,u,c.opts))return y(n.stop)&&($._queueHooks(c.elem,c.opts.queue).stop=n.stop.bind(n)),n;return $.map(u,ut,c),y(c.opts.start)&&c.opts.start.call(r,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),$.fx.timer($.extend(l,{elem:r,anim:c,queue:c.opts.queue})),c}$.Animation=$.extend(dt,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return ae(n.elem,e,te.exec(t),n),n}]},tweener:function(e,t){for(var n,i=0,o=(e=y(e)?(t=e,["*"]):e.match(P)).length;i<o;i++)n=e[i],dt.tweeners[n]=dt.tweeners[n]||[],dt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var i,o,r,s,a,l,c,u,d="width"in t||"height"in t,p=this,h={},f=e.style,g=e.nodeType&&se(e),v=K.get(e,"fxshow");for(i in n.queue||(null==(s=$._queueHooks(e,"fx")).unqueued&&(s.unqueued=0,a=s.empty.fire,s.empty.fire=function(){s.unqueued||a()}),s.unqueued++,p.always(function(){p.always(function(){s.unqueued--,$.queue(e,"fx").length||s.empty.fire()})})),t)if(o=t[i],rt.test(o)){if(delete t[i],r=r||"toggle"===o,o===(g?"hide":"show")){if("show"!==o||!v||void 0===v[i])continue;g=!0}h[i]=v&&v[i]||$.style(e,i)}if((l=!$.isEmptyObject(t))||!$.isEmptyObject(h))for(i in d&&1===e.nodeType&&(n.overflow=[f.overflow,f.overflowX,f.overflowY],null==(c=v&&v.display)&&(c=K.get(e,"display")),"none"===(u=$.css(e,"display"))&&(c?u=c:(ce([e],!0),c=e.style.display||c,u=$.css(e,"display"),ce([e]))),("inline"===u||"inline-block"===u&&null!=c)&&"none"===$.css(e,"float")&&(l||(p.done(function(){f.display=c}),null==c&&(u=f.display,c="none"===u?"":u)),f.display="inline-block")),n.overflow&&(f.overflow="hidden",p.always(function(){f.overflow=n.overflow[0],f.overflowX=n.overflow[1],f.overflowY=n.overflow[2]})),l=!1,h)l||(v?"hidden"in v&&(g=v.hidden):v=K.access(e,"fxshow",{display:c}),r&&(v.hidden=!g),g&&ce([e],!0),p.done(function(){for(i in g||ce([e]),K.remove(e,"fxshow"),h)$.style(e,i,h[i])})),l=ut(g?v[i]:0,i,p),i in v||(v[i]=l.start,g&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?dt.prefilters.unshift(e):dt.prefilters.push(e)}}),$.speed=function(e,t,n){var i=e&&"object"==typeof e?$.extend({},e):{complete:n||!n&&t||y(e)&&e,duration:e,easing:n&&t||t&&!y(t)&&t};return $.fx.off?i.duration=0:"number"!=typeof i.duration&&(i.duration in $.fx.speeds?i.duration=$.fx.speeds[i.duration]:i.duration=$.fx.speeds._default),null!=i.queue&&!0!==i.queue||(i.queue="fx"),i.old=i.complete,i.complete=function(){y(i.old)&&i.old.call(this),i.queue&&$.dequeue(this,i.queue)},i},$.fn.extend({fadeTo:function(e,t,n,i){return this.filter(se).css("opacity",0).show().end().animate({opacity:t},e,n,i)},animate:function(t,e,n,i){var o=$.isEmptyObject(t),r=$.speed(e,n,i),s=function(){var e=dt(this,$.extend({},t),r);(o||K.get(this,"finish"))&&e.stop(!0)};return s.finish=s,o||!1===r.queue?this.each(s):this.queue(r.queue,s)},stop:function(o,e,r){var s=function(e){var t=e.stop;delete e.stop,t(r)};return"string"!=typeof o&&(r=e,e=o,o=void 0),e&&this.queue(o||"fx",[]),this.each(function(){var e=!0,t=null!=o&&o+"queueHooks",n=$.timers,i=K.get(this);if(t)i[t]&&i[t].stop&&s(i[t]);else for(t in i)i[t]&&i[t].stop&&st.test(t)&&s(i[t]);for(t=n.length;t--;)n[t].elem!==this||null!=o&&n[t].queue!==o||(n[t].anim.stop(r),e=!1,n.splice(t,1));!e&&r||$.dequeue(this,o)})},finish:function(s){return!1!==s&&(s=s||"fx"),this.each(function(){var e,t=K.get(this),n=t[s+"queue"],i=t[s+"queueHooks"],o=$.timers,r=n?n.length:0;for(t.finish=!0,$.queue(this,s,[]),i&&i.stop&&i.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===s&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<r;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),$.each(["toggle","show","hide"],function(e,i){var o=$.fn[i];$.fn[i]=function(e,t,n){return null==e||"boolean"==typeof e?o.apply(this,arguments):this.animate(ct(i,!0),e,t,n)}}),$.each({slideDown:ct("show"),slideUp:ct("hide"),slideToggle:ct("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,i){$.fn[e]=function(e,t,n){return this.animate(i,e,t,n)}}),$.timers=[],$.fx.tick=function(){var e,t=0,n=$.timers;for(tt=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||$.fx.stop(),tt=void 0},$.fx.timer=function(e){$.timers.push(e),$.fx.start()},$.fx.interval=13,$.fx.start=function(){nt||(nt=!0,at())},$.fx.stop=function(){nt=null},$.fx.speeds={slow:600,fast:200,_default:400},$.fn.delay=function(i,e){return i=$.fx&&$.fx.speeds[i]||i,e=e||"fx",this.queue(e,function(e,t){var n=S.setTimeout(e,i);t.stop=function(){S.clearTimeout(n)}})},it=k.createElement("input"),ot=k.createElement("select").appendChild(k.createElement("option")),it.type="checkbox",m.checkOn=""!==it.value,m.optSelected=ot.selected,(it=k.createElement("input")).value="t",it.type="radio",m.radioValue="t"===it.value;var pt,ht=$.expr.attrHandle;$.fn.extend({attr:function(e,t){return W(this,$.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){$.removeAttr(this,e)})}}),$.extend({attr:function(e,t,n){var i,o,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return void 0===e.getAttribute?$.prop(e,t,n):(1===r&&$.isXMLDoc(e)||(o=$.attrHooks[t.toLowerCase()]||($.expr.match.bool.test(t)?pt:void 0)),void 0!==n?null===n?void $.removeAttr(e,t):o&&"set"in o&&void 0!==(i=o.set(e,n,t))?i:(e.setAttribute(t,n+""),n):o&&"get"in o&&null!==(i=o.get(e,t))?i:null==(i=$.find.attr(e,t))?void 0:i)},attrHooks:{type:{set:function(e,t){if(!m.radioValue&&"radio"===t&&A(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,i=0,o=t&&t.match(P);if(o&&1===e.nodeType)for(;n=o[i++];)e.removeAttribute(n)}}),pt={set:function(e,t,n){return!1===t?$.removeAttr(e,n):e.setAttribute(n,n),n}},$.each($.expr.match.bool.source.match(/\w+/g),function(e,t){var s=ht[t]||$.find.attr;ht[t]=function(e,t,n){var i,o,r=t.toLowerCase();return n||(o=ht[r],ht[r]=i,i=null!=s(e,t,n)?r:null,ht[r]=o),i}});var ft=/^(?:input|select|textarea|button)$/i,gt=/^(?:a|area)$/i;function vt(e){return(e.match(P)||[]).join(" ")}function mt(e){return e.getAttribute&&e.getAttribute("class")||""}function yt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(P)||[]}$.fn.extend({prop:function(e,t){return W(this,$.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[$.propFix[e]||e]})}}),$.extend({prop:function(e,t,n){var i,o,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&$.isXMLDoc(e)||(t=$.propFix[t]||t,o=$.propHooks[t]),void 0!==n?o&&"set"in o&&void 0!==(i=o.set(e,n,t))?i:e[t]=n:o&&"get"in o&&null!==(i=o.get(e,t))?i:e[t]},propHooks:{tabIndex:{get:function(e){var t=$.find.attr(e,"tabindex");return t?parseInt(t,10):ft.test(e.nodeName)||gt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),m.optSelected||($.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),$.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){$.propFix[this.toLowerCase()]=this}),$.fn.extend({addClass:function(t){var e,n,i,o,r,s;return y(t)?this.each(function(e){$(this).addClass(t.call(this,e,mt(this)))}):(e=yt(t)).length?this.each(function(){if(i=mt(this),n=1===this.nodeType&&" "+vt(i)+" "){for(r=0;r<e.length;r++)o=e[r],n.indexOf(" "+o+" ")<0&&(n+=o+" ");s=vt(n),i!==s&&this.setAttribute("class",s)}}):this},removeClass:function(t){var e,n,i,o,r,s;return y(t)?this.each(function(e){$(this).removeClass(t.call(this,e,mt(this)))}):arguments.length?(e=yt(t)).length?this.each(function(){if(i=mt(this),n=1===this.nodeType&&" "+vt(i)+" "){for(r=0;r<e.length;r++)for(o=e[r];-1<n.indexOf(" "+o+" ");)n=n.replace(" "+o+" "," ");s=vt(n),i!==s&&this.setAttribute("class",s)}}):this:this.attr("class","")},toggleClass:function(t,n){var e,i,o,r,s=typeof t,a="string"===s||Array.isArray(t);return y(t)?this.each(function(e){$(this).toggleClass(t.call(this,e,mt(this),n),n)}):"boolean"==typeof n&&a?n?this.addClass(t):this.removeClass(t):(e=yt(t),this.each(function(){if(a)for(r=$(this),o=0;o<e.length;o++)i=e[o],r.hasClass(i)?r.removeClass(i):r.addClass(i);else void 0!==t&&"boolean"!==s||((i=mt(this))&&K.set(this,"__className__",i),this.setAttribute&&this.setAttribute("class",i||!1===t?"":K.get(this,"__className__")||""))}))},hasClass:function(e){var t,n,i=0;for(t=" "+e+" ";n=this[i++];)if(1===n.nodeType&&-1<(" "+vt(mt(n))+" ").indexOf(t))return!0;return!1}});var wt=/\r/g;$.fn.extend({val:function(n){var i,e,o,t=this[0];return arguments.length?(o=y(n),this.each(function(e){var t;1===this.nodeType&&(null==(t=o?n.call(this,e,$(this).val()):n)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=$.map(t,function(e){return null==e?"":e+""})),(i=$.valHooks[this.type]||$.valHooks[this.nodeName.toLowerCase()])&&"set"in i&&void 0!==i.set(this,t,"value")||(this.value=t))})):t?(i=$.valHooks[t.type]||$.valHooks[t.nodeName.toLowerCase()])&&"get"in i&&void 0!==(e=i.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(wt,""):null==e?"":e:void 0}}),$.extend({valHooks:{option:{get:function(e){var t=$.find.attr(e,"value");return null!=t?t:vt($.text(e))}},select:{get:function(e){var t,n,i,o=e.options,r=e.selectedIndex,s="select-one"===e.type,a=s?null:[],l=s?r+1:o.length;for(i=r<0?l:s?r:0;i<l;i++)if(((n=o[i]).selected||i===r)&&!n.disabled&&(!n.parentNode.disabled||!A(n.parentNode,"optgroup"))){if(t=$(n).val(),s)return t;a.push(t)}return a},set:function(e,t){for(var n,i,o=e.options,r=$.makeArray(t),s=o.length;s--;)((i=o[s]).selected=-1<$.inArray($.valHooks.option.get(i),r))&&(n=!0);return n||(e.selectedIndex=-1),r}}}}),$.each(["radio","checkbox"],function(){$.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<$.inArray($(e).val(),t)}},m.checkOn||($.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),m.focusin="onfocusin"in S;var bt=/^(?:focusinfocus|focusoutblur)$/,xt=function(e){e.stopPropagation()};$.extend($.event,{trigger:function(e,t,n,i){var o,r,s,a,l,c,u,d,p=[n||k],h=v.call(e,"type")?e.type:e,f=v.call(e,"namespace")?e.namespace.split("."):[];if(r=d=s=n=n||k,3!==n.nodeType&&8!==n.nodeType&&!bt.test(h+$.event.triggered)&&(-1<h.indexOf(".")&&(h=(f=h.split(".")).shift(),f.sort()),l=h.indexOf(":")<0&&"on"+h,(e=e[$.expando]?e:new $.Event(h,"object"==typeof e&&e)).isTrigger=i?2:3,e.namespace=f.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:$.makeArray(t,[e]),u=$.event.special[h]||{},i||!u.trigger||!1!==u.trigger.apply(n,t))){if(!i&&!u.noBubble&&!w(n)){for(a=u.delegateType||h,bt.test(a+h)||(r=r.parentNode);r;r=r.parentNode)p.push(r),s=r;s===(n.ownerDocument||k)&&p.push(s.defaultView||s.parentWindow||S)}for(o=0;(r=p[o++])&&!e.isPropagationStopped();)d=r,e.type=1<o?a:u.bindType||h,(c=(K.get(r,"events")||Object.create(null))[e.type]&&K.get(r,"handle"))&&c.apply(r,t),(c=l&&r[l])&&c.apply&&X(r)&&(e.result=c.apply(r,t),!1===e.result&&e.preventDefault());return e.type=h,i||e.isDefaultPrevented()||u._default&&!1!==u._default.apply(p.pop(),t)||!X(n)||l&&y(n[h])&&!w(n)&&((s=n[l])&&(n[l]=null),$.event.triggered=h,e.isPropagationStopped()&&d.addEventListener(h,xt),n[h](),e.isPropagationStopped()&&d.removeEventListener(h,xt),$.event.triggered=void 0,s&&(n[l]=s)),e.result}},simulate:function(e,t,n){var i=$.extend(new $.Event,n,{type:e,isSimulated:!0});$.event.trigger(i,null,t)}}),$.fn.extend({trigger:function(e,t){return this.each(function(){$.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return $.event.trigger(e,t,n,!0)}}),m.focusin||$.each({focus:"focusin",blur:"focusout"},function(n,i){var o=function(e){$.event.simulate(i,e.target,$.event.fix(e))};$.event.special[i]={setup:function(){var e=this.ownerDocument||this.document||this,t=K.access(e,i);t||e.addEventListener(n,o,!0),K.access(e,i,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=K.access(e,i)-1;t?K.access(e,i,t):(e.removeEventListener(n,o,!0),K.remove(e,i))}}});var Tt=S.location,St={guid:Date.now()},kt=/\?/;$.parseXML=function(e){var t,n;if(!e||"string"!=typeof e)return null;try{t=(new S.DOMParser).parseFromString(e,"text/xml")}catch(e){}return n=t&&t.getElementsByTagName("parsererror")[0],t&&!n||$.error("Invalid XML: "+(n?$.map(n.childNodes,function(e){return e.textContent}).join("\n"):e)),t};var $t=/\[\]$/,Ct=/\r?\n/g,At=/^(?:submit|button|image|reset|file)$/i,_t=/^(?:input|select|textarea|keygen)/i;function Et(n,e,i,o){var t;if(Array.isArray(e))$.each(e,function(e,t){i||$t.test(n)?o(n,t):Et(n+"["+("object"==typeof t&&null!=t?e:"")+"]",t,i,o)});else if(i||"object"!==x(e))o(n,e);else for(t in e)Et(n+"["+t+"]",e[t],i,o)}$.param=function(e,t){var n,i=[],o=function(e,t){var n=y(t)?t():t;i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(null==e)return"";if(Array.isArray(e)||e.jquery&&!$.isPlainObject(e))$.each(e,function(){o(this.name,this.value)});else for(n in e)Et(n,e[n],t,o);return i.join("&")},$.fn.extend({serialize:function(){return $.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=$.prop(this,"elements");return e?$.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!$(this).is(":disabled")&&_t.test(this.nodeName)&&!At.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var n=$(this).val();return null==n?null:Array.isArray(n)?$.map(n,function(e){return{name:t.name,value:e.replace(Ct,"\r\n")}}):{name:t.name,value:n.replace(Ct,"\r\n")}}).get()}});var Dt=/%20/g,Ot=/#.*$/,jt=/([?&])_=[^&]*/,Lt=/^(.*?):[ \t]*([^\r\n]*)$/gm,qt=/^(?:GET|HEAD)$/,Pt=/^\/\//,Ht={},Nt={},Mt="*/".concat("*"),It=k.createElement("a");function Rt(r){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,i=0,o=e.toLowerCase().match(P)||[];if(y(t))for(;n=o[i++];)"+"===n[0]?(n=n.slice(1)||"*",(r[n]=r[n]||[]).unshift(t)):(r[n]=r[n]||[]).push(t)}}function zt(t,o,r,s){var a={},l=t===Nt;function c(e){var i;return a[e]=!0,$.each(t[e]||[],function(e,t){var n=t(o,r,s);return"string"!=typeof n||l||a[n]?l?!(i=n):void 0:(o.dataTypes.unshift(n),c(n),!1)}),i}return c(o.dataTypes[0])||!a["*"]&&c("*")}function Wt(e,t){var n,i,o=$.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((o[n]?e:i||(i={}))[n]=t[n]);return i&&$.extend(!0,e,i),e}It.href=Tt.href,$.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Tt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Tt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Mt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":$.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Wt(Wt(e,$.ajaxSettings),t):Wt($.ajaxSettings,e)},ajaxPrefilter:Rt(Ht),ajaxTransport:Rt(Nt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var u,d,p,n,h,i,f,g,o,r,v=$.ajaxSetup({},t),m=v.context||v,y=v.context&&(m.nodeType||m.jquery)?$(m):$.event,w=$.Deferred(),b=$.Callbacks("once memory"),x=v.statusCode||{},s={},a={},l="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(f){if(!n)for(n={};t=Lt.exec(p);)n[t[1].toLowerCase()+" "]=(n[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=n[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return f?p:null},setRequestHeader:function(e,t){return null==f&&(e=a[e.toLowerCase()]=a[e.toLowerCase()]||e,s[e]=t),this},overrideMimeType:function(e){return null==f&&(v.mimeType=e),this},statusCode:function(e){var t;if(e)if(f)T.always(e[T.status]);else for(t in e)x[t]=[x[t],e[t]];return this},abort:function(e){var t=e||l;return u&&u.abort(t),c(0,t),this}};if(w.promise(T),v.url=((e||v.url||Tt.href)+"").replace(Pt,Tt.protocol+"//"),v.type=t.method||t.type||v.method||v.type,v.dataTypes=(v.dataType||"*").toLowerCase().match(P)||[""],null==v.crossDomain){i=k.createElement("a");try{i.href=v.url,i.href=i.href,v.crossDomain=It.protocol+"//"+It.host!=i.protocol+"//"+i.host}catch(e){v.crossDomain=!0}}if(v.data&&v.processData&&"string"!=typeof v.data&&(v.data=$.param(v.data,v.traditional)),zt(Ht,v,t,T),f)return T;for(o in(g=$.event&&v.global)&&0==$.active++&&$.event.trigger("ajaxStart"),v.type=v.type.toUpperCase(),v.hasContent=!qt.test(v.type),d=v.url.replace(Ot,""),v.hasContent?v.data&&v.processData&&0===(v.contentType||"").indexOf("application/x-www-form-urlencoded")&&(v.data=v.data.replace(Dt,"+")):(r=v.url.slice(d.length),v.data&&(v.processData||"string"==typeof v.data)&&(d+=(kt.test(d)?"&":"?")+v.data,delete v.data),!1===v.cache&&(d=d.replace(jt,"$1"),r=(kt.test(d)?"&":"?")+"_="+St.guid+++r),v.url=d+r),v.ifModified&&($.lastModified[d]&&T.setRequestHeader("If-Modified-Since",$.lastModified[d]),$.etag[d]&&T.setRequestHeader("If-None-Match",$.etag[d])),(v.data&&v.hasContent&&!1!==v.contentType||t.contentType)&&T.setRequestHeader("Content-Type",v.contentType),T.setRequestHeader("Accept",v.dataTypes[0]&&v.accepts[v.dataTypes[0]]?v.accepts[v.dataTypes[0]]+("*"!==v.dataTypes[0]?", "+Mt+"; q=0.01":""):v.accepts["*"]),v.headers)T.setRequestHeader(o,v.headers[o]);if(v.beforeSend&&(!1===v.beforeSend.call(m,T,v)||f))return T.abort();if(l="abort",b.add(v.complete),T.done(v.success),T.fail(v.error),u=zt(Nt,v,t,T)){if(T.readyState=1,g&&y.trigger("ajaxSend",[T,v]),f)return T;v.async&&0<v.timeout&&(h=S.setTimeout(function(){T.abort("timeout")},v.timeout));try{f=!1,u.send(s,c)}catch(e){if(f)throw e;c(-1,e)}}else c(-1,"No Transport");function c(e,t,n,i){var o,r,s,a,l,c=t;f||(f=!0,h&&S.clearTimeout(h),u=void 0,p=i||"",T.readyState=0<e?4:0,o=200<=e&&e<300||304===e,n&&(a=function(e,t,n){for(var i,o,r,s,a=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(o in a)if(a[o]&&a[o].test(i)){l.unshift(o);break}if(l[0]in n)r=l[0];else{for(o in n){if(!l[0]||e.converters[o+" "+l[0]]){r=o;break}s||(s=o)}r=r||s}if(r)return r!==l[0]&&l.unshift(r),n[r]}(v,T,n)),!o&&-1<$.inArray("script",v.dataTypes)&&$.inArray("json",v.dataTypes)<0&&(v.converters["text script"]=function(){}),a=function(e,t,n,i){var o,r,s,a,l,c={},u=e.dataTypes.slice();if(u[1])for(s in e.converters)c[s.toLowerCase()]=e.converters[s];for(r=u.shift();r;)if(e.responseFields[r]&&(n[e.responseFields[r]]=t),!l&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=r,r=u.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(!(s=c[l+" "+r]||c["* "+r]))for(o in c)if((a=o.split(" "))[1]===r&&(s=c[l+" "+a[0]]||c["* "+a[0]])){!0===s?s=c[o]:!0!==c[o]&&(r=a[0],u.unshift(a[1]));break}if(!0!==s)if(s&&e.throws)t=s(t);else try{t=s(t)}catch(e){return{state:"parsererror",error:s?e:"No conversion from "+l+" to "+r}}}return{state:"success",data:t}}(v,a,T,o),o?(v.ifModified&&((l=T.getResponseHeader("Last-Modified"))&&($.lastModified[d]=l),(l=T.getResponseHeader("etag"))&&($.etag[d]=l)),204===e||"HEAD"===v.type?c="nocontent":304===e?c="notmodified":(c=a.state,r=a.data,o=!(s=a.error))):(s=c,!e&&c||(c="error",e<0&&(e=0))),T.status=e,T.statusText=(t||c)+"",o?w.resolveWith(m,[r,c,T]):w.rejectWith(m,[T,c,s]),T.statusCode(x),x=void 0,g&&y.trigger(o?"ajaxSuccess":"ajaxError",[T,v,o?r:s]),b.fireWith(m,[T,c]),g&&(y.trigger("ajaxComplete",[T,v]),--$.active||$.event.trigger("ajaxStop")))}return T},getJSON:function(e,t,n){return $.get(e,t,n,"json")},getScript:function(e,t){return $.get(e,void 0,t,"script")}}),$.each(["get","post"],function(e,o){$[o]=function(e,t,n,i){return y(t)&&(i=i||n,n=t,t=void 0),$.ajax($.extend({url:e,type:o,dataType:i,data:t,success:n},$.isPlainObject(e)&&e))}}),$.ajaxPrefilter(function(e){var t;for(t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),$._evalUrl=function(e,t,n){return $.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){$.globalEval(e,t,n)}})},$.fn.extend({wrapAll:function(e){var t;return this[0]&&(y(e)&&(e=e.call(this[0])),t=$(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return y(n)?this.each(function(e){$(this).wrapInner(n.call(this,e))}):this.each(function(){var e=$(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=y(t);return this.each(function(e){$(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){$(this).replaceWith(this.childNodes)}),this}}),$.expr.pseudos.hidden=function(e){return!$.expr.pseudos.visible(e)},$.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},$.ajaxSettings.xhr=function(){try{return new S.XMLHttpRequest}catch(e){}};var Ut={0:200,1223:204},Ft=$.ajaxSettings.xhr();m.cors=!!Ft&&"withCredentials"in Ft,m.ajax=Ft=!!Ft,$.ajaxTransport(function(o){var r,s;if(m.cors||Ft&&!o.crossDomain)return{send:function(e,t){var n,i=o.xhr();if(i.open(o.type,o.url,o.async,o.username,o.password),o.xhrFields)for(n in o.xhrFields)i[n]=o.xhrFields[n];for(n in o.mimeType&&i.overrideMimeType&&i.overrideMimeType(o.mimeType),o.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)i.setRequestHeader(n,e[n]);r=function(e){return function(){r&&(r=s=i.onload=i.onerror=i.onabort=i.ontimeout=i.onreadystatechange=null,"abort"===e?i.abort():"error"===e?"number"!=typeof i.status?t(0,"error"):t(i.status,i.statusText):t(Ut[i.status]||i.status,i.statusText,"text"!==(i.responseType||"text")||"string"!=typeof i.responseText?{binary:i.response}:{text:i.responseText},i.getAllResponseHeaders()))}},i.onload=r(),s=i.onerror=i.ontimeout=r("error"),void 0!==i.onabort?i.onabort=s:i.onreadystatechange=function(){4===i.readyState&&S.setTimeout(function(){r&&s()})},r=r("abort");try{i.send(o.hasContent&&o.data||null)}catch(e){if(r)throw e}},abort:function(){r&&r()}}}),$.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),$.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return $.globalEval(e),e}}}),$.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),$.ajaxTransport("script",function(n){var i,o;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){i=$("<script>").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on("load error",o=function(e){i.remove(),o=null,e&&t("error"===e.type?404:200,e.type)}),k.head.appendChild(i[0])},abort:function(){o&&o()}}});var Bt,Gt=[],Xt=/(=)\?(?=&|$)|\?\?/;$.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Gt.pop()||$.expando+"_"+St.guid++;return this[e]=!0,e}}),$.ajaxPrefilter("json jsonp",function(e,t,n){var i,o,r,s=!1!==e.jsonp&&(Xt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Xt.test(e.data)&&"data");if(s||"jsonp"===e.dataTypes[0])return i=e.jsonpCallback=y(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(Xt,"$1"+i):!1!==e.jsonp&&(e.url+=(kt.test(e.url)?"&":"?")+e.jsonp+"="+i),e.converters["script json"]=function(){return r||$.error(i+" was not called"),r[0]},e.dataTypes[0]="json",o=S[i],S[i]=function(){r=arguments},n.always(function(){void 0===o?$(S).removeProp(i):S[i]=o,e[i]&&(e.jsonpCallback=t.jsonpCallback,Gt.push(i)),r&&y(o)&&o(r[0]),r=o=void 0}),"script"}),m.createHTMLDocument=((Bt=k.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Bt.childNodes.length),$.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(m.createHTMLDocument?((i=(t=k.implementation.createHTMLDocument("")).createElement("base")).href=k.location.href,t.head.appendChild(i)):t=k),r=!n&&[],(o=_.exec(e))?[t.createElement(o[1])]:(o=we([e],t,r),r&&r.length&&$(r).remove(),$.merge([],o.childNodes)));var i,o,r},$.fn.load=function(e,t,n){var i,o,r,s=this,a=e.indexOf(" ");return-1<a&&(i=vt(e.slice(a)),e=e.slice(0,a)),y(t)?(n=t,t=void 0):t&&"object"==typeof t&&(o="POST"),0<s.length&&$.ajax({url:e,type:o||"GET",dataType:"html",data:t}).done(function(e){r=arguments,s.html(i?$("<div>").append($.parseHTML(e)).find(i):e)}).always(n&&function(e,t){s.each(function(){n.apply(this,r||[e.responseText,t,e])})}),this},$.expr.pseudos.animated=function(t){return $.grep($.timers,function(e){return t===e.elem}).length},$.offset={setOffset:function(e,t,n){var i,o,r,s,a,l,c=$.css(e,"position"),u=$(e),d={};"static"===c&&(e.style.position="relative"),a=u.offset(),r=$.css(e,"top"),l=$.css(e,"left"),o=("absolute"===c||"fixed"===c)&&-1<(r+l).indexOf("auto")?(s=(i=u.position()).top,i.left):(s=parseFloat(r)||0,parseFloat(l)||0),y(t)&&(t=t.call(e,n,$.extend({},a))),null!=t.top&&(d.top=t.top-a.top+s),null!=t.left&&(d.left=t.left-a.left+o),"using"in t?t.using.call(e,d):u.css(d)}},$.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){$.offset.setOffset(this,t,e)});var e,n,i=this[0];return i?i.getClientRects().length?(e=i.getBoundingClientRect(),n=i.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,i=this[0],o={top:0,left:0};if("fixed"===$.css(i,"position"))t=i.getBoundingClientRect();else{for(t=this.offset(),n=i.ownerDocument,e=i.offsetParent||n.documentElement;e&&(e===n.body||e===n.documentElement)&&"static"===$.css(e,"position");)e=e.parentNode;e&&e!==i&&1===e.nodeType&&((o=$(e).offset()).top+=$.css(e,"borderTopWidth",!0),o.left+=$.css(e,"borderLeftWidth",!0))}return{top:t.top-o.top-$.css(i,"marginTop",!0),left:t.left-o.left-$.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===$.css(e,"position");)e=e.offsetParent;return e||ie})}}),$.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,o){var r="pageYOffset"===o;$.fn[t]=function(e){return W(this,function(e,t,n){var i;if(w(e)?i=e:9===e.nodeType&&(i=e.defaultView),void 0===n)return i?i[o]:e[t];i?i.scrollTo(r?i.pageXOffset:n,r?n:i.pageYOffset):e[t]=n},t,e,arguments.length)}}),$.each(["top","left"],function(e,n){$.cssHooks[n]=Ue(m.pixelPosition,function(e,t){if(t)return t=We(e,n),Pe.test(t)?$(e).position()[n]+"px":t})}),$.each({Height:"height",Width:"width"},function(s,a){$.each({padding:"inner"+s,content:a,"":"outer"+s},function(i,r){$.fn[r]=function(e,t){var n=arguments.length&&(i||"boolean"!=typeof e),o=i||(!0===e||!0===t?"margin":"border");return W(this,function(e,t,n){var i;return w(e)?0===r.indexOf("outer")?e["inner"+s]:e.document.documentElement["client"+s]:9===e.nodeType?(i=e.documentElement,Math.max(e.body["scroll"+s],i["scroll"+s],e.body["offset"+s],i["offset"+s],i["client"+s])):void 0===n?$.css(e,t,o):$.style(e,t,n,o)},a,n?e:void 0,n)}})}),$.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){$.fn[t]=function(e){return this.on(t,e)}}),$.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,i){return this.on(t,e,n,i)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),$.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,n){$.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}});var Yt=/^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;$.proxy=function(e,t){var n,i,o;if("string"==typeof t&&(n=e[t],t=e,e=n),y(e))return i=a.call(arguments,2),(o=function(){return e.apply(t||this,i.concat(a.call(arguments)))}).guid=e.guid=e.guid||$.guid++,o},$.holdReady=function(e){e?$.readyWait++:$.ready(!0)},$.isArray=Array.isArray,$.parseJSON=JSON.parse,$.nodeName=A,$.isFunction=y,$.isWindow=w,$.camelCase=G,$.type=x,$.now=Date.now,$.isNumeric=function(e){var t=$.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},$.trim=function(e){return null==e?"":(e+"").replace(Yt,"$1")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return $});var Kt=S.jQuery,Vt=S.$;return $.noConflict=function(e){return S.$===$&&(S.$=Vt),e&&S.jQuery===$&&(S.jQuery=Kt),$},void 0===e&&(S.jQuery=S.$=$),$}),function(n){"function"==typeof define&&define.amd?define(["jquery"],n):"object"==typeof module&&module.exports?module.exports=function(e,t){return void 0===t&&(t="undefined"!=typeof window?require("jquery"):require("jquery")(e)),n(t),t}:n(jQuery)}(function(d){var e=function(){if(d&&d.fn&&d.fn.select2&&d.fn.select2.amd)var e=d.fn.select2.amd;var t,n,i,h,r,s,f,g,v,m,y,w,o,a,b,l;function x(e,t){return o.call(e,t)}function c(e,t){var n,i,o,r,s,a,l,c,u,d,p,h=t&&t.split("/"),f=y.map,g=f&&f["*"]||{};if(e){for(s=(e=e.split("/")).length-1,y.nodeIdCompat&&b.test(e[s])&&(e[s]=e[s].replace(b,"")),"."===e[0].charAt(0)&&h&&(e=h.slice(0,h.length-1).concat(e)),u=0;u<e.length;u++)if("."===(p=e[u]))e.splice(u,1),u-=1;else if(".."===p){if(0===u||1===u&&".."===e[2]||".."===e[u-1])continue;0<u&&(e.splice(u-1,2),u-=2)}e=e.join("/")}if((h||g)&&f){for(u=(n=e.split("/")).length;0<u;u-=1){if(i=n.slice(0,u).join("/"),h)for(d=h.length;0<d;d-=1)if(o=(o=f[h.slice(0,d).join("/")])&&o[i]){r=o,a=u;break}if(r)break;!l&&g&&g[i]&&(l=g[i],c=u)}!r&&l&&(r=l,a=c),r&&(n.splice(0,a,r),e=n.join("/"))}return e}function T(t,n){return function(){var e=a.call(arguments,0);return"string"!=typeof e[0]&&1===e.length&&e.push(null),s.apply(h,e.concat([t,n]))}}function S(t){return function(e){v[t]=e}}function k(e){if(x(m,e)){var t=m[e];delete m[e],w[e]=!0,r.apply(h,t)}if(!x(v,e)&&!x(w,e))throw new Error("No "+e);return v[e]}function u(e){var t,n=e?e.indexOf("!"):-1;return-1<n&&(t=e.substring(0,n),e=e.substring(n+1,e.length)),[t,e]}function C(e){return e?u(e):[]}return e&&e.requirejs||(e?n=e:e={},v={},m={},y={},w={},o=Object.prototype.hasOwnProperty,a=[].slice,b=/\.js$/,f=function(e,t){var n,i,o=u(e),r=o[0],s=t[1];return e=o[1],r&&(n=k(r=c(r,s))),r?e=n&&n.normalize?n.normalize(e,(i=s,function(e){return c(e,i)})):c(e,s):(r=(o=u(e=c(e,s)))[0],e=o[1],r&&(n=k(r))),{f:r?r+"!"+e:e,n:e,pr:r,p:n}},g={require:function(e){return T(e)},exports:function(e){var t=v[e];return void 0!==t?t:v[e]={}},module:function(e){return{id:e,uri:"",exports:v[e],config:(t=e,function(){return y&&y.config&&y.config[t]||{}})};var t}},r=function(e,t,n,i){var o,r,s,a,l,c,u,d=[],p=typeof n;if(c=C(i=i||e),"undefined"==p||"function"==p){for(t=!t.length&&n.length?["require","exports","module"]:t,l=0;l<t.length;l+=1)if("require"===(r=(a=f(t[l],c)).f))d[l]=g.require(e);else if("exports"===r)d[l]=g.exports(e),u=!0;else if("module"===r)o=d[l]=g.module(e);else if(x(v,r)||x(m,r)||x(w,r))d[l]=k(r);else{if(!a.p)throw new Error(e+" missing "+r);a.p.load(a.n,T(i,!0),S(r),{}),d[l]=v[r]}s=n?n.apply(v[e],d):void 0,e&&(o&&o.exports!==h&&o.exports!==v[e]?v[e]=o.exports:s===h&&u||(v[e]=s))}else e&&(v[e]=n)},t=n=s=function(e,t,n,i,o){if("string"==typeof e)return g[e]?g[e](t):k(f(e,C(t)).f);if(!e.splice){if((y=e).deps&&s(y.deps,y.callback),!t)return;t.splice?(e=t,t=n,n=null):e=h}return t=t||function(){},"function"==typeof n&&(n=i,i=o),i?r(h,e,t,n):setTimeout(function(){r(h,e,t,n)},4),s},s.config=function(e){return s(e)},t._defined=v,(i=function(e,t,n){if("string"!=typeof e)throw new Error("See almond README: incorrect module build, no module name");t.splice||(n=t,t=[]),x(v,e)||x(m,e)||(m[e]=[e,t,n])}).amd={jQuery:!0},e.requirejs=t,e.require=n,e.define=i),e.define("almond",function(){}),e.define("jquery",[],function(){var e=d||$;return null==e&&console&&console.error&&console.error("Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page."),e}),e.define("select2/utils",["jquery"],function(r){var o={};function u(e){var t=e.prototype,n=[];for(var i in t)"function"==typeof t[i]&&"constructor"!==i&&n.push(i);return n}function e(){this.listeners={}}o.Extend=function(e,t){var n={}.hasOwnProperty;function i(){this.constructor=e}for(var o in t)n.call(t,o)&&(e[o]=t[o]);return i.prototype=t.prototype,e.prototype=new i,e.__super__=t.prototype,e},o.Decorate=function(i,o){var e=u(o),t=u(i);function r(){var e=Array.prototype.unshift,t=o.prototype.constructor.length,n=i.prototype.constructor;0<t&&(e.call(arguments,i.prototype.constructor),n=o.prototype.constructor),n.apply(this,arguments)}o.displayName=i.displayName,r.prototype=new function(){this.constructor=r};for(var n=0;n<t.length;n++){var s=t[n];r.prototype[s]=i.prototype[s]}function a(e){var t=function(){};e in r.prototype&&(t=r.prototype[e]);var n=o.prototype[e];return function(){return Array.prototype.unshift.call(arguments,t),n.apply(this,arguments)}}for(var l=0;l<e.length;l++){var c=e[l];r.prototype[c]=a(c)}return r},e.prototype.on=function(e,t){this.listeners=this.listeners||{},e in this.listeners?this.listeners[e].push(t):this.listeners[e]=[t]},e.prototype.trigger=function(e){var t=Array.prototype.slice,n=t.call(arguments,1);this.listeners=this.listeners||{},null==n&&(n=[]),0===n.length&&n.push({}),(n[0]._type=e)in this.listeners&&this.invoke(this.listeners[e],t.call(arguments,1)),"*"in this.listeners&&this.invoke(this.listeners["*"],arguments)},e.prototype.invoke=function(e,t){for(var n=0,i=e.length;n<i;n++)e[n].apply(this,t)},o.Observable=e,o.generateChars=function(e){for(var t="",n=0;n<e;n++)t+=Math.floor(36*Math.random()).toString(36);return t},o.bind=function(e,t){return function(){e.apply(t,arguments)}},o._convertData=function(e){for(var t in e){var n=t.split("-"),i=e;if(1!==n.length){for(var o=0;o<n.length;o++){var r=n[o];(r=r.substring(0,1).toLowerCase()+r.substring(1))in i||(i[r]={}),o==n.length-1&&(i[r]=e[t]),i=i[r]}delete e[t]}}return e},o.hasScroll=function(e,t){var n=r(t),i=t.style.overflowX,o=t.style.overflowY;return(i!==o||"hidden"!==o&&"visible"!==o)&&("scroll"===i||"scroll"===o||n.innerHeight()<t.scrollHeight||n.innerWidth()<t.scrollWidth)},o.escapeMarkup=function(e){var t={"\\":"&#92;","&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#47;"};return"string"!=typeof e?e:String(e).replace(/[&<>"'\/\\]/g,function(e){return t[e]})},o.appendMany=function(e,t){if("1.7"===r.fn.jquery.substr(0,3)){var n=r();r.map(t,function(e){n=n.add(e)}),t=n}e.append(t)},o.__cache={};var n=0;return o.GetUniqueElementId=function(e){var t=e.getAttribute("data-select2-id");return null==t&&(e.id?(t=e.id,e.setAttribute("data-select2-id",t)):(e.setAttribute("data-select2-id",++n),t=n.toString())),t},o.StoreData=function(e,t,n){var i=o.GetUniqueElementId(e);o.__cache[i]||(o.__cache[i]={}),o.__cache[i][t]=n},o.GetData=function(e,t){var n=o.GetUniqueElementId(e);return t?o.__cache[n]&&null!=o.__cache[n][t]?o.__cache[n][t]:r(e).data(t):o.__cache[n]},o.RemoveData=function(e){var t=o.GetUniqueElementId(e);null!=o.__cache[t]&&delete o.__cache[t]},o}),e.define("select2/results",["jquery","./utils"],function(p,h){function i(e,t,n){this.$element=e,this.data=n,this.options=t,i.__super__.constructor.call(this)}return h.Extend(i,h.Observable),i.prototype.render=function(){var e=p('<ul class="select2-results__options" role="tree"></ul>');return this.options.get("multiple")&&e.attr("aria-multiselectable","true"),this.$results=e},i.prototype.clear=function(){this.$results.empty()},i.prototype.displayMessage=function(e){var t=this.options.get("escapeMarkup");this.clear(),this.hideLoading();var n=p('<li role="treeitem" aria-live="assertive" class="select2-results__option"></li>'),i=this.options.get("translations").get(e.message);n.append(t(i(e.args))),n[0].className+=" select2-results__message",this.$results.append(n)},i.prototype.hideMessages=function(){this.$results.find(".select2-results__message").remove()},i.prototype.append=function(e){this.hideLoading();var t=[];if(null!=e.results&&0!==e.results.length){e.results=this.sort(e.results);for(var n=0;n<e.results.length;n++){var i=e.results[n],o=this.option(i);t.push(o)}this.$results.append(t)}else 0===this.$results.children().length&&this.trigger("results:message",{message:"noResults"})},i.prototype.position=function(e,t){t.find(".select2-results").append(e)},i.prototype.sort=function(e){return this.options.get("sorter")(e)},i.prototype.highlightFirstItem=function(){var e=this.$results.find(".select2-results__option[aria-selected]"),t=e.filter("[aria-selected=true]");0<t.length?t.first().trigger("mouseenter"):e.first().trigger("mouseenter"),this.ensureHighlightVisible()},i.prototype.setClasses=function(){var t=this;this.data.current(function(e){var i=p.map(e,function(e){return e.id.toString()});t.$results.find(".select2-results__option[aria-selected]").each(function(){var e=p(this),t=h.GetData(this,"data"),n=""+t.id;null!=t.element&&t.element.selected||null==t.element&&-1<p.inArray(n,i)?e.attr("aria-selected","true"):e.attr("aria-selected","false")})})},i.prototype.showLoading=function(e){this.hideLoading();var t={disabled:!0,loading:!0,text:this.options.get("translations").get("searching")(e)},n=this.option(t);n.className+=" loading-results",this.$results.prepend(n)},i.prototype.hideLoading=function(){this.$results.find(".loading-results").remove()},i.prototype.option=function(e){var t=document.createElement("li");t.className="select2-results__option";var n={role:"treeitem","aria-selected":"false"};for(var i in e.disabled&&(delete n["aria-selected"],n["aria-disabled"]="true"),null==e.id&&delete n["aria-selected"],null!=e._resultId&&(t.id=e._resultId),e.title&&(t.title=e.title),e.children&&(n.role="group",n["aria-label"]=e.text,delete n["aria-selected"]),n){var o=n[i];t.setAttribute(i,o)}if(e.children){var r=p(t),s=document.createElement("strong");s.className="select2-results__group",p(s),this.template(e,s);for(var a=[],l=0;l<e.children.length;l++){var c=e.children[l],u=this.option(c);a.push(u)}var d=p("<ul></ul>",{class:"select2-results__options select2-results__options--nested"});d.append(a),r.append(s),r.append(d)}else this.template(e,t);return h.StoreData(t,"data",e),t},i.prototype.bind=function(t,e){var l=this,n=t.id+"-results";this.$results.attr("id",n),t.on("results:all",function(e){l.clear(),l.append(e.data),t.isOpen()&&(l.setClasses(),l.highlightFirstItem())}),t.on("results:append",function(e){l.append(e.data),t.isOpen()&&l.setClasses()}),t.on("query",function(e){l.hideMessages(),l.showLoading(e)}),t.on("select",function(){t.isOpen()&&(l.setClasses(),l.options.get("scrollAfterSelect")&&l.highlightFirstItem())}),t.on("unselect",function(){t.isOpen()&&(l.setClasses(),l.options.get("scrollAfterSelect")&&l.highlightFirstItem())}),t.on("open",function(){l.$results.attr("aria-expanded","true"),l.$results.attr("aria-hidden","false"),l.setClasses(),l.ensureHighlightVisible()}),t.on("close",function(){l.$results.attr("aria-expanded","false"),l.$results.attr("aria-hidden","true"),l.$results.removeAttr("aria-activedescendant")}),t.on("results:toggle",function(){var e=l.getHighlightedResults();0!==e.length&&e.trigger("mouseup")}),t.on("results:select",function(){var e=l.getHighlightedResults();if(0!==e.length){var t=h.GetData(e[0],"data");"true"==e.attr("aria-selected")?l.trigger("close",{}):l.trigger("select",{data:t})}}),t.on("results:previous",function(){var e=l.getHighlightedResults(),t=l.$results.find("[aria-selected]"),n=t.index(e);if(!(n<=0)){var i=n-1;0===e.length&&(i=0);var o=t.eq(i);o.trigger("mouseenter");var r=l.$results.offset().top,s=o.offset().top,a=l.$results.scrollTop()+(s-r);0===i?l.$results.scrollTop(0):s-r<0&&l.$results.scrollTop(a)}}),t.on("results:next",function(){var e=l.getHighlightedResults(),t=l.$results.find("[aria-selected]"),n=t.index(e)+1;if(!(n>=t.length)){var i=t.eq(n);i.trigger("mouseenter");var o=l.$results.offset().top+l.$results.outerHeight(!1),r=i.offset().top+i.outerHeight(!1),s=l.$results.scrollTop()+r-o;0===n?l.$results.scrollTop(0):o<r&&l.$results.scrollTop(s)}}),t.on("results:focus",function(e){e.element.addClass("select2-results__option--highlighted")}),t.on("results:message",function(e){l.displayMessage(e)}),p.fn.mousewheel&&this.$results.on("mousewheel",function(e){var t=l.$results.scrollTop(),n=l.$results.get(0).scrollHeight-t+e.deltaY,i=0<e.deltaY&&t-e.deltaY<=0,o=e.deltaY<0&&n<=l.$results.height();i?(l.$results.scrollTop(0),e.preventDefault(),e.stopPropagation()):o&&(l.$results.scrollTop(l.$results.get(0).scrollHeight-l.$results.height()),e.preventDefault(),e.stopPropagation())}),this.$results.on("mouseup",".select2-results__option[aria-selected]",function(e){var t=p(this),n=h.GetData(this,"data");"true"!==t.attr("aria-selected")?l.trigger("select",{originalEvent:e,data:n}):l.options.get("multiple")?l.trigger("unselect",{originalEvent:e,data:n}):l.trigger("close",{})}),this.$results.on("mouseenter",".select2-results__option[aria-selected]",function(e){var t=h.GetData(this,"data");l.getHighlightedResults().removeClass("select2-results__option--highlighted"),l.trigger("results:focus",{data:t,element:p(this)})})},i.prototype.getHighlightedResults=function(){return this.$results.find(".select2-results__option--highlighted")},i.prototype.destroy=function(){this.$results.remove()},i.prototype.ensureHighlightVisible=function(){var e=this.getHighlightedResults();if(0!==e.length){var t=this.$results.find("[aria-selected]").index(e),n=this.$results.offset().top,i=e.offset().top,o=this.$results.scrollTop()+(i-n),r=i-n;o-=2*e.outerHeight(!1),t<=2?this.$results.scrollTop(0):(r>this.$results.outerHeight()||r<0)&&this.$results.scrollTop(o)}},i.prototype.template=function(e,t){var n=this.options.get("templateResult"),i=this.options.get("escapeMarkup"),o=n(e,t);null==o?t.style.display="none":"string"==typeof o?t.innerHTML=i(o):p(t).append(o)},i}),e.define("select2/keys",[],function(){return{BACKSPACE:8,TAB:9,ENTER:13,SHIFT:16,CTRL:17,ALT:18,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,DELETE:46}}),e.define("select2/selection/base",["jquery","../utils","../keys"],function(n,i,o){function r(e,t){this.$element=e,this.options=t,r.__super__.constructor.call(this)}return i.Extend(r,i.Observable),r.prototype.render=function(){var e=n('<span class="select2-selection" role="combobox"  aria-haspopup="true" aria-expanded="false"></span>');return this._tabindex=0,null!=i.GetData(this.$element[0],"old-tabindex")?this._tabindex=i.GetData(this.$element[0],"old-tabindex"):null!=this.$element.attr("tabindex")&&(this._tabindex=this.$element.attr("tabindex")),e.attr("title",this.$element.attr("title")),e.attr("tabindex",this._tabindex),this.$selection=e},r.prototype.bind=function(e,t){var n=this,i=(e.id,e.id+"-results");this.container=e,this.$selection.on("focus",function(e){n.trigger("focus",e)}),this.$selection.on("blur",function(e){n._handleBlur(e)}),this.$selection.on("keydown",function(e){n.trigger("keypress",e),e.which===o.SPACE&&e.preventDefault()}),e.on("results:focus",function(e){n.$selection.attr("aria-activedescendant",e.data._resultId)}),e.on("selection:update",function(e){n.update(e.data)}),e.on("open",function(){n.$selection.attr("aria-expanded","true"),n.$selection.attr("aria-owns",i),n._attachCloseHandler(e)}),e.on("close",function(){n.$selection.attr("aria-expanded","false"),n.$selection.removeAttr("aria-activedescendant"),n.$selection.removeAttr("aria-owns"),window.setTimeout(function(){n.$selection.focus()},0),n._detachCloseHandler(e)}),e.on("enable",function(){n.$selection.attr("tabindex",n._tabindex)}),e.on("disable",function(){n.$selection.attr("tabindex","-1")})},r.prototype._handleBlur=function(e){var t=this;window.setTimeout(function(){document.activeElement==t.$selection[0]||n.contains(t.$selection[0],document.activeElement)||t.trigger("blur",e)},1)},r.prototype._attachCloseHandler=function(e){n(document.body).on("mousedown.select2."+e.id,function(e){var t=n(e.target).closest(".select2");n(".select2.select2-container--open").each(function(){n(this),this!=t[0]&&i.GetData(this,"element").select2("close")})})},r.prototype._detachCloseHandler=function(e){n(document.body).off("mousedown.select2."+e.id)},r.prototype.position=function(e,t){t.find(".selection").append(e)},r.prototype.destroy=function(){this._detachCloseHandler(this.container)},r.prototype.update=function(e){throw new Error("The `update` method must be defined in child classes.")},r}),e.define("select2/selection/single",["jquery","./base","../utils","../keys"],function(e,t,n,i){function o(){o.__super__.constructor.apply(this,arguments)}return n.Extend(o,t),o.prototype.render=function(){var e=o.__super__.render.call(this);return e.addClass("select2-selection--single"),e.html('<span class="select2-selection__rendered"></span><span class="select2-selection__arrow" role="presentation"><b role="presentation"></b></span>'),e},o.prototype.bind=function(t,e){var n=this;o.__super__.bind.apply(this,arguments);var i=t.id+"-container";this.$selection.find(".select2-selection__rendered").attr("id",i).attr("role","textbox").attr("aria-readonly","true"),this.$selection.attr("aria-labelledby",i),this.$selection.on("mousedown",function(e){1===e.which&&n.trigger("toggle",{originalEvent:e})}),this.$selection.on("focus",function(e){}),this.$selection.on("blur",function(e){}),t.on("focus",function(e){t.isOpen()||n.$selection.focus()})},o.prototype.clear=function(){var e=this.$selection.find(".select2-selection__rendered");e.empty(),e.removeAttr("title")},o.prototype.display=function(e,t){var n=this.options.get("templateSelection");return this.options.get("escapeMarkup")(n(e,t))},o.prototype.selectionContainer=function(){return e("<span></span>")},o.prototype.update=function(e){if(0!==e.length){var t=e[0],n=this.$selection.find(".select2-selection__rendered"),i=this.display(t,n);n.empty().append(i),n.attr("title",t.title||t.text)}else this.clear()},o}),e.define("select2/selection/multiple",["jquery","./base","../utils"],function(o,e,a){function n(e,t){n.__super__.constructor.apply(this,arguments)}return a.Extend(n,e),n.prototype.render=function(){var e=n.__super__.render.call(this);return e.addClass("select2-selection--multiple"),e.html('<ul class="select2-selection__rendered"></ul>'),e},n.prototype.bind=function(e,t){var i=this;n.__super__.bind.apply(this,arguments),this.$selection.on("click",function(e){i.trigger("toggle",{originalEvent:e})}),this.$selection.on("click",".select2-selection__choice__remove",function(e){if(!i.options.get("disabled")){var t=o(this).parent(),n=a.GetData(t[0],"data");i.trigger("unselect",{originalEvent:e,data:n})}})},n.prototype.clear=function(){var e=this.$selection.find(".select2-selection__rendered");e.empty(),e.removeAttr("title")},n.prototype.display=function(e,t){var n=this.options.get("templateSelection");return this.options.get("escapeMarkup")(n(e,t))},n.prototype.selectionContainer=function(){return o('<li class="select2-selection__choice"><span class="select2-selection__choice__remove" role="presentation">&times;</span></li>')},n.prototype.update=function(e){if(this.clear(),0!==e.length){for(var t=[],n=0;n<e.length;n++){var i=e[n],o=this.selectionContainer(),r=this.display(i,o);o.append(r),o.attr("title",i.title||i.text),a.StoreData(o[0],"data",i),t.push(o)}var s=this.$selection.find(".select2-selection__rendered");a.appendMany(s,t)}},n}),e.define("select2/selection/placeholder",["../utils"],function(e){function t(e,t,n){this.placeholder=this.normalizePlaceholder(n.get("placeholder")),e.call(this,t,n)}return t.prototype.normalizePlaceholder=function(e,t){return"string"==typeof t&&(t={id:"",text:t}),t},t.prototype.createPlaceholder=function(e,t){var n=this.selectionContainer();return n.html(this.display(t)),n.addClass("select2-selection__placeholder").removeClass("select2-selection__choice"),n},t.prototype.update=function(e,t){var n=1==t.length&&t[0].id!=this.placeholder.id;if(1<t.length||n)return e.call(this,t);this.clear();var i=this.createPlaceholder(this.placeholder);this.$selection.find(".select2-selection__rendered").append(i)},t}),e.define("select2/selection/allowClear",["jquery","../keys","../utils"],function(o,i,a){function e(){}return e.prototype.bind=function(e,t,n){var i=this;e.call(this,t,n),null==this.placeholder&&this.options.get("debug")&&window.console&&console.error&&console.error("Select2: The `allowClear` option should be used in combination with the `placeholder` option."),this.$selection.on("mousedown",".select2-selection__clear",function(e){i._handleClear(e)}),t.on("keypress",function(e){i._handleKeyboardClear(e,t)})},e.prototype._handleClear=function(e,t){if(!this.options.get("disabled")){var n=this.$selection.find(".select2-selection__clear");if(0!==n.length){t.stopPropagation();var i=a.GetData(n[0],"data"),o=this.$element.val();this.$element.val(this.placeholder.id);var r={data:i};if(this.trigger("clear",r),r.prevented)this.$element.val(o);else{for(var s=0;s<i.length;s++)if(r={data:i[s]},this.trigger("unselect",r),r.prevented)return void this.$element.val(o);this.$element.trigger("change"),this.trigger("toggle",{})}}}},e.prototype._handleKeyboardClear=function(e,t,n){n.isOpen()||t.which!=i.DELETE&&t.which!=i.BACKSPACE||this._handleClear(t)},e.prototype.update=function(e,t){if(e.call(this,t),!(0<this.$selection.find(".select2-selection__placeholder").length||0===t.length)){var n=this.options.get("translations").get("removeAllItems"),i=o('<span class="select2-selection__clear" title="'+n()+'">&times;</span>');a.StoreData(i[0],"data",t),this.$selection.find(".select2-selection__rendered").prepend(i)}},e}),e.define("select2/selection/search",["jquery","../utils","../keys"],function(i,s,a){function e(e,t,n){e.call(this,t,n)}return e.prototype.render=function(e){var t=i('<li class="select2-search select2-search--inline"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="textbox" aria-autocomplete="list" /></li>');this.$searchContainer=t,this.$search=t.find("input");var n=e.call(this);return this._transferTabIndex(),n},e.prototype.bind=function(e,t,n){var i=this;e.call(this,t,n),t.on("open",function(){i.$search.trigger("focus")}),t.on("close",function(){i.$search.val(""),i.$search.removeAttr("aria-activedescendant"),i.$search.trigger("focus")}),t.on("enable",function(){i.$search.prop("disabled",!1),i._transferTabIndex()}),t.on("disable",function(){i.$search.prop("disabled",!0)}),t.on("focus",function(e){i.$search.trigger("focus")}),t.on("results:focus",function(e){i.$search.attr("aria-activedescendant",e.id)}),this.$selection.on("focusin",".select2-search--inline",function(e){i.trigger("focus",e)}),this.$selection.on("focusout",".select2-search--inline",function(e){i._handleBlur(e)}),this.$selection.on("keydown",".select2-search--inline",function(e){if(e.stopPropagation(),i.trigger("keypress",e),i._keyUpPrevented=e.isDefaultPrevented(),e.which===a.BACKSPACE&&""===i.$search.val()){var t=i.$searchContainer.prev(".select2-selection__choice");if(0<t.length){var n=s.GetData(t[0],"data");i.searchRemoveChoice(n),e.preventDefault()}}});var o=document.documentMode,r=o&&o<=11;this.$selection.on("input.searchcheck",".select2-search--inline",function(e){r?i.$selection.off("input.search input.searchcheck"):i.$selection.off("keyup.search")}),this.$selection.on("keyup.search input.search",".select2-search--inline",function(e){if(r&&"input"===e.type)i.$selection.off("input.search input.searchcheck");else{var t=e.which;t!=a.SHIFT&&t!=a.CTRL&&t!=a.ALT&&t!=a.TAB&&i.handleSearch(e)}})},e.prototype._transferTabIndex=function(e){this.$search.attr("tabindex",this.$selection.attr("tabindex")),this.$selection.attr("tabindex","-1")},e.prototype.createPlaceholder=function(e,t){this.$search.attr("placeholder",t.text)},e.prototype.update=function(e,t){var n=this.$search[0]==document.activeElement;this.$search.attr("placeholder",""),e.call(this,t),this.$selection.find(".select2-selection__rendered").append(this.$searchContainer),this.resizeSearch(),n&&(this.$element.find("[data-select2-tag]").length?this.$element.focus():this.$search.focus())},e.prototype.handleSearch=function(){if(this.resizeSearch(),!this._keyUpPrevented){var e=this.$search.val();this.trigger("query",{term:e})}this._keyUpPrevented=!1},e.prototype.searchRemoveChoice=function(e,t){this.trigger("unselect",{data:t}),this.$search.val(t.text),this.handleSearch()},e.prototype.resizeSearch=function(){this.$search.css("width","25px");var e="";e=""!==this.$search.attr("placeholder")?this.$selection.find(".select2-selection__rendered").innerWidth():.75*(this.$search.val().length+1)+"em",this.$search.css("width",e)},e}),e.define("select2/selection/eventRelay",["jquery"],function(s){function e(){}return e.prototype.bind=function(e,t,n){var i=this,o=["open","opening","close","closing","select","selecting","unselect","unselecting","clear","clearing"],r=["opening","closing","selecting","unselecting","clearing"];e.call(this,t,n),t.on("*",function(e,t){if(-1!==s.inArray(e,o)){t=t||{};var n=s.Event("select2:"+e,{params:t});i.$element.trigger(n),-1!==s.inArray(e,r)&&(t.prevented=n.isDefaultPrevented())}})},e}),e.define("select2/translation",["jquery","require"],function(t,n){function i(e){this.dict=e||{}}return i.prototype.all=function(){return this.dict},i.prototype.get=function(e){return this.dict[e]},i.prototype.extend=function(e){this.dict=t.extend({},e.all(),this.dict)},i._cache={},i.loadPath=function(e){if(!(e in i._cache)){var t=n(e);i._cache[e]=t}return new i(i._cache[e])},i}),e.define("select2/diacritics",[],function(){return{"â¶":"A","ï¼¡":"A","Ã":"A","Ã":"A","Ã":"A","áº¦":"A","áº¤":"A","áºª":"A","áº¨":"A","Ã":"A","Ä":"A","Ä":"A","áº°":"A","áº®":"A","áº´":"A","áº²":"A","È¦":"A","Ç ":"A","Ã":"A","Ç":"A","áº¢":"A","Ã":"A","Çº":"A","Ç":"A","È":"A","È":"A","áº ":"A","áº¬":"A","áº¶":"A","á¸":"A","Ä":"A","Èº":"A","â±¯":"A","ê²":"AA","Ã":"AE","Ç¼":"AE","Ç¢":"AE","ê´":"AO","ê¶":"AU","ê¸":"AV","êº":"AV","ê¼":"AY","â·":"B","ï¼¢":"B","á¸":"B","á¸":"B","á¸":"B","É":"B","Æ":"B","Æ":"B","â¸":"C","ï¼£":"C","Ä":"C","Ä":"C","Ä":"C","Ä":"C","Ã":"C","á¸":"C","Æ":"C","È»":"C","ê¾":"C","â¹":"D","ï¼¤":"D","á¸":"D","Ä":"D","á¸":"D","á¸":"D","á¸":"D","á¸":"D","Ä":"D","Æ":"D","Æ":"D","Æ":"D","ê¹":"D","Ç±":"DZ","Ç":"DZ","Ç²":"Dz","Ç":"Dz","âº":"E","ï¼¥":"E","Ã":"E","Ã":"E","Ã":"E","á»":"E","áº¾":"E","á»":"E","á»":"E","áº¼":"E","Ä":"E","á¸":"E","á¸":"E","Ä":"E","Ä":"E","Ã":"E","áºº":"E","Ä":"E","È":"E","È":"E","áº¸":"E","á»":"E","È¨":"E","á¸":"E","Ä":"E","á¸":"E","á¸":"E","Æ":"E","Æ":"E","â»":"F","ï¼¦":"F","á¸":"F","Æ":"F","ê»":"F","â¼":"G","ï¼§":"G","Ç´":"G","Ä":"G","á¸ ":"G","Ä":"G","Ä ":"G","Ç¦":"G","Ä¢":"G","Ç¤":"G","Æ":"G","ê ":"G","ê½":"G","ê¾":"G","â½":"H","ï¼¨":"H","Ä¤":"H","á¸¢":"H","á¸¦":"H","È":"H","á¸¤":"H","á¸¨":"H","á¸ª":"H","Ä¦":"H","â±§":"H","â±µ":"H","ê":"H","â¾":"I","ï¼©":"I","Ã":"I","Ã":"I","Ã":"I","Ä¨":"I","Äª":"I","Ä¬":"I","Ä°":"I","Ã":"I","á¸®":"I","á»":"I","Ç":"I","È":"I","È":"I","á»":"I","Ä®":"I","á¸¬":"I","Æ":"I","â¿":"J","ï¼ª":"J","Ä´":"J","É":"J","â":"K","ï¼«":"K","á¸°":"K","Ç¨":"K","á¸²":"K","Ä¶":"K","á¸´":"K","Æ":"K","â±©":"K","ê":"K","ê":"K","ê":"K","ê¢":"K","â":"L","ï¼¬":"L","Ä¿":"L","Ä¹":"L","Ä½":"L","á¸¶":"L","á¸¸":"L","Ä»":"L","á¸¼":"L","á¸º":"L","Å":"L","È½":"L","â±¢":"L","â± ":"L","ê":"L","ê":"L","ê":"L","Ç":"LJ","Ç":"Lj","â":"M","ï¼­":"M","á¸¾":"M","á¹":"M","á¹":"M","â±®":"M","Æ":"M","â":"N","ï¼®":"N","Ç¸":"N","Å":"N","Ã":"N","á¹":"N","Å":"N","á¹":"N","Å":"N","á¹":"N","á¹":"N","È ":"N","Æ":"N","ê":"N","ê¤":"N","Ç":"NJ","Ç":"Nj","â":"O","ï¼¯":"O","Ã":"O","Ã":"O","Ã":"O","á»":"O","á»":"O","á»":"O","á»":"O","Ã":"O","á¹":"O","È¬":"O","á¹":"O","Å":"O","á¹":"O","á¹":"O","Å":"O","È®":"O","È°":"O","Ã":"O","Èª":"O","á»":"O","Å":"O","Ç":"O","È":"O","È":"O","Æ ":"O","á»":"O","á»":"O","á» ":"O","á»":"O","á»¢":"O","á»":"O","á»":"O","Çª":"O","Ç¬":"O","Ã":"O","Ç¾":"O","Æ":"O","Æ":"O","ê":"O","ê":"O","Å":"OE","Æ¢":"OI","ê":"OO","È¢":"OU","â":"P","ï¼°":"P","á¹":"P","á¹":"P","Æ¤":"P","â±£":"P","ê":"P","ê":"P","ê":"P","â":"Q","ï¼±":"Q","ê":"Q","ê":"Q","É":"Q","â":"R","ï¼²":"R","Å":"R","á¹":"R","Å":"R","È":"R","È":"R","á¹":"R","á¹":"R","Å":"R","á¹":"R","É":"R","â±¤":"R","ê":"R","ê¦":"R","ê":"R","â":"S","ï¼³":"S","áº":"S","Å":"S","á¹¤":"S","Å":"S","á¹ ":"S","Å ":"S","á¹¦":"S","á¹¢":"S","á¹¨":"S","È":"S","Å":"S","â±¾":"S","ê¨":"S","ê":"S","â":"T","ï¼´":"T","á¹ª":"T","Å¤":"T","á¹¬":"T","È":"T","Å¢":"T","á¹°":"T","á¹®":"T","Å¦":"T","Æ¬":"T","Æ®":"T","È¾":"T","ê":"T","ê¨":"TZ","â":"U","ï¼µ":"U","Ã":"U","Ã":"U","Ã":"U","Å¨":"U","á¹¸":"U","Åª":"U","á¹º":"U","Å¬":"U","Ã":"U","Ç":"U","Ç":"U","Ç":"U","Ç":"U","á»¦":"U","Å®":"U","Å°":"U","Ç":"U","È":"U","È":"U","Æ¯":"U","á»ª":"U","á»¨":"U","á»®":"U","á»¬":"U","á»°":"U","á»¤":"U","á¹²":"U","Å²":"U","á¹¶":"U","á¹´":"U","É":"U","â":"V","ï¼¶":"V","á¹¼":"V","á¹¾":"V","Æ²":"V","ê":"V","É":"V","ê ":"VY","â":"W","ï¼·":"W","áº":"W","áº":"W","Å´":"W","áº":"W","áº":"W","áº":"W","â±²":"W","â":"X","ï¼¸":"X","áº":"X","áº":"X","â":"Y","ï¼¹":"Y","á»²":"Y","Ã":"Y","Å¶":"Y","á»¸":"Y","È²":"Y","áº":"Y","Å¸":"Y","á»¶":"Y","á»´":"Y","Æ³":"Y","É":"Y","á»¾":"Y","â":"Z","ï¼º":"Z","Å¹":"Z","áº":"Z","Å»":"Z","Å½":"Z","áº":"Z","áº":"Z","Æµ":"Z","È¤":"Z","â±¿":"Z","â±«":"Z","ê¢":"Z","â":"a","ï½":"a","áº":"a","Ã ":"a","Ã¡":"a","Ã¢":"a","áº§":"a","áº¥":"a","áº«":"a","áº©":"a","Ã£":"a","Ä":"a","Ä":"a","áº±":"a","áº¯":"a","áºµ":"a","áº³":"a","È§":"a","Ç¡":"a","Ã¤":"a","Ç":"a","áº£":"a","Ã¥":"a","Ç»":"a","Ç":"a","È":"a","È":"a","áº¡":"a","áº­":"a","áº·":"a","á¸":"a","Ä":"a","â±¥":"a","É":"a","ê³":"aa","Ã¦":"ae","Ç½":"ae","Ç£":"ae","êµ":"ao","ê·":"au","ê¹":"av","ê»":"av","ê½":"ay","â":"b","ï½":"b","á¸":"b","á¸":"b","á¸":"b","Æ":"b","Æ":"b","É":"b","â":"c","ï½":"c","Ä":"c","Ä":"c","Ä":"c","Ä":"c","Ã§":"c","á¸":"c","Æ":"c","È¼":"c","ê¿":"c","â":"c","â":"d","ï½":"d","á¸":"d","Ä":"d","á¸":"d","á¸":"d","á¸":"d","á¸":"d","Ä":"d","Æ":"d","É":"d","É":"d","êº":"d","Ç³":"dz","Ç":"dz","â":"e","ï½":"e","Ã¨":"e","Ã©":"e","Ãª":"e","á»":"e","áº¿":"e","á»":"e","á»":"e","áº½":"e","Ä":"e","á¸":"e","á¸":"e","Ä":"e","Ä":"e","Ã«":"e","áº»":"e","Ä":"e","È":"e","È":"e","áº¹":"e","á»":"e","È©":"e","á¸":"e","Ä":"e","á¸":"e","á¸":"e","É":"e","É":"e","Ç":"e","â":"f","ï½":"f","á¸":"f","Æ":"f","ê¼":"f","â":"g","ï½":"g","Çµ":"g","Ä":"g","á¸¡":"g","Ä":"g","Ä¡":"g","Ç§":"g","Ä£":"g","Ç¥":"g","É ":"g","ê¡":"g","áµ¹":"g","ê¿":"g","â":"h","ï½":"h","Ä¥":"h","á¸£":"h","á¸§":"h","È":"h","á¸¥":"h","á¸©":"h","á¸«":"h","áº":"h","Ä§":"h","â±¨":"h","â±¶":"h","É¥":"h","Æ":"hv","â":"i","ï½":"i","Ã¬":"i","Ã­":"i","Ã®":"i","Ä©":"i","Ä«":"i","Ä­":"i","Ã¯":"i","á¸¯":"i","á»":"i","Ç":"i","È":"i","È":"i","á»":"i","Ä¯":"i","á¸­":"i","É¨":"i","Ä±":"i","â":"j","ï½":"j","Äµ":"j","Ç°":"j","É":"j","â":"k","ï½":"k","á¸±":"k","Ç©":"k","á¸³":"k","Ä·":"k","á¸µ":"k","Æ":"k","â±ª":"k","ê":"k","ê":"k","ê":"k","ê£":"k","â":"l","ï½":"l","Å":"l","Äº":"l","Ä¾":"l","á¸·":"l","á¸¹":"l","Ä¼":"l","á¸½":"l","á¸»":"l","Å¿":"l","Å":"l","Æ":"l","É«":"l","â±¡":"l","ê":"l","ê":"l","ê":"l","Ç":"lj","â":"m","ï½":"m","á¸¿":"m","á¹":"m","á¹":"m","É±":"m","É¯":"m","â":"n","ï½":"n","Ç¹":"n","Å":"n","Ã±":"n","á¹":"n","Å":"n","á¹":"n","Å":"n","á¹":"n","á¹":"n","Æ":"n","É²":"n","Å":"n","ê":"n","ê¥":"n","Ç":"nj","â":"o","ï½":"o","Ã²":"o","Ã³":"o","Ã´":"o","á»":"o","á»":"o","á»":"o","á»":"o","Ãµ":"o","á¹":"o","È­":"o","á¹":"o","Å":"o","á¹":"o","á¹":"o","Å":"o","È¯":"o","È±":"o","Ã¶":"o","È«":"o","á»":"o","Å":"o","Ç":"o","È":"o","È":"o","Æ¡":"o","á»":"o","á»":"o","á»¡":"o","á»":"o","á»£":"o","á»":"o","á»":"o","Ç«":"o","Ç­":"o","Ã¸":"o","Ç¿":"o","É":"o","ê":"o","ê":"o","Éµ":"o","Å":"oe","Æ£":"oi","È£":"ou","ê":"oo","â":"p","ï½":"p","á¹":"p","á¹":"p","Æ¥":"p","áµ½":"p","ê":"p","ê":"p","ê":"p","â ":"q","ï½":"q","É":"q","ê":"q","ê":"q","â¡":"r","ï½":"r","Å":"r","á¹":"r","Å":"r","È":"r","È":"r","á¹":"r","á¹":"r","Å":"r","á¹":"r","É":"r","É½":"r","ê":"r","ê§":"r","ê":"r","â¢":"s","ï½":"s","Ã":"s","Å":"s","á¹¥":"s","Å":"s","á¹¡":"s","Å¡":"s","á¹§":"s","á¹£":"s","á¹©":"s","È":"s","Å":"s","È¿":"s","ê©":"s","ê":"s","áº":"s","â£":"t","ï½":"t","á¹«":"t","áº":"t","Å¥":"t","á¹­":"t","È":"t","Å£":"t","á¹±":"t","á¹¯":"t","Å§":"t","Æ­":"t","Ê":"t","â±¦":"t","ê":"t","ê©":"tz","â¤":"u","ï½":"u","Ã¹":"u","Ãº":"u","Ã»":"u","Å©":"u","á¹¹":"u","Å«":"u","á¹»":"u","Å­":"u","Ã¼":"u","Ç":"u","Ç":"u","Ç":"u","Ç":"u","á»§":"u","Å¯":"u","Å±":"u","Ç":"u","È":"u","È":"u","Æ°":"u","á»«":"u","á»©":"u","á»¯":"u","á»­":"u","á»±":"u","á»¥":"u","á¹³":"u","Å³":"u","á¹·":"u","á¹µ":"u","Ê":"u","â¥":"v","ï½":"v","á¹½":"v","á¹¿":"v","Ê":"v","ê":"v","Ê":"v","ê¡":"vy","â¦":"w","ï½":"w","áº":"w","áº":"w","Åµ":"w","áº":"w","áº":"w","áº":"w","áº":"w","â±³":"w","â§":"x","ï½":"x","áº":"x","áº":"x","â¨":"y","ï½":"y","á»³":"y","Ã½":"y","Å·":"y","á»¹":"y","È³":"y","áº":"y","Ã¿":"y","á»·":"y","áº":"y","á»µ":"y","Æ´":"y","É":"y","á»¿":"y","â©":"z","ï½":"z","Åº":"z","áº":"z","Å¼":"z","Å¾":"z","áº":"z","áº":"z","Æ¶":"z","È¥":"z","É":"z","â±¬":"z","ê£":"z","Î":"Î","Î":"Î","Î":"Î","Î":"Î","Îª":"Î","Î":"Î","Î":"Î¥","Î«":"Î¥","Î":"Î©","Î¬":"Î±","Î­":"Îµ","Î®":"Î·","Î¯":"Î¹","Ï":"Î¹","Î":"Î¹","Ï":"Î¿","Ï":"Ï","Ï":"Ï","Î°":"Ï","Ï":"Ï","Ï":"Ï","â":"'"}}),e.define("select2/data/base",["../utils"],function(i){function n(e,t){n.__super__.constructor.call(this)}return i.Extend(n,i.Observable),n.prototype.current=function(e){throw new Error("The `current` method must be defined in child classes.")},n.prototype.query=function(e,t){throw new Error("The `query` method must be defined in child classes.")},n.prototype.bind=function(e,t){},n.prototype.destroy=function(){},n.prototype.generateResultId=function(e,t){var n=e.id+"-result-";return n+=i.generateChars(4),null!=t.id?n+="-"+t.id.toString():n+="-"+i.generateChars(4),n},n}),e.define("select2/data/select",["./base","../utils","jquery"],function(e,a,l){function n(e,t){this.$element=e,this.options=t,n.__super__.constructor.call(this)}return a.Extend(n,e),n.prototype.current=function(e){var n=[],i=this;this.$element.find(":selected").each(function(){var e=l(this),t=i.item(e);n.push(t)}),e(n)},n.prototype.select=function(o){var r=this;if(o.selected=!0,l(o.element).is("option"))return o.element.selected=!0,void this.$element.trigger("change");if(this.$element.prop("multiple"))this.current(function(e){var t=[];(o=[o]).push.apply(o,e);for(var n=0;n<o.length;n++){var i=o[n].id;-1===l.inArray(i,t)&&t.push(i)}r.$element.val(t),r.$element.trigger("change")});else{var e=o.id;this.$element.val(e),this.$element.trigger("change")}},n.prototype.unselect=function(o){var r=this;if(this.$element.prop("multiple")){if(o.selected=!1,l(o.element).is("option"))return o.element.selected=!1,void this.$element.trigger("change");this.current(function(e){for(var t=[],n=0;n<e.length;n++){var i=e[n].id;i!==o.id&&-1===l.inArray(i,t)&&t.push(i)}r.$element.val(t),r.$element.trigger("change")})}},n.prototype.bind=function(e,t){var n=this;(this.container=e).on("select",function(e){n.select(e.data)}),e.on("unselect",function(e){n.unselect(e.data)})},n.prototype.destroy=function(){this.$element.find("*").each(function(){a.RemoveData(this)})},n.prototype.query=function(i,e){var o=[],r=this;this.$element.children().each(function(){var e=l(this);if(e.is("option")||e.is("optgroup")){var t=r.item(e),n=r.matches(i,t);null!==n&&o.push(n)}}),e({results:o})},n.prototype.addOptions=function(e){a.appendMany(this.$element,e)},n.prototype.option=function(e){var t;e.children?(t=document.createElement("optgroup")).label=e.text:void 0!==(t=document.createElement("option")).textContent?t.textContent=e.text:t.innerText=e.text,void 0!==e.id&&(t.value=e.id),e.disabled&&(t.disabled=!0),e.selected&&(t.selected=!0),e.title&&(t.title=e.title);var n=l(t),i=this._normalizeItem(e);return i.element=t,a.StoreData(t,"data",i),n},n.prototype.item=function(e){var t={};if(null!=(t=a.GetData(e[0],"data")))return t;if(e.is("option"))t={id:e.val(),text:e.text(),disabled:e.prop("disabled"),selected:e.prop("selected"),title:e.prop("title")};else if(e.is("optgroup")){t={text:e.prop("label"),children:[],title:e.prop("title")};for(var n=e.children("option"),i=[],o=0;o<n.length;o++){var r=l(n[o]),s=this.item(r);i.push(s)}t.children=i}return(t=this._normalizeItem(t)).element=e[0],a.StoreData(e[0],"data",t),t},n.prototype._normalizeItem=function(e){return e!==Object(e)&&(e={id:e,text:e}),null!=(e=l.extend({},{text:""},e)).id&&(e.id=e.id.toString()),null!=e.text&&(e.text=e.text.toString()),null==e._resultId&&e.id&&null!=this.container&&(e._resultId=this.generateResultId(this.container,e)),l.extend({},{selected:!1,disabled:!1},e)},n.prototype.matches=function(e,t){return this.options.get("matcher")(e,t)},n}),e.define("select2/data/array",["./select","../utils","jquery"],function(e,f,g){function i(e,t){var n=t.get("data")||[];i.__super__.constructor.call(this,e,t),this.addOptions(this.convertToOptions(n))}return f.Extend(i,e),i.prototype.select=function(n){var e=this.$element.find("option").filter(function(e,t){return t.value==n.id.toString()});0===e.length&&(e=this.option(n),this.addOptions(e)),i.__super__.select.call(this,n)},i.prototype.convertToOptions=function(e){var t=this,n=this.$element.find("option"),i=n.map(function(){return t.item(g(this)).id}).get(),o=[];function r(e){return function(){return g(this).val()==e.id}}for(var s=0;s<e.length;s++){var a=this._normalizeItem(e[s]);if(0<=g.inArray(a.id,i)){var l=n.filter(r(a)),c=this.item(l),u=g.extend(!0,{},a,c),d=this.option(u);l.replaceWith(d)}else{var p=this.option(a);if(a.children){var h=this.convertToOptions(a.children);f.appendMany(p,h)}o.push(p)}}return o},i}),e.define("select2/data/ajax",["./array","../utils","jquery"],function(e,t,r){function n(e,t){this.ajaxOptions=this._applyDefaults(t.get("ajax")),null!=this.ajaxOptions.processResults&&(this.processResults=this.ajaxOptions.processResults),n.__super__.constructor.call(this,e,t)}return t.Extend(n,e),n.prototype._applyDefaults=function(e){var t={data:function(e){return r.extend({},e,{q:e.term})},transport:function(e,t,n){var i=r.ajax(e);return i.then(t),i.fail(n),i}};return r.extend({},t,e,!0)},n.prototype.processResults=function(e){return e},n.prototype.query=function(n,i){var o=this;null!=this._request&&(r.isFunction(this._request.abort)&&this._request.abort(),this._request=null);var t=r.extend({type:"GET"},this.ajaxOptions);function e(){var e=t.transport(t,function(e){var t=o.processResults(e,n);o.options.get("debug")&&window.console&&console.error&&(t&&t.results&&r.isArray(t.results)||console.error("Select2: The AJAX results did not return an array in the `results` key of the response.")),i(t)},function(){"status"in e&&(0===e.status||"0"===e.status)||o.trigger("results:message",{message:"errorLoading"})});o._request=e}"function"==typeof t.url&&(t.url=t.url.call(this.$element,n)),"function"==typeof t.data&&(t.data=t.data.call(this.$element,n)),this.ajaxOptions.delay&&null!=n.term?(this._queryTimeout&&window.clearTimeout(this._queryTimeout),this._queryTimeout=window.setTimeout(e,this.ajaxOptions.delay)):e()},n}),e.define("select2/data/tags",["jquery"],function(u){function e(e,t,n){var i=n.get("tags"),o=n.get("createTag");void 0!==o&&(this.createTag=o);var r=n.get("insertTag");if(void 0!==r&&(this.insertTag=r),e.call(this,t,n),u.isArray(i))for(var s=0;s<i.length;s++){var a=i[s],l=this._normalizeItem(a),c=this.option(l);this.$element.append(c)}}return e.prototype.query=function(e,c,u){var d=this;this._removeOldTags(),null!=c.term&&null==c.page?e.call(this,c,function e(t,n){for(var i=t.results,o=0;o<i.length;o++){var r=i[o],s=null!=r.children&&!e({results:r.children},!0);if((r.text||"").toUpperCase()===(c.term||"").toUpperCase()||s)return!n&&(t.data=i,void u(t))}if(n)return!0;var a=d.createTag(c);if(null!=a){var l=d.option(a);l.attr("data-select2-tag",!0),d.addOptions([l]),d.insertTag(i,a)}t.results=i,u(t)}):e.call(this,c,u)},e.prototype.createTag=function(e,t){var n=u.trim(t.term);return""===n?null:{id:n,text:n}},e.prototype.insertTag=function(e,t,n){t.unshift(n)},e.prototype._removeOldTags=function(e){this._lastTag,this.$element.find("option[data-select2-tag]").each(function(){this.selected||u(this).remove()})},e}),e.define("select2/data/tokenizer",["jquery"],function(d){function e(e,t,n){var i=n.get("tokenizer");void 0!==i&&(this.tokenizer=i),e.call(this,t,n)}return e.prototype.bind=function(e,t,n){e.call(this,t,n),this.$search=t.dropdown.$search||t.selection.$search||n.find(".select2-search__field")},e.prototype.query=function(e,t,n){var o=this;t.term=t.term||"";var i=this.tokenizer(t,this.options,function(e){var t,n=o._normalizeItem(e);if(!o.$element.find("option").filter(function(){return d(this).val()===n.id}).length){var i=o.option(n);i.attr("data-select2-tag",!0),o._removeOldTags(),o.addOptions([i])}t=n,o.trigger("select",{data:t})});i.term!==t.term&&(this.$search.length&&(this.$search.val(i.term),this.$search.focus()),t.term=i.term),e.call(this,t,n)},e.prototype.tokenizer=function(e,t,n,i){for(var o=n.get("tokenSeparators")||[],r=t.term,s=0,a=this.createTag||function(e){return{id:e.term,text:e.term}};s<r.length;){var l=r[s];if(-1!==d.inArray(l,o)){var c=r.substr(0,s),u=a(d.extend({},t,{term:c}));null!=u?(i(u),r=r.substr(s+1)||"",s=0):s++}else s++}return{term:r}},e}),e.define("select2/data/minimumInputLength",[],function(){function e(e,t,n){this.minimumInputLength=n.get("minimumInputLength"),e.call(this,t,n)}return e.prototype.query=function(e,t,n){t.term=t.term||"",t.term.length<this.minimumInputLength?this.trigger("results:message",{message:"inputTooShort",args:{minimum:this.minimumInputLength,input:t.term,params:t}}):e.call(this,t,n)},e}),e.define("select2/data/maximumInputLength",[],function(){function e(e,t,n){this.maximumInputLength=n.get("maximumInputLength"),e.call(this,t,n)}return e.prototype.query=function(e,t,n){t.term=t.term||"",0<this.maximumInputLength&&t.term.length>this.maximumInputLength?this.trigger("results:message",{message:"inputTooLong",args:{maximum:this.maximumInputLength,input:t.term,params:t}}):e.call(this,t,n)},e}),e.define("select2/data/maximumSelectionLength",[],function(){function e(e,t,n){this.maximumSelectionLength=n.get("maximumSelectionLength"),e.call(this,t,n)}return e.prototype.query=function(n,i,o){var r=this;this.current(function(e){var t=null!=e?e.length:0;0<r.maximumSelectionLength&&t>=r.maximumSelectionLength?r.trigger("results:message",{message:"maximumSelected",args:{maximum:r.maximumSelectionLength}}):n.call(r,i,o)})},e}),e.define("select2/dropdown",["jquery","./utils"],function(t,e){function n(e,t){this.$element=e,this.options=t,n.__super__.constructor.call(this)}return e.Extend(n,e.Observable),n.prototype.render=function(){var e=t('<span class="select2-dropdown"><span class="select2-results"></span></span>');return e.attr("dir",this.options.get("dir")),this.$dropdown=e},n.prototype.bind=function(){},n.prototype.position=function(e,t){},n.prototype.destroy=function(){this.$dropdown.remove()},n}),e.define("select2/dropdown/search",["jquery","../utils"],function(o,e){function t(){}return t.prototype.render=function(e){var t=e.call(this),n=o('<span class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="textbox" /></span>');return this.$searchContainer=n,this.$search=n.find("input"),t.prepend(n),t},t.prototype.bind=function(e,t,n){var i=this;e.call(this,t,n),this.$search.on("keydown",function(e){i.trigger("keypress",e),i._keyUpPrevented=e.isDefaultPrevented()}),this.$search.on("input",function(e){o(this).off("keyup")}),this.$search.on("keyup input",function(e){i.handleSearch(e)}),t.on("open",function(){i.$search.attr("tabindex",0),i.$search.focus(),window.setTimeout(function(){i.$search.focus()},0)}),t.on("close",function(){i.$search.attr("tabindex",-1),i.$search.val(""),i.$search.blur()}),t.on("focus",function(){t.isOpen()||i.$search.focus()}),t.on("results:all",function(e){null!=e.query.term&&""!==e.query.term||(i.showSearch(e)?i.$searchContainer.removeClass("select2-search--hide"):i.$searchContainer.addClass("select2-search--hide"))})},t.prototype.handleSearch=function(e){if(!this._keyUpPrevented){var t=this.$search.val();this.trigger("query",{term:t})}this._keyUpPrevented=!1},t.prototype.showSearch=function(e,t){return!0},t}),e.define("select2/dropdown/hidePlaceholder",[],function(){function e(e,t,n,i){this.placeholder=this.normalizePlaceholder(n.get("placeholder")),e.call(this,t,n,i)}return e.prototype.append=function(e,t){t.results=this.removePlaceholder(t.results),e.call(this,t)},e.prototype.normalizePlaceholder=function(e,t){return"string"==typeof t&&(t={id:"",text:t}),t},e.prototype.removePlaceholder=function(e,t){for(var n=t.slice(0),i=t.length-1;0<=i;i--){var o=t[i];this.placeholder.id===o.id&&n.splice(i,1)}return n},e}),e.define("select2/dropdown/infiniteScroll",["jquery"],function(o){function e(e,t,n,i){this.lastParams={},e.call(this,t,n,i),this.$loadingMore=this.createLoadingMore(),this.loading=!1}return e.prototype.append=function(e,t){this.$loadingMore.remove(),this.loading=!1,e.call(this,t),this.showLoadingMore(t)&&this.$results.append(this.$loadingMore)},e.prototype.bind=function(e,t,n){var i=this;e.call(this,t,n),t.on("query",function(e){i.lastParams=e,i.loading=!0}),t.on("query:append",function(e){i.lastParams=e,i.loading=!0}),this.$results.on("scroll",function(){var e=o.contains(document.documentElement,i.$loadingMore[0]);if(!i.loading&&e){var t=i.$results.offset().top+i.$results.outerHeight(!1);i.$loadingMore.offset().top+i.$loadingMore.outerHeight(!1)<=t+50&&i.loadMore()}})},e.prototype.loadMore=function(){this.loading=!0;var e=o.extend({},{page:1},this.lastParams);e.page++,this.trigger("query:append",e)},e.prototype.showLoadingMore=function(e,t){return t.pagination&&t.pagination.more},e.prototype.createLoadingMore=function(){var e=o('<li class="select2-results__option select2-results__option--load-more"role="treeitem" aria-disabled="true"></li>'),t=this.options.get("translations").get("loadingMore");return e.html(t(this.lastParams)),e},e}),e.define("select2/dropdown/attachBody",["jquery","../utils"],function(f,a){function e(e,t,n){this.$dropdownParent=n.get("dropdownParent")||f(document.body),e.call(this,t,n)}return e.prototype.bind=function(e,t,n){var i=this,o=!1;e.call(this,t,n),t.on("open",function(){i._showDropdown(),i._attachPositioningHandler(t),o||(o=!0,t.on("results:all",function(){i._positionDropdown(),i._resizeDropdown()}),t.on("results:append",function(){i._positionDropdown(),i._resizeDropdown()}))}),t.on("close",function(){i._hideDropdown(),i._detachPositioningHandler(t)}),this.$dropdownContainer.on("mousedown",function(e){e.stopPropagation()})},e.prototype.destroy=function(e){e.call(this),this.$dropdownContainer.remove()},e.prototype.position=function(e,t,n){t.attr("class",n.attr("class")),t.removeClass("select2"),t.addClass("select2-container--open"),t.css({position:"absolute",top:-999999}),this.$container=n},e.prototype.render=function(e){var t=f("<span></span>"),n=e.call(this);return t.append(n),this.$dropdownContainer=t},e.prototype._hideDropdown=function(e){this.$dropdownContainer.detach()},e.prototype._attachPositioningHandler=function(e,t){var n=this,i="scroll.select2."+t.id,o="resize.select2."+t.id,r="orientationchange.select2."+t.id,s=this.$container.parents().filter(a.hasScroll);s.each(function(){a.StoreData(this,"select2-scroll-position",{x:f(this).scrollLeft(),y:f(this).scrollTop()})}),s.on(i,function(e){var t=a.GetData(this,"select2-scroll-position");f(this).scrollTop(t.y)}),f(window).on(i+" "+o+" "+r,function(e){n._positionDropdown(),n._resizeDropdown()})},e.prototype._detachPositioningHandler=function(e,t){var n="scroll.select2."+t.id,i="resize.select2."+t.id,o="orientationchange.select2."+t.id;this.$container.parents().filter(a.hasScroll).off(n),f(window).off(n+" "+i+" "+o)},e.prototype._positionDropdown=function(){var e=f(window),t=this.$dropdown.hasClass("select2-dropdown--above"),n=this.$dropdown.hasClass("select2-dropdown--below"),i=null,o=this.$container.offset();o.bottom=o.top+this.$container.outerHeight(!1);var r={height:this.$container.outerHeight(!1)};r.top=o.top,r.bottom=o.top+r.height;var s=this.$dropdown.outerHeight(!1),a=e.scrollTop(),l=e.scrollTop()+e.height(),c=a<o.top-s,u=l>o.bottom+s,d={left:o.left,top:r.bottom},p=this.$dropdownParent;"static"===p.css("position")&&(p=p.offsetParent());var h=p.offset();d.top-=h.top,d.left-=h.left,t||n||(i="below"),u||!c||t?!c&&u&&t&&(i="below"):i="above",("above"==i||t&&"below"!==i)&&(d.top=r.top-h.top-s),null!=i&&(this.$dropdown.removeClass("select2-dropdown--below select2-dropdown--above").addClass("select2-dropdown--"+i),this.$container.removeClass("select2-container--below select2-container--above").addClass("select2-container--"+i)),this.$dropdownContainer.css(d)},e.prototype._resizeDropdown=function(){var e={width:this.$container.outerWidth(!1)+"px"};this.options.get("dropdownAutoWidth")&&(e.minWidth=e.width,e.position="relative",e.width="auto"),this.$dropdown.css(e)},e.prototype._showDropdown=function(e){this.$dropdownContainer.appendTo(this.$dropdownParent),this._positionDropdown(),this._resizeDropdown()},e}),e.define("select2/dropdown/minimumResultsForSearch",[],function(){function e(e,t,n,i){this.minimumResultsForSearch=n.get("minimumResultsForSearch"),this.minimumResultsForSearch<0&&(this.minimumResultsForSearch=1/0),e.call(this,t,n,i)}return e.prototype.showSearch=function(e,t){return!(function e(t){for(var n=0,i=0;i<t.length;i++){var o=t[i];o.children?n+=e(o.children):n++}return n}(t.data.results)<this.minimumResultsForSearch)&&e.call(this,t)},e}),e.define("select2/dropdown/selectOnClose",["../utils"],function(r){function e(){}return e.prototype.bind=function(e,t,n){var i=this;e.call(this,t,n),t.on("close",function(e){i._handleSelectOnClose(e)})},e.prototype._handleSelectOnClose=function(e,t){if(t&&null!=t.originalSelect2Event){var n=t.originalSelect2Event;if("select"===n._type||"unselect"===n._type)return}var i=this.getHighlightedResults();if(!(i.length<1)){var o=r.GetData(i[0],"data");null!=o.element&&o.element.selected||null==o.element&&o.selected||this.trigger("select",{data:o})}},e}),e.define("select2/dropdown/closeOnSelect",[],function(){function e(){}return e.prototype.bind=function(e,t,n){var i=this;e.call(this,t,n),t.on("select",function(e){i._selectTriggered(e)}),t.on("unselect",function(e){i._selectTriggered(e)})},e.prototype._selectTriggered=function(e,t){var n=t.originalEvent;n&&(n.ctrlKey||n.metaKey)||this.trigger("close",{originalEvent:n,originalSelect2Event:t})},e}),e.define("select2/i18n/en",[],function(){return{errorLoading:function(){return"The results could not be loaded."},inputTooLong:function(e){var t=e.input.length-e.maximum,n="Please delete "+t+" character";return 1!=t&&(n+="s"),n},inputTooShort:function(e){return"Please enter "+(e.minimum-e.input.length)+" or more characters"},loadingMore:function(){return"Loading more resultsâ¦"},maximumSelected:function(e){var t="You can only select "+e.maximum+" item";return 1!=e.maximum&&(t+="s"),t},noResults:function(){return"No results found"},searching:function(){return"Searchingâ¦"},removeAllItems:function(){return"Remove all items"}}}),e.define("select2/defaults",["jquery","require","./results","./selection/single","./selection/multiple","./selection/placeholder","./selection/allowClear","./selection/search","./selection/eventRelay","./utils","./translation","./diacritics","./data/select","./data/array","./data/ajax","./data/tags","./data/tokenizer","./data/minimumInputLength","./data/maximumInputLength","./data/maximumSelectionLength","./dropdown","./dropdown/search","./dropdown/hidePlaceholder","./dropdown/infiniteScroll","./dropdown/attachBody","./dropdown/minimumResultsForSearch","./dropdown/selectOnClose","./dropdown/closeOnSelect","./i18n/en"],function(f,g,v,m,y,w,b,x,T,S,k,t,$,C,A,_,E,D,O,j,L,q,P,H,N,M,I,R,e){function n(){this.reset()}return n.prototype.apply=function(e){if(null==(e=f.extend(!0,{},this.defaults,e)).dataAdapter){if(null!=e.ajax?e.dataAdapter=A:null!=e.data?e.dataAdapter=C:e.dataAdapter=$,0<e.minimumInputLength&&(e.dataAdapter=S.Decorate(e.dataAdapter,D)),0<e.maximumInputLength&&(e.dataAdapter=S.Decorate(e.dataAdapter,O)),0<e.maximumSelectionLength&&(e.dataAdapter=S.Decorate(e.dataAdapter,j)),e.tags&&(e.dataAdapter=S.Decorate(e.dataAdapter,_)),null==e.tokenSeparators&&null==e.tokenizer||(e.dataAdapter=S.Decorate(e.dataAdapter,E)),null!=e.query){var t=g(e.amdBase+"compat/query");e.dataAdapter=S.Decorate(e.dataAdapter,t)}if(null!=e.initSelection){var n=g(e.amdBase+"compat/initSelection");e.dataAdapter=S.Decorate(e.dataAdapter,n)}}if(null==e.resultsAdapter&&(e.resultsAdapter=v,null!=e.ajax&&(e.resultsAdapter=S.Decorate(e.resultsAdapter,H)),null!=e.placeholder&&(e.resultsAdapter=S.Decorate(e.resultsAdapter,P)),e.selectOnClose&&(e.resultsAdapter=S.Decorate(e.resultsAdapter,I))),null==e.dropdownAdapter){if(e.multiple)e.dropdownAdapter=L;else{var i=S.Decorate(L,q);e.dropdownAdapter=i}if(0!==e.minimumResultsForSearch&&(e.dropdownAdapter=S.Decorate(e.dropdownAdapter,M)),e.closeOnSelect&&(e.dropdownAdapter=S.Decorate(e.dropdownAdapter,R)),null!=e.dropdownCssClass||null!=e.dropdownCss||null!=e.adaptDropdownCssClass){var o=g(e.amdBase+"compat/dropdownCss");e.dropdownAdapter=S.Decorate(e.dropdownAdapter,o)}e.dropdownAdapter=S.Decorate(e.dropdownAdapter,N)}if(null==e.selectionAdapter){if(e.multiple?e.selectionAdapter=y:e.selectionAdapter=m,null!=e.placeholder&&(e.selectionAdapter=S.Decorate(e.selectionAdapter,w)),e.allowClear&&(e.selectionAdapter=S.Decorate(e.selectionAdapter,b)),e.multiple&&(e.selectionAdapter=S.Decorate(e.selectionAdapter,x)),null!=e.containerCssClass||null!=e.containerCss||null!=e.adaptContainerCssClass){var r=g(e.amdBase+"compat/containerCss");e.selectionAdapter=S.Decorate(e.selectionAdapter,r)}e.selectionAdapter=S.Decorate(e.selectionAdapter,T)}if("string"==typeof e.language)if(0<e.language.indexOf("-")){var s=e.language.split("-")[0];e.language=[e.language,s]}else e.language=[e.language];if(f.isArray(e.language)){var a=new k;e.language.push("en");for(var l=e.language,c=0;c<l.length;c++){var u=l[c],d={};try{d=k.loadPath(u)}catch(t){try{u=this.defaults.amdLanguageBase+u,d=k.loadPath(u)}catch(t){e.debug&&window.console&&console.warn&&console.warn('Select2: The language file for "'+u+'" could not be automatically loaded. A fallback will be used instead.');continue}}a.extend(d)}e.translations=a}else{var p=k.loadPath(this.defaults.amdLanguageBase+"en"),h=new k(e.language);h.extend(p),e.translations=h}return e},n.prototype.reset=function(){function a(e){return e.replace(/[^\u0000-\u007E]/g,function(e){return t[e]||e})}this.defaults={amdBase:"./",amdLanguageBase:"./i18n/",closeOnSelect:!0,debug:!1,dropdownAutoWidth:!1,escapeMarkup:S.escapeMarkup,language:e,matcher:function e(t,n){if(""===f.trim(t.term))return n;if(n.children&&0<n.children.length){for(var i=f.extend(!0,{},n),o=n.children.length-1;0<=o;o--)null==e(t,n.children[o])&&i.children.splice(o,1);return 0<i.children.length?i:e(t,i)}var r=a(n.text).toUpperCase(),s=a(t.term).toUpperCase();return-1<r.indexOf(s)?n:null},minimumInputLength:0,maximumInputLength:0,maximumSelectionLength:0,minimumResultsForSearch:0,selectOnClose:!1,scrollAfterSelect:!1,sorter:function(e){return e},templateResult:function(e){return e.text},templateSelection:function(e){return e.text},theme:"default",width:"resolve"}},n.prototype.set=function(e,t){var n={};n[f.camelCase(e)]=t;var i=S._convertData(n);f.extend(!0,this.defaults,i)},new n}),e.define("select2/options",["require","jquery","./defaults","./utils"],function(i,d,o,p){function e(e,t){if(this.options=e,null!=t&&this.fromElement(t),this.options=o.apply(this.options),t&&t.is("input")){var n=i(this.get("amdBase")+"compat/inputData");this.options.dataAdapter=p.Decorate(this.options.dataAdapter,n)}}return e.prototype.fromElement=function(e){var t=["select2"];null==this.options.multiple&&(this.options.multiple=e.prop("multiple")),null==this.options.disabled&&(this.options.disabled=e.prop("disabled")),null==this.options.language&&(e.prop("lang")?this.options.language=e.prop("lang").toLowerCase():e.closest("[lang]").prop("lang")&&(this.options.language=e.closest("[lang]").prop("lang"))),null==this.options.dir&&(e.prop("dir")?this.options.dir=e.prop("dir"):e.closest("[dir]").prop("dir")?this.options.dir=e.closest("[dir]").prop("dir"):this.options.dir="ltr"),e.prop("disabled",this.options.disabled),e.prop("multiple",this.options.multiple),p.GetData(e[0],"select2Tags")&&(this.options.debug&&window.console&&console.warn&&console.warn('Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags="true"` attributes and will be removed in future versions of Select2.'),p.StoreData(e[0],"data",p.GetData(e[0],"select2Tags")),p.StoreData(e[0],"tags",!0)),p.GetData(e[0],"ajaxUrl")&&(this.options.debug&&window.console&&console.warn&&console.warn("Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2."),e.attr("ajax--url",p.GetData(e[0],"ajaxUrl")),p.StoreData(e[0],"ajax-Url",p.GetData(e[0],"ajaxUrl")));var n={};function i(e,t){return t.toUpperCase()}for(var o=0;o<e[0].attributes.length;o++){var r=e[0].attributes[o].name,s="data-";if(r.substr(0,s.length)==s){var a=r.substring(s.length),l=p.GetData(e[0],a);n[a.replace(/-([a-z])/g,i)]=l}}d.fn.jquery&&"1."==d.fn.jquery.substr(0,2)&&e[0].dataset&&(n=d.extend(!0,{},e[0].dataset,n));var c=d.extend(!0,{},p.GetData(e[0]),n);for(var u in c=p._convertData(c))-1<d.inArray(u,t)||(d.isPlainObject(this.options[u])?d.extend(this.options[u],c[u]):this.options[u]=c[u]);return this},e.prototype.get=function(e){return this.options[e]},e.prototype.set=function(e,t){this.options[e]=t},e}),e.define("select2/core",["jquery","./options","./utils","./keys"],function(o,c,u,i){var d=function(e,t){null!=u.GetData(e[0],"select2")&&u.GetData(e[0],"select2").destroy(),this.$element=e,this.id=this._generateId(e),t=t||{},this.options=new c(t,e),d.__super__.constructor.call(this);var n=e.attr("tabindex")||0;u.StoreData(e[0],"old-tabindex",n),e.attr("tabindex","-1");var i=this.options.get("dataAdapter");this.dataAdapter=new i(e,this.options);var o=this.render();this._placeContainer(o);var r=this.options.get("selectionAdapter");this.selection=new r(e,this.options),this.$selection=this.selection.render(),this.selection.position(this.$selection,o);var s=this.options.get("dropdownAdapter");this.dropdown=new s(e,this.options),this.$dropdown=this.dropdown.render(),this.dropdown.position(this.$dropdown,o);var a=this.options.get("resultsAdapter");this.results=new a(e,this.options,this.dataAdapter),this.$results=this.results.render(),this.results.position(this.$results,this.$dropdown);var l=this;this._bindAdapters(),this._registerDomEvents(),this._registerDataEvents(),this._registerSelectionEvents(),this._registerDropdownEvents(),this._registerResultsEvents(),this._registerEvents(),this.dataAdapter.current(function(e){l.trigger("selection:update",{data:e})}),e.addClass("select2-hidden-accessible"),e.attr("aria-hidden","true"),this._syncAttributes(),u.StoreData(e[0],"select2",this),e.data("select2",this)};return u.Extend(d,u.Observable),d.prototype._generateId=function(e){return"select2-"+(null!=e.attr("id")?e.attr("id"):null!=e.attr("name")?e.attr("name")+"-"+u.generateChars(2):u.generateChars(4)).replace(/(:|\.|\[|\]|,)/g,"")},d.prototype._placeContainer=function(e){e.insertAfter(this.$element);var t=this._resolveWidth(this.$element,this.options.get("width"));null!=t&&e.css("width",t)},d.prototype._resolveWidth=function(e,t){var n=/^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;if("resolve"==t){var i=this._resolveWidth(e,"style");return null!=i?i:this._resolveWidth(e,"element")}if("element"==t){var o=e.outerWidth(!1);return o<=0?"auto":o+"px"}if("style"!=t)return t;var r=e.attr("style");if("string"!=typeof r)return null;for(var s=r.split(";"),a=0,l=s.length;a<l;a+=1){var c=s[a].replace(/\s/g,"").match(n);if(null!==c&&1<=c.length)return c[1]}return null},d.prototype._bindAdapters=function(){this.dataAdapter.bind(this,this.$container),this.selection.bind(this,this.$container),this.dropdown.bind(this,this.$container),this.results.bind(this,this.$container)},d.prototype._registerDomEvents=function(){var t=this;this.$element.on("change.select2",function(){t.dataAdapter.current(function(e){t.trigger("selection:update",{data:e})})}),this.$element.on("focus.select2",function(e){t.trigger("focus",e)}),this._syncA=u.bind(this._syncAttributes,this),this._syncS=u.bind(this._syncSubtree,this),this.$element[0].attachEvent&&this.$element[0].attachEvent("onpropertychange",this._syncA);var e=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;null!=e?(this._observer=new e(function(e){o.each(e,t._syncA),o.each(e,t._syncS)}),this._observer.observe(this.$element[0],{attributes:!0,childList:!0,subtree:!1})):this.$element[0].addEventListener&&(this.$element[0].addEventListener("DOMAttrModified",t._syncA,!1),this.$element[0].addEventListener("DOMNodeInserted",t._syncS,!1),this.$element[0].addEventListener("DOMNodeRemoved",t._syncS,!1))},d.prototype._registerDataEvents=function(){var n=this;this.dataAdapter.on("*",function(e,t){n.trigger(e,t)})},d.prototype._registerSelectionEvents=function(){var n=this,i=["toggle","focus"];this.selection.on("toggle",function(){n.toggleDropdown()}),this.selection.on("focus",function(e){n.focus(e)}),this.selection.on("*",function(e,t){-1===o.inArray(e,i)&&n.trigger(e,t)})},d.prototype._registerDropdownEvents=function(){var n=this;this.dropdown.on("*",function(e,t){n.trigger(e,t)})},d.prototype._registerResultsEvents=function(){var n=this;this.results.on("*",function(e,t){n.trigger(e,t)})},d.prototype._registerEvents=function(){var n=this;this.on("open",function(){n.$container.addClass("select2-container--open")}),this.on("close",function(){n.$container.removeClass("select2-container--open")}),this.on("enable",function(){n.$container.removeClass("select2-container--disabled")}),this.on("disable",function(){n.$container.addClass("select2-container--disabled")}),this.on("blur",function(){n.$container.removeClass("select2-container--focus")}),this.on("query",function(t){n.isOpen()||n.trigger("open",{}),this.dataAdapter.query(t,function(e){n.trigger("results:all",{data:e,query:t})})}),this.on("query:append",function(t){this.dataAdapter.query(t,function(e){n.trigger("results:append",{data:e,query:t})})}),this.on("keypress",function(e){var t=e.which;n.isOpen()?t===i.ESC||t===i.TAB||t===i.UP&&e.altKey?(n.close(),e.preventDefault()):t===i.ENTER?(n.trigger("results:select",{}),e.preventDefault()):t===i.SPACE&&e.ctrlKey?(n.trigger("results:toggle",{}),e.preventDefault()):t===i.UP?(n.trigger("results:previous",{}),e.preventDefault()):t===i.DOWN&&(n.trigger("results:next",{}),e.preventDefault()):(t===i.ENTER||t===i.SPACE||t===i.DOWN&&e.altKey)&&(n.open(),e.preventDefault())})},d.prototype._syncAttributes=function(){this.options.set("disabled",this.$element.prop("disabled")),this.options.get("disabled")?(this.isOpen()&&this.close(),this.trigger("disable",{})):this.trigger("enable",{})},d.prototype._syncSubtree=function(e,t){var n=!1,i=this;if(!e||!e.target||"OPTION"===e.target.nodeName||"OPTGROUP"===e.target.nodeName){if(t)if(t.addedNodes&&0<t.addedNodes.length)for(var o=0;o<t.addedNodes.length;o++)t.addedNodes[o].selected&&(n=!0);else t.removedNodes&&0<t.removedNodes.length&&(n=!0);else n=!0;n&&this.dataAdapter.current(function(e){i.trigger("selection:update",{data:e})})}},d.prototype.trigger=function(e,t){var n=d.__super__.trigger,i={open:"opening",close:"closing",select:"selecting",unselect:"unselecting",clear:"clearing"};if(void 0===t&&(t={}),e in i){var o=i[e],r={prevented:!1,name:e,args:t};if(n.call(this,o,r),r.prevented)return void(t.prevented=!0)}n.call(this,e,t)},d.prototype.toggleDropdown=function(){this.options.get("disabled")||(this.isOpen()?this.close():this.open())},d.prototype.open=function(){this.isOpen()||this.trigger("query",{})},d.prototype.close=function(){this.isOpen()&&this.trigger("close",{})},d.prototype.isOpen=function(){return this.$container.hasClass("select2-container--open")},d.prototype.hasFocus=function(){return this.$container.hasClass("select2-container--focus")},d.prototype.focus=function(e){this.hasFocus()||(this.$container.addClass("select2-container--focus"),this.trigger("focus",{}))},d.prototype.enable=function(e){this.options.get("debug")&&window.console&&console.warn&&console.warn('Select2: The `select2("enable")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop("disabled") instead.'),null!=e&&0!==e.length||(e=[!0]);var t=!e[0];this.$element.prop("disabled",t)},d.prototype.data=function(){this.options.get("debug")&&0<arguments.length&&window.console&&console.warn&&console.warn('Select2: Data can no longer be set using `select2("data")`. You should consider setting the value instead using `$element.val()`.');var t=[];return this.dataAdapter.current(function(e){t=e}),t},d.prototype.val=function(e){if(this.options.get("debug")&&window.console&&console.warn&&console.warn('Select2: The `select2("val")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.'),null==e||0===e.length)return this.$element.val();var t=e[0];o.isArray(t)&&(t=o.map(t,function(e){return e.toString()})),this.$element.val(t).trigger("change")},d.prototype.destroy=function(){this.$container.remove(),this.$element[0].detachEvent&&this.$element[0].detachEvent("onpropertychange",this._syncA),null!=this._observer?(this._observer.disconnect(),this._observer=null):this.$element[0].removeEventListener&&(this.$element[0].removeEventListener("DOMAttrModified",this._syncA,!1),this.$element[0].removeEventListener("DOMNodeInserted",this._syncS,!1),this.$element[0].removeEventListener("DOMNodeRemoved",this._syncS,!1)),this._syncA=null,this._syncS=null,this.$element.off(".select2"),this.$element.attr("tabindex",u.GetData(this.$element[0],"old-tabindex")),this.$element.removeClass("select2-hidden-accessible"),this.$element.attr("aria-hidden","false"),u.RemoveData(this.$element[0]),this.$element.removeData("select2"),this.dataAdapter.destroy(),this.selection.destroy(),this.dropdown.destroy(),this.results.destroy(),this.dataAdapter=null,this.selection=null,this.dropdown=null,this.results=null},d.prototype.render=function(){var e=o('<span class="select2 select2-container"><span class="selection"></span><span class="dropdown-wrapper" aria-hidden="true"></span></span>');return e.attr("dir",this.options.get("dir")),this.$container=e,this.$container.addClass("select2-container--"+this.options.get("theme")),u.StoreData(e[0],"element",this.$element),e},d}),e.define("select2/compat/utils",["jquery"],function(s){return{syncCssClasses:function(e,t,n){var i,o,r=[];(i=s.trim(e.attr("class")))&&s((i=""+i).split(/\s+/)).each(function(){0===this.indexOf("select2-")&&r.push(this)}),(i=s.trim(t.attr("class")))&&s((i=""+i).split(/\s+/)).each(function(){0!==this.indexOf("select2-")&&null!=(o=n(this))&&r.push(o)}),e.attr("class",r.join(" "))}}}),e.define("select2/compat/containerCss",["jquery","./utils"],function(s,a){function l(e){return null}function e(){}return e.prototype.render=function(e){var t=e.call(this),n=this.options.get("containerCssClass")||"";s.isFunction(n)&&(n=n(this.$element));var i=this.options.get("adaptContainerCssClass");if(i=i||l,-1!==n.indexOf(":all:")){n=n.replace(":all:","");var o=i;i=function(e){var t=o(e);return null!=t?t+" "+e:e}}var r=this.options.get("containerCss")||{};return s.isFunction(r)&&(r=r(this.$element)),a.syncCssClasses(t,this.$element,i),t.css(r),t.addClass(n),t},e}),e.define("select2/compat/dropdownCss",["jquery","./utils"],function(s,a){function l(e){return null}function e(){}return e.prototype.render=function(e){var t=e.call(this),n=this.options.get("dropdownCssClass")||"";s.isFunction(n)&&(n=n(this.$element));var i=this.options.get("adaptDropdownCssClass");if(i=i||l,-1!==n.indexOf(":all:")){n=n.replace(":all:","");var o=i;i=function(e){var t=o(e);return null!=t?t+" "+e:e}}var r=this.options.get("dropdownCss")||{};return s.isFunction(r)&&(r=r(this.$element)),a.syncCssClasses(t,this.$element,i),t.css(r),t.addClass(n),t},e}),e.define("select2/compat/initSelection",["jquery"],function(i){function e(e,t,n){n.get("debug")&&window.console&&console.warn&&console.warn("Select2: The `initSelection` option has been deprecated in favor of a custom data adapter that overrides the `current` method. This method is now called multiple times instead of a single time when the instance is initialized. Support will be removed for the `initSelection` option in future versions of Select2"),this.initSelection=n.get("initSelection"),this._isInitialized=!1,e.call(this,t,n)}return e.prototype.current=function(e,t){var n=this;this._isInitialized?e.call(this,t):this.initSelection.call(null,this.$element,function(e){n._isInitialized=!0,i.isArray(e)||(e=[e]),t(e)})},e}),e.define("select2/compat/inputData",["jquery","../utils"],function(s,i){function e(e,t,n){this._currentData=[],this._valueSeparator=n.get("valueSeparator")||",","hidden"===t.prop("type")&&n.get("debug")&&console&&console.warn&&console.warn("Select2: Using a hidden input with Select2 is no longer supported and may stop working in the future. It is recommended to use a `<select>` element instead."),e.call(this,t,n)}return e.prototype.current=function(e,t){function i(e,t){var n=[];return e.selected||-1!==s.inArray(e.id,t)?(e.selected=!0,n.push(e)):e.selected=!1,e.children&&n.push.apply(n,i(e.children,t)),n}for(var n=[],o=0;o<this._currentData.length;o++){var r=this._currentData[o];n.push.apply(n,i(r,this.$element.val().split(this._valueSeparator)))}t(n)},e.prototype.select=function(e,t){if(this.options.get("multiple")){var n=this.$element.val();n+=this._valueSeparator+t.id,this.$element.val(n),this.$element.trigger("change")}else this.current(function(e){s.map(e,function(e){e.selected=!1})}),this.$element.val(t.id),this.$element.trigger("change")},e.prototype.unselect=function(e,o){var r=this;o.selected=!1,this.current(function(e){for(var t=[],n=0;n<e.length;n++){var i=e[n];o.id!=i.id&&t.push(i.id)}r.$element.val(t.join(r._valueSeparator)),r.$element.trigger("change")})},e.prototype.query=function(e,t,n){for(var i=[],o=0;o<this._currentData.length;o++){var r=this._currentData[o],s=this.matches(t,r);null!==s&&i.push(s)}n({results:i})},e.prototype.addOptions=function(e,t){var n=s.map(t,function(e){return i.GetData(e[0],"data")});this._currentData.push.apply(this._currentData,n)},e}),e.define("select2/compat/matcher",["jquery"],function(s){return function(r){return function(e,t){var n=s.extend(!0,{},t);if(null==e.term||""===s.trim(e.term))return n;if(t.children){for(var i=t.children.length-1;0<=i;i--){var o=t.children[i];r(e.term,o.text,o)||n.children.splice(i,1)}if(0<n.children.length)return n}return r(e.term,t.text,t)?n:null}}}),e.define("select2/compat/query",[],function(){function e(e,t,n){n.get("debug")&&window.console&&console.warn&&console.warn("Select2: The `query` option has been deprecated in favor of a custom data adapter that overrides the `query` method. Support will be removed for the `query` option in future versions of Select2."),e.call(this,t,n)}return e.prototype.query=function(e,t,n){t.callback=n,this.options.get("query").call(null,t)},e}),e.define("select2/dropdown/attachContainer",[],function(){function e(e,t,n){e.call(this,t,n)}return e.prototype.position=function(e,t,n){n.find(".dropdown-wrapper").append(t),t.addClass("select2-dropdown--below"),n.addClass("select2-container--below")},e}),e.define("select2/dropdown/stopPropagation",[],function(){function e(){}return e.prototype.bind=function(e,t,n){e.call(this,t,n),this.$dropdown.on(["blur","change","click","dblclick","focus","focusin","focusout","input","keydown","keyup","keypress","mousedown","mouseenter","mouseleave","mousemove","mouseover","mouseup","search","touchend","touchstart"].join(" "),function(e){e.stopPropagation()})},e}),e.define("select2/selection/stopPropagation",[],function(){function e(){}return e.prototype.bind=function(e,t,n){e.call(this,t,n),this.$selection.on(["blur","change","click","dblclick","focus","focusin","focusout","input","keydown","keyup","keypress","mousedown","mouseenter","mouseleave","mousemove","mouseover","mouseup","search","touchend","touchstart"].join(" "),function(e){e.stopPropagation()})},e}),l=function(p){var h,f,e=["wheel","mousewheel","DOMMouseScroll","MozMousePixelScroll"],t="onwheel"in document||9<=document.documentMode?["wheel"]:["mousewheel","DomMouseScroll","MozMousePixelScroll"],g=Array.prototype.slice;if(p.event.fixHooks)for(var n=e.length;n;)p.event.fixHooks[e[--n]]=p.event.mouseHooks;var v=p.event.special.mousewheel={version:"3.1.12",setup:function(){if(this.addEventListener)for(var e=t.length;e;)this.addEventListener(t[--e],i,!1);else this.onmousewheel=i;p.data(this,"mousewheel-line-height",v.getLineHeight(this)),p.data(this,"mousewheel-page-height",v.getPageHeight(this))},teardown:function(){if(this.removeEventListener)for(var e=t.length;e;)this.removeEventListener(t[--e],i,!1);else this.onmousewheel=null;p.removeData(this,"mousewheel-line-height"),p.removeData(this,"mousewheel-page-height")},getLineHeight:function(e){var t=p(e),n=t["offsetParent"in p.fn?"offsetParent":"parent"]();return n.length||(n=p("body")),parseInt(n.css("fontSize"),10)||parseInt(t.css("fontSize"),10)||16},getPageHeight:function(e){return p(e).height()},settings:{adjustOldDeltas:!0,normalizeOffset:!0}};function i(e){var t,n=e||window.event,i=g.call(arguments,1),o=0,r=0,s=0,a=0,l=0;if((e=p.event.fix(n)).type="mousewheel","detail"in n&&(s=-1*n.detail),"wheelDelta"in n&&(s=n.wheelDelta),"wheelDeltaY"in n&&(s=n.wheelDeltaY),"wheelDeltaX"in n&&(r=-1*n.wheelDeltaX),"axis"in n&&n.axis===n.HORIZONTAL_AXIS&&(r=-1*s,s=0),o=0===s?r:s,"deltaY"in n&&(o=s=-1*n.deltaY),"deltaX"in n&&(r=n.deltaX,0===s&&(o=-1*r)),0!==s||0!==r){if(1===n.deltaMode){var c=p.data(this,"mousewheel-line-height");o*=c,s*=c,r*=c}else if(2===n.deltaMode){var u=p.data(this,"mousewheel-page-height");o*=u,s*=u,r*=u}if(t=Math.max(Math.abs(s),Math.abs(r)),(!f||t<f)&&y(n,f=t)&&(f/=40),y(n,t)&&(o/=40,r/=40,s/=40),o=Math[1<=o?"floor":"ceil"](o/f),r=Math[1<=r?"floor":"ceil"](r/f),s=Math[1<=s?"floor":"ceil"](s/f),v.settings.normalizeOffset&&this.getBoundingClientRect){var d=this.getBoundingClientRect();a=e.clientX-d.left,l=e.clientY-d.top}return e.deltaX=r,e.deltaY=s,e.deltaFactor=f,e.offsetX=a,e.offsetY=l,e.deltaMode=0,i.unshift(e,o,r,s),h&&clearTimeout(h),h=setTimeout(m,200),(p.event.dispatch||p.event.handle).apply(this,i)}}function m(){f=null}function y(e,t){return v.settings.adjustOldDeltas&&"mousewheel"===e.type&&t%120==0}p.fn.extend({mousewheel:function(e){return e?this.bind("mousewheel",e):this.trigger("mousewheel")},unmousewheel:function(e){return this.unbind("mousewheel",e)}})},"function"==typeof e.define&&e.define.amd?e.define("jquery-mousewheel",["jquery"],l):"object"==typeof exports?module.exports=l:l(d),e.define("jquery.select2",["jquery","jquery-mousewheel","./select2/core","./select2/defaults","./select2/utils"],function(o,e,r,t,s){if(null==o.fn.select2){var a=["open","close","destroy"];o.fn.select2=function(t){if("object"==typeof(t=t||{}))return this.each(function(){var e=o.extend(!0,{},t);new r(o(this),e)}),this;if("string"!=typeof t)throw new Error("Invalid arguments for Select2: "+t);var n,i=Array.prototype.slice.call(arguments,1);return this.each(function(){var e=s.GetData(this,"select2");null==e&&window.console&&console.error&&console.error("The select2('"+t+"') method was called on an element that is not using Select2."),n=e[t].apply(e,i)}),-1<o.inArray(t,a)?this:n}}return null==o.fn.select2.defaults&&(o.fn.select2.defaults=t),r}),{define:e.define,require:e.require}}(),t=e.require("jquery.select2");return d.fn.select2.amd=e,t}),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(c){"use strict";var o,s=window.Slick||{};o=0,(s=function(e,t){var n,i=this;i.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:c(e),appendDots:c(e),arrows:!0,asNavFor:null,prevArrow:'<button type="button" data-role="none" class="slick-prev" aria-label="Previous" tabindex="0" role="button">Previous</button>',nextArrow:'<button type="button" data-role="none" class="slick-next" aria-label="Next" tabindex="0" role="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return c('<button type="button" data-role="none" role="button" tabindex="0" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},i.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},c.extend(i,i.initials),i.activeBreakpoint=null,i.animType=null,i.animProp=null,i.breakpoints=[],i.breakpointSettings=[],i.cssTransitions=!1,i.focussed=!1,i.interrupted=!1,i.hidden="hidden",i.paused=!0,i.positionProp=null,i.respondTo=null,i.rowCount=1,i.shouldClick=!0,i.$slider=c(e),i.$slidesCache=null,i.transformType=null,i.transitionType=null,i.visibilityChange="visibilitychange",i.windowWidth=0,i.windowTimer=null,n=c(e).data("slick")||{},i.options=c.extend({},i.defaults,t,n),i.currentSlide=i.options.initialSlide,i.originalSettings=i.options,void 0!==document.mozHidden?(i.hidden="mozHidden",i.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(i.hidden="webkitHidden",i.visibilityChange="webkitvisibilitychange"),i.autoPlay=c.proxy(i.autoPlay,i),i.autoPlayClear=c.proxy(i.autoPlayClear,i),i.autoPlayIterator=c.proxy(i.autoPlayIterator,i),i.changeSlide=c.proxy(i.changeSlide,i),i.clickHandler=c.proxy(i.clickHandler,i),i.selectHandler=c.proxy(i.selectHandler,i),i.setPosition=c.proxy(i.setPosition,i),i.swipeHandler=c.proxy(i.swipeHandler,i),i.dragHandler=c.proxy(i.dragHandler,i),i.keyHandler=c.proxy(i.keyHandler,i),i.instanceUid=o++,i.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,i.registerBreakpoints(),i.init(!0)}).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},s.prototype.addSlide=s.prototype.slickAdd=function(e,t,n){var i=this;if("boolean"==typeof t)n=t,t=null;else if(t<0||t>=i.slideCount)return!1;i.unload(),"number"==typeof t?0===t&&0===i.$slides.length?c(e).appendTo(i.$slideTrack):n?c(e).insertBefore(i.$slides.eq(t)):c(e).insertAfter(i.$slides.eq(t)):!0===n?c(e).prependTo(i.$slideTrack):c(e).appendTo(i.$slideTrack),i.$slides=i.$slideTrack.children(this.options.slide),i.$slideTrack.children(this.options.slide).detach(),i.$slideTrack.append(i.$slides),i.$slides.each(function(e,t){c(t).attr("data-slick-index",e)}),i.$slidesCache=i.$slides,i.reinit()},s.prototype.animateHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.animate({height:t},e.options.speed)}},s.prototype.animateSlide=function(e,t){var n={},i=this;i.animateHeight(),!0===i.options.rtl&&!1===i.options.vertical&&(e=-e),!1===i.transformsEnabled?!1===i.options.vertical?i.$slideTrack.animate({left:e},i.options.speed,i.options.easing,t):i.$slideTrack.animate({top:e},i.options.speed,i.options.easing,t):!1===i.cssTransitions?(!0===i.options.rtl&&(i.currentLeft=-i.currentLeft),c({animStart:i.currentLeft}).animate({animStart:e},{duration:i.options.speed,easing:i.options.easing,step:function(e){e=Math.ceil(e),!1===i.options.vertical?n[i.animType]="translate("+e+"px, 0px)":n[i.animType]="translate(0px,"+e+"px)",i.$slideTrack.css(n)},complete:function(){t&&t.call()}})):(i.applyTransition(),e=Math.ceil(e),!1===i.options.vertical?n[i.animType]="translate3d("+e+"px, 0px, 0px)":n[i.animType]="translate3d(0px,"+e+"px, 0px)",i.$slideTrack.css(n),t&&setTimeout(function(){i.disableTransition(),t.call()},i.options.speed))},s.prototype.getNavTarget=function(){var e=this.options.asNavFor;return e&&null!==e&&(e=c(e).not(this.$slider)),e},s.prototype.asNavFor=function(t){var e=this.getNavTarget();null!==e&&"object"==typeof e&&e.each(function(){var e=c(this).slick("getSlick");e.unslicked||e.slideHandler(t,!0)})},s.prototype.applyTransition=function(e){var t=this,n={};!1===t.options.fade?n[t.transitionType]=t.transformType+" "+t.options.speed+"ms "+t.options.cssEase:n[t.transitionType]="opacity "+t.options.speed+"ms "+t.options.cssEase,!1===t.options.fade?t.$slideTrack.css(n):t.$slides.eq(e).css(n)},s.prototype.autoPlay=function(){var e=this;e.autoPlayClear(),e.slideCount>e.options.slidesToShow&&(e.autoPlayTimer=setInterval(e.autoPlayIterator,e.options.autoplaySpeed))},s.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},s.prototype.autoPlayIterator=function(){var e=this,t=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(!1===e.options.infinite&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(t=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1==0&&(e.direction=1))),e.slideHandler(t))},s.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=c(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=c(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},s.prototype.buildDots=function(){var e,t,n=this;if(!0===n.options.dots&&n.slideCount>n.options.slidesToShow){for(n.$slider.addClass("slick-dotted"),t=c("<ul />").addClass(n.options.dotsClass),e=0;e<=n.getDotCount();e+=1)t.append(c("<li />").append(n.options.customPaging.call(this,n,e)));n.$dots=t.appendTo(n.options.appendDots),n.$dots.find("li").first().addClass("slick-active").attr("aria-hidden","false")}},s.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){c(t).attr("data-slick-index",e).data("originalStyling",c(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?c('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div aria-live="polite" class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),(!0===e.options.centerMode||!0===e.options.swipeToSlide)&&(e.options.slidesToScroll=1),c("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},s.prototype.buildRows=function(){var e,t,n,i,o,r,s,a=this;if(i=document.createDocumentFragment(),r=a.$slider.children(),1<a.options.rows){for(s=a.options.slidesPerRow*a.options.rows,o=Math.ceil(r.length/s),e=0;e<o;e++){var l=document.createElement("div");for(t=0;t<a.options.rows;t++){var c=document.createElement("div");for(n=0;n<a.options.slidesPerRow;n++){var u=e*s+(t*a.options.slidesPerRow+n);r.get(u)&&c.appendChild(r.get(u))}l.appendChild(c)}i.appendChild(l)}a.$slider.empty().append(i),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},s.prototype.checkResponsive=function(e,t){var n,i,o,r=this,s=!1,a=r.$slider.width(),l=window.innerWidth||c(window).width();if("window"===r.respondTo?o=l:"slider"===r.respondTo?o=a:"min"===r.respondTo&&(o=Math.min(l,a)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){for(n in i=null,r.breakpoints)r.breakpoints.hasOwnProperty(n)&&(!1===r.originalSettings.mobileFirst?o<r.breakpoints[n]&&(i=r.breakpoints[n]):o>r.breakpoints[n]&&(i=r.breakpoints[n]));null!==i?null!==r.activeBreakpoint?(i!==r.activeBreakpoint||t)&&(r.activeBreakpoint=i,"unslick"===r.breakpointSettings[i]?r.unslick(i):(r.options=c.extend({},r.originalSettings,r.breakpointSettings[i]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),s=i):(r.activeBreakpoint=i,"unslick"===r.breakpointSettings[i]?r.unslick(i):(r.options=c.extend({},r.originalSettings,r.breakpointSettings[i]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),s=i):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e),s=i),e||!1===s||r.$slider.trigger("breakpoint",[r,s])}},s.prototype.changeSlide=function(e,t){var n,i,o=this,r=c(e.currentTarget);switch(r.is("a")&&e.preventDefault(),r.is("li")||(r=r.closest("li")),n=o.slideCount%o.options.slidesToScroll!=0?0:(o.slideCount-o.currentSlide)%o.options.slidesToScroll,e.data.message){case"previous":i=0===n?o.options.slidesToScroll:o.options.slidesToShow-n,o.slideCount>o.options.slidesToShow&&o.slideHandler(o.currentSlide-i,!1,t);break;case"next":i=0===n?o.options.slidesToScroll:n,o.slideCount>o.options.slidesToShow&&o.slideHandler(o.currentSlide+i,!1,t);break;case"index":var s=0===e.data.index?0:e.data.index||r.index()*o.options.slidesToScroll;o.slideHandler(o.checkNavigable(s),!1,t),r.children().trigger("focus");break;default:return}},s.prototype.checkNavigable=function(e){var t,n;if(n=0,e>(t=this.getNavigableIndexes())[t.length-1])e=t[t.length-1];else for(var i in t){if(e<t[i]){e=n;break}n=t[i]}return e},s.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&c("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",c.proxy(e.interrupt,e,!0)).off("mouseleave.slick",c.proxy(e.interrupt,e,!1)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide)),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),c(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&c(e.$slideTrack).children().off("click.slick",e.selectHandler),c(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),c(window).off("resize.slick.slick-"+e.instanceUid,e.resize),c("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),c(window).off("load.slick.slick-"+e.instanceUid,e.setPosition),c(document).off("ready.slick.slick-"+e.instanceUid,e.setPosition)},s.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",c.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",c.proxy(e.interrupt,e,!1))},s.prototype.cleanUpRows=function(){var e;1<this.options.rows&&((e=this.$slides.children().children()).removeAttr("style"),this.$slider.empty().append(e))},s.prototype.clickHandler=function(e){!1===this.shouldClick&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},s.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),c(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){c(this).attr("style",c(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},s.prototype.disableTransition=function(e){var t={};t[this.transitionType]="",!1===this.options.fade?this.$slideTrack.css(t):this.$slides.eq(e).css(t)},s.prototype.fadeSlide=function(e,t){var n=this;!1===n.cssTransitions?(n.$slides.eq(e).css({zIndex:n.options.zIndex}),n.$slides.eq(e).animate({opacity:1},n.options.speed,n.options.easing,t)):(n.applyTransition(e),n.$slides.eq(e).css({opacity:1,zIndex:n.options.zIndex}),t&&setTimeout(function(){n.disableTransition(e),t.call()},n.options.speed))},s.prototype.fadeSlideOut=function(e){var t=this;!1===t.cssTransitions?t.$slides.eq(e).animate({opacity:0,zIndex:t.options.zIndex-2},t.options.speed,t.options.easing):(t.applyTransition(e),t.$slides.eq(e).css({opacity:0,zIndex:t.options.zIndex-2}))},s.prototype.filterSlides=s.prototype.slickFilter=function(e){var t=this;null!==e&&(t.$slidesCache=t.$slides,t.unload(),t.$slideTrack.children(this.options.slide).detach(),t.$slidesCache.filter(e).appendTo(t.$slideTrack),t.reinit())},s.prototype.focusHandler=function(){var n=this;n.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*:not(.slick-arrow)",function(e){e.stopImmediatePropagation();var t=c(this);setTimeout(function(){n.options.pauseOnFocus&&(n.focussed=t.is(":focus"),n.autoPlay())},0)})},s.prototype.getCurrent=s.prototype.slickCurrentSlide=function(){return this.currentSlide},s.prototype.getDotCount=function(){var e=this,t=0,n=0,i=0;if(!0===e.options.infinite)for(;t<e.slideCount;)++i,t=n+e.options.slidesToScroll,n+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(!0===e.options.centerMode)i=e.slideCount;else if(e.options.asNavFor)for(;t<e.slideCount;)++i,t=n+e.options.slidesToScroll,n+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else i=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return i-1},s.prototype.getLeft=function(e){var t,n,i,o=this,r=0;return o.slideOffset=0,n=o.$slides.first().outerHeight(!0),!0===o.options.infinite?(o.slideCount>o.options.slidesToShow&&(o.slideOffset=o.slideWidth*o.options.slidesToShow*-1,r=n*o.options.slidesToShow*-1),o.slideCount%o.options.slidesToScroll!=0&&e+o.options.slidesToScroll>o.slideCount&&o.slideCount>o.options.slidesToShow&&(r=e>o.slideCount?(o.slideOffset=(o.options.slidesToShow-(e-o.slideCount))*o.slideWidth*-1,(o.options.slidesToShow-(e-o.slideCount))*n*-1):(o.slideOffset=o.slideCount%o.options.slidesToScroll*o.slideWidth*-1,o.slideCount%o.options.slidesToScroll*n*-1))):e+o.options.slidesToShow>o.slideCount&&(o.slideOffset=(e+o.options.slidesToShow-o.slideCount)*o.slideWidth,r=(e+o.options.slidesToShow-o.slideCount)*n),o.slideCount<=o.options.slidesToShow&&(r=o.slideOffset=0),!0===o.options.centerMode&&!0===o.options.infinite?o.slideOffset+=o.slideWidth*Math.floor(o.options.slidesToShow/2)-o.slideWidth:!0===o.options.centerMode&&(o.slideOffset=0,o.slideOffset+=o.slideWidth*Math.floor(o.options.slidesToShow/2)),t=!1===o.options.vertical?e*o.slideWidth*-1+o.slideOffset:e*n*-1+r,!0===o.options.variableWidth&&(i=o.slideCount<=o.options.slidesToShow||!1===o.options.infinite?o.$slideTrack.children(".slick-slide").eq(e):o.$slideTrack.children(".slick-slide").eq(e+o.options.slidesToShow),t=!0===o.options.rtl?i[0]?-1*(o.$slideTrack.width()-i[0].offsetLeft-i.width()):0:i[0]?-1*i[0].offsetLeft:0,!0===o.options.centerMode&&(i=o.slideCount<=o.options.slidesToShow||!1===o.options.infinite?o.$slideTrack.children(".slick-slide").eq(e):o.$slideTrack.children(".slick-slide").eq(e+o.options.slidesToShow+1),t=!0===o.options.rtl?i[0]?-1*(o.$slideTrack.width()-i[0].offsetLeft-i.width()):0:i[0]?-1*i[0].offsetLeft:0,t+=(o.$list.width()-i.outerWidth())/2)),t},s.prototype.getOption=s.prototype.slickGetOption=function(e){return this.options[e]},s.prototype.getNavigableIndexes=function(){var e,t=this,n=0,i=0,o=[];for(e=!1===t.options.infinite?t.slideCount:(n=-1*t.options.slidesToScroll,i=-1*t.options.slidesToScroll,2*t.slideCount);n<e;)o.push(n),n=i+t.options.slidesToScroll,i+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;return o},s.prototype.getSlick=function(){return this},s.prototype.getSlideCount=function(){var n,i,o=this;return i=!0===o.options.centerMode?o.slideWidth*Math.floor(o.options.slidesToShow/2):0,!0===o.options.swipeToSlide?(o.$slideTrack.find(".slick-slide").each(function(e,t){return t.offsetLeft-i+c(t).outerWidth()/2>-1*o.swipeLeft?(n=t,!1):void 0}),Math.abs(c(n).attr("data-slick-index")-o.currentSlide)||1):o.options.slidesToScroll},s.prototype.goTo=s.prototype.slickGoTo=function(e,t){this.changeSlide({data:{message:"index",index:parseInt(e)}},t)},s.prototype.init=function(e){var t=this;c(t.$slider).hasClass("slick-initialized")||(c(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},s.prototype.initADA=function(){var t=this;t.$slides.add(t.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),t.$slideTrack.attr("role","listbox"),t.$slides.not(t.$slideTrack.find(".slick-cloned")).each(function(e){c(this).attr({role:"option","aria-describedby":"slick-slide"+t.instanceUid+e})}),null!==t.$dots&&t.$dots.attr("role","tablist").find("li").each(function(e){c(this).attr({role:"presentation","aria-selected":"false","aria-controls":"navigation"+t.instanceUid+e,id:"slick-slide"+t.instanceUid+e})}).first().attr("aria-selected","true").end().find("button").attr("role","button").end().closest("div").attr("role","toolbar"),t.activateADA()},s.prototype.initArrowEvents=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide))},s.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&c("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&c("li",e.$dots).on("mouseenter.slick",c.proxy(e.interrupt,e,!0)).on("mouseleave.slick",c.proxy(e.interrupt,e,!1))},s.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",c.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",c.proxy(e.interrupt,e,!1)))},s.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),c(document).on(e.visibilityChange,c.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&c(e.$slideTrack).children().on("click.slick",e.selectHandler),c(window).on("orientationchange.slick.slick-"+e.instanceUid,c.proxy(e.orientationChange,e)),c(window).on("resize.slick.slick-"+e.instanceUid,c.proxy(e.resize,e)),c("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),c(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),c(document).on("ready.slick.slick-"+e.instanceUid,e.setPosition)},s.prototype.initUI=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.show(),e.$nextArrow.show()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.show()},s.prototype.keyHandler=function(e){var t=this;e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&!0===t.options.accessibility?t.changeSlide({data:{message:!0===t.options.rtl?"next":"previous"}}):39===e.keyCode&&!0===t.options.accessibility&&t.changeSlide({data:{message:!0===t.options.rtl?"previous":"next"}}))},s.prototype.lazyLoad=function(){function e(e){c("img[data-lazy]",e).each(function(){var e=c(this),t=c(this).attr("data-lazy"),n=document.createElement("img");n.onload=function(){e.animate({opacity:0},100,function(){e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy").removeClass("slick-loading")}),i.$slider.trigger("lazyLoaded",[i,e,t])})},n.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),i.$slider.trigger("lazyLoadError",[i,e,t])},n.src=t})}var t,n,i=this;!0===i.options.centerMode?n=!0===i.options.infinite?(t=i.currentSlide+(i.options.slidesToShow/2+1))+i.options.slidesToShow+2:(t=Math.max(0,i.currentSlide-(i.options.slidesToShow/2+1)),i.options.slidesToShow/2+1+2+i.currentSlide):(t=i.options.infinite?i.options.slidesToShow+i.currentSlide:i.currentSlide,n=Math.ceil(t+i.options.slidesToShow),!0===i.options.fade&&(0<t&&t--,n<=i.slideCount&&n++)),e(i.$slider.find(".slick-slide").slice(t,n)),i.slideCount<=i.options.slidesToShow?e(i.$slider.find(".slick-slide")):i.currentSlide>=i.slideCount-i.options.slidesToShow?e(i.$slider.find(".slick-cloned").slice(0,i.options.slidesToShow)):0===i.currentSlide&&e(i.$slider.find(".slick-cloned").slice(-1*i.options.slidesToShow))},s.prototype.loadSlider=function(){var e=this;e.setPosition(),e.$slideTrack.css({opacity:1}),e.$slider.removeClass("slick-loading"),e.initUI(),"progressive"===e.options.lazyLoad&&e.progressiveLazyLoad()},s.prototype.next=s.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},s.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},s.prototype.pause=s.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},s.prototype.play=s.prototype.slickPlay=function(){var e=this;e.autoPlay(),e.options.autoplay=!0,e.paused=!1,e.focussed=!1,e.interrupted=!1},s.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&t.initADA())},s.prototype.prev=s.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},s.prototype.preventDefault=function(e){e.preventDefault()},s.prototype.progressiveLazyLoad=function(e){e=e||1;var t,n,i,o=this,r=c("img[data-lazy]",o.$slider);r.length?(t=r.first(),n=t.attr("data-lazy"),(i=document.createElement("img")).onload=function(){t.attr("src",n).removeAttr("data-lazy").removeClass("slick-loading"),!0===o.options.adaptiveHeight&&o.setPosition(),o.$slider.trigger("lazyLoaded",[o,t,n]),o.progressiveLazyLoad()},i.onerror=function(){e<3?setTimeout(function(){o.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),o.$slider.trigger("lazyLoadError",[o,t,n]),o.progressiveLazyLoad())},i.src=n):o.$slider.trigger("allImagesLoaded",[o])},s.prototype.refresh=function(e){var t,n,i=this;n=i.slideCount-i.options.slidesToShow,!i.options.infinite&&i.currentSlide>n&&(i.currentSlide=n),i.slideCount<=i.options.slidesToShow&&(i.currentSlide=0),t=i.currentSlide,i.destroy(!0),c.extend(i,i.initials,{currentSlide:t}),i.init(),e||i.changeSlide({data:{message:"index",index:t}},!1)},s.prototype.registerBreakpoints=function(){var e,t,n,i=this,o=i.options.responsive||null;if("array"===c.type(o)&&o.length){for(e in i.respondTo=i.options.respondTo||"window",o)if(n=i.breakpoints.length-1,t=o[e].breakpoint,o.hasOwnProperty(e)){for(;0<=n;)i.breakpoints[n]&&i.breakpoints[n]===t&&i.breakpoints.splice(n,1),n--;i.breakpoints.push(t),i.breakpointSettings[t]=o[e].settings}i.breakpoints.sort(function(e,t){return i.options.mobileFirst?e-t:t-e})}},s.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&c(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},s.prototype.resize=function(){var e=this;c(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=c(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},s.prototype.removeSlide=s.prototype.slickRemove=function(e,t,n){var i=this;return e="boolean"==typeof e?!0===(t=e)?0:i.slideCount-1:!0===t?--e:e,!(i.slideCount<1||e<0||e>i.slideCount-1)&&(i.unload(),!0===n?i.$slideTrack.children().remove():i.$slideTrack.children(this.options.slide).eq(e).remove(),i.$slides=i.$slideTrack.children(this.options.slide),i.$slideTrack.children(this.options.slide).detach(),i.$slideTrack.append(i.$slides),i.$slidesCache=i.$slides,void i.reinit())},s.prototype.setCSS=function(e){var t,n,i=this,o={};!0===i.options.rtl&&(e=-e),t="left"==i.positionProp?Math.ceil(e)+"px":"0px",n="top"==i.positionProp?Math.ceil(e)+"px":"0px",o[i.positionProp]=e,!1===i.transformsEnabled||(!(o={})===i.cssTransitions?o[i.animType]="translate("+t+", "+n+")":o[i.animType]="translate3d("+t+", "+n+", 0px)"),i.$slideTrack.css(o)},s.prototype.setDimensions=function(){var e=this;!1===e.options.vertical?!0===e.options.centerMode&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),!0===e.options.centerMode&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),!1===e.options.vertical&&!1===e.options.variableWidth?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):!0===e.options.variableWidth?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var t=e.$slides.first().outerWidth(!0)-e.$slides.first().width();!1===e.options.variableWidth&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-t)},s.prototype.setFade=function(){var n,i=this;i.$slides.each(function(e,t){n=i.slideWidth*e*-1,!0===i.options.rtl?c(t).css({position:"relative",right:n,top:0,zIndex:i.options.zIndex-2,opacity:0}):c(t).css({position:"relative",left:n,top:0,zIndex:i.options.zIndex-2,opacity:0})}),i.$slides.eq(i.currentSlide).css({zIndex:i.options.zIndex-1,opacity:1})},s.prototype.setHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.css("height",t)}},s.prototype.setOption=s.prototype.slickSetOption=function(){var e,t,n,i,o,r=this,s=!1;if("object"===c.type(arguments[0])?(n=arguments[0],s=arguments[1],o="multiple"):"string"===c.type(arguments[0])&&(n=arguments[0],i=arguments[1],s=arguments[2],"responsive"===arguments[0]&&"array"===c.type(arguments[1])?o="responsive":void 0!==arguments[1]&&(o="single")),"single"===o)r.options[n]=i;else if("multiple"===o)c.each(n,function(e,t){r.options[e]=t});else if("responsive"===o)for(t in i)if("array"!==c.type(r.options.responsive))r.options.responsive=[i[t]];else{for(e=r.options.responsive.length-1;0<=e;)r.options.responsive[e].breakpoint===i[t].breakpoint&&r.options.responsive.splice(e,1),e--;r.options.responsive.push(i[t])}s&&(r.unload(),r.reinit())},s.prototype.setPosition=function(){var e=this;e.setDimensions(),e.setHeight(),!1===e.options.fade?e.setCSS(e.getLeft(e.currentSlide)):e.setFade(),e.$slider.trigger("setPosition",[e])},s.prototype.setProps=function(){var e=this,t=document.body.style;e.positionProp=!0===e.options.vertical?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),(void 0!==t.WebkitTransition||void 0!==t.MozTransition||void 0!==t.msTransition)&&!0===e.options.useCSS&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),void 0!==t.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===t.perspectiveProperty&&void 0===t.MozPerspective&&(e.animType=!1)),void 0!==t.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===t.msTransform&&(e.animType=!1)),void 0!==t.transform&&!1!==e.animType&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&!1!==e.animType},s.prototype.setSlideClasses=function(e){var t,n,i,o,r=this;n=r.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),r.$slides.eq(e).addClass("slick-current"),!0===r.options.centerMode?(t=Math.floor(r.options.slidesToShow/2),!0===r.options.infinite&&(t<=e&&e<=r.slideCount-1-t?r.$slides.slice(e-t,e+t+1).addClass("slick-active").attr("aria-hidden","false"):(i=r.options.slidesToShow+e,n.slice(i-t+1,i+t+2).addClass("slick-active").attr("aria-hidden","false")),0===e?n.eq(n.length-1-r.options.slidesToShow).addClass("slick-center"):e===r.slideCount-1&&n.eq(r.options.slidesToShow).addClass("slick-center")),r.$slides.eq(e).addClass("slick-center")):0<=e&&e<=r.slideCount-r.options.slidesToShow?r.$slides.slice(e,e+r.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):n.length<=r.options.slidesToShow?n.addClass("slick-active").attr("aria-hidden","false"):(o=r.slideCount%r.options.slidesToShow,i=!0===r.options.infinite?r.options.slidesToShow+e:e,r.options.slidesToShow==r.options.slidesToScroll&&r.slideCount-e<r.options.slidesToShow?n.slice(i-(r.options.slidesToShow-o),i+o).addClass("slick-active").attr("aria-hidden","false"):n.slice(i,i+r.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false")),"ondemand"===r.options.lazyLoad&&r.lazyLoad()},s.prototype.setupInfinite=function(){var e,t,n,i=this;if(!0===i.options.fade&&(i.options.centerMode=!1),!0===i.options.infinite&&!1===i.options.fade&&(t=null,i.slideCount>i.options.slidesToShow)){for(n=!0===i.options.centerMode?i.options.slidesToShow+1:i.options.slidesToShow,e=i.slideCount;e>i.slideCount-n;e-=1)t=e-1,c(i.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-i.slideCount).prependTo(i.$slideTrack).addClass("slick-cloned");for(e=0;e<n;e+=1)t=e,c(i.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+i.slideCount).appendTo(i.$slideTrack).addClass("slick-cloned");i.$slideTrack.find(".slick-cloned").find("[id]").each(function(){c(this).attr("id","")})}},s.prototype.interrupt=function(e){e||this.autoPlay(),this.interrupted=e},s.prototype.selectHandler=function(e){var t=this,n=c(e.target).is(".slick-slide")?c(e.target):c(e.target).parents(".slick-slide"),i=parseInt(n.attr("data-slick-index"));return i||(i=0),t.slideCount<=t.options.slidesToShow?(t.setSlideClasses(i),void t.asNavFor(i)):void t.slideHandler(i)},s.prototype.slideHandler=function(e,t,n){var i,o,r,s,a,l=null,c=this;return t=t||!1,!0===c.animating&&!0===c.options.waitForAnimate||!0===c.options.fade&&c.currentSlide===e||c.slideCount<=c.options.slidesToShow?void 0:(!1===t&&c.asNavFor(e),i=e,l=c.getLeft(i),s=c.getLeft(c.currentSlide),c.currentLeft=null===c.swipeLeft?s:c.swipeLeft,!1===c.options.infinite&&!1===c.options.centerMode&&(e<0||e>c.getDotCount()*c.options.slidesToScroll)?void(!1===c.options.fade&&(i=c.currentSlide,!0!==n?c.animateSlide(s,function(){c.postSlide(i)}):c.postSlide(i))):!1===c.options.infinite&&!0===c.options.centerMode&&(e<0||e>c.slideCount-c.options.slidesToScroll)?void(!1===c.options.fade&&(i=c.currentSlide,!0!==n?c.animateSlide(s,function(){c.postSlide(i)}):c.postSlide(i))):(c.options.autoplay&&clearInterval(c.autoPlayTimer),o=i<0?c.slideCount%c.options.slidesToScroll!=0?c.slideCount-c.slideCount%c.options.slidesToScroll:c.slideCount+i:i>=c.slideCount?c.slideCount%c.options.slidesToScroll!=0?0:i-c.slideCount:i,c.animating=!0,c.$slider.trigger("beforeChange",[c,c.currentSlide,o]),r=c.currentSlide,c.currentSlide=o,c.setSlideClasses(c.currentSlide),c.options.asNavFor&&((a=(a=c.getNavTarget()).slick("getSlick")).slideCount<=a.options.slidesToShow&&a.setSlideClasses(c.currentSlide)),c.updateDots(),c.updateArrows(),!0===c.options.fade?(!0!==n?(c.fadeSlideOut(r),c.fadeSlide(o,function(){c.postSlide(o)})):c.postSlide(o),void c.animateHeight()):void(!0!==n?c.animateSlide(l,function(){c.postSlide(o)}):c.postSlide(o))))},s.prototype.startLoad=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},s.prototype.swipeDirection=function(){var e,t,n,i,o=this;return e=o.touchObject.startX-o.touchObject.curX,t=o.touchObject.startY-o.touchObject.curY,n=Math.atan2(t,e),(i=Math.round(180*n/Math.PI))<0&&(i=360-Math.abs(i)),i<=45&&0<=i?!1===o.options.rtl?"left":"right":i<=360&&315<=i?!1===o.options.rtl?"left":"right":135<=i&&i<=225?!1===o.options.rtl?"right":"left":!0===o.options.verticalSwiping?35<=i&&i<=135?"down":"up":"vertical"},s.prototype.swipeEnd=function(e){var t,n,i=this;if(i.dragging=!1,i.interrupted=!1,i.shouldClick=!(10<i.touchObject.swipeLength),void 0===i.touchObject.curX)return!1;if(!0===i.touchObject.edgeHit&&i.$slider.trigger("edge",[i,i.swipeDirection()]),i.touchObject.swipeLength>=i.touchObject.minSwipe){switch(n=i.swipeDirection()){case"left":case"down":t=i.options.swipeToSlide?i.checkNavigable(i.currentSlide+i.getSlideCount()):i.currentSlide+i.getSlideCount(),i.currentDirection=0;break;case"right":case"up":t=i.options.swipeToSlide?i.checkNavigable(i.currentSlide-i.getSlideCount()):i.currentSlide-i.getSlideCount(),i.currentDirection=1}"vertical"!=n&&(i.slideHandler(t),i.touchObject={},i.$slider.trigger("swipe",[i,n]))}else i.touchObject.startX!==i.touchObject.curX&&(i.slideHandler(i.currentSlide),i.touchObject={})},s.prototype.swipeHandler=function(e){var t=this;if(!(!1===t.options.swipe||"ontouchend"in document&&!1===t.options.swipe||!1===t.options.draggable&&-1!==e.type.indexOf("mouse")))switch(t.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,t.touchObject.minSwipe=t.listWidth/t.options.touchThreshold,!0===t.options.verticalSwiping&&(t.touchObject.minSwipe=t.listHeight/t.options.touchThreshold),e.data.action){case"start":t.swipeStart(e);break;case"move":t.swipeMove(e);break;case"end":t.swipeEnd(e)}},s.prototype.swipeMove=function(e){var t,n,i,o,r,s=this;return r=void 0!==e.originalEvent?e.originalEvent.touches:null,!(!s.dragging||r&&1!==r.length)&&(t=s.getLeft(s.currentSlide),s.touchObject.curX=void 0!==r?r[0].pageX:e.clientX,s.touchObject.curY=void 0!==r?r[0].pageY:e.clientY,s.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(s.touchObject.curX-s.touchObject.startX,2))),!0===s.options.verticalSwiping&&(s.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(s.touchObject.curY-s.touchObject.startY,2)))),"vertical"!==(n=s.swipeDirection())?(void 0!==e.originalEvent&&4<s.touchObject.swipeLength&&e.preventDefault(),o=(!1===s.options.rtl?1:-1)*(s.touchObject.curX>s.touchObject.startX?1:-1),!0===s.options.verticalSwiping&&(o=s.touchObject.curY>s.touchObject.startY?1:-1),i=s.touchObject.swipeLength,(s.touchObject.edgeHit=!1)===s.options.infinite&&(0===s.currentSlide&&"right"===n||s.currentSlide>=s.getDotCount()&&"left"===n)&&(i=s.touchObject.swipeLength*s.options.edgeFriction,s.touchObject.edgeHit=!0),!1===s.options.vertical?s.swipeLeft=t+i*o:s.swipeLeft=t+i*(s.$list.height()/s.listWidth)*o,!0===s.options.verticalSwiping&&(s.swipeLeft=t+i*o),!0!==s.options.fade&&!1!==s.options.touchMove&&(!0===s.animating?(s.swipeLeft=null,!1):void s.setCSS(s.swipeLeft))):void 0)},s.prototype.swipeStart=function(e){var t,n=this;return n.interrupted=!0,1!==n.touchObject.fingerCount||n.slideCount<=n.options.slidesToShow?!(n.touchObject={}):(void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(t=e.originalEvent.touches[0]),n.touchObject.startX=n.touchObject.curX=void 0!==t?t.pageX:e.clientX,n.touchObject.startY=n.touchObject.curY=void 0!==t?t.pageY:e.clientY,void(n.dragging=!0))},s.prototype.unfilterSlides=s.prototype.slickUnfilter=function(){var e=this;null!==e.$slidesCache&&(e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.appendTo(e.$slideTrack),e.reinit())},s.prototype.unload=function(){var e=this;c(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},s.prototype.unslick=function(e){this.$slider.trigger("unslick",[this,e]),this.destroy()},s.prototype.updateArrows=function(){var e=this;Math.floor(e.options.slidesToShow/2),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&!e.options.infinite&&(e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===e.currentSlide?(e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-e.options.slidesToShow&&!1===e.options.centerMode?(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-1&&!0===e.options.centerMode&&(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},s.prototype.updateDots=function(){var e=this;null!==e.$dots&&(e.$dots.find("li").removeClass("slick-active").attr("aria-hidden","true"),e.$dots.find("li").eq(Math.floor(e.currentSlide/e.options.slidesToScroll)).addClass("slick-active").attr("aria-hidden","false"))},s.prototype.visibility=function(){this.options.autoplay&&(document[this.hidden]?this.interrupted=!0:this.interrupted=!1)},c.fn.slick=function(){var e,t,n=this,i=arguments[0],o=Array.prototype.slice.call(arguments,1),r=n.length;for(e=0;e<r;e++)if("object"==typeof i||void 0===i?n[e].slick=new s(n[e],i):t=n[e].slick[i].apply(n[e].slick,o),void 0!==t)return t;return n}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS0zLjYuMy5qcyIsInNlbGVjdDIuZnVsbC5taW4uanMiLCJzbGljay5taW4uanMiXSwibmFtZXMiOlsiZ2xvYmFsIiwiZmFjdG9yeSIsIm1vZHVsZSIsImV4cG9ydHMiLCJkb2N1bWVudCIsInciLCJFcnJvciIsIndpbmRvdyIsInRoaXMiLCJub0dsb2JhbCIsImFyciIsImdldFByb3RvIiwiT2JqZWN0IiwiZ2V0UHJvdG90eXBlT2YiLCJzbGljZSIsImZsYXQiLCJhcnJheSIsImNhbGwiLCJjb25jYXQiLCJhcHBseSIsInB1c2giLCJpbmRleE9mIiwiY2xhc3MydHlwZSIsInRvU3RyaW5nIiwiaGFzT3duIiwiaGFzT3duUHJvcGVydHkiLCJmblRvU3RyaW5nIiwiT2JqZWN0RnVuY3Rpb25TdHJpbmciLCJzdXBwb3J0IiwiaXNGdW5jdGlvbiIsIm9iaiIsIm5vZGVUeXBlIiwiaXRlbSIsImlzV2luZG93IiwicHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyIsInR5cGUiLCJzcmMiLCJub25jZSIsIm5vTW9kdWxlIiwiRE9NRXZhbCIsImNvZGUiLCJub2RlIiwiZG9jIiwiaSIsInZhbCIsInNjcmlwdCIsImNyZWF0ZUVsZW1lbnQiLCJ0ZXh0IiwiZ2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwiaGVhZCIsImFwcGVuZENoaWxkIiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwidG9UeXBlIiwidmVyc2lvbiIsImpRdWVyeSIsInNlbGVjdG9yIiwiY29udGV4dCIsImZuIiwiaW5pdCIsImlzQXJyYXlMaWtlIiwibGVuZ3RoIiwicHJvdG90eXBlIiwianF1ZXJ5IiwiY29uc3RydWN0b3IiLCJ0b0FycmF5IiwiZ2V0IiwibnVtIiwicHVzaFN0YWNrIiwiZWxlbXMiLCJyZXQiLCJtZXJnZSIsInByZXZPYmplY3QiLCJlYWNoIiwiY2FsbGJhY2siLCJtYXAiLCJlbGVtIiwiYXJndW1lbnRzIiwiZmlyc3QiLCJlcSIsImxhc3QiLCJldmVuIiwiZ3JlcCIsIl9lbGVtIiwib2RkIiwibGVuIiwiaiIsImVuZCIsInNvcnQiLCJzcGxpY2UiLCJleHRlbmQiLCJvcHRpb25zIiwibmFtZSIsImNvcHkiLCJjb3B5SXNBcnJheSIsImNsb25lIiwidGFyZ2V0IiwiZGVlcCIsImlzUGxhaW5PYmplY3QiLCJBcnJheSIsImlzQXJyYXkiLCJ1bmRlZmluZWQiLCJleHBhbmRvIiwiTWF0aCIsInJhbmRvbSIsInJlcGxhY2UiLCJpc1JlYWR5IiwiZXJyb3IiLCJtc2ciLCJub29wIiwicHJvdG8iLCJDdG9yIiwiaXNFbXB0eU9iamVjdCIsImdsb2JhbEV2YWwiLCJtYWtlQXJyYXkiLCJyZXN1bHRzIiwiaW5BcnJheSIsInNlY29uZCIsImludmVydCIsIm1hdGNoZXMiLCJjYWxsYmFja0V4cGVjdCIsImFyZyIsInZhbHVlIiwiZ3VpZCIsIlN5bWJvbCIsIml0ZXJhdG9yIiwic3BsaXQiLCJfaSIsInRvTG93ZXJDYXNlIiwiU2l6emxlIiwiRXhwciIsImdldFRleHQiLCJpc1hNTCIsInRva2VuaXplIiwiY29tcGlsZSIsInNlbGVjdCIsIm91dGVybW9zdENvbnRleHQiLCJzb3J0SW5wdXQiLCJoYXNEdXBsaWNhdGUiLCJzZXREb2N1bWVudCIsImRvY0VsZW0iLCJkb2N1bWVudElzSFRNTCIsInJidWdneVFTQSIsInJidWdneU1hdGNoZXMiLCJjb250YWlucyIsIkRhdGUiLCJwcmVmZXJyZWREb2MiLCJkaXJydW5zIiwiZG9uZSIsImNsYXNzQ2FjaGUiLCJjcmVhdGVDYWNoZSIsInRva2VuQ2FjaGUiLCJjb21waWxlckNhY2hlIiwibm9ubmF0aXZlU2VsZWN0b3JDYWNoZSIsInNvcnRPcmRlciIsImEiLCJiIiwicG9wIiwicHVzaE5hdGl2ZSIsImxpc3QiLCJib29sZWFucyIsIndoaXRlc3BhY2UiLCJpZGVudGlmaWVyIiwiYXR0cmlidXRlcyIsInBzZXVkb3MiLCJyd2hpdGVzcGFjZSIsIlJlZ0V4cCIsInJ0cmltIiwicmNvbW1hIiwicmNvbWJpbmF0b3JzIiwicmRlc2NlbmQiLCJycHNldWRvIiwicmlkZW50aWZpZXIiLCJtYXRjaEV4cHIiLCJJRCIsIkNMQVNTIiwiVEFHIiwiQVRUUiIsIlBTRVVETyIsIkNISUxEIiwiYm9vbCIsIm5lZWRzQ29udGV4dCIsInJodG1sIiwicmlucHV0cyIsInJoZWFkZXIiLCJybmF0aXZlIiwicnF1aWNrRXhwciIsInJzaWJsaW5nIiwicnVuZXNjYXBlIiwiZnVuZXNjYXBlIiwiZXNjYXBlIiwibm9uSGV4IiwiaGlnaCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsInJjc3Nlc2NhcGUiLCJmY3NzZXNjYXBlIiwiY2giLCJhc0NvZGVQb2ludCIsImNoYXJDb2RlQXQiLCJ1bmxvYWRIYW5kbGVyIiwiaW5EaXNhYmxlZEZpZWxkc2V0IiwiYWRkQ29tYmluYXRvciIsImRpc2FibGVkIiwibm9kZU5hbWUiLCJkaXIiLCJuZXh0IiwiY2hpbGROb2RlcyIsImUiLCJlbHMiLCJzZWVkIiwibSIsIm5pZCIsIm1hdGNoIiwiZ3JvdXBzIiwibmV3U2VsZWN0b3IiLCJuZXdDb250ZXh0Iiwib3duZXJEb2N1bWVudCIsImV4ZWMiLCJnZXRFbGVtZW50QnlJZCIsImlkIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwicXNhIiwidGVzdCIsInRlc3RDb250ZXh0Iiwic2NvcGUiLCJ0b1NlbGVjdG9yIiwiam9pbiIsImNzc1N1cHBvcnRzU2VsZWN0b3IiLCJDU1MiLCJzdXBwb3J0cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJxc2FFcnJvciIsInJlbW92ZUF0dHJpYnV0ZSIsImtleXMiLCJjYWNoZSIsImtleSIsImNhY2hlTGVuZ3RoIiwic2hpZnQiLCJtYXJrRnVuY3Rpb24iLCJhc3NlcnQiLCJlbCIsImFkZEhhbmRsZSIsImF0dHJzIiwiaGFuZGxlciIsImF0dHJIYW5kbGUiLCJzaWJsaW5nQ2hlY2siLCJjdXIiLCJkaWZmIiwic291cmNlSW5kZXgiLCJuZXh0U2libGluZyIsImNyZWF0ZUlucHV0UHNldWRvIiwiY3JlYXRlQnV0dG9uUHNldWRvIiwiY3JlYXRlRGlzYWJsZWRQc2V1ZG8iLCJpc0Rpc2FibGVkIiwiY3JlYXRlUG9zaXRpb25hbFBzZXVkbyIsImFyZ3VtZW50IiwibWF0Y2hJbmRleGVzIiwibmFtZXNwYWNlIiwibmFtZXNwYWNlVVJJIiwiZG9jdW1lbnRFbGVtZW50IiwiaGFzQ29tcGFyZSIsInN1YldpbmRvdyIsImRlZmF1bHRWaWV3IiwidG9wIiwiYWRkRXZlbnRMaXN0ZW5lciIsImF0dGFjaEV2ZW50IiwiY2xhc3NOYW1lIiwiY3JlYXRlQ29tbWVudCIsImdldEJ5SWQiLCJnZXRFbGVtZW50c0J5TmFtZSIsImZpbHRlciIsImF0dHJJZCIsImZpbmQiLCJnZXRBdHRyaWJ1dGVOb2RlIiwidGFnIiwidG1wIiwiaW5wdXQiLCJpbm5lckhUTUwiLCJtYXRjaGVzU2VsZWN0b3IiLCJ3ZWJraXRNYXRjaGVzU2VsZWN0b3IiLCJtb3pNYXRjaGVzU2VsZWN0b3IiLCJvTWF0Y2hlc1NlbGVjdG9yIiwibXNNYXRjaGVzU2VsZWN0b3IiLCJkaXNjb25uZWN0ZWRNYXRjaCIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiYWRvd24iLCJidXAiLCJjb21wYXJlIiwic29ydERldGFjaGVkIiwiYXVwIiwiYXAiLCJicCIsInVuc2hpZnQiLCJleHByIiwiZWxlbWVudHMiLCJhdHRyIiwic3BlY2lmaWVkIiwic2VsIiwidW5pcXVlU29ydCIsImR1cGxpY2F0ZXMiLCJkZXRlY3REdXBsaWNhdGVzIiwic29ydFN0YWJsZSIsInRleHRDb250ZW50IiwiZmlyc3RDaGlsZCIsIm5vZGVWYWx1ZSIsInNlbGVjdG9ycyIsImNyZWF0ZVBzZXVkbyIsInJlbGF0aXZlIiwiPiIsIiAiLCIrIiwifiIsInByZUZpbHRlciIsImV4Y2VzcyIsInVucXVvdGVkIiwibm9kZU5hbWVTZWxlY3RvciIsInBhdHRlcm4iLCJvcGVyYXRvciIsImNoZWNrIiwicmVzdWx0Iiwid2hhdCIsIl9hcmd1bWVudCIsInNpbXBsZSIsImZvcndhcmQiLCJvZlR5cGUiLCJfY29udGV4dCIsInhtbCIsInVuaXF1ZUNhY2hlIiwib3V0ZXJDYWNoZSIsIm5vZGVJbmRleCIsInN0YXJ0IiwicGFyZW50IiwidXNlQ2FjaGUiLCJsYXN0Q2hpbGQiLCJ1bmlxdWVJRCIsInBzZXVkbyIsImFyZ3MiLCJzZXRGaWx0ZXJzIiwiaWR4IiwibWF0Y2hlZCIsIm5vdCIsIm1hdGNoZXIiLCJ1bm1hdGNoZWQiLCJoYXMiLCJsYW5nIiwiZWxlbUxhbmciLCJoYXNoIiwibG9jYXRpb24iLCJyb290IiwiZm9jdXMiLCJhY3RpdmVFbGVtZW50IiwiaGFzRm9jdXMiLCJocmVmIiwidGFiSW5kZXgiLCJlbmFibGVkIiwiY2hlY2tlZCIsInNlbGVjdGVkIiwic2VsZWN0ZWRJbmRleCIsImVtcHR5IiwiaGVhZGVyIiwiYnV0dG9uIiwiX21hdGNoSW5kZXhlcyIsImx0IiwiZ3QiLCJyYWRpbyIsImNoZWNrYm94IiwiZmlsZSIsInBhc3N3b3JkIiwiaW1hZ2UiLCJzdWJtaXQiLCJyZXNldCIsInRva2VucyIsImNvbWJpbmF0b3IiLCJiYXNlIiwic2tpcCIsImNoZWNrTm9uRWxlbWVudHMiLCJkb25lTmFtZSIsIm9sZENhY2hlIiwibmV3Q2FjaGUiLCJlbGVtZW50TWF0Y2hlciIsIm1hdGNoZXJzIiwiY29uZGVuc2UiLCJuZXdVbm1hdGNoZWQiLCJtYXBwZWQiLCJzZXRNYXRjaGVyIiwicG9zdEZpbHRlciIsInBvc3RGaW5kZXIiLCJwb3N0U2VsZWN0b3IiLCJ0ZW1wIiwicHJlTWFwIiwicG9zdE1hcCIsInByZWV4aXN0aW5nIiwiY29udGV4dHMiLCJtdWx0aXBsZUNvbnRleHRzIiwibWF0Y2hlckluIiwibWF0Y2hlck91dCIsIm1hdGNoZXJGcm9tVG9rZW5zIiwiY2hlY2tDb250ZXh0IiwibGVhZGluZ1JlbGF0aXZlIiwiaW1wbGljaXRSZWxhdGl2ZSIsIm1hdGNoQ29udGV4dCIsIm1hdGNoQW55Q29udGV4dCIsImZpbHRlcnMiLCJwYXJzZU9ubHkiLCJzb0ZhciIsInByZUZpbHRlcnMiLCJjYWNoZWQiLCJlbGVtZW50TWF0Y2hlcnMiLCJzZXRNYXRjaGVycyIsImJ5U2V0IiwiYnlFbGVtZW50Iiwic3VwZXJNYXRjaGVyIiwib3V0ZXJtb3N0IiwibWF0Y2hlZENvdW50Iiwic2V0TWF0Y2hlZCIsImNvbnRleHRCYWNrdXAiLCJkaXJydW5zVW5pcXVlIiwidG9rZW4iLCJjb21waWxlZCIsIl9uYW1lIiwiZGVmYXVsdFZhbHVlIiwidW5pcXVlIiwiaXNYTUxEb2MiLCJlc2NhcGVTZWxlY3RvciIsInVudGlsIiwidHJ1bmNhdGUiLCJpcyIsInNpYmxpbmdzIiwibiIsInJuZWVkc0NvbnRleHQiLCJyc2luZ2xlVGFnIiwid2lubm93IiwicXVhbGlmaWVyIiwic2VsZiIsInJvb3RqUXVlcnkiLCJyZWFkeSIsInBhcnNlSFRNTCIsInJwYXJlbnRzcHJldiIsImd1YXJhbnRlZWRVbmlxdWUiLCJjaGlsZHJlbiIsImNvbnRlbnRzIiwicHJldiIsInNpYmxpbmciLCJ0YXJnZXRzIiwibCIsImNsb3Nlc3QiLCJpbmRleCIsInByZXZBbGwiLCJhZGQiLCJhZGRCYWNrIiwicGFyZW50cyIsInBhcmVudHNVbnRpbCIsIm5leHRBbGwiLCJuZXh0VW50aWwiLCJwcmV2VW50aWwiLCJjb250ZW50RG9jdW1lbnQiLCJjb250ZW50IiwicmV2ZXJzZSIsInJub3RodG1sd2hpdGUiLCJJZGVudGl0eSIsInYiLCJUaHJvd2VyIiwiZXgiLCJhZG9wdFZhbHVlIiwicmVzb2x2ZSIsInJlamVjdCIsIm5vVmFsdWUiLCJtZXRob2QiLCJwcm9taXNlIiwiZmFpbCIsInRoZW4iLCJDYWxsYmFja3MiLCJvYmplY3QiLCJfIiwiZmxhZyIsImZpcmluZyIsIm1lbW9yeSIsImZpcmVkIiwibG9ja2VkIiwicXVldWUiLCJmaXJpbmdJbmRleCIsImZpcmUiLCJvbmNlIiwic3RvcE9uRmFsc2UiLCJyZW1vdmUiLCJkaXNhYmxlIiwibG9jayIsImZpcmVXaXRoIiwiRGVmZXJyZWQiLCJmdW5jIiwidHVwbGVzIiwic3RhdGUiLCJhbHdheXMiLCJkZWZlcnJlZCIsImNhdGNoIiwicGlwZSIsImZucyIsIm5ld0RlZmVyIiwidHVwbGUiLCJyZXR1cm5lZCIsInByb2dyZXNzIiwibm90aWZ5Iiwib25GdWxmaWxsZWQiLCJvblJlamVjdGVkIiwib25Qcm9ncmVzcyIsIm1heERlcHRoIiwiZGVwdGgiLCJzcGVjaWFsIiwidGhhdCIsIm1pZ2h0VGhyb3ciLCJUeXBlRXJyb3IiLCJub3RpZnlXaXRoIiwicmVzb2x2ZVdpdGgiLCJwcm9jZXNzIiwiZXhjZXB0aW9uSG9vayIsInN0YWNrVHJhY2UiLCJyZWplY3RXaXRoIiwiZ2V0U3RhY2tIb29rIiwic2V0VGltZW91dCIsInN0YXRlU3RyaW5nIiwid2hlbiIsInNpbmdsZVZhbHVlIiwicmVtYWluaW5nIiwicmVzb2x2ZUNvbnRleHRzIiwicmVzb2x2ZVZhbHVlcyIsInByaW1hcnkiLCJ1cGRhdGVGdW5jIiwicmVycm9yTmFtZXMiLCJzdGFjayIsImNvbnNvbGUiLCJ3YXJuIiwibWVzc2FnZSIsInJlYWR5RXhjZXB0aW9uIiwicmVhZHlMaXN0IiwiY29tcGxldGVkIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlYWR5V2FpdCIsIndhaXQiLCJyZWFkeVN0YXRlIiwiZG9TY3JvbGwiLCJhY2Nlc3MiLCJjaGFpbmFibGUiLCJlbXB0eUdldCIsInJhdyIsImJ1bGsiLCJfa2V5Iiwicm1zUHJlZml4IiwicmRhc2hBbHBoYSIsImZjYW1lbENhc2UiLCJfYWxsIiwibGV0dGVyIiwidG9VcHBlckNhc2UiLCJjYW1lbENhc2UiLCJzdHJpbmciLCJhY2NlcHREYXRhIiwib3duZXIiLCJEYXRhIiwidWlkIiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJzZXQiLCJkYXRhIiwicHJvcCIsImhhc0RhdGEiLCJkYXRhUHJpdiIsImRhdGFVc2VyIiwicmJyYWNlIiwicm11bHRpRGFzaCIsImRhdGFBdHRyIiwiSlNPTiIsInBhcnNlIiwicmVtb3ZlRGF0YSIsIl9kYXRhIiwiX3JlbW92ZURhdGEiLCJkZXF1ZXVlIiwic3RhcnRMZW5ndGgiLCJob29rcyIsIl9xdWV1ZUhvb2tzIiwic3RvcCIsInNldHRlciIsImNsZWFyUXVldWUiLCJjb3VudCIsImRlZmVyIiwicG51bSIsInNvdXJjZSIsInJjc3NOdW0iLCJjc3NFeHBhbmQiLCJpc0F0dGFjaGVkIiwiY29tcG9zZWQiLCJnZXRSb290Tm9kZSIsImlzSGlkZGVuV2l0aGluVHJlZSIsInN0eWxlIiwiZGlzcGxheSIsImNzcyIsImFkanVzdENTUyIsInZhbHVlUGFydHMiLCJ0d2VlbiIsImFkanVzdGVkIiwic2NhbGUiLCJtYXhJdGVyYXRpb25zIiwiY3VycmVudFZhbHVlIiwiaW5pdGlhbCIsInVuaXQiLCJjc3NOdW1iZXIiLCJpbml0aWFsSW5Vbml0IiwiZGVmYXVsdERpc3BsYXlNYXAiLCJzaG93SGlkZSIsInNob3ciLCJ2YWx1ZXMiLCJib2R5IiwiaGlkZSIsInRvZ2dsZSIsImRpdiIsInJjaGVja2FibGVUeXBlIiwicnRhZ05hbWUiLCJyc2NyaXB0VHlwZSIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJjaGVja0Nsb25lIiwiY2xvbmVOb2RlIiwibm9DbG9uZUNoZWNrZWQiLCJvcHRpb24iLCJ3cmFwTWFwIiwidGhlYWQiLCJjb2wiLCJ0ciIsInRkIiwiX2RlZmF1bHQiLCJnZXRBbGwiLCJzZXRHbG9iYWxFdmFsIiwicmVmRWxlbWVudHMiLCJ0Ym9keSIsInRmb290IiwiY29sZ3JvdXAiLCJjYXB0aW9uIiwidGgiLCJvcHRncm91cCIsImJ1aWxkRnJhZ21lbnQiLCJzY3JpcHRzIiwic2VsZWN0aW9uIiwiaWdub3JlZCIsIndyYXAiLCJhdHRhY2hlZCIsImZyYWdtZW50Iiwibm9kZXMiLCJodG1sUHJlZmlsdGVyIiwiY3JlYXRlVGV4dE5vZGUiLCJydHlwZW5hbWVzcGFjZSIsInJldHVyblRydWUiLCJyZXR1cm5GYWxzZSIsImV4cGVjdFN5bmMiLCJlcnIiLCJzYWZlQWN0aXZlRWxlbWVudCIsIm9uIiwidHlwZXMiLCJvbmUiLCJvcmlnRm4iLCJldmVudCIsIm9mZiIsImxldmVyYWdlTmF0aXZlIiwibm90QXN5bmMiLCJzYXZlZCIsImlzVHJpZ2dlciIsImRlbGVnYXRlVHlwZSIsInN0b3BQcm9wYWdhdGlvbiIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsInByZXZlbnREZWZhdWx0IiwidHJpZ2dlciIsIkV2ZW50IiwiaGFuZGxlT2JqSW4iLCJldmVudEhhbmRsZSIsImV2ZW50cyIsInQiLCJoYW5kbGVPYmoiLCJoYW5kbGVycyIsIm5hbWVzcGFjZXMiLCJvcmlnVHlwZSIsImVsZW1EYXRhIiwiY3JlYXRlIiwiaGFuZGxlIiwidHJpZ2dlcmVkIiwiZGlzcGF0Y2giLCJiaW5kVHlwZSIsImRlbGVnYXRlQ291bnQiLCJzZXR1cCIsIm1hcHBlZFR5cGVzIiwib3JpZ0NvdW50IiwidGVhcmRvd24iLCJyZW1vdmVFdmVudCIsIm5hdGl2ZUV2ZW50IiwiaGFuZGxlclF1ZXVlIiwiZml4IiwiZGVsZWdhdGVUYXJnZXQiLCJwcmVEaXNwYXRjaCIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiY3VycmVudFRhcmdldCIsImlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkIiwicm5hbWVzcGFjZSIsInBvc3REaXNwYXRjaCIsIm1hdGNoZWRIYW5kbGVycyIsIm1hdGNoZWRTZWxlY3RvcnMiLCJhZGRQcm9wIiwiaG9vayIsImVudW1lcmFibGUiLCJvcmlnaW5hbEV2ZW50Iiwid3JpdGFibGUiLCJsb2FkIiwibm9CdWJibGUiLCJjbGljayIsImJlZm9yZXVubG9hZCIsInJldHVyblZhbHVlIiwicHJvcHMiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmVsYXRlZFRhcmdldCIsInRpbWVTdGFtcCIsIm5vdyIsImlzU2ltdWxhdGVkIiwiYWx0S2V5IiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJjaGFuZ2VkVG91Y2hlcyIsImN0cmxLZXkiLCJkZXRhaWwiLCJldmVudFBoYXNlIiwibWV0YUtleSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsInZpZXciLCJjaGFyIiwiY2hhckNvZGUiLCJrZXlDb2RlIiwiYnV0dG9ucyIsImNsaWVudFgiLCJjbGllbnRZIiwib2Zmc2V0WCIsIm9mZnNldFkiLCJwb2ludGVySWQiLCJwb2ludGVyVHlwZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwidGFyZ2V0VG91Y2hlcyIsInRvRWxlbWVudCIsInRvdWNoZXMiLCJ3aGljaCIsImJsdXIiLCJtb3VzZWVudGVyIiwibW91c2VsZWF2ZSIsInBvaW50ZXJlbnRlciIsInBvaW50ZXJsZWF2ZSIsIm9yaWciLCJyZWxhdGVkIiwicm5vSW5uZXJodG1sIiwicmNoZWNrZWQiLCJyY2xlYW5TY3JpcHQiLCJtYW5pcHVsYXRpb25UYXJnZXQiLCJkaXNhYmxlU2NyaXB0IiwicmVzdG9yZVNjcmlwdCIsImNsb25lQ29weUV2ZW50IiwiZGVzdCIsInVkYXRhT2xkIiwidWRhdGFDdXIiLCJkb21NYW5pcCIsImNvbGxlY3Rpb24iLCJoYXNTY3JpcHRzIiwiaU5vQ2xvbmUiLCJ2YWx1ZUlzRnVuY3Rpb24iLCJodG1sIiwiX2V2YWxVcmwiLCJrZWVwRGF0YSIsImNsZWFuRGF0YSIsImRhdGFBbmRFdmVudHMiLCJkZWVwRGF0YUFuZEV2ZW50cyIsInNyY0VsZW1lbnRzIiwiZGVzdEVsZW1lbnRzIiwiaW5QYWdlIiwiZGV0YWNoIiwiYXBwZW5kIiwicHJlcGVuZCIsImluc2VydEJlZm9yZSIsImJlZm9yZSIsImFmdGVyIiwicmVwbGFjZVdpdGgiLCJyZXBsYWNlQ2hpbGQiLCJhcHBlbmRUbyIsInByZXBlbmRUbyIsImluc2VydEFmdGVyIiwicmVwbGFjZUFsbCIsIm9yaWdpbmFsIiwiaW5zZXJ0Iiwicm51bW5vbnB4IiwicmN1c3RvbVByb3AiLCJnZXRTdHlsZXMiLCJvcGVuZXIiLCJnZXRDb21wdXRlZFN0eWxlIiwic3dhcCIsIm9sZCIsInJib3hTdHlsZSIsInJ0cmltQ1NTIiwiY3VyQ1NTIiwiY29tcHV0ZWQiLCJ3aWR0aCIsIm1pbldpZHRoIiwibWF4V2lkdGgiLCJpc0N1c3RvbVByb3AiLCJnZXRQcm9wZXJ0eVZhbHVlIiwicGl4ZWxCb3hTdHlsZXMiLCJhZGRHZXRIb29rSWYiLCJjb25kaXRpb25GbiIsImhvb2tGbiIsImNvbXB1dGVTdHlsZVRlc3RzIiwiY29udGFpbmVyIiwiY3NzVGV4dCIsImRpdlN0eWxlIiwicGl4ZWxQb3NpdGlvblZhbCIsInJlbGlhYmxlTWFyZ2luTGVmdFZhbCIsInJvdW5kUGl4ZWxNZWFzdXJlcyIsIm1hcmdpbkxlZnQiLCJyaWdodCIsInBpeGVsQm94U3R5bGVzVmFsIiwiYm94U2l6aW5nUmVsaWFibGVWYWwiLCJwb3NpdGlvbiIsInNjcm9sbGJveFNpemVWYWwiLCJvZmZzZXRXaWR0aCIsIm1lYXN1cmUiLCJyb3VuZCIsInBhcnNlRmxvYXQiLCJyZWxpYWJsZVRyRGltZW5zaW9uc1ZhbCIsImJhY2tncm91bmRDbGlwIiwiY2xlYXJDbG9uZVN0eWxlIiwiYm94U2l6aW5nUmVsaWFibGUiLCJwaXhlbFBvc2l0aW9uIiwicmVsaWFibGVNYXJnaW5MZWZ0Iiwic2Nyb2xsYm94U2l6ZSIsInJlbGlhYmxlVHJEaW1lbnNpb25zIiwidGFibGUiLCJ0ckNoaWxkIiwidHJTdHlsZSIsImhlaWdodCIsInBhcnNlSW50IiwiYm9yZGVyVG9wV2lkdGgiLCJib3JkZXJCb3R0b21XaWR0aCIsIm9mZnNldEhlaWdodCIsImNzc1ByZWZpeGVzIiwiZW1wdHlTdHlsZSIsInZlbmRvclByb3BzIiwiZmluYWxQcm9wTmFtZSIsImZpbmFsIiwiY3NzUHJvcHMiLCJjYXBOYW1lIiwidmVuZG9yUHJvcE5hbWUiLCJyZGlzcGxheXN3YXAiLCJjc3NTaG93IiwidmlzaWJpbGl0eSIsImNzc05vcm1hbFRyYW5zZm9ybSIsImxldHRlclNwYWNpbmciLCJmb250V2VpZ2h0Iiwic2V0UG9zaXRpdmVOdW1iZXIiLCJzdWJ0cmFjdCIsIm1heCIsImJveE1vZGVsQWRqdXN0bWVudCIsImRpbWVuc2lvbiIsImJveCIsImlzQm9yZGVyQm94Iiwic3R5bGVzIiwiY29tcHV0ZWRWYWwiLCJleHRyYSIsImRlbHRhIiwiY2VpbCIsImdldFdpZHRoT3JIZWlnaHQiLCJ2YWx1ZUlzQm9yZGVyQm94Iiwib2Zmc2V0UHJvcCIsImdldENsaWVudFJlY3RzIiwiVHdlZW4iLCJlYXNpbmciLCJjc3NIb29rcyIsIm9wYWNpdHkiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImNvbHVtbkNvdW50IiwiZmlsbE9wYWNpdHkiLCJmbGV4R3JvdyIsImZsZXhTaHJpbmsiLCJncmlkQXJlYSIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblN0YXJ0IiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3RhcnQiLCJsaW5lSGVpZ2h0Iiwib3JkZXIiLCJvcnBoYW5zIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsIm9yaWdOYW1lIiwic2V0UHJvcGVydHkiLCJpc0Zpbml0ZSIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInNjcm9sbGJveFNpemVCdWdneSIsImxlZnQiLCJtYXJnaW4iLCJwYWRkaW5nIiwiYm9yZGVyIiwicHJlZml4Iiwic3VmZml4IiwiZXhwYW5kIiwiZXhwYW5kZWQiLCJwYXJ0cyIsInByb3BIb29rcyIsInJ1biIsInBlcmNlbnQiLCJlYXNlZCIsImR1cmF0aW9uIiwicG9zIiwic3RlcCIsImZ4Iiwic2Nyb2xsVG9wIiwic2Nyb2xsTGVmdCIsImxpbmVhciIsInAiLCJzd2luZyIsImNvcyIsIlBJIiwiZnhOb3ciLCJpblByb2dyZXNzIiwib3B0IiwicmZ4dHlwZXMiLCJycnVuIiwic2NoZWR1bGUiLCJoaWRkZW4iLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJpbnRlcnZhbCIsInRpY2siLCJjcmVhdGVGeE5vdyIsImdlbkZ4IiwiaW5jbHVkZVdpZHRoIiwiY3JlYXRlVHdlZW4iLCJhbmltYXRpb24iLCJBbmltYXRpb24iLCJ0d2VlbmVycyIsInByb3BlcnRpZXMiLCJzdG9wcGVkIiwicHJlZmlsdGVycyIsImN1cnJlbnRUaW1lIiwic3RhcnRUaW1lIiwidHdlZW5zIiwib3B0cyIsInNwZWNpYWxFYXNpbmciLCJvcmlnaW5hbFByb3BlcnRpZXMiLCJvcmlnaW5hbE9wdGlvbnMiLCJnb3RvRW5kIiwicHJvcEZpbHRlciIsImJpbmQiLCJjb21wbGV0ZSIsInRpbWVyIiwiYW5pbSIsIioiLCJ0d2VlbmVyIiwib2xkZmlyZSIsInByb3BUd2VlbiIsInJlc3RvcmVEaXNwbGF5IiwiaXNCb3giLCJkYXRhU2hvdyIsInVucXVldWVkIiwib3ZlcmZsb3ciLCJvdmVyZmxvd1giLCJvdmVyZmxvd1kiLCJwcmVmaWx0ZXIiLCJzcGVlZCIsInNwZWVkcyIsImZhZGVUbyIsInRvIiwiYW5pbWF0ZSIsIm9wdGFsbCIsImRvQW5pbWF0aW9uIiwiZmluaXNoIiwic3RvcFF1ZXVlIiwidGltZXJzIiwiY3NzRm4iLCJzbGlkZURvd24iLCJzbGlkZVVwIiwic2xpZGVUb2dnbGUiLCJmYWRlSW4iLCJmYWRlT3V0IiwiZmFkZVRvZ2dsZSIsInNsb3ciLCJmYXN0IiwiZGVsYXkiLCJ0aW1lIiwidGltZW91dCIsImNsZWFyVGltZW91dCIsImNoZWNrT24iLCJvcHRTZWxlY3RlZCIsInJhZGlvVmFsdWUiLCJib29sSG9vayIsInJlbW92ZUF0dHIiLCJuVHlwZSIsImF0dHJIb29rcyIsImF0dHJOYW1lcyIsImdldHRlciIsImxvd2VyY2FzZU5hbWUiLCJyZm9jdXNhYmxlIiwicmNsaWNrYWJsZSIsInN0cmlwQW5kQ29sbGFwc2UiLCJnZXRDbGFzcyIsImNsYXNzZXNUb0FycmF5IiwicmVtb3ZlUHJvcCIsInByb3BGaXgiLCJ0YWJpbmRleCIsImZvciIsImNsYXNzIiwiYWRkQ2xhc3MiLCJjbGFzc05hbWVzIiwiY3VyVmFsdWUiLCJmaW5hbFZhbHVlIiwicmVtb3ZlQ2xhc3MiLCJ0b2dnbGVDbGFzcyIsInN0YXRlVmFsIiwiaXNWYWxpZFZhbHVlIiwiaGFzQ2xhc3MiLCJycmV0dXJuIiwidmFsSG9va3MiLCJvcHRpb25TZXQiLCJmb2N1c2luIiwicmZvY3VzTW9ycGgiLCJzdG9wUHJvcGFnYXRpb25DYWxsYmFjayIsIm9ubHlIYW5kbGVycyIsImJ1YmJsZVR5cGUiLCJvbnR5cGUiLCJsYXN0RWxlbWVudCIsImV2ZW50UGF0aCIsInBhcmVudFdpbmRvdyIsInNpbXVsYXRlIiwidHJpZ2dlckhhbmRsZXIiLCJhdHRhY2hlcyIsInJxdWVyeSIsInBhcnNlWE1MIiwicGFyc2VyRXJyb3JFbGVtIiwiRE9NUGFyc2VyIiwicGFyc2VGcm9tU3RyaW5nIiwicmJyYWNrZXQiLCJyQ1JMRiIsInJzdWJtaXR0ZXJUeXBlcyIsInJzdWJtaXR0YWJsZSIsImJ1aWxkUGFyYW1zIiwidHJhZGl0aW9uYWwiLCJwYXJhbSIsInMiLCJ2YWx1ZU9yRnVuY3Rpb24iLCJlbmNvZGVVUklDb21wb25lbnQiLCJzZXJpYWxpemUiLCJzZXJpYWxpemVBcnJheSIsInIyMCIsInJoYXNoIiwicmFudGlDYWNoZSIsInJoZWFkZXJzIiwicm5vQ29udGVudCIsInJwcm90b2NvbCIsInRyYW5zcG9ydHMiLCJhbGxUeXBlcyIsIm9yaWdpbkFuY2hvciIsImFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyIsInN0cnVjdHVyZSIsImRhdGFUeXBlRXhwcmVzc2lvbiIsImRhdGFUeXBlIiwiZGF0YVR5cGVzIiwiaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMiLCJqcVhIUiIsImluc3BlY3RlZCIsInNlZWtpbmdUcmFuc3BvcnQiLCJpbnNwZWN0IiwicHJlZmlsdGVyT3JGYWN0b3J5IiwiZGF0YVR5cGVPclRyYW5zcG9ydCIsImFqYXhFeHRlbmQiLCJmbGF0T3B0aW9ucyIsImFqYXhTZXR0aW5ncyIsImFjdGl2ZSIsImxhc3RNb2RpZmllZCIsImV0YWciLCJ1cmwiLCJpc0xvY2FsIiwicHJvdG9jb2wiLCJwcm9jZXNzRGF0YSIsImFzeW5jIiwiY29udGVudFR5cGUiLCJhY2NlcHRzIiwianNvbiIsInJlc3BvbnNlRmllbGRzIiwiY29udmVydGVycyIsIiogdGV4dCIsInRleHQgaHRtbCIsInRleHQganNvbiIsInRleHQgeG1sIiwiYWpheFNldHVwIiwic2V0dGluZ3MiLCJhamF4UHJlZmlsdGVyIiwiYWpheFRyYW5zcG9ydCIsImFqYXgiLCJ0cmFuc3BvcnQiLCJjYWNoZVVSTCIsInJlc3BvbnNlSGVhZGVyc1N0cmluZyIsInJlc3BvbnNlSGVhZGVycyIsInRpbWVvdXRUaW1lciIsInVybEFuY2hvciIsImZpcmVHbG9iYWxzIiwidW5jYWNoZWQiLCJjYWxsYmFja0NvbnRleHQiLCJnbG9iYWxFdmVudENvbnRleHQiLCJjb21wbGV0ZURlZmVycmVkIiwic3RhdHVzQ29kZSIsInJlcXVlc3RIZWFkZXJzIiwicmVxdWVzdEhlYWRlcnNOYW1lcyIsInN0ckFib3J0IiwiZ2V0UmVzcG9uc2VIZWFkZXIiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJzZXRSZXF1ZXN0SGVhZGVyIiwib3ZlcnJpZGVNaW1lVHlwZSIsIm1pbWVUeXBlIiwic3RhdHVzIiwiYWJvcnQiLCJzdGF0dXNUZXh0IiwiZmluYWxUZXh0IiwiY3Jvc3NEb21haW4iLCJob3N0IiwiaGFzQ29udGVudCIsImlmTW9kaWZpZWQiLCJoZWFkZXJzIiwiYmVmb3JlU2VuZCIsInN1Y2Nlc3MiLCJzZW5kIiwibmF0aXZlU3RhdHVzVGV4dCIsInJlc3BvbnNlcyIsImlzU3VjY2VzcyIsInJlc3BvbnNlIiwibW9kaWZpZWQiLCJjdCIsImZpbmFsRGF0YVR5cGUiLCJmaXJzdERhdGFUeXBlIiwiYWpheEhhbmRsZVJlc3BvbnNlcyIsImNvbnYyIiwiY3VycmVudCIsImNvbnYiLCJkYXRhRmlsdGVyIiwidGhyb3dzIiwiYWpheENvbnZlcnQiLCJnZXRKU09OIiwiZ2V0U2NyaXB0IiwidGV4dCBzY3JpcHQiLCJ3cmFwQWxsIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJ3cmFwSW5uZXIiLCJodG1sSXNGdW5jdGlvbiIsInVud3JhcCIsInZpc2libGUiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsInhoclN1Y2Nlc3NTdGF0dXMiLCIwIiwiMTIyMyIsInhoclN1cHBvcnRlZCIsImNvcnMiLCJlcnJvckNhbGxiYWNrIiwib3BlbiIsInVzZXJuYW1lIiwieGhyRmllbGRzIiwib25sb2FkIiwib25lcnJvciIsIm9uYWJvcnQiLCJvbnRpbWVvdXQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVRleHQiLCJiaW5hcnkiLCJzY3JpcHRBdHRycyIsImNoYXJzZXQiLCJzY3JpcHRDaGFyc2V0IiwiZXZ0Iiwib2xkQ2FsbGJhY2tzIiwicmpzb25wIiwianNvbnAiLCJqc29ucENhbGxiYWNrIiwib3JpZ2luYWxTZXR0aW5ncyIsImNhbGxiYWNrTmFtZSIsIm92ZXJ3cml0dGVuIiwicmVzcG9uc2VDb250YWluZXIiLCJqc29uUHJvcCIsImNyZWF0ZUhUTUxEb2N1bWVudCIsImltcGxlbWVudGF0aW9uIiwia2VlcFNjcmlwdHMiLCJwYXJzZWQiLCJwYXJhbXMiLCJhbmltYXRlZCIsIm9mZnNldCIsInNldE9mZnNldCIsImN1clBvc2l0aW9uIiwiY3VyTGVmdCIsImN1ckNTU1RvcCIsImN1clRvcCIsImN1ck9mZnNldCIsImN1ckNTU0xlZnQiLCJjdXJFbGVtIiwidXNpbmciLCJyZWN0Iiwid2luIiwicGFnZVlPZmZzZXQiLCJwYWdlWE9mZnNldCIsIm9mZnNldFBhcmVudCIsInBhcmVudE9mZnNldCIsInNjcm9sbFRvIiwiSGVpZ2h0IiwiV2lkdGgiLCIiLCJkZWZhdWx0RXh0cmEiLCJmdW5jTmFtZSIsInVuYmluZCIsImRlbGVnYXRlIiwidW5kZWxlZ2F0ZSIsImhvdmVyIiwiZm5PdmVyIiwiZm5PdXQiLCJwcm94eSIsImhvbGRSZWFkeSIsImhvbGQiLCJwYXJzZUpTT04iLCJpc051bWVyaWMiLCJpc05hTiIsInRyaW0iLCJkZWZpbmUiLCJhbWQiLCJfalF1ZXJ5IiwiXyQiLCIkIiwibm9Db25mbGljdCIsInJlcXVpcmUiLCJkIiwic2VsZWN0MiIsImgiLCJvIiwiZiIsImciLCJ5IiwiciIsImMiLCJ1Iiwibm9kZUlkQ29tcGF0IiwiY2hhckF0IiwiQSIsIngiLCJTIiwic3Vic3RyaW5nIiwiRCIsInJlcXVpcmVqcyIsIm5vcm1hbGl6ZSIsInByIiwidXJpIiwiY29uZmlnIiwiZGVwcyIsIl9kZWZpbmVkIiwibGlzdGVuZXJzIiwiRXh0ZW5kIiwiX19zdXBlcl9fIiwiRGVjb3JhdGUiLCJkaXNwbGF5TmFtZSIsIl90eXBlIiwiaW52b2tlIiwiT2JzZXJ2YWJsZSIsImdlbmVyYXRlQ2hhcnMiLCJmbG9vciIsIl9jb252ZXJ0RGF0YSIsImhhc1Njcm9sbCIsImlubmVySGVpZ2h0Iiwic2Nyb2xsSGVpZ2h0IiwiaW5uZXJXaWR0aCIsInNjcm9sbFdpZHRoIiwiZXNjYXBlTWFya3VwIiwiXFwiLCImIiwiPCIsIlwiIiwiJyIsIi8iLCJhcHBlbmRNYW55Iiwic3Vic3RyIiwiX19jYWNoZSIsIkdldFVuaXF1ZUVsZW1lbnRJZCIsIlN0b3JlRGF0YSIsIkdldERhdGEiLCJSZW1vdmVEYXRhIiwiJGVsZW1lbnQiLCJyZW5kZXIiLCIkcmVzdWx0cyIsImNsZWFyIiwiZGlzcGxheU1lc3NhZ2UiLCJoaWRlTG9hZGluZyIsImhpZGVNZXNzYWdlcyIsImhpZ2hsaWdodEZpcnN0SXRlbSIsImVuc3VyZUhpZ2hsaWdodFZpc2libGUiLCJzZXRDbGFzc2VzIiwiZWxlbWVudCIsInNob3dMb2FkaW5nIiwibG9hZGluZyIsInJvbGUiLCJhcmlhLXNlbGVjdGVkIiwiX3Jlc3VsdElkIiwidGl0bGUiLCJ0ZW1wbGF0ZSIsImlzT3BlbiIsImdldEhpZ2hsaWdodGVkUmVzdWx0cyIsIm91dGVySGVpZ2h0IiwibW91c2V3aGVlbCIsImRlbHRhWSIsImRlc3Ryb3kiLCJCQUNLU1BBQ0UiLCJUQUIiLCJFTlRFUiIsIlNISUZUIiwiQ1RSTCIsIkFMVCIsIkVTQyIsIlNQQUNFIiwiUEFHRV9VUCIsIlBBR0VfRE9XTiIsIkVORCIsIkhPTUUiLCJMRUZUIiwiVVAiLCJSSUdIVCIsIkRPV04iLCJERUxFVEUiLCJfdGFiaW5kZXgiLCIkc2VsZWN0aW9uIiwiX2hhbmRsZUJsdXIiLCJ1cGRhdGUiLCJfYXR0YWNoQ2xvc2VIYW5kbGVyIiwiX2RldGFjaENsb3NlSGFuZGxlciIsInNlbGVjdGlvbkNvbnRhaW5lciIsInBsYWNlaG9sZGVyIiwibm9ybWFsaXplUGxhY2Vob2xkZXIiLCJjcmVhdGVQbGFjZWhvbGRlciIsIl9oYW5kbGVDbGVhciIsIl9oYW5kbGVLZXlib2FyZENsZWFyIiwicHJldmVudGVkIiwiJHNlYXJjaENvbnRhaW5lciIsIiRzZWFyY2giLCJfdHJhbnNmZXJUYWJJbmRleCIsIl9rZXlVcFByZXZlbnRlZCIsInNlYXJjaFJlbW92ZUNob2ljZSIsImRvY3VtZW50TW9kZSIsImhhbmRsZVNlYXJjaCIsInJlc2l6ZVNlYXJjaCIsInRlcm0iLCJkaWN0IiwiYWxsIiwiX2NhY2hlIiwibG9hZFBhdGgiLCLikrYiLCLvvKEiLCLDgCIsIsOBIiwiw4IiLCLhuqYiLCLhuqQiLCLhuqoiLCLhuqgiLCLDgyIsIsSAIiwixIIiLCLhurAiLCLhuq4iLCLhurQiLCLhurIiLCLIpiIsIsegIiwiw4QiLCLHniIsIuG6oiIsIsOFIiwix7oiLCLHjSIsIsiAIiwiyIIiLCLhuqAiLCLhuqwiLCLhurYiLCLhuIAiLCLEhCIsIsi6Iiwi4rGvIiwi6pyyIiwiw4YiLCLHvCIsIseiIiwi6py0Iiwi6py2Iiwi6py4Iiwi6py6Iiwi6py8Iiwi4pK3Iiwi77yiIiwi4biCIiwi4biEIiwi4biGIiwiyYMiLCLGgiIsIsaBIiwi4pK4Iiwi77yjIiwixIYiLCLEiCIsIsSKIiwixIwiLCLDhyIsIuG4iCIsIsaHIiwiyLsiLCLqnL4iLCLikrkiLCLvvKQiLCLhuIoiLCLEjiIsIuG4jCIsIuG4kCIsIuG4kiIsIuG4jiIsIsSQIiwixosiLCLGiiIsIsaJIiwi6p25Iiwix7EiLCLHhCIsIseyIiwix4UiLCLikroiLCLvvKUiLCLDiCIsIsOJIiwiw4oiLCLhu4AiLCLhur4iLCLhu4QiLCLhu4IiLCLhurwiLCLEkiIsIuG4lCIsIuG4liIsIsSUIiwixJYiLCLDiyIsIuG6uiIsIsSaIiwiyIQiLCLIhiIsIuG6uCIsIuG7hiIsIsioIiwi4bicIiwixJgiLCLhuJgiLCLhuJoiLCLGkCIsIsaOIiwi4pK7Iiwi77ymIiwi4bieIiwixpEiLCLqnbsiLCLikrwiLCLvvKciLCLHtCIsIsScIiwi4bigIiwixJ4iLCLEoCIsIsemIiwixKIiLCLHpCIsIsaTIiwi6p6gIiwi6p29Iiwi6p2+Iiwi4pK9Iiwi77yoIiwixKQiLCLhuKIiLCLhuKYiLCLIniIsIuG4pCIsIuG4qCIsIuG4qiIsIsSmIiwi4rGnIiwi4rG1Iiwi6p6NIiwi4pK+Iiwi77ypIiwiw4wiLCLDjSIsIsOOIiwixKgiLCLEqiIsIsSsIiwixLAiLCLDjyIsIuG4riIsIuG7iCIsIsePIiwiyIgiLCLIiiIsIuG7iiIsIsSuIiwi4bisIiwixpciLCLikr8iLCLvvKoiLCLEtCIsIsmIIiwi4pOAIiwi77yrIiwi4biwIiwix6giLCLhuLIiLCLEtiIsIuG4tCIsIsaYIiwi4rGpIiwi6p2AIiwi6p2CIiwi6p2EIiwi6p6iIiwi4pOBIiwi77ysIiwixL8iLCLEuSIsIsS9Iiwi4bi2Iiwi4bi4IiwixLsiLCLhuLwiLCLhuLoiLCLFgSIsIsi9Iiwi4rGiIiwi4rGgIiwi6p2IIiwi6p2GIiwi6p6AIiwix4ciLCLHiCIsIuKTgiIsIu+8rSIsIuG4viIsIuG5gCIsIuG5giIsIuKxriIsIsacIiwi4pODIiwi77yuIiwix7giLCLFgyIsIsORIiwi4bmEIiwixYciLCLhuYYiLCLFhSIsIuG5iiIsIuG5iCIsIsigIiwixp0iLCLqnpAiLCLqnqQiLCLHiiIsIseLIiwi4pOEIiwi77yvIiwiw5IiLCLDkyIsIsOUIiwi4buSIiwi4buQIiwi4buWIiwi4buUIiwiw5UiLCLhuYwiLCLIrCIsIuG5jiIsIsWMIiwi4bmQIiwi4bmSIiwixY4iLCLIriIsIsiwIiwiw5YiLCLIqiIsIuG7jiIsIsWQIiwix5EiLCLIjCIsIsiOIiwixqAiLCLhu5wiLCLhu5oiLCLhu6AiLCLhu54iLCLhu6IiLCLhu4wiLCLhu5giLCLHqiIsIsesIiwiw5giLCLHviIsIsaGIiwixp8iLCLqnYoiLCLqnYwiLCLFkiIsIsaiIiwi6p2OIiwiyKIiLCLik4UiLCLvvLAiLCLhuZQiLCLhuZYiLCLGpCIsIuKxoyIsIuqdkCIsIuqdkiIsIuqdlCIsIuKThiIsIu+8sSIsIuqdliIsIuqdmCIsIsmKIiwi4pOHIiwi77yyIiwixZQiLCLhuZgiLCLFmCIsIsiQIiwiyJIiLCLhuZoiLCLhuZwiLCLFliIsIuG5niIsIsmMIiwi4rGkIiwi6p2aIiwi6p6mIiwi6p6CIiwi4pOIIiwi77yzIiwi4bqeIiwixZoiLCLhuaQiLCLFnCIsIuG5oCIsIsWgIiwi4bmmIiwi4bmiIiwi4bmoIiwiyJgiLCLFniIsIuKxviIsIuqeqCIsIuqehCIsIuKTiSIsIu+8tCIsIuG5qiIsIsWkIiwi4bmsIiwiyJoiLCLFoiIsIuG5sCIsIuG5riIsIsWmIiwixqwiLCLGriIsIsi+Iiwi6p6GIiwi6pyoIiwi4pOKIiwi77y1Iiwiw5kiLCLDmiIsIsObIiwixagiLCLhubgiLCLFqiIsIuG5uiIsIsWsIiwiw5wiLCLHmyIsIseXIiwix5UiLCLHmSIsIuG7piIsIsWuIiwixbAiLCLHkyIsIsiUIiwiyJYiLCLGryIsIuG7qiIsIuG7qCIsIuG7riIsIuG7rCIsIuG7sCIsIuG7pCIsIuG5siIsIsWyIiwi4bm2Iiwi4bm0IiwiyYQiLCLik4siLCLvvLYiLCLhubwiLCLhub4iLCLGsiIsIuqdniIsIsmFIiwi6p2gIiwi4pOMIiwi77y3Iiwi4bqAIiwi4bqCIiwixbQiLCLhuoYiLCLhuoQiLCLhuogiLCLisbIiLCLik40iLCLvvLgiLCLhuooiLCLhuowiLCLik44iLCLvvLkiLCLhu7IiLCLDnSIsIsW2Iiwi4bu4IiwiyLIiLCLhuo4iLCLFuCIsIuG7tiIsIuG7tCIsIsazIiwiyY4iLCLhu74iLCLik48iLCLvvLoiLCLFuSIsIuG6kCIsIsW7Iiwixb0iLCLhupIiLCLhupQiLCLGtSIsIsikIiwi4rG/Iiwi4rGrIiwi6p2iIiwi4pOQIiwi772BIiwi4bqaIiwiw6AiLCLDoSIsIsOiIiwi4bqnIiwi4bqlIiwi4bqrIiwi4bqpIiwiw6MiLCLEgSIsIsSDIiwi4bqxIiwi4bqvIiwi4bq1Iiwi4bqzIiwiyKciLCLHoSIsIsOkIiwix58iLCLhuqMiLCLDpSIsIse7Iiwix44iLCLIgSIsIsiDIiwi4bqhIiwi4bqtIiwi4bq3Iiwi4biBIiwixIUiLCLisaUiLCLJkCIsIuqcsyIsIsOmIiwix70iLCLHoyIsIuqctSIsIuqctyIsIuqcuSIsIuqcuyIsIuqcvSIsIuKTkSIsIu+9giIsIuG4gyIsIuG4hSIsIuG4hyIsIsaAIiwixoMiLCLJkyIsIuKTkiIsIu+9gyIsIsSHIiwixIkiLCLEiyIsIsSNIiwiw6ciLCLhuIkiLCLGiCIsIsi8Iiwi6py/Iiwi4oaEIiwi4pOTIiwi772EIiwi4biLIiwixI8iLCLhuI0iLCLhuJEiLCLhuJMiLCLhuI8iLCLEkSIsIsaMIiwiyZYiLCLJlyIsIuqduiIsIsezIiwix4YiLCLik5QiLCLvvYUiLCLDqCIsIsOpIiwiw6oiLCLhu4EiLCLhur8iLCLhu4UiLCLhu4MiLCLhur0iLCLEkyIsIuG4lSIsIuG4lyIsIsSVIiwixJciLCLDqyIsIuG6uyIsIsSbIiwiyIUiLCLIhyIsIuG6uSIsIuG7hyIsIsipIiwi4bidIiwixJkiLCLhuJkiLCLhuJsiLCLJhyIsIsmbIiwix50iLCLik5UiLCLvvYYiLCLhuJ8iLCLGkiIsIuqdvCIsIuKTliIsIu+9hyIsIse1IiwixJ0iLCLhuKEiLCLEnyIsIsShIiwix6ciLCLEoyIsIselIiwiyaAiLCLqnqEiLCLhtbkiLCLqnb8iLCLik5ciLCLvvYgiLCLEpSIsIuG4oyIsIuG4pyIsIsifIiwi4bilIiwi4bipIiwi4birIiwi4bqWIiwixKciLCLisagiLCLisbYiLCLJpSIsIsaVIiwi4pOYIiwi772JIiwiw6wiLCLDrSIsIsOuIiwixKkiLCLEqyIsIsStIiwiw68iLCLhuK8iLCLhu4kiLCLHkCIsIsiJIiwiyIsiLCLhu4siLCLEryIsIuG4rSIsIsmoIiwixLEiLCLik5kiLCLvvYoiLCLEtSIsIsewIiwiyYkiLCLik5oiLCLvvYsiLCLhuLEiLCLHqSIsIuG4syIsIsS3Iiwi4bi1IiwixpkiLCLisaoiLCLqnYEiLCLqnYMiLCLqnYUiLCLqnqMiLCLik5siLCLvvYwiLCLFgCIsIsS6IiwixL4iLCLhuLciLCLhuLkiLCLEvCIsIuG4vSIsIuG4uyIsIsW/IiwixYIiLCLGmiIsIsmrIiwi4rGhIiwi6p2JIiwi6p6BIiwi6p2HIiwix4kiLCLik5wiLCLvvY0iLCLhuL8iLCLhuYEiLCLhuYMiLCLJsSIsIsmvIiwi4pOdIiwi772OIiwix7kiLCLFhCIsIsOxIiwi4bmFIiwixYgiLCLhuYciLCLFhiIsIuG5iyIsIuG5iSIsIsaeIiwiybIiLCLFiSIsIuqekSIsIuqepSIsIseMIiwi4pOeIiwi772PIiwiw7IiLCLDsyIsIsO0Iiwi4buTIiwi4buRIiwi4buXIiwi4buVIiwiw7UiLCLhuY0iLCLIrSIsIuG5jyIsIsWNIiwi4bmRIiwi4bmTIiwixY8iLCLIryIsIsixIiwiw7YiLCLIqyIsIuG7jyIsIsWRIiwix5IiLCLIjSIsIsiPIiwixqEiLCLhu50iLCLhu5siLCLhu6EiLCLhu58iLCLhu6MiLCLhu40iLCLhu5kiLCLHqyIsIsetIiwiw7giLCLHvyIsIsmUIiwi6p2LIiwi6p2NIiwiybUiLCLFkyIsIsajIiwiyKMiLCLqnY8iLCLik58iLCLvvZAiLCLhuZUiLCLhuZciLCLGpSIsIuG1vSIsIuqdkSIsIuqdkyIsIuqdlSIsIuKToCIsIu+9kSIsIsmLIiwi6p2XIiwi6p2ZIiwi4pOhIiwi772SIiwixZUiLCLhuZkiLCLFmSIsIsiRIiwiyJMiLCLhuZsiLCLhuZ0iLCLFlyIsIuG5nyIsIsmNIiwiyb0iLCLqnZsiLCLqnqciLCLqnoMiLCLik6IiLCLvvZMiLCLDnyIsIsWbIiwi4bmlIiwixZ0iLCLhuaEiLCLFoSIsIuG5pyIsIuG5oyIsIuG5qSIsIsiZIiwixZ8iLCLIvyIsIuqeqSIsIuqehSIsIuG6myIsIuKToyIsIu+9lCIsIuG5qyIsIuG6lyIsIsWlIiwi4bmtIiwiyJsiLCLFoyIsIuG5sSIsIuG5ryIsIsWnIiwixq0iLCLKiCIsIuKxpiIsIuqehyIsIuqcqSIsIuKTpCIsIu+9lSIsIsO5Iiwiw7oiLCLDuyIsIsWpIiwi4bm5IiwixasiLCLhubsiLCLFrSIsIsO8Iiwix5wiLCLHmCIsIseWIiwix5oiLCLhu6ciLCLFryIsIsWxIiwix5QiLCLIlSIsIsiXIiwixrAiLCLhu6siLCLhu6kiLCLhu68iLCLhu60iLCLhu7EiLCLhu6UiLCLhubMiLCLFsyIsIuG5tyIsIuG5tSIsIsqJIiwi4pOlIiwi772WIiwi4bm9Iiwi4bm/IiwiyosiLCLqnZ8iLCLKjCIsIuqdoSIsIuKTpiIsIu+9lyIsIuG6gSIsIuG6gyIsIsW1Iiwi4bqHIiwi4bqFIiwi4bqYIiwi4bqJIiwi4rGzIiwi4pOnIiwi772YIiwi4bqLIiwi4bqNIiwi4pOoIiwi772ZIiwi4buzIiwiw70iLCLFtyIsIuG7uSIsIsizIiwi4bqPIiwiw78iLCLhu7ciLCLhupkiLCLhu7UiLCLGtCIsIsmPIiwi4bu/Iiwi4pOpIiwi772aIiwixboiLCLhupEiLCLFvCIsIsW+Iiwi4bqTIiwi4bqVIiwixrYiLCLIpSIsIsmAIiwi4rGsIiwi6p2jIiwizoYiLCLOiCIsIs6JIiwizooiLCLOqiIsIs6MIiwizo4iLCLOqyIsIs6PIiwizqwiLCLOrSIsIs6uIiwizq8iLCLPiiIsIs6QIiwiz4wiLCLPjSIsIs+LIiwizrAiLCLPjiIsIs+CIiwi4oCZIiwicXVlcnkiLCJnZW5lcmF0ZVJlc3VsdElkIiwidW5zZWxlY3QiLCJhZGRPcHRpb25zIiwibGFiZWwiLCJpbm5lclRleHQiLCJfbm9ybWFsaXplSXRlbSIsImNvbnZlcnRUb09wdGlvbnMiLCJhamF4T3B0aW9ucyIsIl9hcHBseURlZmF1bHRzIiwicHJvY2Vzc1Jlc3VsdHMiLCJxIiwiX3JlcXVlc3QiLCJfcXVlcnlUaW1lb3V0IiwiY3JlYXRlVGFnIiwiaW5zZXJ0VGFnIiwiX3JlbW92ZU9sZFRhZ3MiLCJwYWdlIiwiX2xhc3RUYWciLCJ0b2tlbml6ZXIiLCJkcm9wZG93biIsIm1pbmltdW1JbnB1dExlbmd0aCIsIm1pbmltdW0iLCJtYXhpbXVtSW5wdXRMZW5ndGgiLCJtYXhpbXVtIiwibWF4aW11bVNlbGVjdGlvbkxlbmd0aCIsIiRkcm9wZG93biIsInNob3dTZWFyY2giLCJyZW1vdmVQbGFjZWhvbGRlciIsImxhc3RQYXJhbXMiLCIkbG9hZGluZ01vcmUiLCJjcmVhdGVMb2FkaW5nTW9yZSIsInNob3dMb2FkaW5nTW9yZSIsImxvYWRNb3JlIiwicGFnaW5hdGlvbiIsIm1vcmUiLCIkZHJvcGRvd25QYXJlbnQiLCJfc2hvd0Ryb3Bkb3duIiwiX2F0dGFjaFBvc2l0aW9uaW5nSGFuZGxlciIsIl9wb3NpdGlvbkRyb3Bkb3duIiwiX3Jlc2l6ZURyb3Bkb3duIiwiX2hpZGVEcm9wZG93biIsIl9kZXRhY2hQb3NpdGlvbmluZ0hhbmRsZXIiLCIkZHJvcGRvd25Db250YWluZXIiLCIkY29udGFpbmVyIiwiYm90dG9tIiwib3V0ZXJXaWR0aCIsIm1pbmltdW1SZXN1bHRzRm9yU2VhcmNoIiwiX2hhbmRsZVNlbGVjdE9uQ2xvc2UiLCJvcmlnaW5hbFNlbGVjdDJFdmVudCIsIl9zZWxlY3RUcmlnZ2VyZWQiLCJlcnJvckxvYWRpbmciLCJpbnB1dFRvb0xvbmciLCJpbnB1dFRvb1Nob3J0IiwibG9hZGluZ01vcmUiLCJtYXhpbXVtU2VsZWN0ZWQiLCJub1Jlc3VsdHMiLCJzZWFyY2hpbmciLCJyZW1vdmVBbGxJdGVtcyIsIkMiLCJFIiwiTyIsIlQiLCJMIiwiayIsIlAiLCJJIiwiTSIsIlIiLCJVIiwieiIsImRlZmF1bHRzIiwiZGF0YUFkYXB0ZXIiLCJ0YWdzIiwidG9rZW5TZXBhcmF0b3JzIiwiYW1kQmFzZSIsImluaXRTZWxlY3Rpb24iLCJyZXN1bHRzQWRhcHRlciIsInNlbGVjdE9uQ2xvc2UiLCJkcm9wZG93bkFkYXB0ZXIiLCJtdWx0aXBsZSIsImNsb3NlT25TZWxlY3QiLCJkcm9wZG93bkNzc0NsYXNzIiwiZHJvcGRvd25Dc3MiLCJhZGFwdERyb3Bkb3duQ3NzQ2xhc3MiLCJzZWxlY3Rpb25BZGFwdGVyIiwiYWxsb3dDbGVhciIsImNvbnRhaW5lckNzc0NsYXNzIiwiY29udGFpbmVyQ3NzIiwiYWRhcHRDb250YWluZXJDc3NDbGFzcyIsImxhbmd1YWdlIiwiYW1kTGFuZ3VhZ2VCYXNlIiwiZGVidWciLCJ0cmFuc2xhdGlvbnMiLCJkcm9wZG93bkF1dG9XaWR0aCIsInNjcm9sbEFmdGVyU2VsZWN0Iiwic29ydGVyIiwidGVtcGxhdGVSZXN1bHQiLCJ0ZW1wbGF0ZVNlbGVjdGlvbiIsInRoZW1lIiwiZnJvbUVsZW1lbnQiLCJkYXRhc2V0IiwiX2dlbmVyYXRlSWQiLCJfcGxhY2VDb250YWluZXIiLCJfYmluZEFkYXB0ZXJzIiwiX3JlZ2lzdGVyRG9tRXZlbnRzIiwiX3JlZ2lzdGVyRGF0YUV2ZW50cyIsIl9yZWdpc3RlclNlbGVjdGlvbkV2ZW50cyIsIl9yZWdpc3RlckRyb3Bkb3duRXZlbnRzIiwiX3JlZ2lzdGVyUmVzdWx0c0V2ZW50cyIsIl9yZWdpc3RlckV2ZW50cyIsIl9zeW5jQXR0cmlidXRlcyIsIl9yZXNvbHZlV2lkdGgiLCJfc3luY0EiLCJfc3luY1MiLCJfc3luY1N1YnRyZWUiLCJNdXRhdGlvbk9ic2VydmVyIiwiV2ViS2l0TXV0YXRpb25PYnNlcnZlciIsIk1vek11dGF0aW9uT2JzZXJ2ZXIiLCJfb2JzZXJ2ZXIiLCJvYnNlcnZlIiwiY2hpbGRMaXN0Iiwic3VidHJlZSIsInRvZ2dsZURyb3Bkb3duIiwiY2xvc2UiLCJhZGRlZE5vZGVzIiwicmVtb3ZlZE5vZGVzIiwiZW5hYmxlIiwiZGV0YWNoRXZlbnQiLCJkaXNjb25uZWN0Iiwic3luY0Nzc0NsYXNzZXMiLCJfaXNJbml0aWFsaXplZCIsIl9jdXJyZW50RGF0YSIsIl92YWx1ZVNlcGFyYXRvciIsImZpeEhvb2tzIiwibW91c2VIb29rcyIsIm9ubW91c2V3aGVlbCIsImdldExpbmVIZWlnaHQiLCJnZXRQYWdlSGVpZ2h0IiwiYWRqdXN0T2xkRGVsdGFzIiwibm9ybWFsaXplT2Zmc2V0Iiwid2hlZWxEZWx0YSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YVgiLCJheGlzIiwiSE9SSVpPTlRBTF9BWElTIiwiZGVsdGFYIiwiZGVsdGFNb2RlIiwiYWJzIiwiZGVsdGFGYWN0b3IiLCJ1bm1vdXNld2hlZWwiLCJTbGljayIsImFjY2Vzc2liaWxpdHkiLCJhZGFwdGl2ZUhlaWdodCIsImFwcGVuZEFycm93cyIsImFwcGVuZERvdHMiLCJhcnJvd3MiLCJhc05hdkZvciIsInByZXZBcnJvdyIsIm5leHRBcnJvdyIsImF1dG9wbGF5IiwiYXV0b3BsYXlTcGVlZCIsImNlbnRlck1vZGUiLCJjZW50ZXJQYWRkaW5nIiwiY3NzRWFzZSIsImN1c3RvbVBhZ2luZyIsImRvdHMiLCJkb3RzQ2xhc3MiLCJkcmFnZ2FibGUiLCJlZGdlRnJpY3Rpb24iLCJmYWRlIiwiZm9jdXNPblNlbGVjdCIsImluZmluaXRlIiwiaW5pdGlhbFNsaWRlIiwibGF6eUxvYWQiLCJtb2JpbGVGaXJzdCIsInBhdXNlT25Ib3ZlciIsInBhdXNlT25Gb2N1cyIsInBhdXNlT25Eb3RzSG92ZXIiLCJyZXNwb25kVG8iLCJyZXNwb25zaXZlIiwicm93cyIsInJ0bCIsInNsaWRlIiwic2xpZGVzUGVyUm93Iiwic2xpZGVzVG9TaG93Iiwic2xpZGVzVG9TY3JvbGwiLCJzd2lwZSIsInN3aXBlVG9TbGlkZSIsInRvdWNoTW92ZSIsInRvdWNoVGhyZXNob2xkIiwidXNlQ1NTIiwidXNlVHJhbnNmb3JtIiwidmFyaWFibGVXaWR0aCIsInZlcnRpY2FsIiwidmVydGljYWxTd2lwaW5nIiwid2FpdEZvckFuaW1hdGUiLCJpbml0aWFscyIsImFuaW1hdGluZyIsImRyYWdnaW5nIiwiYXV0b1BsYXlUaW1lciIsImN1cnJlbnREaXJlY3Rpb24iLCJjdXJyZW50TGVmdCIsImN1cnJlbnRTbGlkZSIsImRpcmVjdGlvbiIsIiRkb3RzIiwibGlzdFdpZHRoIiwibGlzdEhlaWdodCIsImxvYWRJbmRleCIsIiRuZXh0QXJyb3ciLCIkcHJldkFycm93Iiwic2xpZGVDb3VudCIsInNsaWRlV2lkdGgiLCIkc2xpZGVUcmFjayIsIiRzbGlkZXMiLCJzbGlkaW5nIiwic2xpZGVPZmZzZXQiLCJzd2lwZUxlZnQiLCIkbGlzdCIsInRvdWNoT2JqZWN0IiwidHJhbnNmb3Jtc0VuYWJsZWQiLCJ1bnNsaWNrZWQiLCJhY3RpdmVCcmVha3BvaW50IiwiYW5pbVR5cGUiLCJhbmltUHJvcCIsImJyZWFrcG9pbnRzIiwiYnJlYWtwb2ludFNldHRpbmdzIiwiY3NzVHJhbnNpdGlvbnMiLCJmb2N1c3NlZCIsImludGVycnVwdGVkIiwicGF1c2VkIiwicG9zaXRpb25Qcm9wIiwicm93Q291bnQiLCJzaG91bGRDbGljayIsIiRzbGlkZXIiLCIkc2xpZGVzQ2FjaGUiLCJ0cmFuc2Zvcm1UeXBlIiwidHJhbnNpdGlvblR5cGUiLCJ2aXNpYmlsaXR5Q2hhbmdlIiwid2luZG93V2lkdGgiLCJ3aW5kb3dUaW1lciIsIm1vekhpZGRlbiIsIndlYmtpdEhpZGRlbiIsImF1dG9QbGF5IiwiYXV0b1BsYXlDbGVhciIsImF1dG9QbGF5SXRlcmF0b3IiLCJjaGFuZ2VTbGlkZSIsImNsaWNrSGFuZGxlciIsInNlbGVjdEhhbmRsZXIiLCJzZXRQb3NpdGlvbiIsInN3aXBlSGFuZGxlciIsImRyYWdIYW5kbGVyIiwia2V5SGFuZGxlciIsImluc3RhbmNlVWlkIiwiaHRtbEV4cHIiLCJyZWdpc3RlckJyZWFrcG9pbnRzIiwiYWN0aXZhdGVBREEiLCJhcmlhLWhpZGRlbiIsImFkZFNsaWRlIiwic2xpY2tBZGQiLCJ1bmxvYWQiLCJyZWluaXQiLCJhbmltYXRlSGVpZ2h0IiwiYW5pbWF0ZVNsaWRlIiwiYW5pbVN0YXJ0IiwiYXBwbHlUcmFuc2l0aW9uIiwiZGlzYWJsZVRyYW5zaXRpb24iLCJnZXROYXZUYXJnZXQiLCJzbGljayIsInNsaWRlSGFuZGxlciIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsImJ1aWxkQXJyb3dzIiwiYXJpYS1kaXNhYmxlZCIsImJ1aWxkRG90cyIsImdldERvdENvdW50IiwiYnVpbGRPdXQiLCJzZXR1cEluZmluaXRlIiwidXBkYXRlRG90cyIsInNldFNsaWRlQ2xhc3NlcyIsImJ1aWxkUm93cyIsImNoZWNrUmVzcG9uc2l2ZSIsIm1pbiIsInVuc2xpY2siLCJyZWZyZXNoIiwiY2hlY2tOYXZpZ2FibGUiLCJnZXROYXZpZ2FibGVJbmRleGVzIiwiY2xlYW5VcEV2ZW50cyIsImludGVycnVwdCIsImNsZWFuVXBTbGlkZUV2ZW50cyIsIm9yaWVudGF0aW9uQ2hhbmdlIiwicmVzaXplIiwiY2xlYW5VcFJvd3MiLCJmYWRlU2xpZGUiLCJmYWRlU2xpZGVPdXQiLCJmaWx0ZXJTbGlkZXMiLCJzbGlja0ZpbHRlciIsImZvY3VzSGFuZGxlciIsImdldEN1cnJlbnQiLCJzbGlja0N1cnJlbnRTbGlkZSIsImdldExlZnQiLCJvZmZzZXRMZWZ0IiwiZ2V0T3B0aW9uIiwic2xpY2tHZXRPcHRpb24iLCJnZXRTbGljayIsImdldFNsaWRlQ291bnQiLCJnb1RvIiwic2xpY2tHb1RvIiwic2V0UHJvcHMiLCJzdGFydExvYWQiLCJsb2FkU2xpZGVyIiwiaW5pdGlhbGl6ZUV2ZW50cyIsInVwZGF0ZUFycm93cyIsImluaXRBREEiLCJhcmlhLWRlc2NyaWJlZGJ5IiwiYXJpYS1jb250cm9scyIsImluaXRBcnJvd0V2ZW50cyIsImluaXREb3RFdmVudHMiLCJpbml0U2xpZGVFdmVudHMiLCJhY3Rpb24iLCJpbml0VUkiLCJ0YWdOYW1lIiwicHJvZ3Jlc3NpdmVMYXp5TG9hZCIsInNsaWNrTmV4dCIsInBhdXNlIiwic2xpY2tQYXVzZSIsInBsYXkiLCJzbGlja1BsYXkiLCJwb3N0U2xpZGUiLCJzbGlja1ByZXYiLCJicmVha3BvaW50Iiwid2luZG93RGVsYXkiLCJyZW1vdmVTbGlkZSIsInNsaWNrUmVtb3ZlIiwic2V0Q1NTIiwic2V0RGltZW5zaW9ucyIsInNldEZhZGUiLCJzZXRIZWlnaHQiLCJzZXRPcHRpb24iLCJzbGlja1NldE9wdGlvbiIsIldlYmtpdFRyYW5zaXRpb24iLCJNb3pUcmFuc2l0aW9uIiwibXNUcmFuc2l0aW9uIiwiT1RyYW5zZm9ybSIsInBlcnNwZWN0aXZlUHJvcGVydHkiLCJ3ZWJraXRQZXJzcGVjdGl2ZSIsIk1velRyYW5zZm9ybSIsIk1velBlcnNwZWN0aXZlIiwid2Via2l0VHJhbnNmb3JtIiwibXNUcmFuc2Zvcm0iLCJ0cmFuc2Zvcm0iLCJzd2lwZURpcmVjdGlvbiIsInN0YXJ0WCIsImN1clgiLCJzdGFydFkiLCJjdXJZIiwiYXRhbjIiLCJzd2lwZUVuZCIsInN3aXBlTGVuZ3RoIiwiZWRnZUhpdCIsIm1pblN3aXBlIiwiZmluZ2VyQ291bnQiLCJzd2lwZVN0YXJ0Iiwic3dpcGVNb3ZlIiwic3FydCIsInBvdyIsInVuZmlsdGVyU2xpZGVzIiwic2xpY2tVbmZpbHRlciJdLCJtYXBwaW5ncyI6IkNBYUEsU0FBQUEsRUFBQUMsR0FFQSxhQUVBLGlCQUFBQyxRQUFBLGlCQUFBQSxPQUFBQyxRQVNBRCxPQUFBQyxRQUFBSCxFQUFBSSxTQUNBSCxFQUFBRCxHQUFBLEdBQ0EsU0FBQUssR0FDQSxJQUFBQSxFQUFBRCxTQUNBLE1BQUEsSUFBQUUsTUFBQSw0Q0FFQSxPQUFBTCxFQUFBSSxJQUdBSixFQUFBRCxHQXRCQSxDQTBCQSxvQkFBQU8sT0FBQUEsT0FBQUMsS0FBQSxTQUFBRCxFQUFBRSxHQU1BLGFBRUEsSUFBQUMsRUFBQSxHQUVBQyxFQUFBQyxPQUFBQyxlQUVBQyxFQUFBSixFQUFBSSxNQUVBQyxFQUFBTCxFQUFBSyxLQUFBLFNBQUFDLEdBQ0EsT0FBQU4sRUFBQUssS0FBQUUsS0FBQUQsSUFDQSxTQUFBQSxHQUNBLE9BQUFOLEVBQUFRLE9BQUFDLE1BQUEsR0FBQUgsSUFJQUksRUFBQVYsRUFBQVUsS0FFQUMsRUFBQVgsRUFBQVcsUUFFQUMsRUFBQSxHQUVBQyxFQUFBRCxFQUFBQyxTQUVBQyxFQUFBRixFQUFBRyxlQUVBQyxFQUFBRixFQUFBRCxTQUVBSSxFQUFBRCxFQUFBVCxLQUFBTCxRQUVBZ0IsRUFBQSxHQUVBQyxFQUFBLFNBQUFDLEdBU0EsTUFBQSxtQkFBQUEsR0FBQSxpQkFBQUEsRUFBQUMsVUFDQSxtQkFBQUQsRUFBQUUsTUFJQUMsRUFBQSxTQUFBSCxHQUNBLE9BQUEsTUFBQUEsR0FBQUEsSUFBQUEsRUFBQXZCLFFBSUFILEVBQUFHLEVBQUFILFNBSUE4QixFQUFBLENBQ0FDLE1BQUEsRUFDQUMsS0FBQSxFQUNBQyxPQUFBLEVBQ0FDLFVBQUEsR0FHQSxTQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxHQUdBLElBQUFDLEVBQUFDLEVBQ0FDLEdBSEFILEVBQUFBLEdBQUF0QyxHQUdBMEMsY0FBQSxVQUdBLEdBREFELEVBQUFFLEtBQUFQLEVBQ0FDLEVBQ0EsSUFBQUUsS0FBQVQsR0FZQVUsRUFBQUgsRUFBQUUsSUFBQUYsRUFBQU8sY0FBQVAsRUFBQU8sYUFBQUwsS0FFQUUsRUFBQUksYUFBQU4sRUFBQUMsR0FJQUYsRUFBQVEsS0FBQUMsWUFBQU4sR0FBQU8sV0FBQUMsWUFBQVIsR0FJQSxTQUFBUyxFQUFBeEIsR0FDQSxPQUFBLE1BQUFBLEVBQ0FBLEVBQUEsR0FJQSxpQkFBQUEsR0FBQSxtQkFBQUEsRUFDQVIsRUFBQUMsRUFBQU4sS0FBQWEsS0FBQSxnQkFDQUEsRUFRQSxJQUNBeUIsRUFBQSxRQUdBQyxFQUFBLFNBQUFDLEVBQUFDLEdBSUEsT0FBQSxJQUFBRixFQUFBRyxHQUFBQyxLQUFBSCxFQUFBQyxJQTBWQSxTQUFBRyxFQUFBL0IsR0FNQSxJQUFBZ0MsSUFBQWhDLEdBQUEsV0FBQUEsR0FBQUEsRUFBQWdDLE9BQ0EzQixFQUFBbUIsRUFBQXhCLEdBRUEsT0FBQUQsRUFBQUMsS0FBQUcsRUFBQUgsS0FJQSxVQUFBSyxHQUFBLElBQUEyQixHQUNBLGlCQUFBQSxHQUFBLEVBQUFBLEdBQUFBLEVBQUEsS0FBQWhDLEdBcldBMEIsRUFBQUcsR0FBQUgsRUFBQU8sVUFBQSxDQUdBQyxPQUFBVCxFQUVBVSxZQUFBVCxFQUdBTSxPQUFBLEVBRUFJLFFBQUEsV0FDQSxPQUFBcEQsRUFBQUcsS0FBQVQsT0FLQTJELElBQUEsU0FBQUMsR0FHQSxPQUFBLE1BQUFBLEVBQ0F0RCxFQUFBRyxLQUFBVCxNQUlBNEQsRUFBQSxFQUFBNUQsS0FBQTRELEVBQUE1RCxLQUFBc0QsUUFBQXRELEtBQUE0RCxJQUtBQyxVQUFBLFNBQUFDLEdBR0EsSUFBQUMsRUFBQWYsRUFBQWdCLE1BQUFoRSxLQUFBeUQsY0FBQUssR0FNQSxPQUhBQyxFQUFBRSxXQUFBakUsS0FHQStELEdBSUFHLEtBQUEsU0FBQUMsR0FDQSxPQUFBbkIsRUFBQWtCLEtBQUFsRSxLQUFBbUUsSUFHQUMsSUFBQSxTQUFBRCxHQUNBLE9BQUFuRSxLQUFBNkQsVUFBQWIsRUFBQW9CLElBQUFwRSxLQUFBLFNBQUFxRSxFQUFBbEMsR0FDQSxPQUFBZ0MsRUFBQTFELEtBQUE0RCxFQUFBbEMsRUFBQWtDLE9BSUEvRCxNQUFBLFdBQ0EsT0FBQU4sS0FBQTZELFVBQUF2RCxFQUFBSyxNQUFBWCxLQUFBc0UsYUFHQUMsTUFBQSxXQUNBLE9BQUF2RSxLQUFBd0UsR0FBQSxJQUdBQyxLQUFBLFdBQ0EsT0FBQXpFLEtBQUF3RSxJQUFBLElBR0FFLEtBQUEsV0FDQSxPQUFBMUUsS0FBQTZELFVBQUFiLEVBQUEyQixLQUFBM0UsS0FBQSxTQUFBNEUsRUFBQXpDLEdBQ0EsT0FBQUEsRUFBQSxHQUFBLE1BSUEwQyxJQUFBLFdBQ0EsT0FBQTdFLEtBQUE2RCxVQUFBYixFQUFBMkIsS0FBQTNFLEtBQUEsU0FBQTRFLEVBQUF6QyxHQUNBLE9BQUFBLEVBQUEsTUFJQXFDLEdBQUEsU0FBQXJDLEdBQ0EsSUFBQTJDLEVBQUE5RSxLQUFBc0QsT0FDQXlCLEdBQUE1QyxHQUFBQSxFQUFBLEVBQUEyQyxFQUFBLEdBQ0EsT0FBQTlFLEtBQUE2RCxVQUFBLEdBQUFrQixHQUFBQSxFQUFBRCxFQUFBLENBQUE5RSxLQUFBK0UsSUFBQSxLQUdBQyxJQUFBLFdBQ0EsT0FBQWhGLEtBQUFpRSxZQUFBakUsS0FBQXlELGVBS0E3QyxLQUFBQSxFQUNBcUUsS0FBQS9FLEVBQUErRSxLQUNBQyxPQUFBaEYsRUFBQWdGLFFBR0FsQyxFQUFBbUMsT0FBQW5DLEVBQUFHLEdBQUFnQyxPQUFBLFdBQ0EsSUFBQUMsRUFBQUMsRUFBQXpELEVBQUEwRCxFQUFBQyxFQUFBQyxFQUNBQyxFQUFBbkIsVUFBQSxJQUFBLEdBQ0FuQyxFQUFBLEVBQ0FtQixFQUFBZ0IsVUFBQWhCLE9BQ0FvQyxHQUFBLEVBc0JBLElBbkJBLGtCQUFBRCxJQUNBQyxFQUFBRCxFQUdBQSxFQUFBbkIsVUFBQW5DLElBQUEsR0FDQUEsS0FJQSxpQkFBQXNELEdBQUFwRSxFQUFBb0UsS0FDQUEsRUFBQSxJQUlBdEQsSUFBQW1CLElBQ0FtQyxFQUFBekYsS0FDQW1DLEtBR0FBLEVBQUFtQixFQUFBbkIsSUFHQSxHQUFBLE9BQUFpRCxFQUFBZCxVQUFBbkMsSUFHQSxJQUFBa0QsS0FBQUQsRUFDQUUsRUFBQUYsRUFBQUMsR0FJQSxjQUFBQSxHQUFBSSxJQUFBSCxJQUtBSSxHQUFBSixJQUFBdEMsRUFBQTJDLGNBQUFMLEtBQ0FDLEVBQUFLLE1BQUFDLFFBQUFQLE1BQ0ExRCxFQUFBNkQsRUFBQUosR0FJQUcsRUFEQUQsSUFBQUssTUFBQUMsUUFBQWpFLEdBQ0EsR0FDQTJELEdBQUF2QyxFQUFBMkMsY0FBQS9ELEdBR0FBLEVBRkEsR0FJQTJELEdBQUEsRUFHQUUsRUFBQUosR0FBQXJDLEVBQUFtQyxPQUFBTyxFQUFBRixFQUFBRixTQUdBUSxJQUFBUixJQUNBRyxFQUFBSixHQUFBQyxJQU9BLE9BQUFHLEdBR0F6QyxFQUFBbUMsT0FBQSxDQUdBWSxRQUFBLFVBQUFoRCxFQUFBaUQsS0FBQUMsVUFBQUMsUUFBQSxNQUFBLElBR0FDLFNBQUEsRUFFQUMsTUFBQSxTQUFBQyxHQUNBLE1BQUEsSUFBQXZHLE1BQUF1RyxJQUdBQyxLQUFBLGFBRUFYLGNBQUEsU0FBQXJFLEdBQ0EsSUFBQWlGLEVBQUFDLEVBSUEsU0FBQWxGLEdBQUEsb0JBQUFQLEVBQUFOLEtBQUFhLFFBSUFpRixFQUFBcEcsRUFBQW1CLEtBU0EsbUJBREFrRixFQUFBeEYsRUFBQVAsS0FBQThGLEVBQUEsZ0JBQUFBLEVBQUE5QyxjQUNBdkMsRUFBQVQsS0FBQStGLEtBQUFyRixJQUdBc0YsY0FBQSxTQUFBbkYsR0FDQSxJQUFBK0QsRUFFQSxJQUFBQSxLQUFBL0QsRUFDQSxPQUFBLEVBRUEsT0FBQSxHQUtBb0YsV0FBQSxTQUFBMUUsRUFBQW9ELEVBQUFsRCxHQUNBSCxFQUFBQyxFQUFBLENBQUFILE1BQUF1RCxHQUFBQSxFQUFBdkQsT0FBQUssSUFHQWdDLEtBQUEsU0FBQTVDLEVBQUE2QyxHQUNBLElBQUFiLEVBQUFuQixFQUFBLEVBRUEsR0FBQWtCLEVBQUEvQixHQUVBLElBREFnQyxFQUFBaEMsRUFBQWdDLE9BQ0FuQixFQUFBbUIsSUFDQSxJQUFBYSxFQUFBMUQsS0FBQWEsRUFBQWEsR0FBQUEsRUFBQWIsRUFBQWEsSUFEQUEsVUFNQSxJQUFBQSxLQUFBYixFQUNBLElBQUEsSUFBQTZDLEVBQUExRCxLQUFBYSxFQUFBYSxHQUFBQSxFQUFBYixFQUFBYSxJQUNBLE1BS0EsT0FBQWIsR0FJQXFGLFVBQUEsU0FBQXpHLEVBQUEwRyxHQUNBLElBQUE3QyxFQUFBNkMsR0FBQSxHQWFBLE9BWEEsTUFBQTFHLElBQ0FtRCxFQUFBakQsT0FBQUYsSUFDQThDLEVBQUFnQixNQUFBRCxFQUNBLGlCQUFBN0QsRUFDQSxDQUFBQSxHQUFBQSxHQUdBVSxFQUFBSCxLQUFBc0QsRUFBQTdELElBSUE2RCxHQUdBOEMsUUFBQSxTQUFBeEMsRUFBQW5FLEVBQUFpQyxHQUNBLE9BQUEsTUFBQWpDLEdBQUEsRUFBQVcsRUFBQUosS0FBQVAsRUFBQW1FLEVBQUFsQyxJQUtBNkIsTUFBQSxTQUFBTyxFQUFBdUMsR0FLQSxJQUpBLElBQUFoQyxHQUFBZ0MsRUFBQXhELE9BQ0F5QixFQUFBLEVBQ0E1QyxFQUFBb0MsRUFBQWpCLE9BRUF5QixFQUFBRCxFQUFBQyxJQUNBUixFQUFBcEMsS0FBQTJFLEVBQUEvQixHQUtBLE9BRkFSLEVBQUFqQixPQUFBbkIsRUFFQW9DLEdBR0FJLEtBQUEsU0FBQWIsRUFBQUssRUFBQTRDLEdBU0EsSUFSQSxJQUNBQyxFQUFBLEdBQ0E3RSxFQUFBLEVBQ0FtQixFQUFBUSxFQUFBUixPQUNBMkQsR0FBQUYsRUFJQTVFLEVBQUFtQixFQUFBbkIsS0FDQWdDLEVBQUFMLEVBQUEzQixHQUFBQSxLQUNBOEUsR0FDQUQsRUFBQXBHLEtBQUFrRCxFQUFBM0IsSUFJQSxPQUFBNkUsR0FJQTVDLElBQUEsU0FBQU4sRUFBQUssRUFBQStDLEdBQ0EsSUFBQTVELEVBQUE2RCxFQUNBaEYsRUFBQSxFQUNBNEIsRUFBQSxHQUdBLEdBQUFWLEVBQUFTLEdBRUEsSUFEQVIsRUFBQVEsRUFBQVIsT0FDQW5CLEVBQUFtQixFQUFBbkIsSUFHQSxPQUZBZ0YsRUFBQWhELEVBQUFMLEVBQUEzQixHQUFBQSxFQUFBK0UsS0FHQW5ELEVBQUFuRCxLQUFBdUcsUUFNQSxJQUFBaEYsS0FBQTJCLEVBR0EsT0FGQXFELEVBQUFoRCxFQUFBTCxFQUFBM0IsR0FBQUEsRUFBQStFLEtBR0FuRCxFQUFBbkQsS0FBQXVHLEdBTUEsT0FBQTVHLEVBQUF3RCxJQUlBcUQsS0FBQSxFQUlBaEcsUUFBQUEsSUFHQSxtQkFBQWlHLFNBQ0FyRSxFQUFBRyxHQUFBa0UsT0FBQUMsVUFBQXBILEVBQUFtSCxPQUFBQyxXQUlBdEUsRUFBQWtCLEtBQUEsdUVBQUFxRCxNQUFBLEtBQ0EsU0FBQUMsRUFBQW5DLEdBQ0F2RSxFQUFBLFdBQUF1RSxFQUFBLEtBQUFBLEVBQUFvQyxnQkFtQkEsSUFBQUMsRUFXQSxTQUFBM0gsR0FDQSxJQUFBb0MsRUFDQWYsRUFDQXVHLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBR0FDLEVBQ0F4SSxFQUNBeUksRUFDQUMsRUFDQUMsRUFDQUMsRUFDQXhCLEVBQ0F5QixFQUdBMUMsRUFBQSxTQUFBLEVBQUEsSUFBQTJDLEtBQ0FDLEVBQUE1SSxFQUFBSCxTQUNBZ0osRUFBQSxFQUNBQyxFQUFBLEVBQ0FDLEVBQUFDLEtBQ0FDLEVBQUFELEtBQ0FFLEVBQUFGLEtBQ0FHLEVBQUFILEtBQ0FJLEVBQUEsU0FBQUMsRUFBQUMsR0FJQSxPQUhBRCxJQUFBQyxJQUNBbEIsR0FBQSxHQUVBLEdBSUFuSCxFQUFBLEdBQUFDLGVBQ0FmLEVBQUEsR0FDQW9KLEVBQUFwSixFQUFBb0osSUFDQUMsRUFBQXJKLEVBQUFVLEtBQ0FBLEVBQUFWLEVBQUFVLEtBQ0FOLEVBQUFKLEVBQUFJLE1BSUFPLEVBQUEsU0FBQTJJLEVBQUFuRixHQUdBLElBRkEsSUFBQWxDLEVBQUEsRUFDQTJDLEVBQUEwRSxFQUFBbEcsT0FDQW5CLEVBQUEyQyxFQUFBM0MsSUFDQSxHQUFBcUgsRUFBQXJILEtBQUFrQyxFQUNBLE9BQUFsQyxFQUdBLE9BQUEsR0FHQXNILEVBQUEsNkhBTUFDLEVBQUEsc0JBR0FDLEVBQUEsMEJBQUFELEVBQ0EsMENBR0FFLEVBQUEsTUFBQUYsRUFBQSxLQUFBQyxFQUFBLE9BQUFELEVBR0EsZ0JBQUFBLEVBSUEsMkRBQUFDLEVBQUEsT0FDQUQsRUFBQSxPQUVBRyxFQUFBLEtBQUFGLEVBQUEsd0ZBT0FDLEVBQUEsZUFPQUUsRUFBQSxJQUFBQyxPQUFBTCxFQUFBLElBQUEsS0FDQU0sRUFBQSxJQUFBRCxPQUFBLElBQUFMLEVBQUEsOEJBQ0FBLEVBQUEsS0FBQSxLQUVBTyxFQUFBLElBQUFGLE9BQUEsSUFBQUwsRUFBQSxLQUFBQSxFQUFBLEtBQ0FRLEVBQUEsSUFBQUgsT0FBQSxJQUFBTCxFQUFBLFdBQUFBLEVBQUEsSUFBQUEsRUFDQSxLQUNBUyxFQUFBLElBQUFKLE9BQUFMLEVBQUEsTUFFQVUsRUFBQSxJQUFBTCxPQUFBRixHQUNBUSxFQUFBLElBQUFOLE9BQUEsSUFBQUosRUFBQSxLQUVBVyxFQUFBLENBQ0FDLEdBQUEsSUFBQVIsT0FBQSxNQUFBSixFQUFBLEtBQ0FhLE1BQUEsSUFBQVQsT0FBQSxRQUFBSixFQUFBLEtBQ0FjLElBQUEsSUFBQVYsT0FBQSxLQUFBSixFQUFBLFNBQ0FlLEtBQUEsSUFBQVgsT0FBQSxJQUFBSCxHQUNBZSxPQUFBLElBQUFaLE9BQUEsSUFBQUYsR0FDQWUsTUFBQSxJQUFBYixPQUFBLHlEQUNBTCxFQUFBLCtCQUFBQSxFQUFBLGNBQ0FBLEVBQUEsYUFBQUEsRUFBQSxTQUFBLEtBQ0FtQixLQUFBLElBQUFkLE9BQUEsT0FBQU4sRUFBQSxLQUFBLEtBSUFxQixhQUFBLElBQUFmLE9BQUEsSUFBQUwsRUFDQSxtREFBQUEsRUFDQSxtQkFBQUEsRUFBQSxtQkFBQSxNQUdBcUIsRUFBQSxTQUNBQyxFQUFBLHNDQUNBQyxFQUFBLFNBRUFDLEVBQUEseUJBR0FDLEVBQUEsbUNBRUFDLEdBQUEsT0FJQUMsR0FBQSxJQUFBdEIsT0FBQSx1QkFBQUwsRUFBQSx1QkFBQSxLQUNBNEIsR0FBQSxTQUFBQyxFQUFBQyxHQUNBLElBQUFDLEVBQUEsS0FBQUYsRUFBQWpMLE1BQUEsR0FBQSxNQUVBLE9BQUFrTCxJQVNBQyxFQUFBLEVBQ0FDLE9BQUFDLGFBQUFGLEVBQUEsT0FDQUMsT0FBQUMsYUFBQUYsR0FBQSxHQUFBLE1BQUEsS0FBQUEsRUFBQSxTQUtBRyxHQUFBLHNEQUNBQyxHQUFBLFNBQUFDLEVBQUFDLEdBQ0EsT0FBQUEsRUFHQSxPQUFBRCxFQUNBLElBSUFBLEVBQUF4TCxNQUFBLEdBQUEsR0FBQSxLQUNBd0wsRUFBQUUsV0FBQUYsRUFBQXhJLE9BQUEsR0FBQXZDLFNBQUEsSUFBQSxJQUlBLEtBQUErSyxHQU9BRyxHQUFBLFdBQ0E3RCxLQUdBOEQsR0FBQUMsR0FDQSxTQUFBOUgsR0FDQSxPQUFBLElBQUFBLEVBQUErSCxVQUFBLGFBQUEvSCxFQUFBZ0ksU0FBQTVFLGVBRUEsQ0FBQTZFLElBQUEsYUFBQUMsS0FBQSxXQUlBLElBQ0EzTCxFQUFBRCxNQUNBVCxFQUFBSSxFQUFBRyxLQUFBa0ksRUFBQTZELFlBQ0E3RCxFQUFBNkQsWUFNQXRNLEVBQUF5SSxFQUFBNkQsV0FBQWxKLFFBQUEvQixTQUNBLE1BQUFrTCxHQUNBN0wsRUFBQSxDQUFBRCxNQUFBVCxFQUFBb0QsT0FHQSxTQUFBbUMsRUFBQWlILEdBQ0FuRCxFQUFBNUksTUFBQThFLEVBQUFuRixFQUFBRyxLQUFBaU0sS0FLQSxTQUFBakgsRUFBQWlILEdBS0EsSUFKQSxJQUFBM0gsRUFBQVUsRUFBQW5DLE9BQ0FuQixFQUFBLEVBR0FzRCxFQUFBVixLQUFBMkgsRUFBQXZLLE9BQ0FzRCxFQUFBbkMsT0FBQXlCLEVBQUEsSUFLQSxTQUFBMkMsR0FBQXpFLEVBQUFDLEVBQUEwRCxFQUFBK0YsR0FDQSxJQUFBQyxFQUFBekssRUFBQWtDLEVBQUF3SSxFQUFBQyxFQUFBQyxFQUFBQyxFQUNBQyxFQUFBL0osR0FBQUEsRUFBQWdLLGNBR0EzTCxFQUFBMkIsRUFBQUEsRUFBQTNCLFNBQUEsRUFLQSxHQUhBcUYsRUFBQUEsR0FBQSxHQUdBLGlCQUFBM0QsSUFBQUEsR0FDQSxJQUFBMUIsR0FBQSxJQUFBQSxHQUFBLEtBQUFBLEVBRUEsT0FBQXFGLEVBSUEsSUFBQStGLElBQ0F2RSxFQUFBbEYsR0FDQUEsRUFBQUEsR0FBQXRELEVBRUEwSSxHQUFBLENBSUEsR0FBQSxLQUFBL0csSUFBQXVMLEVBQUEzQixFQUFBZ0MsS0FBQWxLLElBR0EsR0FBQTJKLEVBQUFFLEVBQUEsSUFHQSxHQUFBLElBQUF2TCxFQUFBLENBQ0EsS0FBQThDLEVBQUFuQixFQUFBa0ssZUFBQVIsSUFVQSxPQUFBaEcsRUFMQSxHQUFBdkMsRUFBQWdKLEtBQUFULEVBRUEsT0FEQWhHLEVBQUFoRyxLQUFBeUQsR0FDQXVDLE9BWUEsR0FBQXFHLElBQUE1SSxFQUFBNEksRUFBQUcsZUFBQVIsS0FDQW5FLEVBQUF2RixFQUFBbUIsSUFDQUEsRUFBQWdKLEtBQUFULEVBR0EsT0FEQWhHLEVBQUFoRyxLQUFBeUQsR0FDQXVDLE1BS0EsQ0FBQSxHQUFBa0csRUFBQSxHQUVBLE9BREFsTSxFQUFBRCxNQUFBaUcsRUFBQTFELEVBQUFvSyxxQkFBQXJLLElBQ0EyRCxFQUdBLElBQUFnRyxFQUFBRSxFQUFBLEtBQUExTCxFQUFBbU0sd0JBQ0FySyxFQUFBcUssdUJBR0EsT0FEQTNNLEVBQUFELE1BQUFpRyxFQUFBMUQsRUFBQXFLLHVCQUFBWCxJQUNBaEcsRUFLQSxHQUFBeEYsRUFBQW9NLE1BQ0F0RSxFQUFBakcsRUFBQSxRQUNBc0YsSUFBQUEsRUFBQWtGLEtBQUF4SyxNQUlBLElBQUExQixHQUFBLFdBQUEyQixFQUFBbUosU0FBQTVFLGVBQUEsQ0FZQSxHQVZBdUYsRUFBQS9KLEVBQ0FnSyxFQUFBL0osRUFTQSxJQUFBM0IsSUFDQTRJLEVBQUFzRCxLQUFBeEssSUFBQWlILEVBQUF1RCxLQUFBeEssSUFBQSxDQXFCQSxLQWxCQWdLLEVBQUE3QixHQUFBcUMsS0FBQXhLLElBQUF5SyxHQUFBeEssRUFBQU4sYUFDQU0sS0FJQUEsR0FBQTlCLEVBQUF1TSxTQUdBZCxFQUFBM0osRUFBQVYsYUFBQSxPQUNBcUssRUFBQUEsRUFBQTNHLFFBQUEwRixHQUFBQyxJQUVBM0ksRUFBQVQsYUFBQSxLQUFBb0ssRUFBQTlHLElBTUE1RCxHQURBNEssRUFBQWpGLEVBQUE3RSxJQUNBSyxPQUNBbkIsS0FDQTRLLEVBQUE1SyxJQUFBMEssRUFBQSxJQUFBQSxFQUFBLFVBQUEsSUFDQWUsR0FBQWIsRUFBQTVLLElBRUE2SyxFQUFBRCxFQUFBYyxLQUFBLEtBR0EsSUFTQSxHQUFBek0sRUFBQTBNLHNCQUdBQyxJQUFBQyxTQUFBLGdCQUFBaEIsRUFBQSxNQU9BLE1BQUEsSUFBQWxOLE1BTUEsT0FIQWMsRUFBQUQsTUFBQWlHLEVBQ0FxRyxFQUFBZ0IsaUJBQUFqQixJQUVBcEcsRUFDQSxNQUFBc0gsR0FDQWhGLEVBQUFqRyxHQUFBLEdBQ0EsUUFDQTRKLElBQUE5RyxHQUNBN0MsRUFBQWlMLGdCQUFBLFFBUUEsT0FBQW5HLEVBQUEvRSxFQUFBaUQsUUFBQThELEVBQUEsTUFBQTlHLEVBQUEwRCxFQUFBK0YsR0FTQSxTQUFBNUQsS0FDQSxJQUFBcUYsRUFBQSxHQVlBLE9BVkEsU0FBQUMsRUFBQUMsRUFBQW5ILEdBUUEsT0FMQWlILEVBQUF4TixLQUFBME4sRUFBQSxLQUFBM0csRUFBQTRHLG9CQUdBRixFQUFBRCxFQUFBSSxTQUVBSCxFQUFBQyxFQUFBLEtBQUFuSCxHQVNBLFNBQUFzSCxHQUFBdEwsR0FFQSxPQURBQSxFQUFBNEMsSUFBQSxFQUNBNUMsRUFPQSxTQUFBdUwsR0FBQXZMLEdBQ0EsSUFBQXdMLEVBQUEvTyxFQUFBMEMsY0FBQSxZQUVBLElBQ0EsUUFBQWEsRUFBQXdMLEdBQ0EsTUFBQWxDLEdBQ0EsT0FBQSxFQUNBLFFBR0FrQyxFQUFBL0wsWUFDQStMLEVBQUEvTCxXQUFBQyxZQUFBOEwsR0FJQUEsRUFBQSxNQVNBLFNBQUFDLEdBQUFDLEVBQUFDLEdBSUEsSUFIQSxJQUFBNU8sRUFBQTJPLEVBQUF0SCxNQUFBLEtBQ0FwRixFQUFBakMsRUFBQW9ELE9BRUFuQixLQUNBd0YsRUFBQW9ILFdBQUE3TyxFQUFBaUMsSUFBQTJNLEVBVUEsU0FBQUUsR0FBQTVGLEVBQUFDLEdBQ0EsSUFBQTRGLEVBQUE1RixHQUFBRCxFQUNBOEYsRUFBQUQsR0FBQSxJQUFBN0YsRUFBQTdILFVBQUEsSUFBQThILEVBQUE5SCxVQUNBNkgsRUFBQStGLFlBQUE5RixFQUFBOEYsWUFHQSxHQUFBRCxFQUNBLE9BQUFBLEVBSUEsR0FBQUQsRUFDQSxLQUFBQSxFQUFBQSxFQUFBRyxhQUNBLEdBQUFILElBQUE1RixFQUNBLE9BQUEsRUFLQSxPQUFBRCxFQUFBLEdBQUEsRUFPQSxTQUFBaUcsR0FBQTFOLEdBQ0EsT0FBQSxTQUFBMEMsR0FFQSxNQUFBLFVBREFBLEVBQUFnSSxTQUFBNUUsZUFDQXBELEVBQUExQyxPQUFBQSxHQVFBLFNBQUEyTixHQUFBM04sR0FDQSxPQUFBLFNBQUEwQyxHQUNBLElBQUFnQixFQUFBaEIsRUFBQWdJLFNBQUE1RSxjQUNBLE9BQUEsVUFBQXBDLEdBQUEsV0FBQUEsSUFBQWhCLEVBQUExQyxPQUFBQSxHQVFBLFNBQUE0TixHQUFBbkQsR0FHQSxPQUFBLFNBQUEvSCxHQUtBLE1BQUEsU0FBQUEsRUFTQUEsRUFBQXpCLGFBQUEsSUFBQXlCLEVBQUErSCxTQUdBLFVBQUEvSCxFQUNBLFVBQUFBLEVBQUF6QixXQUNBeUIsRUFBQXpCLFdBQUF3SixXQUFBQSxFQUVBL0gsRUFBQStILFdBQUFBLEVBTUEvSCxFQUFBbUwsYUFBQXBELEdBSUEvSCxFQUFBbUwsY0FBQXBELEdBQ0FGLEdBQUE3SCxLQUFBK0gsRUFHQS9ILEVBQUErSCxXQUFBQSxFQUtBLFVBQUEvSCxHQUNBQSxFQUFBK0gsV0FBQUEsR0FZQSxTQUFBcUQsR0FBQXRNLEdBQ0EsT0FBQXNMLEdBQUEsU0FBQWlCLEdBRUEsT0FEQUEsR0FBQUEsRUFDQWpCLEdBQUEsU0FBQTlCLEVBQUEzRixHQU1BLElBTEEsSUFBQWpDLEVBQ0E0SyxFQUFBeE0sRUFBQSxHQUFBd0osRUFBQXJKLE9BQUFvTSxHQUNBdk4sRUFBQXdOLEVBQUFyTSxPQUdBbkIsS0FDQXdLLEVBQUE1SCxFQUFBNEssRUFBQXhOLE1BQ0F3SyxFQUFBNUgsS0FBQWlDLEVBQUFqQyxHQUFBNEgsRUFBQTVILFNBWUEsU0FBQTJJLEdBQUF4SyxHQUNBLE9BQUFBLFFBQUEsSUFBQUEsRUFBQW9LLHNCQUFBcEssRUE2dENBLElBQUFmLEtBenRDQWYsRUFBQXNHLEdBQUF0RyxRQUFBLEdBT0F5RyxFQUFBSCxHQUFBRyxNQUFBLFNBQUF4RCxHQUNBLElBQUF1TCxFQUFBdkwsR0FBQUEsRUFBQXdMLGFBQ0F4SCxFQUFBaEUsSUFBQUEsRUFBQTZJLGVBQUE3SSxHQUFBeUwsZ0JBS0EsT0FBQS9FLEVBQUEwQyxLQUFBbUMsR0FBQXZILEdBQUFBLEVBQUFnRSxVQUFBLFNBUUFqRSxFQUFBVixHQUFBVSxZQUFBLFNBQUFuRyxHQUNBLElBQUE4TixFQUFBQyxFQUNBOU4sRUFBQUQsRUFBQUEsRUFBQWlMLGVBQUFqTCxFQUFBMEcsRUFPQSxPQUFBekcsR0FBQXRDLEdBQUEsSUFBQXNDLEVBQUFYLFVBQUFXLEVBQUE0TixrQkFNQXpILEdBREF6SSxFQUFBc0MsR0FDQTROLGdCQUNBeEgsR0FBQVQsRUFBQWpJLEdBUUErSSxHQUFBL0ksSUFDQW9RLEVBQUFwUSxFQUFBcVEsY0FBQUQsRUFBQUUsTUFBQUYsSUFHQUEsRUFBQUcsaUJBQ0FILEVBQUFHLGlCQUFBLFNBQUFsRSxJQUFBLEdBR0ErRCxFQUFBSSxhQUNBSixFQUFBSSxZQUFBLFdBQUFuRSxLQVNBN0ssRUFBQXVNLE1BQUFlLEdBQUEsU0FBQUMsR0FFQSxPQURBdEcsRUFBQTFGLFlBQUFnTSxHQUFBaE0sWUFBQS9DLEVBQUEwQyxjQUFBLGFBQ0EsSUFBQXFNLEVBQUFWLG1CQUNBVSxFQUFBVixpQkFBQSx1QkFBQTNLLFNBUUFsQyxFQUFBME0sb0JBQUFZLEdBQUEsV0FHQSxPQUFBWCxJQUFBQyxTQUFBLGdCQU1BcE8sRUFBQXFPLGlCQUFBLGtCQU1BRixJQUFBQyxTQUFBLDhCQVdBNU0sRUFBQXdJLFdBQUE4RSxHQUFBLFNBQUFDLEdBRUEsT0FEQUEsRUFBQTBCLFVBQUEsS0FDQTFCLEVBQUFuTSxhQUFBLGVBT0FwQixFQUFBa00scUJBQUFvQixHQUFBLFNBQUFDLEdBRUEsT0FEQUEsRUFBQWhNLFlBQUEvQyxFQUFBMFEsY0FBQSxNQUNBM0IsRUFBQXJCLHFCQUFBLEtBQUFoSyxTQUlBbEMsRUFBQW1NLHVCQUFBckMsRUFBQXVDLEtBQUE3TixFQUFBMk4sd0JBTUFuTSxFQUFBbVAsUUFBQTdCLEdBQUEsU0FBQUMsR0FFQSxPQURBdEcsRUFBQTFGLFlBQUFnTSxHQUFBdEIsR0FBQXRILEdBQ0FuRyxFQUFBNFEsb0JBQUE1USxFQUFBNFEsa0JBQUF6SyxHQUFBekMsU0FJQWxDLEVBQUFtUCxTQUNBNUksRUFBQThJLE9BQUEsR0FBQSxTQUFBcEQsR0FDQSxJQUFBcUQsRUFBQXJELEVBQUFuSCxRQUFBbUYsR0FBQUMsSUFDQSxPQUFBLFNBQUFqSCxHQUNBLE9BQUFBLEVBQUE3QixhQUFBLFFBQUFrTyxJQUdBL0ksRUFBQWdKLEtBQUEsR0FBQSxTQUFBdEQsRUFBQW5LLEdBQ0EsUUFBQSxJQUFBQSxFQUFBa0ssZ0JBQUE5RSxFQUFBLENBQ0EsSUFBQWpFLEVBQUFuQixFQUFBa0ssZUFBQUMsR0FDQSxPQUFBaEosRUFBQSxDQUFBQSxHQUFBLE9BSUFzRCxFQUFBOEksT0FBQSxHQUFBLFNBQUFwRCxHQUNBLElBQUFxRCxFQUFBckQsRUFBQW5ILFFBQUFtRixHQUFBQyxJQUNBLE9BQUEsU0FBQWpILEdBQ0EsSUFBQXBDLE9BQUEsSUFBQW9DLEVBQUF1TSxrQkFDQXZNLEVBQUF1TSxpQkFBQSxNQUNBLE9BQUEzTyxHQUFBQSxFQUFBa0YsUUFBQXVKLElBTUEvSSxFQUFBZ0osS0FBQSxHQUFBLFNBQUF0RCxFQUFBbkssR0FDQSxRQUFBLElBQUFBLEVBQUFrSyxnQkFBQTlFLEVBQUEsQ0FDQSxJQUFBckcsRUFBQUUsRUFBQTJCLEVBQ0FPLEVBQUFuQixFQUFBa0ssZUFBQUMsR0FFQSxHQUFBaEosRUFBQSxDQUlBLElBREFwQyxFQUFBb0MsRUFBQXVNLGlCQUFBLFFBQ0EzTyxFQUFBa0YsUUFBQWtHLEVBQ0EsTUFBQSxDQUFBaEosR0FNQSxJQUZBUCxFQUFBWixFQUFBc04sa0JBQUFuRCxHQUNBbEwsRUFBQSxFQUNBa0MsRUFBQVAsRUFBQTNCLE1BRUEsSUFEQUYsRUFBQW9DLEVBQUF1TSxpQkFBQSxRQUNBM08sRUFBQWtGLFFBQUFrRyxFQUNBLE1BQUEsQ0FBQWhKLEdBS0EsTUFBQSxNQU1Bc0QsRUFBQWdKLEtBQUEsSUFBQXZQLEVBQUFrTSxxQkFDQSxTQUFBdUQsRUFBQTNOLEdBQ0EsWUFBQSxJQUFBQSxFQUFBb0sscUJBQ0FwSyxFQUFBb0sscUJBQUF1RCxHQUdBelAsRUFBQW9NLElBQ0F0SyxFQUFBK0ssaUJBQUE0QyxRQURBLEdBS0EsU0FBQUEsRUFBQTNOLEdBQ0EsSUFBQW1CLEVBQ0F5TSxFQUFBLEdBQ0EzTyxFQUFBLEVBR0F5RSxFQUFBMUQsRUFBQW9LLHFCQUFBdUQsR0FHQSxHQUFBLE1BQUFBLEVBU0EsT0FBQWpLLEVBUkEsS0FBQXZDLEVBQUF1QyxFQUFBekUsTUFDQSxJQUFBa0MsRUFBQTlDLFVBQ0F1UCxFQUFBbFEsS0FBQXlELEdBSUEsT0FBQXlNLEdBTUFuSixFQUFBZ0osS0FBQSxNQUFBdlAsRUFBQW1NLHdCQUFBLFNBQUE4QyxFQUFBbk4sR0FDQSxRQUFBLElBQUFBLEVBQUFxSyx3QkFBQWpGLEVBQ0EsT0FBQXBGLEVBQUFxSyx1QkFBQThDLElBVUE3SCxFQUFBLEdBT0FELEVBQUEsSUFFQW5ILEVBQUFvTSxJQUFBdEMsRUFBQXVDLEtBQUE3TixFQUFBcU8scUJBSUFTLEdBQUEsU0FBQUMsR0FFQSxJQUFBb0MsRUFPQTFJLEVBQUExRixZQUFBZ00sR0FBQXFDLFVBQUEsVUFBQWpMLEVBQUEscUJBQ0FBLEVBQUEsa0VBT0E0SSxFQUFBVixpQkFBQSx3QkFBQTNLLFFBQ0FpRixFQUFBM0gsS0FBQSxTQUFBOEksRUFBQSxnQkFLQWlGLEVBQUFWLGlCQUFBLGNBQUEzSyxRQUNBaUYsRUFBQTNILEtBQUEsTUFBQThJLEVBQUEsYUFBQUQsRUFBQSxLQUlBa0YsRUFBQVYsaUJBQUEsUUFBQWxJLEVBQUEsTUFBQXpDLFFBQ0FpRixFQUFBM0gsS0FBQSxPQVFBbVEsRUFBQW5SLEVBQUEwQyxjQUFBLFVBQ0FHLGFBQUEsT0FBQSxJQUNBa00sRUFBQWhNLFlBQUFvTyxHQUNBcEMsRUFBQVYsaUJBQUEsYUFBQTNLLFFBQ0FpRixFQUFBM0gsS0FBQSxNQUFBOEksRUFBQSxRQUFBQSxFQUFBLEtBQ0FBLEVBQUEsZ0JBTUFpRixFQUFBVixpQkFBQSxZQUFBM0ssUUFDQWlGLEVBQUEzSCxLQUFBLFlBTUErTixFQUFBVixpQkFBQSxLQUFBbEksRUFBQSxNQUFBekMsUUFDQWlGLEVBQUEzSCxLQUFBLFlBS0ErTixFQUFBVixpQkFBQSxRQUNBMUYsRUFBQTNILEtBQUEsaUJBR0E4TixHQUFBLFNBQUFDLEdBQ0FBLEVBQUFxQyxVQUFBLG9GQUtBLElBQUFELEVBQUFuUixFQUFBMEMsY0FBQSxTQUNBeU8sRUFBQXRPLGFBQUEsT0FBQSxVQUNBa00sRUFBQWhNLFlBQUFvTyxHQUFBdE8sYUFBQSxPQUFBLEtBSUFrTSxFQUFBVixpQkFBQSxZQUFBM0ssUUFDQWlGLEVBQUEzSCxLQUFBLE9BQUE4SSxFQUFBLGVBS0EsSUFBQWlGLEVBQUFWLGlCQUFBLFlBQUEzSyxRQUNBaUYsRUFBQTNILEtBQUEsV0FBQSxhQUtBeUgsRUFBQTFGLFlBQUFnTSxHQUFBdkMsVUFBQSxFQUNBLElBQUF1QyxFQUFBVixpQkFBQSxhQUFBM0ssUUFDQWlGLEVBQUEzSCxLQUFBLFdBQUEsYUFLQStOLEVBQUFWLGlCQUFBLFFBQ0ExRixFQUFBM0gsS0FBQSxZQUlBUSxFQUFBNlAsZ0JBQUEvRixFQUFBdUMsS0FBQXpHLEVBQUFxQixFQUFBckIsU0FDQXFCLEVBQUE2SSx1QkFDQTdJLEVBQUE4SSxvQkFDQTlJLEVBQUErSSxrQkFDQS9JLEVBQUFnSixxQkFFQTNDLEdBQUEsU0FBQUMsR0FJQXZOLEVBQUFrUSxrQkFBQXRLLEVBQUF2RyxLQUFBa08sRUFBQSxLQUlBM0gsRUFBQXZHLEtBQUFrTyxFQUFBLGFBQ0FuRyxFQUFBNUgsS0FBQSxLQUFBaUosS0FJQXpJLEVBQUEwTSxxQkFRQXZGLEVBQUEzSCxLQUFBLFFBR0EySCxFQUFBQSxFQUFBakYsUUFBQSxJQUFBeUcsT0FBQXhCLEVBQUFzRixLQUFBLE1BQ0FyRixFQUFBQSxFQUFBbEYsUUFBQSxJQUFBeUcsT0FBQXZCLEVBQUFxRixLQUFBLE1BSUFrQyxFQUFBN0UsRUFBQXVDLEtBQUFwRixFQUFBa0oseUJBS0E5SSxFQUFBc0gsR0FBQTdFLEVBQUF1QyxLQUFBcEYsRUFBQUksVUFDQSxTQUFBVyxFQUFBQyxHQVFBLElBQUFtSSxFQUFBLElBQUFwSSxFQUFBN0gsVUFBQTZILEVBQUEwRyxpQkFBQTFHLEVBQ0FxSSxFQUFBcEksR0FBQUEsRUFBQXpHLFdBQ0EsT0FBQXdHLElBQUFxSSxNQUFBQSxHQUFBLElBQUFBLEVBQUFsUSxZQUNBaVEsRUFBQS9JLFNBQ0ErSSxFQUFBL0ksU0FBQWdKLEdBQ0FySSxFQUFBbUkseUJBQUEsR0FBQW5JLEVBQUFtSSx3QkFBQUUsTUFHQSxTQUFBckksRUFBQUMsR0FDQSxHQUFBQSxFQUNBLEtBQUFBLEVBQUFBLEVBQUF6RyxZQUNBLEdBQUF5RyxJQUFBRCxFQUNBLE9BQUEsRUFJQSxPQUFBLEdBT0FELEVBQUE0RyxFQUNBLFNBQUEzRyxFQUFBQyxHQUdBLEdBQUFELElBQUFDLEVBRUEsT0FEQWxCLEdBQUEsRUFDQSxFQUlBLElBQUF1SixHQUFBdEksRUFBQW1JLHlCQUFBbEksRUFBQWtJLHdCQUNBLE9BQUFHLElBZ0JBLEdBUEFBLEdBQUF0SSxFQUFBOEQsZUFBQTlELEtBQUFDLEVBQUE2RCxlQUFBN0QsR0FDQUQsRUFBQW1JLHdCQUFBbEksR0FHQSxLQUlBakksRUFBQXVRLGNBQUF0SSxFQUFBa0ksd0JBQUFuSSxLQUFBc0ksRUFPQXRJLEdBQUF4SixHQUFBd0osRUFBQThELGVBQUF2RSxHQUNBRixFQUFBRSxFQUFBUyxJQUNBLEVBT0FDLEdBQUF6SixHQUFBeUosRUFBQTZELGVBQUF2RSxHQUNBRixFQUFBRSxFQUFBVSxHQUNBLEVBSUFuQixFQUNBckgsRUFBQXFILEVBQUFrQixHQUFBdkksRUFBQXFILEVBQUFtQixHQUNBLEVBR0EsRUFBQXFJLEdBQUEsRUFBQSxJQUVBLFNBQUF0SSxFQUFBQyxHQUdBLEdBQUFELElBQUFDLEVBRUEsT0FEQWxCLEdBQUEsRUFDQSxFQUdBLElBQUE4RyxFQUNBOU0sRUFBQSxFQUNBeVAsRUFBQXhJLEVBQUF4RyxXQUNBNk8sRUFBQXBJLEVBQUF6RyxXQUNBaVAsRUFBQSxDQUFBekksR0FDQTBJLEVBQUEsQ0FBQXpJLEdBR0EsSUFBQXVJLElBQUFILEVBTUEsT0FBQXJJLEdBQUF4SixHQUFBLEVBQ0F5SixHQUFBekosRUFBQSxFQUVBZ1MsR0FBQSxFQUNBSCxFQUFBLEVBQ0F2SixFQUNBckgsRUFBQXFILEVBQUFrQixHQUFBdkksRUFBQXFILEVBQUFtQixHQUNBLEVBR0EsR0FBQXVJLElBQUFILEVBQ0EsT0FBQXpDLEdBQUE1RixFQUFBQyxHQUtBLElBREE0RixFQUFBN0YsRUFDQTZGLEVBQUFBLEVBQUFyTSxZQUNBaVAsRUFBQUUsUUFBQTlDLEdBR0EsSUFEQUEsRUFBQTVGLEVBQ0E0RixFQUFBQSxFQUFBck0sWUFDQWtQLEVBQUFDLFFBQUE5QyxHQUlBLEtBQUE0QyxFQUFBMVAsS0FBQTJQLEVBQUEzUCxJQUNBQSxJQUdBLE9BQUFBLEVBR0E2TSxHQUFBNkMsRUFBQTFQLEdBQUEyUCxFQUFBM1AsSUFPQTBQLEVBQUExUCxJQUFBd0csR0FBQSxFQUNBbUosRUFBQTNQLElBQUF3RyxFQUFBLEVBRUEsSUFHQS9JLEdBR0E4SCxHQUFBVixRQUFBLFNBQUFnTCxFQUFBQyxHQUNBLE9BQUF2SyxHQUFBc0ssRUFBQSxLQUFBLEtBQUFDLElBR0F2SyxHQUFBdUosZ0JBQUEsU0FBQTVNLEVBQUEyTixHQUdBLEdBRkE1SixFQUFBL0QsR0FFQWpELEVBQUE2UCxpQkFBQTNJLElBQ0FZLEVBQUE4SSxFQUFBLFFBQ0F4SixJQUFBQSxFQUFBaUYsS0FBQXVFLE9BQ0F6SixJQUFBQSxFQUFBa0YsS0FBQXVFLElBRUEsSUFDQSxJQUFBak8sRUFBQWlELEVBQUF2RyxLQUFBNEQsRUFBQTJOLEdBR0EsR0FBQWpPLEdBQUEzQyxFQUFBa1EsbUJBSUFqTixFQUFBekUsVUFBQSxLQUFBeUUsRUFBQXpFLFNBQUEyQixTQUNBLE9BQUF3QyxFQUVBLE1BQUEwSSxHQUNBdkQsRUFBQThJLEdBQUEsR0FJQSxPQUFBLEVBQUF0SyxHQUFBc0ssRUFBQXBTLEVBQUEsS0FBQSxDQUFBeUUsSUFBQWYsUUFHQW9FLEdBQUFlLFNBQUEsU0FBQXZGLEVBQUFtQixHQVVBLE9BSEFuQixFQUFBZ0ssZUFBQWhLLElBQUF0RCxHQUNBd0ksRUFBQWxGLEdBRUF1RixFQUFBdkYsRUFBQW1CLElBR0FxRCxHQUFBd0ssS0FBQSxTQUFBN04sRUFBQWdCLElBT0FoQixFQUFBNkksZUFBQTdJLElBQUF6RSxHQUNBd0ksRUFBQS9ELEdBR0EsSUFBQWxCLEVBQUF3RSxFQUFBb0gsV0FBQTFKLEVBQUFvQyxlQUdBckYsRUFBQWUsR0FBQW5DLEVBQUFQLEtBQUFrSCxFQUFBb0gsV0FBQTFKLEVBQUFvQyxlQUNBdEUsRUFBQWtCLEVBQUFnQixHQUFBaUQsUUFDQXhDLEVBRUEsWUFBQUEsSUFBQTFELEVBQ0FBLEVBQ0FoQixFQUFBd0ksYUFBQXRCLEVBQ0FqRSxFQUFBN0IsYUFBQTZDLElBQ0FqRCxFQUFBaUMsRUFBQXVNLGlCQUFBdkwsS0FBQWpELEVBQUErUCxVQUNBL1AsRUFBQStFLE1BQ0EsTUFHQU8sR0FBQTZELE9BQUEsU0FBQTZHLEdBQ0EsT0FBQUEsRUFBQSxJQUFBbE0sUUFBQTBGLEdBQUFDLEtBR0FuRSxHQUFBdEIsTUFBQSxTQUFBQyxHQUNBLE1BQUEsSUFBQXZHLE1BQUEsMENBQUF1RyxJQU9BcUIsR0FBQTJLLFdBQUEsU0FBQXpMLEdBQ0EsSUFBQXZDLEVBQ0FpTyxFQUFBLEdBQ0F2TixFQUFBLEVBQ0E1QyxFQUFBLEVBT0EsR0FKQWdHLEdBQUEvRyxFQUFBbVIsaUJBQ0FySyxHQUFBOUcsRUFBQW9SLFlBQUE1TCxFQUFBdEcsTUFBQSxHQUNBc0csRUFBQTNCLEtBQUFrRSxHQUVBaEIsRUFBQSxDQUNBLEtBQUE5RCxFQUFBdUMsRUFBQXpFLE1BQ0FrQyxJQUFBdUMsRUFBQXpFLEtBQ0E0QyxFQUFBdU4sRUFBQTFSLEtBQUF1QixJQUdBLEtBQUE0QyxLQUNBNkIsRUFBQTFCLE9BQUFvTixFQUFBdk4sR0FBQSxHQVFBLE9BRkFtRCxFQUFBLEtBRUF0QixHQU9BZ0IsRUFBQUYsR0FBQUUsUUFBQSxTQUFBdkQsR0FDQSxJQUFBcEMsRUFDQThCLEVBQUEsR0FDQTVCLEVBQUEsRUFDQVosRUFBQThDLEVBQUE5QyxTQUVBLEdBQUFBLEdBUUEsR0FBQSxJQUFBQSxHQUFBLElBQUFBLEdBQUEsS0FBQUEsRUFBQSxDQUlBLEdBQUEsaUJBQUE4QyxFQUFBb08sWUFDQSxPQUFBcE8sRUFBQW9PLFlBSUEsSUFBQXBPLEVBQUFBLEVBQUFxTyxXQUFBck8sRUFBQUEsRUFBQUEsRUFBQStLLFlBQ0FyTCxHQUFBNkQsRUFBQXZELFFBR0EsR0FBQSxJQUFBOUMsR0FBQSxJQUFBQSxFQUNBLE9BQUE4QyxFQUFBc08sZUFuQkEsS0FBQTFRLEVBQUFvQyxFQUFBbEMsTUFHQTRCLEdBQUE2RCxFQUFBM0YsR0FxQkEsT0FBQThCLElBR0E0RCxFQUFBRCxHQUFBa0wsVUFBQSxDQUdBckUsWUFBQSxHQUVBc0UsYUFBQXBFLEdBRUEzQixNQUFBeEMsRUFFQXlFLFdBQUEsR0FFQTRCLEtBQUEsR0FFQW1DLFNBQUEsQ0FDQUMsSUFBQSxDQUFBekcsSUFBQSxhQUFBL0gsT0FBQSxHQUNBeU8sSUFBQSxDQUFBMUcsSUFBQSxjQUNBMkcsSUFBQSxDQUFBM0csSUFBQSxrQkFBQS9ILE9BQUEsR0FDQTJPLElBQUEsQ0FBQTVHLElBQUEsb0JBR0E2RyxVQUFBLENBQ0F6SSxLQUFBLFNBQUFvQyxHQVdBLE9BVkFBLEVBQUEsR0FBQUEsRUFBQSxHQUFBNUcsUUFBQW1GLEdBQUFDLElBR0F3QixFQUFBLElBQUFBLEVBQUEsSUFBQUEsRUFBQSxJQUNBQSxFQUFBLElBQUEsSUFBQTVHLFFBQUFtRixHQUFBQyxJQUVBLE9BQUF3QixFQUFBLEtBQ0FBLEVBQUEsR0FBQSxJQUFBQSxFQUFBLEdBQUEsS0FHQUEsRUFBQXhNLE1BQUEsRUFBQSxJQUdBc0ssTUFBQSxTQUFBa0MsR0FpQ0EsT0FyQkFBLEVBQUEsR0FBQUEsRUFBQSxHQUFBckYsY0FFQSxRQUFBcUYsRUFBQSxHQUFBeE0sTUFBQSxFQUFBLElBR0F3TSxFQUFBLElBQ0FwRixHQUFBdEIsTUFBQTBHLEVBQUEsSUFLQUEsRUFBQSxLQUFBQSxFQUFBLEdBQ0FBLEVBQUEsSUFBQUEsRUFBQSxJQUFBLEdBQ0EsR0FBQSxTQUFBQSxFQUFBLElBQUEsUUFBQUEsRUFBQSxLQUNBQSxFQUFBLEtBQUFBLEVBQUEsR0FBQUEsRUFBQSxJQUFBLFFBQUFBLEVBQUEsS0FHQUEsRUFBQSxJQUNBcEYsR0FBQXRCLE1BQUEwRyxFQUFBLElBR0FBLEdBR0FuQyxPQUFBLFNBQUFtQyxHQUNBLElBQUFzRyxFQUNBQyxHQUFBdkcsRUFBQSxJQUFBQSxFQUFBLEdBRUEsT0FBQXhDLEVBQUEsTUFBQW1ELEtBQUFYLEVBQUEsSUFDQSxNQUlBQSxFQUFBLEdBQ0FBLEVBQUEsR0FBQUEsRUFBQSxJQUFBQSxFQUFBLElBQUEsR0FHQXVHLEdBQUFqSixFQUFBcUQsS0FBQTRGLEtBR0FELEVBQUF0TCxFQUFBdUwsR0FBQSxNQUdBRCxFQUFBQyxFQUFBeFMsUUFBQSxJQUFBd1MsRUFBQS9QLE9BQUE4UCxHQUFBQyxFQUFBL1AsVUFHQXdKLEVBQUEsR0FBQUEsRUFBQSxHQUFBeE0sTUFBQSxFQUFBOFMsR0FDQXRHLEVBQUEsR0FBQXVHLEVBQUEvUyxNQUFBLEVBQUE4UyxJQUlBdEcsRUFBQXhNLE1BQUEsRUFBQSxNQUlBbVEsT0FBQSxDQUVBaEcsSUFBQSxTQUFBNkksR0FDQSxJQUFBakgsRUFBQWlILEVBQUFwTixRQUFBbUYsR0FBQUMsSUFBQTdELGNBQ0EsTUFBQSxNQUFBNkwsRUFDQSxXQUNBLE9BQUEsR0FFQSxTQUFBalAsR0FDQSxPQUFBQSxFQUFBZ0ksVUFBQWhJLEVBQUFnSSxTQUFBNUUsZ0JBQUE0RSxJQUlBN0IsTUFBQSxTQUFBNkYsR0FDQSxJQUFBa0QsRUFBQXpLLEVBQUF1SCxFQUFBLEtBRUEsT0FBQWtELElBQ0FBLEVBQUEsSUFBQXhKLE9BQUEsTUFBQUwsRUFDQSxJQUFBMkcsRUFBQSxJQUFBM0csRUFBQSxTQUFBWixFQUNBdUgsRUFBQSxTQUFBaE0sR0FDQSxPQUFBa1AsRUFBQTlGLEtBQ0EsaUJBQUFwSixFQUFBZ00sV0FBQWhNLEVBQUFnTSxnQkFDQSxJQUFBaE0sRUFBQTdCLGNBQ0E2QixFQUFBN0IsYUFBQSxVQUNBLE9BS0FrSSxLQUFBLFNBQUFyRixFQUFBbU8sRUFBQUMsR0FDQSxPQUFBLFNBQUFwUCxHQUNBLElBQUFxUCxFQUFBaE0sR0FBQXdLLEtBQUE3TixFQUFBZ0IsR0FFQSxPQUFBLE1BQUFxTyxFQUNBLE9BQUFGLEdBRUFBLElBSUFFLEdBQUEsR0FJQSxNQUFBRixFQUFBRSxJQUFBRCxFQUNBLE9BQUFELEVBQUFFLElBQUFELEVBQ0EsT0FBQUQsRUFBQUMsR0FBQSxJQUFBQyxFQUFBN1MsUUFBQTRTLEdBQ0EsT0FBQUQsRUFBQUMsSUFBQSxFQUFBQyxFQUFBN1MsUUFBQTRTLEdBQ0EsT0FBQUQsRUFBQUMsR0FBQUMsRUFBQXBULE9BQUFtVCxFQUFBblEsVUFBQW1RLEVBQ0EsT0FBQUQsR0FBQSxHQUFBLElBQUFFLEVBQUF4TixRQUFBNEQsRUFBQSxLQUFBLEtBQUFqSixRQUFBNFMsR0FDQSxPQUFBRCxJQUFBRSxJQUFBRCxHQUFBQyxFQUFBcFQsTUFBQSxFQUFBbVQsRUFBQW5RLE9BQUEsS0FBQW1RLEVBQUEsUUFPQTdJLE1BQUEsU0FBQWpKLEVBQUFnUyxFQUFBQyxFQUFBclAsRUFBQUUsR0FDQSxJQUFBb1AsRUFBQSxRQUFBbFMsRUFBQXJCLE1BQUEsRUFBQSxHQUNBd1QsRUFBQSxTQUFBblMsRUFBQXJCLE9BQUEsR0FDQXlULEVBQUEsWUFBQUosRUFFQSxPQUFBLElBQUFwUCxHQUFBLElBQUFFLEVBR0EsU0FBQUosR0FDQSxRQUFBQSxFQUFBekIsWUFHQSxTQUFBeUIsRUFBQTJQLEVBQUFDLEdBQ0EsSUFBQTVGLEVBQUE2RixFQUFBQyxFQUFBbFMsRUFBQW1TLEVBQUFDLEVBQ0EvSCxFQUFBdUgsSUFBQUMsRUFBQSxjQUFBLGtCQUNBUSxFQUFBalEsRUFBQXpCLFdBQ0F5QyxFQUFBME8sR0FBQTFQLEVBQUFnSSxTQUFBNUUsY0FDQThNLEdBQUFOLElBQUFGLEVBQ0E3RSxHQUFBLEVBRUEsR0FBQW9GLEVBQUEsQ0FHQSxHQUFBVCxFQUFBLENBQ0EsS0FBQXZILEdBQUEsQ0FFQSxJQURBckssRUFBQW9DLEVBQ0FwQyxFQUFBQSxFQUFBcUssSUFDQSxHQUFBeUgsRUFDQTlSLEVBQUFvSyxTQUFBNUUsZ0JBQUFwQyxFQUNBLElBQUFwRCxFQUFBVixTQUVBLE9BQUEsRUFLQThTLEVBQUEvSCxFQUFBLFNBQUEzSyxJQUFBMFMsR0FBQSxjQUVBLE9BQUEsRUFNQSxHQUhBQSxFQUFBLENBQUFQLEVBQUFRLEVBQUE1QixXQUFBNEIsRUFBQUUsV0FHQVYsR0FBQVMsR0FrQkEsSUFIQXJGLEdBREFrRixHQURBL0YsR0FIQTZGLEdBSkFDLEdBREFsUyxFQUFBcVMsR0FDQXZPLEtBQUE5RCxFQUFBOEQsR0FBQSxLQUlBOUQsRUFBQXdTLFlBQ0FOLEVBQUFsUyxFQUFBd1MsVUFBQSxLQUVBOVMsSUFBQSxJQUNBLEtBQUFpSCxHQUFBeUYsRUFBQSxLQUNBQSxFQUFBLEdBQ0FwTSxFQUFBbVMsR0FBQUUsRUFBQTlILFdBQUE0SCxHQUVBblMsSUFBQW1TLEdBQUFuUyxHQUFBQSxFQUFBcUssS0FHQTRDLEVBQUFrRixFQUFBLElBQUFDLEVBQUEvSyxPQUdBLEdBQUEsSUFBQXJILEVBQUFWLFlBQUEyTixHQUFBak4sSUFBQW9DLEVBQUEsQ0FDQTZQLEVBQUF2UyxHQUFBLENBQUFpSCxFQUFBd0wsRUFBQWxGLEdBQ0EsWUF5QkEsR0FsQkFxRixJQWFBckYsRUFEQWtGLEdBREEvRixHQUhBNkYsR0FKQUMsR0FEQWxTLEVBQUFvQyxHQUNBMEIsS0FBQTlELEVBQUE4RCxHQUFBLEtBSUE5RCxFQUFBd1MsWUFDQU4sRUFBQWxTLEVBQUF3UyxVQUFBLEtBRUE5UyxJQUFBLElBQ0EsS0FBQWlILEdBQUF5RixFQUFBLEtBTUEsSUFBQWEsRUFHQSxNQUFBak4sSUFBQW1TLEdBQUFuUyxHQUFBQSxFQUFBcUssS0FDQTRDLEVBQUFrRixFQUFBLElBQUFDLEVBQUEvSyxVQUVBeUssRUFDQTlSLEVBQUFvSyxTQUFBNUUsZ0JBQUFwQyxFQUNBLElBQUFwRCxFQUFBVixjQUNBMk4sSUFHQXFGLEtBTUFMLEdBTEFDLEVBQUFsUyxFQUFBOEQsS0FDQTlELEVBQUE4RCxHQUFBLEtBSUE5RCxFQUFBd1MsWUFDQU4sRUFBQWxTLEVBQUF3UyxVQUFBLEtBRUE5UyxHQUFBLENBQUFpSCxFQUFBc0csSUFHQWpOLElBQUFvQyxNQVVBLE9BREE2SyxHQUFBekssS0FDQUYsR0FBQTJLLEVBQUEzSyxHQUFBLEdBQUEsR0FBQTJLLEVBQUEzSyxLQUtBb0csT0FBQSxTQUFBK0osRUFBQWhGLEdBTUEsSUFBQWlGLEVBQ0F4UixFQUFBd0UsRUFBQWtDLFFBQUE2SyxJQUFBL00sRUFBQWlOLFdBQUFGLEVBQUFqTixnQkFDQUMsR0FBQXRCLE1BQUEsdUJBQUFzTyxHQUtBLE9BQUF2UixFQUFBNEMsR0FDQTVDLEVBQUF1TSxHQUlBLEVBQUF2TSxFQUFBRyxRQUNBcVIsRUFBQSxDQUFBRCxFQUFBQSxFQUFBLEdBQUFoRixHQUNBL0gsRUFBQWlOLFdBQUEzVCxlQUFBeVQsRUFBQWpOLGVBQ0FnSCxHQUFBLFNBQUE5QixFQUFBM0YsR0FJQSxJQUhBLElBQUE2TixFQUNBQyxFQUFBM1IsRUFBQXdKLEVBQUErQyxHQUNBdk4sRUFBQTJTLEVBQUF4UixPQUNBbkIsS0FFQXdLLEVBREFrSSxFQUFBaFUsRUFBQThMLEVBQUFtSSxFQUFBM1MsT0FDQTZFLEVBQUE2TixHQUFBQyxFQUFBM1MsTUFHQSxTQUFBa0MsR0FDQSxPQUFBbEIsRUFBQWtCLEVBQUEsRUFBQXNRLEtBSUF4UixJQUlBMEcsUUFBQSxDQUdBa0wsSUFBQXRHLEdBQUEsU0FBQXhMLEdBS0EsSUFBQThOLEVBQUEsR0FDQW5LLEVBQUEsR0FDQW9PLEVBQUFqTixFQUFBOUUsRUFBQWlELFFBQUE4RCxFQUFBLE9BRUEsT0FBQWdMLEVBQUFqUCxHQUNBMEksR0FBQSxTQUFBOUIsRUFBQTNGLEVBQUFnTixFQUFBQyxHQU1BLElBTEEsSUFBQTVQLEVBQ0E0USxFQUFBRCxFQUFBckksRUFBQSxLQUFBc0gsRUFBQSxJQUNBOVIsRUFBQXdLLEVBQUFySixPQUdBbkIsTUFDQWtDLEVBQUE0USxFQUFBOVMsTUFDQXdLLEVBQUF4SyxLQUFBNkUsRUFBQTdFLEdBQUFrQyxNQUlBLFNBQUFBLEVBQUEyUCxFQUFBQyxHQU1BLE9BTEFsRCxFQUFBLEdBQUExTSxFQUNBMlEsRUFBQWpFLEVBQUEsS0FBQWtELEVBQUFyTixHQUdBbUssRUFBQSxHQUFBLE1BQ0FuSyxFQUFBMEMsU0FJQTRMLElBQUF6RyxHQUFBLFNBQUF4TCxHQUNBLE9BQUEsU0FBQW9CLEdBQ0EsT0FBQSxFQUFBcUQsR0FBQXpFLEVBQUFvQixHQUFBZixVQUlBbUYsU0FBQWdHLEdBQUEsU0FBQWxNLEdBRUEsT0FEQUEsRUFBQUEsRUFBQTJELFFBQUFtRixHQUFBQyxJQUNBLFNBQUFqSCxHQUNBLE9BQUEsR0FBQUEsRUFBQW9PLGFBQUE3SyxFQUFBdkQsSUFBQXhELFFBQUEwQixNQVdBNFMsS0FBQTFHLEdBQUEsU0FBQTBHLEdBT0EsT0FKQTlLLEVBQUFvRCxLQUFBMEgsR0FBQSxLQUNBek4sR0FBQXRCLE1BQUEscUJBQUErTyxHQUVBQSxFQUFBQSxFQUFBalAsUUFBQW1GLEdBQUFDLElBQUE3RCxjQUNBLFNBQUFwRCxHQUNBLElBQUErUSxFQUNBLEdBQ0EsR0FBQUEsRUFBQTlNLEVBQ0FqRSxFQUFBOFEsS0FDQTlRLEVBQUE3QixhQUFBLGFBQUE2QixFQUFBN0IsYUFBQSxRQUdBLE9BREE0UyxFQUFBQSxFQUFBM04saUJBQ0EwTixHQUFBLElBQUFDLEVBQUF2VSxRQUFBc1UsRUFBQSxZQUVBOVEsRUFBQUEsRUFBQXpCLGFBQUEsSUFBQXlCLEVBQUE5QyxVQUNBLE9BQUEsS0FLQWtFLE9BQUEsU0FBQXBCLEdBQ0EsSUFBQWdSLEVBQUF0VixFQUFBdVYsVUFBQXZWLEVBQUF1VixTQUFBRCxLQUNBLE9BQUFBLEdBQUFBLEVBQUEvVSxNQUFBLEtBQUErRCxFQUFBZ0osSUFHQWtJLEtBQUEsU0FBQWxSLEdBQ0EsT0FBQUEsSUFBQWdFLEdBR0FtTixNQUFBLFNBQUFuUixHQUNBLE9BQUFBLElBQUF6RSxFQUFBNlYsaUJBQ0E3VixFQUFBOFYsVUFBQTlWLEVBQUE4VixnQkFDQXJSLEVBQUExQyxNQUFBMEMsRUFBQXNSLE9BQUF0UixFQUFBdVIsV0FJQUMsUUFBQXRHLElBQUEsR0FDQW5ELFNBQUFtRCxJQUFBLEdBRUF1RyxRQUFBLFNBQUF6UixHQUlBLElBQUFnSSxFQUFBaEksRUFBQWdJLFNBQUE1RSxjQUNBLE1BQUEsVUFBQTRFLEtBQUFoSSxFQUFBeVIsU0FDQSxXQUFBekosS0FBQWhJLEVBQUEwUixVQUdBQSxTQUFBLFNBQUExUixHQVNBLE9BTEFBLEVBQUF6QixZQUVBeUIsRUFBQXpCLFdBQUFvVCxlQUdBLElBQUEzUixFQUFBMFIsVUFJQUUsTUFBQSxTQUFBNVIsR0FNQSxJQUFBQSxFQUFBQSxFQUFBcU8sV0FBQXJPLEVBQUFBLEVBQUFBLEVBQUErSyxZQUNBLEdBQUEvSyxFQUFBOUMsU0FBQSxFQUNBLE9BQUEsRUFHQSxPQUFBLEdBR0ErUyxPQUFBLFNBQUFqUSxHQUNBLE9BQUFzRCxFQUFBa0MsUUFBQSxNQUFBeEYsSUFJQTZSLE9BQUEsU0FBQTdSLEdBQ0EsT0FBQTRHLEVBQUF3QyxLQUFBcEosRUFBQWdJLFdBR0EwRSxNQUFBLFNBQUExTSxHQUNBLE9BQUEyRyxFQUFBeUMsS0FBQXBKLEVBQUFnSSxXQUdBOEosT0FBQSxTQUFBOVIsR0FDQSxJQUFBZ0IsRUFBQWhCLEVBQUFnSSxTQUFBNUUsY0FDQSxNQUFBLFVBQUFwQyxHQUFBLFdBQUFoQixFQUFBMUMsTUFBQSxXQUFBMEQsR0FHQTlDLEtBQUEsU0FBQThCLEdBQ0EsSUFBQTZOLEVBQ0EsTUFBQSxVQUFBN04sRUFBQWdJLFNBQUE1RSxlQUNBLFNBQUFwRCxFQUFBMUMsT0FJQSxPQUFBdVEsRUFBQTdOLEVBQUE3QixhQUFBLFVBQ0EsU0FBQTBQLEVBQUF6SyxnQkFJQWxELE1BQUFrTCxHQUFBLFdBQ0EsTUFBQSxDQUFBLEtBR0FoTCxLQUFBZ0wsR0FBQSxTQUFBMkcsRUFBQTlTLEdBQ0EsTUFBQSxDQUFBQSxFQUFBLEtBR0FrQixHQUFBaUwsR0FBQSxTQUFBMkcsRUFBQTlTLEVBQUFvTSxHQUNBLE1BQUEsQ0FBQUEsRUFBQSxFQUFBQSxFQUFBcE0sRUFBQW9NLEtBR0FoTCxLQUFBK0ssR0FBQSxTQUFBRSxFQUFBck0sR0FFQSxJQURBLElBQUFuQixFQUFBLEVBQ0FBLEVBQUFtQixFQUFBbkIsR0FBQSxFQUNBd04sRUFBQS9PLEtBQUF1QixHQUVBLE9BQUF3TixJQUdBOUssSUFBQTRLLEdBQUEsU0FBQUUsRUFBQXJNLEdBRUEsSUFEQSxJQUFBbkIsRUFBQSxFQUNBQSxFQUFBbUIsRUFBQW5CLEdBQUEsRUFDQXdOLEVBQUEvTyxLQUFBdUIsR0FFQSxPQUFBd04sSUFHQTBHLEdBQUE1RyxHQUFBLFNBQUFFLEVBQUFyTSxFQUFBb00sR0FNQSxJQUxBLElBQUF2TixFQUFBdU4sRUFBQSxFQUNBQSxFQUFBcE0sRUFDQUEsRUFBQW9NLEVBQ0FwTSxFQUNBb00sRUFDQSxLQUFBdk4sR0FDQXdOLEVBQUEvTyxLQUFBdUIsR0FFQSxPQUFBd04sSUFHQTJHLEdBQUE3RyxHQUFBLFNBQUFFLEVBQUFyTSxFQUFBb00sR0FFQSxJQURBLElBQUF2TixFQUFBdU4sRUFBQSxFQUFBQSxFQUFBcE0sRUFBQW9NLElBQ0F2TixFQUFBbUIsR0FDQXFNLEVBQUEvTyxLQUFBdUIsR0FFQSxPQUFBd04sT0FLQTlGLFFBQUEsSUFBQWxDLEVBQUFrQyxRQUFBLEdBR0EsQ0FBQTBNLE9BQUEsRUFBQUMsVUFBQSxFQUFBQyxNQUFBLEVBQUFDLFVBQUEsRUFBQUMsT0FBQSxHQUNBaFAsRUFBQWtDLFFBQUExSCxHQUFBa04sR0FBQWxOLEdBRUEsSUFBQUEsSUFBQSxDQUFBeVUsUUFBQSxFQUFBQyxPQUFBLEdBQ0FsUCxFQUFBa0MsUUFBQTFILEdBQUFtTixHQUFBbk4sR0FJQSxTQUFBeVMsTUEwRUEsU0FBQWhILEdBQUFrSixHQUlBLElBSEEsSUFBQTNVLEVBQUEsRUFDQTJDLEVBQUFnUyxFQUFBeFQsT0FDQUwsRUFBQSxHQUNBZCxFQUFBMkMsRUFBQTNDLElBQ0FjLEdBQUE2VCxFQUFBM1UsR0FBQWdGLE1BRUEsT0FBQWxFLEVBR0EsU0FBQWtKLEdBQUE2SSxFQUFBK0IsRUFBQUMsR0FDQSxJQUFBMUssRUFBQXlLLEVBQUF6SyxJQUNBMkssRUFBQUYsRUFBQXhLLEtBQ0ErQixFQUFBMkksR0FBQTNLLEVBQ0E0SyxFQUFBRixHQUFBLGVBQUExSSxFQUNBNkksRUFBQXRPLElBRUEsT0FBQWtPLEVBQUF4UyxNQUdBLFNBQUFGLEVBQUFuQixFQUFBK1EsR0FDQSxLQUFBNVAsRUFBQUEsRUFBQWlJLElBQ0EsR0FBQSxJQUFBakksRUFBQTlDLFVBQUEyVixFQUNBLE9BQUFsQyxFQUFBM1EsRUFBQW5CLEVBQUErUSxHQUdBLE9BQUEsR0FJQSxTQUFBNVAsRUFBQW5CLEVBQUErUSxHQUNBLElBQUFtRCxFQUFBbEQsRUFBQUMsRUFDQWtELEVBQUEsQ0FBQXpPLEVBQUF1TyxHQUdBLEdBQUFsRCxHQUNBLEtBQUE1UCxFQUFBQSxFQUFBaUksSUFDQSxJQUFBLElBQUFqSSxFQUFBOUMsVUFBQTJWLElBQ0FsQyxFQUFBM1EsRUFBQW5CLEVBQUErUSxHQUNBLE9BQUEsT0FLQSxLQUFBNVAsRUFBQUEsRUFBQWlJLElBQ0EsR0FBQSxJQUFBakksRUFBQTlDLFVBQUEyVixFQVFBLEdBSEFoRCxHQUpBQyxFQUFBOVAsRUFBQTBCLEtBQUExQixFQUFBMEIsR0FBQSxLQUlBMUIsRUFBQW9RLFlBQ0FOLEVBQUE5UCxFQUFBb1EsVUFBQSxJQUVBd0MsR0FBQUEsSUFBQTVTLEVBQUFnSSxTQUFBNUUsY0FDQXBELEVBQUFBLEVBQUFpSSxJQUFBakksTUFDQSxDQUFBLElBQUErUyxFQUFBbEQsRUFBQTVGLEtBQ0E4SSxFQUFBLEtBQUF4TyxHQUFBd08sRUFBQSxLQUFBRCxFQUdBLE9BQUFFLEVBQUEsR0FBQUQsRUFBQSxHQU9BLElBSEFsRCxFQUFBNUYsR0FBQStJLEdBR0EsR0FBQXJDLEVBQUEzUSxFQUFBbkIsRUFBQStRLEdBQ0EsT0FBQSxFQU1BLE9BQUEsR0FJQSxTQUFBcUQsR0FBQUMsR0FDQSxPQUFBLEVBQUFBLEVBQUFqVSxPQUNBLFNBQUFlLEVBQUFuQixFQUFBK1EsR0FFQSxJQURBLElBQUE5UixFQUFBb1YsRUFBQWpVLE9BQ0FuQixLQUNBLElBQUFvVixFQUFBcFYsR0FBQWtDLEVBQUFuQixFQUFBK1EsR0FDQSxPQUFBLEVBR0EsT0FBQSxHQUVBc0QsRUFBQSxHQVlBLFNBQUFDLEdBQUF2QyxFQUFBN1EsRUFBQXFNLEVBQUF2TixFQUFBK1EsR0FPQSxJQU5BLElBQUE1UCxFQUNBb1QsRUFBQSxHQUNBdFYsRUFBQSxFQUNBMkMsRUFBQW1RLEVBQUEzUixPQUNBb1UsRUFBQSxNQUFBdFQsRUFFQWpDLEVBQUEyQyxFQUFBM0MsS0FDQWtDLEVBQUE0USxFQUFBOVMsTUFDQXNPLElBQUFBLEVBQUFwTSxFQUFBbkIsRUFBQStRLEtBQ0F3RCxFQUFBN1csS0FBQXlELEdBQ0FxVCxHQUNBdFQsRUFBQXhELEtBQUF1QixLQU1BLE9BQUFzVixFQUdBLFNBQUFFLEdBQUF4RSxFQUFBbFEsRUFBQStSLEVBQUE0QyxFQUFBQyxFQUFBQyxHQU9BLE9BTkFGLElBQUFBLEVBQUE3UixLQUNBNlIsRUFBQUQsR0FBQUMsSUFFQUMsSUFBQUEsRUFBQTlSLEtBQ0E4UixFQUFBRixHQUFBRSxFQUFBQyxJQUVBckosR0FBQSxTQUFBOUIsRUFBQS9GLEVBQUExRCxFQUFBK1EsR0FDQSxJQUFBOEQsRUFBQTVWLEVBQUFrQyxFQUNBMlQsRUFBQSxHQUNBQyxFQUFBLEdBQ0FDLEVBQUF0UixFQUFBdEQsT0FHQVEsRUFBQTZJLEdBNUNBLFNBQUExSixFQUFBa1YsRUFBQXZSLEdBR0EsSUFGQSxJQUFBekUsRUFBQSxFQUNBMkMsRUFBQXFULEVBQUE3VSxPQUNBbkIsRUFBQTJDLEVBQUEzQyxJQUNBdUYsR0FBQXpFLEVBQUFrVixFQUFBaFcsR0FBQXlFLEdBRUEsT0FBQUEsRUFzQ0F3UixDQUNBblYsR0FBQSxJQUNBQyxFQUFBM0IsU0FBQSxDQUFBMkIsR0FBQUEsRUFDQSxJQUlBbVYsR0FBQWxGLElBQUF4RyxHQUFBMUosRUFFQWEsRUFEQTBULEdBQUExVCxFQUFBa1UsRUFBQTdFLEVBQUFqUSxFQUFBK1EsR0FHQXFFLEVBQUF0RCxFQUdBNkMsSUFBQWxMLEVBQUF3RyxFQUFBK0UsR0FBQU4sR0FHQSxHQUdBaFIsRUFDQXlSLEVBUUEsR0FMQXJELEdBQ0FBLEVBQUFxRCxFQUFBQyxFQUFBcFYsRUFBQStRLEdBSUEyRCxFQU1BLElBTEFHLEVBQUFQLEdBQUFjLEVBQUFMLEdBQ0FMLEVBQUFHLEVBQUEsR0FBQTdVLEVBQUErUSxHQUdBOVIsRUFBQTRWLEVBQUF6VSxPQUNBbkIsTUFDQWtDLEVBQUEwVCxFQUFBNVYsTUFDQW1XLEVBQUFMLEVBQUE5VixNQUFBa1csRUFBQUosRUFBQTlWLElBQUFrQyxJQUtBLEdBQUFzSSxHQUNBLEdBQUFrTCxHQUFBMUUsRUFBQSxDQUNBLEdBQUEwRSxFQUFBLENBS0EsSUFGQUUsRUFBQSxHQUNBNVYsRUFBQW1XLEVBQUFoVixPQUNBbkIsTUFDQWtDLEVBQUFpVSxFQUFBblcsS0FHQTRWLEVBQUFuWCxLQUFBeVgsRUFBQWxXLEdBQUFrQyxHQUdBd1QsRUFBQSxLQUFBUyxFQUFBLEdBQUFQLEVBQUE5RCxHQUtBLElBREE5UixFQUFBbVcsRUFBQWhWLE9BQ0FuQixNQUNBa0MsRUFBQWlVLEVBQUFuVyxNQUNBLEdBQUE0VixFQUFBRixFQUFBaFgsRUFBQThMLEVBQUF0SSxHQUFBMlQsRUFBQTdWLE1BRUF3SyxFQUFBb0wsS0FBQW5SLEVBQUFtUixHQUFBMVQsVUFPQWlVLEVBQUFkLEdBQ0FjLElBQUExUixFQUNBMFIsRUFBQXBULE9BQUFnVCxFQUFBSSxFQUFBaFYsUUFDQWdWLEdBRUFULEVBQ0FBLEVBQUEsS0FBQWpSLEVBQUEwUixFQUFBckUsR0FFQXJULEVBQUFELE1BQUFpRyxFQUFBMFIsS0FNQSxTQUFBQyxHQUFBekIsR0F5QkEsSUF4QkEsSUFBQTBCLEVBQUF4RCxFQUFBalEsRUFDQUQsRUFBQWdTLEVBQUF4VCxPQUNBbVYsRUFBQTlRLEVBQUFtTCxTQUFBZ0UsRUFBQSxHQUFBblYsTUFDQStXLEVBQUFELEdBQUE5USxFQUFBbUwsU0FBQSxLQUNBM1EsRUFBQXNXLEVBQUEsRUFBQSxFQUdBRSxFQUFBeE0sR0FBQSxTQUFBOUgsR0FDQSxPQUFBQSxJQUFBbVUsR0FDQUUsR0FBQSxHQUNBRSxFQUFBek0sR0FBQSxTQUFBOUgsR0FDQSxPQUFBLEVBQUF4RCxFQUFBMlgsRUFBQW5VLElBQ0FxVSxHQUFBLEdBQ0FuQixFQUFBLENBQUEsU0FBQWxULEVBQUFuQixFQUFBK1EsR0FDQSxJQUFBbFEsR0FBQTBVLElBQUF4RSxHQUFBL1EsSUFBQStFLE1BQ0F1USxFQUFBdFYsR0FBQTNCLFNBQ0FvWCxFQUFBdFUsRUFBQW5CLEVBQUErUSxHQUNBMkUsRUFBQXZVLEVBQUFuQixFQUFBK1EsSUFJQSxPQURBdUUsRUFBQSxLQUNBelUsSUFHQTVCLEVBQUEyQyxFQUFBM0MsSUFDQSxHQUFBNlMsRUFBQXJOLEVBQUFtTCxTQUFBZ0UsRUFBQTNVLEdBQUFSLE1BQ0E0VixFQUFBLENBQUFwTCxHQUFBbUwsR0FBQUMsR0FBQXZDLFFBQ0EsQ0FJQSxJQUhBQSxFQUFBck4sRUFBQThJLE9BQUFxRyxFQUFBM1UsR0FBQVIsTUFBQWhCLE1BQUEsS0FBQW1XLEVBQUEzVSxHQUFBNkUsVUFHQWpCLEdBQUEsQ0FJQSxJQURBaEIsSUFBQTVDLEVBQ0E0QyxFQUFBRCxJQUNBNkMsRUFBQW1MLFNBQUFnRSxFQUFBL1IsR0FBQXBELE1BREFvRCxLQUtBLE9BQUE0UyxHQUNBLEVBQUF4VixHQUFBbVYsR0FBQUMsR0FDQSxFQUFBcFYsR0FBQXlMLEdBR0FrSixFQUNBeFcsTUFBQSxFQUFBNkIsRUFBQSxHQUNBekIsT0FBQSxDQUFBeUcsTUFBQSxNQUFBMlAsRUFBQTNVLEVBQUEsR0FBQVIsS0FBQSxJQUFBLE1BQ0F1RSxRQUFBOEQsRUFBQSxNQUNBZ0wsRUFDQTdTLEVBQUE0QyxHQUFBd1QsR0FBQXpCLEVBQUF4VyxNQUFBNkIsRUFBQTRDLElBQ0FBLEVBQUFELEdBQUF5VCxHQUFBekIsRUFBQUEsRUFBQXhXLE1BQUF5RSxJQUNBQSxFQUFBRCxHQUFBOEksR0FBQWtKLElBR0FTLEVBQUEzVyxLQUFBb1UsR0FJQSxPQUFBc0MsR0FBQUMsR0FvVEEsT0F0cEJBM0MsR0FBQXJSLFVBQUFvRSxFQUFBa1IsUUFBQWxSLEVBQUFrQyxRQUNBbEMsRUFBQWlOLFdBQUEsSUFBQUEsR0FFQTlNLEVBQUFKLEdBQUFJLFNBQUEsU0FBQTdFLEVBQUE2VixHQUNBLElBQUFoRSxFQUFBaEksRUFBQWdLLEVBQUFuVixFQUNBb1gsRUFBQWhNLEVBQUFpTSxFQUNBQyxFQUFBalEsRUFBQS9GLEVBQUEsS0FFQSxHQUFBZ1csRUFDQSxPQUFBSCxFQUFBLEVBQUFHLEVBQUEzWSxNQUFBLEdBT0EsSUFKQXlZLEVBQUE5VixFQUNBOEosRUFBQSxHQUNBaU0sRUFBQXJSLEVBQUF3TCxVQUVBNEYsR0FBQSxDQTJCQSxJQUFBcFgsS0F4QkFtVCxLQUFBaEksRUFBQTdDLEVBQUFrRCxLQUFBNEwsTUFDQWpNLElBR0FpTSxFQUFBQSxFQUFBelksTUFBQXdNLEVBQUEsR0FBQXhKLFNBQUF5VixHQUVBaE0sRUFBQW5NLEtBQUFrVyxFQUFBLEtBR0FoQyxHQUFBLEdBR0FoSSxFQUFBNUMsRUFBQWlELEtBQUE0TCxNQUNBakUsRUFBQWhJLEVBQUEwQixRQUNBc0ksRUFBQWxXLEtBQUEsQ0FDQXVHLE1BQUEyTixFQUdBblQsS0FBQW1MLEVBQUEsR0FBQTVHLFFBQUE4RCxFQUFBLE9BRUErTyxFQUFBQSxFQUFBelksTUFBQXdVLEVBQUF4UixTQUlBcUUsRUFBQThJLFNBQ0EzRCxFQUFBeEMsRUFBQTNJLEdBQUF3TCxLQUFBNEwsS0FBQUMsRUFBQXJYLE1BQ0FtTCxFQUFBa00sRUFBQXJYLEdBQUFtTCxNQUNBZ0ksRUFBQWhJLEVBQUEwQixRQUNBc0ksRUFBQWxXLEtBQUEsQ0FDQXVHLE1BQUEyTixFQUNBblQsS0FBQUEsRUFDQXFGLFFBQUE4RixJQUVBaU0sRUFBQUEsRUFBQXpZLE1BQUF3VSxFQUFBeFIsU0FJQSxJQUFBd1IsRUFDQSxNQU9BLE9BQUFnRSxFQUNBQyxFQUFBelYsT0FDQXlWLEVBQ0FyUixHQUFBdEIsTUFBQW5ELEdBR0ErRixFQUFBL0YsRUFBQThKLEdBQUF6TSxNQUFBLElBNFpBeUgsRUFBQUwsR0FBQUssUUFBQSxTQUFBOUUsRUFBQTZKLEdBQ0EsSUFBQTNLLEVBOUhBK1csRUFBQUMsRUFDQUMsRUFDQUMsRUFDQUMsRUE0SEFILEVBQUEsR0FDQUQsRUFBQSxHQUNBRCxFQUFBaFEsRUFBQWhHLEVBQUEsS0FFQSxJQUFBZ1csRUFBQSxDQU9BLElBSkFuTSxJQUNBQSxFQUFBaEYsRUFBQTdFLElBRUFkLEVBQUEySyxFQUFBeEosT0FDQW5CLE1BQ0E4VyxFQUFBVixHQUFBekwsRUFBQTNLLEtBQ0E0RCxHQUNBb1QsRUFBQXZZLEtBQUFxWSxHQUVBQyxFQUFBdFksS0FBQXFZLElBS0FBLEVBQUFoUSxFQUNBaEcsR0FySkFpVyxFQXNKQUEsRUFySkFFLEVBQUEsR0FEQUQsRUFzSkFBLEdBckpBN1YsT0FDQStWLEVBQUEsRUFBQUgsRUFBQTVWLE9BQ0FnVyxFQUFBLFNBQUEzTSxFQUFBekosRUFBQStRLEVBQUFyTixFQUFBMlMsR0FDQSxJQUFBbFYsRUFBQVUsRUFBQWlRLEVBQ0F3RSxFQUFBLEVBQ0FyWCxFQUFBLElBQ0E4UyxFQUFBdEksR0FBQSxHQUNBOE0sRUFBQSxHQUNBQyxFQUFBelIsRUFHQW5FLEVBQUE2SSxHQUFBME0sR0FBQTFSLEVBQUFnSixLQUFBLElBQUEsSUFBQTRJLEdBR0FJLEVBQUEvUSxHQUFBLE1BQUE4USxFQUFBLEVBQUExVCxLQUFBQyxVQUFBLEdBQ0FuQixFQUFBaEIsRUFBQVIsT0FjQSxJQVpBaVcsSUFNQXRSLEVBQUEvRSxHQUFBdEQsR0FBQXNELEdBQUFxVyxHQU1BcFgsSUFBQTJDLEdBQUEsT0FBQVQsRUFBQVAsRUFBQTNCLElBQUFBLElBQUEsQ0FDQSxHQUFBa1gsR0FBQWhWLEVBQUEsQ0FXQSxJQVZBVSxFQUFBLEVBTUE3QixHQUFBbUIsRUFBQTZJLGVBQUF0TixJQUNBd0ksRUFBQS9ELEdBQ0E0UCxHQUFBM0wsR0FFQTBNLEVBQUFrRSxFQUFBblUsTUFDQSxHQUFBaVEsRUFBQTNRLEVBQUFuQixHQUFBdEQsRUFBQXFVLEdBQUEsQ0FDQXJOLEVBQUFoRyxLQUFBeUQsR0FDQSxNQUdBa1YsSUFDQTNRLEVBQUErUSxHQUtBUCxLQUdBL1UsR0FBQTJRLEdBQUEzUSxJQUNBbVYsSUFJQTdNLEdBQ0FzSSxFQUFBclUsS0FBQXlELElBZ0JBLEdBVEFtVixHQUFBclgsRUFTQWlYLEdBQUFqWCxJQUFBcVgsRUFBQSxDQUVBLElBREF6VSxFQUFBLEVBQ0FpUSxFQUFBbUUsRUFBQXBVLE1BQ0FpUSxFQUFBQyxFQUFBd0UsRUFBQXZXLEVBQUErUSxHQUdBLEdBQUF0SCxFQUFBLENBR0EsR0FBQSxFQUFBNk0sRUFDQSxLQUFBclgsS0FDQThTLEVBQUE5UyxJQUFBc1gsRUFBQXRYLEtBQ0FzWCxFQUFBdFgsR0FBQW1ILEVBQUE3SSxLQUFBbUcsSUFNQTZTLEVBQUFqQyxHQUFBaUMsR0FJQTdZLEVBQUFELE1BQUFpRyxFQUFBNlMsR0FHQUYsSUFBQTVNLEdBQUEsRUFBQThNLEVBQUFuVyxRQUNBLEVBQUFrVyxFQUFBTCxFQUFBN1YsUUFFQW9FLEdBQUEySyxXQUFBekwsR0FVQSxPQUxBMlMsSUFDQTNRLEVBQUErUSxFQUNBMVIsRUFBQXlSLEdBR0F6RSxHQUdBbUUsRUFDQTNLLEdBQUE2SyxHQUNBQSxLQWdDQXJXLFNBQUFBLEVBRUEsT0FBQWdXLEdBWUFqUixFQUFBTixHQUFBTSxPQUFBLFNBQUEvRSxFQUFBQyxFQUFBMEQsRUFBQStGLEdBQ0EsSUFBQXhLLEVBQUEyVSxFQUFBOEMsRUFBQWpZLEVBQUFnUCxFQUNBa0osRUFBQSxtQkFBQTVXLEdBQUFBLEVBQ0E2SixHQUFBSCxHQUFBN0UsRUFBQTdFLEVBQUE0VyxFQUFBNVcsVUFBQUEsR0FNQSxHQUpBMkQsRUFBQUEsR0FBQSxHQUlBLElBQUFrRyxFQUFBeEosT0FBQSxDQUlBLEdBQUEsR0FEQXdULEVBQUFoSyxFQUFBLEdBQUFBLEVBQUEsR0FBQXhNLE1BQUEsSUFDQWdELFFBQUEsUUFBQXNXLEVBQUE5QyxFQUFBLElBQUFuVixNQUNBLElBQUF1QixFQUFBM0IsVUFBQStHLEdBQUFYLEVBQUFtTCxTQUFBZ0UsRUFBQSxHQUFBblYsTUFBQSxDQUlBLEtBRkF1QixHQUFBeUUsRUFBQWdKLEtBQUEsR0FBQWlKLEVBQUE1UyxRQUFBLEdBQ0FkLFFBQUFtRixHQUFBQyxJQUFBcEksSUFBQSxJQUFBLElBRUEsT0FBQTBELEVBR0FpVCxJQUNBM1csRUFBQUEsRUFBQU4sWUFHQUssRUFBQUEsRUFBQTNDLE1BQUF3VyxFQUFBdEksUUFBQXJILE1BQUE3RCxRQUtBLElBREFuQixFQUFBbUksRUFBQSxhQUFBbUQsS0FBQXhLLEdBQUEsRUFBQTZULEVBQUF4VCxPQUNBbkIsTUFDQXlYLEVBQUE5QyxFQUFBM1UsSUFHQXdGLEVBQUFtTCxTQUFBblIsRUFBQWlZLEVBQUFqWSxRQUdBLElBQUFnUCxFQUFBaEosRUFBQWdKLEtBQUFoUCxNQUdBZ0wsRUFBQWdFLEVBQ0FpSixFQUFBNVMsUUFBQSxHQUFBZCxRQUFBbUYsR0FBQUMsSUFDQUYsR0FBQXFDLEtBQUFxSixFQUFBLEdBQUFuVixPQUFBK0wsR0FBQXhLLEVBQUFOLGFBQ0FNLElBQ0EsQ0FLQSxHQUZBNFQsRUFBQTVSLE9BQUEvQyxFQUFBLEtBQ0FjLEVBQUEwSixFQUFBckosUUFBQXNLLEdBQUFrSixJQUdBLE9BREFsVyxFQUFBRCxNQUFBaUcsRUFBQStGLEdBQ0EvRixFQUdBLE9BZUEsT0FQQWlULEdBQUE5UixFQUFBOUUsRUFBQTZKLElBQ0FILEVBQ0F6SixHQUNBb0YsRUFDQTFCLEdBQ0ExRCxHQUFBa0ksR0FBQXFDLEtBQUF4SyxJQUFBeUssR0FBQXhLLEVBQUFOLGFBQUFNLEdBRUEwRCxHQU1BeEYsRUFBQW9SLFdBQUF6TSxFQUFBd0IsTUFBQSxJQUFBdEMsS0FBQWtFLEdBQUEwRSxLQUFBLE1BQUE5SCxFQUlBM0UsRUFBQW1SLG1CQUFBcEssRUFHQUMsSUFJQWhILEVBQUF1USxhQUFBakQsR0FBQSxTQUFBQyxHQUdBLE9BQUEsRUFBQUEsRUFBQTRDLHdCQUFBM1IsRUFBQTBDLGNBQUEsZUFNQW9NLEdBQUEsU0FBQUMsR0FFQSxPQURBQSxFQUFBcUMsVUFBQSxtQkFDQSxNQUFBckMsRUFBQStELFdBQUFsUSxhQUFBLFdBRUFvTSxHQUFBLHlCQUFBLFNBQUF2SyxFQUFBZ0IsRUFBQXdDLEdBQ0EsSUFBQUEsRUFDQSxPQUFBeEQsRUFBQTdCLGFBQUE2QyxFQUFBLFNBQUFBLEVBQUFvQyxjQUFBLEVBQUEsS0FPQXJHLEVBQUF3SSxZQUFBOEUsR0FBQSxTQUFBQyxHQUdBLE9BRkFBLEVBQUFxQyxVQUFBLFdBQ0FyQyxFQUFBK0QsV0FBQWpRLGFBQUEsUUFBQSxJQUNBLEtBQUFrTSxFQUFBK0QsV0FBQWxRLGFBQUEsWUFFQW9NLEdBQUEsUUFBQSxTQUFBdkssRUFBQXlWLEVBQUFqUyxHQUNBLElBQUFBLEdBQUEsVUFBQXhELEVBQUFnSSxTQUFBNUUsY0FDQSxPQUFBcEQsRUFBQTBWLGVBT0FyTCxHQUFBLFNBQUFDLEdBQ0EsT0FBQSxNQUFBQSxFQUFBbk0sYUFBQSxlQUVBb00sR0FBQW5GLEVBQUEsU0FBQXBGLEVBQUFnQixFQUFBd0MsR0FDQSxJQUFBekYsRUFDQSxJQUFBeUYsRUFDQSxPQUFBLElBQUF4RCxFQUFBZ0IsR0FBQUEsRUFBQW9DLGVBQ0FyRixFQUFBaUMsRUFBQXVNLGlCQUFBdkwsS0FBQWpELEVBQUErUCxVQUNBL1AsRUFBQStFLE1BQ0EsT0FLQU8sR0ExOEVBLENBNDhFQTNILEdBSUFpRCxFQUFBMk4sS0FBQWpKLEVBQ0ExRSxFQUFBZ1AsS0FBQXRLLEVBQUFrTCxVQUdBNVAsRUFBQWdQLEtBQUEsS0FBQWhQLEVBQUFnUCxLQUFBbkksUUFDQTdHLEVBQUFxUCxXQUFBclAsRUFBQWdYLE9BQUF0UyxFQUFBMkssV0FDQXJQLEVBQUFULEtBQUFtRixFQUFBRSxRQUNBNUUsRUFBQWlYLFNBQUF2UyxFQUFBRyxNQUNBN0UsRUFBQXlGLFNBQUFmLEVBQUFlLFNBQ0F6RixFQUFBa1gsZUFBQXhTLEVBQUE2RCxPQUtBLElBQUFlLEVBQUEsU0FBQWpJLEVBQUFpSSxFQUFBNk4sR0FJQSxJQUhBLElBQUFyRixFQUFBLEdBQ0FzRixPQUFBdFUsSUFBQXFVLEdBRUE5VixFQUFBQSxFQUFBaUksS0FBQSxJQUFBakksRUFBQTlDLFVBQ0EsR0FBQSxJQUFBOEMsRUFBQTlDLFNBQUEsQ0FDQSxHQUFBNlksR0FBQXBYLEVBQUFxQixHQUFBZ1csR0FBQUYsR0FDQSxNQUVBckYsRUFBQWxVLEtBQUF5RCxHQUdBLE9BQUF5USxHQUlBd0YsRUFBQSxTQUFBQyxFQUFBbFcsR0FHQSxJQUZBLElBQUF5USxFQUFBLEdBRUF5RixFQUFBQSxFQUFBQSxFQUFBbkwsWUFDQSxJQUFBbUwsRUFBQWhaLFVBQUFnWixJQUFBbFcsR0FDQXlRLEVBQUFsVSxLQUFBMlosR0FJQSxPQUFBekYsR0FJQTBGLEVBQUF4WCxFQUFBZ1AsS0FBQWxGLE1BQUFoQyxhQUlBLFNBQUF1QixFQUFBaEksRUFBQWdCLEdBRUEsT0FBQWhCLEVBQUFnSSxVQUFBaEksRUFBQWdJLFNBQUE1RSxnQkFBQXBDLEVBQUFvQyxjQUdBLElBQUFnVCxFQUFBLGtFQUtBLFNBQUFDLEVBQUF6SSxFQUFBMEksRUFBQTVGLEdBQ0EsT0FBQTFULEVBQUFzWixHQUNBM1gsRUFBQTJCLEtBQUFzTixFQUFBLFNBQUE1TixFQUFBbEMsR0FDQSxRQUFBd1ksRUFBQWxhLEtBQUE0RCxFQUFBbEMsRUFBQWtDLEtBQUEwUSxJQUtBNEYsRUFBQXBaLFNBQ0F5QixFQUFBMkIsS0FBQXNOLEVBQUEsU0FBQTVOLEdBQ0EsT0FBQUEsSUFBQXNXLElBQUE1RixJQUtBLGlCQUFBNEYsRUFDQTNYLEVBQUEyQixLQUFBc04sRUFBQSxTQUFBNU4sR0FDQSxPQUFBLEVBQUF4RCxFQUFBSixLQUFBa2EsRUFBQXRXLEtBQUEwUSxJQUtBL1IsRUFBQXlOLE9BQUFrSyxFQUFBMUksRUFBQThDLEdBR0EvUixFQUFBeU4sT0FBQSxTQUFBdUIsRUFBQWxPLEVBQUFpUixHQUNBLElBQUExUSxFQUFBUCxFQUFBLEdBTUEsT0FKQWlSLElBQ0EvQyxFQUFBLFFBQUFBLEVBQUEsS0FHQSxJQUFBbE8sRUFBQVIsUUFBQSxJQUFBZSxFQUFBOUMsU0FDQXlCLEVBQUEyTixLQUFBTSxnQkFBQTVNLEVBQUEyTixHQUFBLENBQUEzTixHQUFBLEdBR0FyQixFQUFBMk4sS0FBQTNKLFFBQUFnTCxFQUFBaFAsRUFBQTJCLEtBQUFiLEVBQUEsU0FBQU8sR0FDQSxPQUFBLElBQUFBLEVBQUE5QyxhQUlBeUIsRUFBQUcsR0FBQWdDLE9BQUEsQ0FDQXdMLEtBQUEsU0FBQTFOLEdBQ0EsSUFBQWQsRUFBQTRCLEVBQ0FlLEVBQUE5RSxLQUFBc0QsT0FDQXNYLEVBQUE1YSxLQUVBLEdBQUEsaUJBQUFpRCxFQUNBLE9BQUFqRCxLQUFBNkQsVUFBQWIsRUFBQUMsR0FBQXdOLE9BQUEsV0FDQSxJQUFBdE8sRUFBQSxFQUFBQSxFQUFBMkMsRUFBQTNDLElBQ0EsR0FBQWEsRUFBQXlGLFNBQUFtUyxFQUFBelksR0FBQW5DLE1BQ0EsT0FBQSxLQVFBLElBRkErRCxFQUFBL0QsS0FBQTZELFVBQUEsSUFFQTFCLEVBQUEsRUFBQUEsRUFBQTJDLEVBQUEzQyxJQUNBYSxFQUFBMk4sS0FBQTFOLEVBQUEyWCxFQUFBelksR0FBQTRCLEdBR0EsT0FBQSxFQUFBZSxFQUFBOUIsRUFBQXFQLFdBQUF0TyxHQUFBQSxHQUVBME0sT0FBQSxTQUFBeE4sR0FDQSxPQUFBakQsS0FBQTZELFVBQUE2VyxFQUFBMWEsS0FBQWlELEdBQUEsSUFBQSxLQUVBOFIsSUFBQSxTQUFBOVIsR0FDQSxPQUFBakQsS0FBQTZELFVBQUE2VyxFQUFBMWEsS0FBQWlELEdBQUEsSUFBQSxLQUVBb1gsR0FBQSxTQUFBcFgsR0FDQSxRQUFBeVgsRUFDQTFhLEtBSUEsaUJBQUFpRCxHQUFBdVgsRUFBQS9NLEtBQUF4SyxHQUNBRCxFQUFBQyxHQUNBQSxHQUFBLElBQ0EsR0FDQUssVUFTQSxJQUFBdVgsRUFNQTFQLEVBQUEsdUNBRUFuSSxFQUFBRyxHQUFBQyxLQUFBLFNBQUFILEVBQUFDLEVBQUFxUyxHQUNBLElBQUF6SSxFQUFBekksRUFHQSxJQUFBcEIsRUFDQSxPQUFBakQsS0FRQSxHQUhBdVYsRUFBQUEsR0FBQXNGLEVBR0EsaUJBQUE1WCxFQW9FQSxPQUFBQSxFQUFBMUIsVUFDQXZCLEtBQUEsR0FBQWlELEVBQ0FqRCxLQUFBc0QsT0FBQSxFQUNBdEQsTUFJQXFCLEVBQUE0QixRQUNBNkMsSUFBQXlQLEVBQUF1RixNQUNBdkYsRUFBQXVGLE1BQUE3WCxHQUdBQSxFQUFBRCxHQUdBQSxFQUFBMkQsVUFBQTFELEVBQUFqRCxNQXRFQSxLQVBBOE0sRUFMQSxNQUFBN0osRUFBQSxJQUNBLE1BQUFBLEVBQUFBLEVBQUFLLE9BQUEsSUFDQSxHQUFBTCxFQUFBSyxPQUdBLENBQUEsS0FBQUwsRUFBQSxNQUdBa0ksRUFBQWdDLEtBQUFsSyxNQUlBNkosRUFBQSxJQUFBNUosRUE2Q0EsT0FBQUEsR0FBQUEsRUFBQU0sUUFDQU4sR0FBQXFTLEdBQUE1RSxLQUFBMU4sR0FLQWpELEtBQUF5RCxZQUFBUCxHQUFBeU4sS0FBQTFOLEdBaERBLEdBQUE2SixFQUFBLEdBQUEsQ0FZQSxHQVhBNUosRUFBQUEsYUFBQUYsRUFBQUUsRUFBQSxHQUFBQSxFQUlBRixFQUFBZ0IsTUFBQWhFLEtBQUFnRCxFQUFBK1gsVUFDQWpPLEVBQUEsR0FDQTVKLEdBQUFBLEVBQUEzQixTQUFBMkIsRUFBQWdLLGVBQUFoSyxFQUFBdEQsR0FDQSxJQUlBNmEsRUFBQWhOLEtBQUFYLEVBQUEsS0FBQTlKLEVBQUEyQyxjQUFBekMsR0FDQSxJQUFBNEosS0FBQTVKLEVBR0E3QixFQUFBckIsS0FBQThNLElBQ0E5TSxLQUFBOE0sR0FBQTVKLEVBQUE0SixJQUlBOU0sS0FBQWtTLEtBQUFwRixFQUFBNUosRUFBQTRKLElBS0EsT0FBQTlNLEtBWUEsT0FSQXFFLEVBQUF6RSxFQUFBd04sZUFBQU4sRUFBQSxPQUtBOU0sS0FBQSxHQUFBcUUsRUFDQXJFLEtBQUFzRCxPQUFBLEdBRUF0RCxPQWlDQXVELFVBQUFQLEVBQUFHLEdBR0EwWCxFQUFBN1gsRUFBQXBELEdBR0EsSUFBQW9iLEVBQUEsaUNBR0FDLEVBQUEsQ0FDQUMsVUFBQSxFQUNBQyxVQUFBLEVBQ0E1TyxNQUFBLEVBQ0E2TyxNQUFBLEdBb0ZBLFNBQUFDLEVBQUFwTSxFQUFBM0MsR0FDQSxNQUFBMkMsRUFBQUEsRUFBQTNDLEtBQUEsSUFBQTJDLEVBQUExTixXQUNBLE9BQUEwTixFQW5GQWpNLEVBQUFHLEdBQUFnQyxPQUFBLENBQ0ErUCxJQUFBLFNBQUF6UCxHQUNBLElBQUE2VixFQUFBdFksRUFBQXlDLEVBQUF6RixNQUNBdWIsRUFBQUQsRUFBQWhZLE9BRUEsT0FBQXRELEtBQUF5USxPQUFBLFdBRUEsSUFEQSxJQUFBdE8sRUFBQSxFQUNBQSxFQUFBb1osRUFBQXBaLElBQ0EsR0FBQWEsRUFBQXlGLFNBQUF6SSxLQUFBc2IsRUFBQW5aLElBQ0EsT0FBQSxLQU1BcVosUUFBQSxTQUFBNUksRUFBQTFQLEdBQ0EsSUFBQStMLEVBQ0E5TSxFQUFBLEVBQ0FvWixFQUFBdmIsS0FBQXNELE9BQ0F3UixFQUFBLEdBQ0F3RyxFQUFBLGlCQUFBMUksR0FBQTVQLEVBQUE0UCxHQUdBLElBQUE0SCxFQUFBL00sS0FBQW1GLEdBQ0EsS0FBQXpRLEVBQUFvWixFQUFBcFosSUFDQSxJQUFBOE0sRUFBQWpQLEtBQUFtQyxHQUFBOE0sR0FBQUEsSUFBQS9MLEVBQUErTCxFQUFBQSxFQUFBck0sV0FHQSxHQUFBcU0sRUFBQTFOLFNBQUEsS0FBQStaLEdBQ0EsRUFBQUEsRUFBQUcsTUFBQXhNLEdBR0EsSUFBQUEsRUFBQTFOLFVBQ0F5QixFQUFBMk4sS0FBQU0sZ0JBQUFoQyxFQUFBMkQsSUFBQSxDQUVBa0MsRUFBQWxVLEtBQUFxTyxHQUNBLE1BTUEsT0FBQWpQLEtBQUE2RCxVQUFBLEVBQUFpUixFQUFBeFIsT0FBQU4sRUFBQXFQLFdBQUF5QyxHQUFBQSxJQUlBMkcsTUFBQSxTQUFBcFgsR0FHQSxPQUFBQSxFQUtBLGlCQUFBQSxFQUNBeEQsRUFBQUosS0FBQXVDLEVBQUFxQixHQUFBckUsS0FBQSxJQUlBYSxFQUFBSixLQUFBVCxLQUdBcUUsRUFBQWIsT0FBQWEsRUFBQSxHQUFBQSxHQVpBckUsS0FBQSxJQUFBQSxLQUFBLEdBQUE0QyxXQUFBNUMsS0FBQXVFLFFBQUFtWCxVQUFBcFksUUFBQSxHQWdCQXFZLElBQUEsU0FBQTFZLEVBQUFDLEdBQ0EsT0FBQWxELEtBQUE2RCxVQUNBYixFQUFBcVAsV0FDQXJQLEVBQUFnQixNQUFBaEUsS0FBQTJELE1BQUFYLEVBQUFDLEVBQUFDLE9BS0EwWSxRQUFBLFNBQUEzWSxHQUNBLE9BQUFqRCxLQUFBMmIsSUFBQSxNQUFBMVksRUFDQWpELEtBQUFpRSxXQUFBakUsS0FBQWlFLFdBQUF3TSxPQUFBeE4sT0FVQUQsRUFBQWtCLEtBQUEsQ0FDQW9RLE9BQUEsU0FBQWpRLEdBQ0EsSUFBQWlRLEVBQUFqUSxFQUFBekIsV0FDQSxPQUFBMFIsR0FBQSxLQUFBQSxFQUFBL1MsU0FBQStTLEVBQUEsTUFFQXVILFFBQUEsU0FBQXhYLEdBQ0EsT0FBQWlJLEVBQUFqSSxFQUFBLGVBRUF5WCxhQUFBLFNBQUF6WCxFQUFBbUQsRUFBQTJTLEdBQ0EsT0FBQTdOLEVBQUFqSSxFQUFBLGFBQUE4VixJQUVBNU4sS0FBQSxTQUFBbEksR0FDQSxPQUFBZ1gsRUFBQWhYLEVBQUEsZ0JBRUErVyxLQUFBLFNBQUEvVyxHQUNBLE9BQUFnWCxFQUFBaFgsRUFBQSxvQkFFQTBYLFFBQUEsU0FBQTFYLEdBQ0EsT0FBQWlJLEVBQUFqSSxFQUFBLGdCQUVBcVgsUUFBQSxTQUFBclgsR0FDQSxPQUFBaUksRUFBQWpJLEVBQUEsb0JBRUEyWCxVQUFBLFNBQUEzWCxFQUFBbUQsRUFBQTJTLEdBQ0EsT0FBQTdOLEVBQUFqSSxFQUFBLGNBQUE4VixJQUVBOEIsVUFBQSxTQUFBNVgsRUFBQW1ELEVBQUEyUyxHQUNBLE9BQUE3TixFQUFBakksRUFBQSxrQkFBQThWLElBRUFHLFNBQUEsU0FBQWpXLEdBQ0EsT0FBQWlXLEdBQUFqVyxFQUFBekIsWUFBQSxJQUFBOFAsV0FBQXJPLElBRUE2VyxTQUFBLFNBQUE3VyxHQUNBLE9BQUFpVyxFQUFBalcsRUFBQXFPLGFBRUF5SSxTQUFBLFNBQUE5VyxHQUNBLE9BQUEsTUFBQUEsRUFBQTZYLGlCQUtBL2IsRUFBQWtFLEVBQUE2WCxpQkFFQTdYLEVBQUE2WCxpQkFNQTdQLEVBQUFoSSxFQUFBLGNBQ0FBLEVBQUFBLEVBQUE4WCxTQUFBOVgsR0FHQXJCLEVBQUFnQixNQUFBLEdBQUFLLEVBQUFtSSxlQUVBLFNBQUFuSCxFQUFBbEMsR0FDQUgsRUFBQUcsR0FBQWtDLEdBQUEsU0FBQThVLEVBQUFsWCxHQUNBLElBQUE2UixFQUFBOVIsRUFBQW9CLElBQUFwRSxLQUFBbUQsRUFBQWdYLEdBdUJBLE1BckJBLFVBQUE5VSxFQUFBL0UsT0FBQSxLQUNBMkMsRUFBQWtYLEdBR0FsWCxHQUFBLGlCQUFBQSxJQUNBNlIsRUFBQTlSLEVBQUF5TixPQUFBeE4sRUFBQTZSLElBR0EsRUFBQTlVLEtBQUFzRCxTQUdBMlgsRUFBQTVWLElBQ0FyQyxFQUFBcVAsV0FBQXlDLEdBSUFrRyxFQUFBdk4sS0FBQXBJLElBQ0F5UCxFQUFBc0gsV0FJQXBjLEtBQUE2RCxVQUFBaVIsTUFHQSxJQUFBdUgsRUFBQSxvQkFzT0EsU0FBQUMsRUFBQUMsR0FDQSxPQUFBQSxFQUVBLFNBQUFDLEVBQUFDLEdBQ0EsTUFBQUEsRUFHQSxTQUFBQyxFQUFBdlYsRUFBQXdWLEVBQUFDLEVBQUFDLEdBQ0EsSUFBQUMsRUFFQSxJQUdBM1YsR0FBQTlGLEVBQUF5YixFQUFBM1YsRUFBQTRWLFNBQ0FELEVBQUFyYyxLQUFBMEcsR0FBQTBCLEtBQUE4VCxHQUFBSyxLQUFBSixHQUdBelYsR0FBQTlGLEVBQUF5YixFQUFBM1YsRUFBQThWLE1BQ0FILEVBQUFyYyxLQUFBMEcsRUFBQXdWLEVBQUFDLEdBUUFELEVBQUFoYyxXQUFBbUYsRUFBQSxDQUFBcUIsR0FBQTdHLE1BQUF1YyxJQU1BLE1BQUExVixHQUlBeVYsRUFBQWpjLFdBQUFtRixFQUFBLENBQUFxQixLQXZPQW5FLEVBQUFrYSxVQUFBLFNBQUE5WCxHQTlCQSxJQUFBQSxFQUNBK1gsRUFpQ0EvWCxFQUFBLGlCQUFBQSxHQWxDQUEsRUFtQ0FBLEVBbENBK1gsRUFBQSxHQUNBbmEsRUFBQWtCLEtBQUFrQixFQUFBMEgsTUFBQXVQLElBQUEsR0FBQSxTQUFBZSxFQUFBQyxHQUNBRixFQUFBRSxJQUFBLElBRUFGLEdBK0JBbmEsRUFBQW1DLE9BQUEsR0FBQUMsR0FFQSxJQUNBa1ksRUFHQUMsRUFHQUMsRUFHQUMsRUFHQWpVLEVBQUEsR0FHQWtVLEVBQUEsR0FHQUMsR0FBQSxFQUdBQyxFQUFBLFdBUUEsSUFMQUgsRUFBQUEsR0FBQXJZLEVBQUF5WSxLQUlBTCxFQUFBRixHQUFBLEVBQ0FJLEVBQUFwYSxPQUFBcWEsR0FBQSxFQUVBLElBREFKLEVBQUFHLEVBQUFsUCxVQUNBbVAsRUFBQW5VLEVBQUFsRyxTQUdBLElBQUFrRyxFQUFBbVUsR0FBQWhkLE1BQUE0YyxFQUFBLEdBQUFBLEVBQUEsS0FDQW5ZLEVBQUEwWSxjQUdBSCxFQUFBblUsRUFBQWxHLE9BQ0FpYSxHQUFBLEdBTUFuWSxFQUFBbVksU0FDQUEsR0FBQSxHQUdBRCxHQUFBLEVBR0FHLElBSUFqVSxFQURBK1QsRUFDQSxHQUlBLEtBTUEzQyxFQUFBLENBR0FlLElBQUEsV0EyQkEsT0ExQkFuUyxJQUdBK1QsSUFBQUQsSUFDQUssRUFBQW5VLEVBQUFsRyxPQUFBLEVBQ0FvYSxFQUFBOWMsS0FBQTJjLElBR0EsU0FBQTVCLEVBQUFoSCxHQUNBM1IsRUFBQWtCLEtBQUF5USxFQUFBLFNBQUF5SSxFQUFBbFcsR0FDQTdGLEVBQUE2RixHQUNBOUIsRUFBQTRVLFFBQUFZLEVBQUExRixJQUFBaE8sSUFDQXNDLEVBQUE1SSxLQUFBc0csR0FFQUEsR0FBQUEsRUFBQTVELFFBQUEsV0FBQVIsRUFBQW9FLElBR0F5VSxFQUFBelUsS0FUQSxDQVlBNUMsV0FFQWlaLElBQUFELEdBQ0FNLEtBR0E1ZCxNQUlBK2QsT0FBQSxXQVlBLE9BWEEvYSxFQUFBa0IsS0FBQUksVUFBQSxTQUFBOFksRUFBQWxXLEdBRUEsSUFEQSxJQUFBdVUsR0FDQSxHQUFBQSxFQUFBelksRUFBQTZELFFBQUFLLEVBQUFzQyxFQUFBaVMsS0FDQWpTLEVBQUF0RSxPQUFBdVcsRUFBQSxHQUdBQSxHQUFBa0MsR0FDQUEsTUFJQTNkLE1BS0FrVixJQUFBLFNBQUEvUixHQUNBLE9BQUFBLEdBQ0EsRUFBQUgsRUFBQTZELFFBQUExRCxFQUFBcUcsR0FDQSxFQUFBQSxFQUFBbEcsUUFJQTJTLE1BQUEsV0FJQSxPQUhBek0sSUFDQUEsRUFBQSxJQUVBeEosTUFNQWdlLFFBQUEsV0FHQSxPQUZBUCxFQUFBQyxFQUFBLEdBQ0FsVSxFQUFBK1QsRUFBQSxHQUNBdmQsTUFFQW9NLFNBQUEsV0FDQSxPQUFBNUMsR0FNQXlVLEtBQUEsV0FLQSxPQUpBUixFQUFBQyxFQUFBLEdBQ0FILEdBQUFELElBQ0E5VCxFQUFBK1QsRUFBQSxJQUVBdmQsTUFFQXlkLE9BQUEsV0FDQSxRQUFBQSxHQUlBUyxTQUFBLFNBQUFoYixFQUFBeVIsR0FTQSxPQVJBOEksSUFFQTlJLEVBQUEsQ0FBQXpSLEdBREF5UixFQUFBQSxHQUFBLElBQ0FyVSxNQUFBcVUsRUFBQXJVLFFBQUFxVSxHQUNBK0ksRUFBQTljLEtBQUErVCxHQUNBMkksR0FDQU0sS0FHQTVkLE1BSUE0ZCxLQUFBLFdBRUEsT0FEQWhELEVBQUFzRCxTQUFBbGUsS0FBQXNFLFdBQ0F0RSxNQUlBd2QsTUFBQSxXQUNBLFFBQUFBLElBSUEsT0FBQTVDLEdBNENBNVgsRUFBQW1DLE9BQUEsQ0FFQWdaLFNBQUEsU0FBQUMsR0FDQSxJQUFBQyxFQUFBLENBSUEsQ0FBQSxTQUFBLFdBQUFyYixFQUFBa2EsVUFBQSxVQUNBbGEsRUFBQWthLFVBQUEsVUFBQSxHQUNBLENBQUEsVUFBQSxPQUFBbGEsRUFBQWthLFVBQUEsZUFDQWxhLEVBQUFrYSxVQUFBLGVBQUEsRUFBQSxZQUNBLENBQUEsU0FBQSxPQUFBbGEsRUFBQWthLFVBQUEsZUFDQWxhLEVBQUFrYSxVQUFBLGVBQUEsRUFBQSxhQUVBb0IsRUFBQSxVQUNBdkIsRUFBQSxDQUNBdUIsTUFBQSxXQUNBLE9BQUFBLEdBRUFDLE9BQUEsV0FFQSxPQURBQyxFQUFBM1YsS0FBQXZFLFdBQUEwWSxLQUFBMVksV0FDQXRFLE1BRUF5ZSxNQUFBLFNBQUF0YixHQUNBLE9BQUE0WixFQUFBRSxLQUFBLEtBQUE5WixJQUlBdWIsS0FBQSxXQUNBLElBQUFDLEVBQUFyYSxVQUVBLE9BQUF0QixFQUFBbWIsU0FBQSxTQUFBUyxHQUNBNWIsRUFBQWtCLEtBQUFtYSxFQUFBLFNBQUE3VyxFQUFBcVgsR0FHQSxJQUFBMWIsRUFBQTlCLEVBQUFzZCxFQUFBRSxFQUFBLE1BQUFGLEVBQUFFLEVBQUEsSUFLQUwsRUFBQUssRUFBQSxJQUFBLFdBQ0EsSUFBQUMsRUFBQTNiLEdBQUFBLEVBQUF4QyxNQUFBWCxLQUFBc0UsV0FDQXdhLEdBQUF6ZCxFQUFBeWQsRUFBQS9CLFNBQ0ErQixFQUFBL0IsVUFDQWdDLFNBQUFILEVBQUFJLFFBQ0FuVyxLQUFBK1YsRUFBQWpDLFNBQ0FLLEtBQUE0QixFQUFBaEMsUUFFQWdDLEVBQUFDLEVBQUEsR0FBQSxRQUNBN2UsS0FDQW1ELEVBQUEsQ0FBQTJiLEdBQUF4YSxlQUtBcWEsRUFBQSxPQUNBNUIsV0FFQUUsS0FBQSxTQUFBZ0MsRUFBQUMsRUFBQUMsR0FDQSxJQUFBQyxFQUFBLEVBQ0EsU0FBQXpDLEVBQUEwQyxFQUFBYixFQUFBMVAsRUFBQXdRLEdBQ0EsT0FBQSxXQUNBLElBQUFDLEVBQUF2ZixLQUNBMlUsRUFBQXJRLFVBQ0FrYixFQUFBLFdBQ0EsSUFBQVYsRUFBQTdCLEVBS0EsS0FBQW9DLEVBQUFELEdBQUEsQ0FRQSxJQUpBTixFQUFBaFEsRUFBQW5PLE1BQUE0ZSxFQUFBNUssTUFJQTZKLEVBQUF6QixVQUNBLE1BQUEsSUFBQTBDLFVBQUEsNEJBT0F4QyxFQUFBNkIsSUFLQSxpQkFBQUEsR0FDQSxtQkFBQUEsSUFDQUEsRUFBQTdCLEtBR0E1YixFQUFBNGIsR0FHQXFDLEVBQ0FyQyxFQUFBeGMsS0FDQXFlLEVBQ0FuQyxFQUFBeUMsRUFBQVosRUFBQWxDLEVBQUFnRCxHQUNBM0MsRUFBQXlDLEVBQUFaLEVBQUFoQyxFQUFBOEMsS0FPQUYsSUFFQW5DLEVBQUF4YyxLQUNBcWUsRUFDQW5DLEVBQUF5QyxFQUFBWixFQUFBbEMsRUFBQWdELEdBQ0EzQyxFQUFBeUMsRUFBQVosRUFBQWhDLEVBQUE4QyxHQUNBM0MsRUFBQXlDLEVBQUFaLEVBQUFsQyxFQUNBa0MsRUFBQWtCLGVBU0E1USxJQUFBd04sSUFDQWlELE9BQUF6WixFQUNBNk8sRUFBQSxDQUFBbUssS0FLQVEsR0FBQWQsRUFBQW1CLGFBQUFKLEVBQUE1SyxNQUtBaUwsRUFBQU4sRUFDQUUsRUFDQSxXQUNBLElBQ0FBLElBQ0EsTUFBQS9TLEdBRUF6SixFQUFBbWIsU0FBQTBCLGVBQ0E3YyxFQUFBbWIsU0FBQTBCLGNBQUFwVCxFQUNBbVQsRUFBQUUsWUFNQVYsR0FBQUMsRUFBQSxJQUlBdlEsSUFBQTBOLElBQ0ErQyxPQUFBelosRUFDQTZPLEVBQUEsQ0FBQWxJLElBR0ErUixFQUFBdUIsV0FBQVIsRUFBQTVLLE1BU0EwSyxFQUNBTyxLQUtBNWMsRUFBQW1iLFNBQUE2QixlQUNBSixFQUFBRSxXQUFBOWMsRUFBQW1iLFNBQUE2QixnQkFFQWpnQixFQUFBa2dCLFdBQUFMLEtBS0EsT0FBQTVjLEVBQUFtYixTQUFBLFNBQUFTLEdBR0FQLEVBQUEsR0FBQSxHQUFBMUMsSUFDQWdCLEVBQ0EsRUFDQWlDLEVBQ0F2ZCxFQUFBOGQsR0FDQUEsRUFDQTdDLEVBQ0FzQyxFQUFBYyxhQUtBckIsRUFBQSxHQUFBLEdBQUExQyxJQUNBZ0IsRUFDQSxFQUNBaUMsRUFDQXZkLEVBQUE0ZCxHQUNBQSxFQUNBM0MsSUFLQStCLEVBQUEsR0FBQSxHQUFBMUMsSUFDQWdCLEVBQ0EsRUFDQWlDLEVBQ0F2ZCxFQUFBNmQsR0FDQUEsRUFDQTFDLE1BR0FPLFdBS0FBLFFBQUEsU0FBQXpiLEdBQ0EsT0FBQSxNQUFBQSxFQUFBMEIsRUFBQW1DLE9BQUE3RCxFQUFBeWIsR0FBQUEsSUFHQXlCLEVBQUEsR0FrRUEsT0EvREF4YixFQUFBa0IsS0FBQW1hLEVBQUEsU0FBQWxjLEVBQUEwYyxHQUNBLElBQUFyVixFQUFBcVYsRUFBQSxHQUNBcUIsRUFBQXJCLEVBQUEsR0FLQTlCLEVBQUE4QixFQUFBLElBQUFyVixFQUFBbVMsSUFHQXVFLEdBQ0ExVyxFQUFBbVMsSUFDQSxXQUlBMkMsRUFBQTRCLEdBS0E3QixFQUFBLEVBQUFsYyxHQUFBLEdBQUE2YixRQUlBSyxFQUFBLEVBQUFsYyxHQUFBLEdBQUE2YixRQUdBSyxFQUFBLEdBQUEsR0FBQUosS0FHQUksRUFBQSxHQUFBLEdBQUFKLE1BT0F6VSxFQUFBbVMsSUFBQWtELEVBQUEsR0FBQWpCLE1BS0FZLEVBQUFLLEVBQUEsSUFBQSxXQUVBLE9BREFMLEVBQUFLLEVBQUEsR0FBQSxRQUFBN2UsT0FBQXdlLE9BQUExWSxFQUFBOUYsS0FBQXNFLFdBQ0F0RSxNQU1Bd2UsRUFBQUssRUFBQSxHQUFBLFFBQUFyVixFQUFBMFUsV0FJQW5CLEVBQUFBLFFBQUF5QixHQUdBSixHQUNBQSxFQUFBM2QsS0FBQStkLEVBQUFBLEdBSUFBLEdBSUEyQixLQUFBLFNBQUFDLEdBQ0EsSUFHQUMsRUFBQS9iLFVBQUFoQixPQUdBbkIsRUFBQWtlLEVBR0FDLEVBQUExYSxNQUFBekQsR0FDQW9lLEVBQUFqZ0IsRUFBQUcsS0FBQTZELFdBR0FrYyxFQUFBeGQsRUFBQW1iLFdBR0FzQyxFQUFBLFNBQUF0ZSxHQUNBLE9BQUEsU0FBQWdGLEdBQ0FtWixFQUFBbmUsR0FBQW5DLEtBQ0F1Z0IsRUFBQXBlLEdBQUEsRUFBQW1DLFVBQUFoQixPQUFBaEQsRUFBQUcsS0FBQTZELFdBQUE2QyxJQUNBa1osR0FDQUcsRUFBQWIsWUFBQVcsRUFBQUMsS0FNQSxHQUFBRixHQUFBLElBQ0EzRCxFQUFBMEQsRUFBQUksRUFBQTNYLEtBQUE0WCxFQUFBdGUsSUFBQXdhLFFBQUE2RCxFQUFBNUQsUUFDQXlELEdBR0EsWUFBQUcsRUFBQWxDLFNBQ0FqZCxFQUFBa2YsRUFBQXBlLElBQUFvZSxFQUFBcGUsR0FBQThhLE9BRUEsT0FBQXVELEVBQUF2RCxPQUtBLEtBQUE5YSxLQUNBdWEsRUFBQTZELEVBQUFwZSxHQUFBc2UsRUFBQXRlLEdBQUFxZSxFQUFBNUQsUUFHQSxPQUFBNEQsRUFBQXpELGFBT0EsSUFBQTJELEVBQUEseURBRUExZCxFQUFBbWIsU0FBQTBCLGNBQUEsU0FBQXpaLEVBQUF1YSxHQUlBNWdCLEVBQUE2Z0IsU0FBQTdnQixFQUFBNmdCLFFBQUFDLE1BQUF6YSxHQUFBc2EsRUFBQWpULEtBQUFySCxFQUFBZixPQUNBdEYsRUFBQTZnQixRQUFBQyxLQUFBLDhCQUFBemEsRUFBQTBhLFFBQUExYSxFQUFBdWEsTUFBQUEsSUFPQTNkLEVBQUErZCxlQUFBLFNBQUEzYSxHQUNBckcsRUFBQWtnQixXQUFBLFdBQ0EsTUFBQTdaLEtBUUEsSUFBQTRhLEVBQUFoZSxFQUFBbWIsV0FrREEsU0FBQThDLElBQ0FyaEIsRUFBQXNoQixvQkFBQSxtQkFBQUQsR0FDQWxoQixFQUFBbWhCLG9CQUFBLE9BQUFELEdBQ0FqZSxFQUFBOFgsUUFuREE5WCxFQUFBRyxHQUFBMlgsTUFBQSxTQUFBM1gsR0FZQSxPQVZBNmQsRUFDQS9ELEtBQUE5WixHQUtBc2IsTUFBQSxTQUFBclksR0FDQXBELEVBQUErZCxlQUFBM2EsS0FHQXBHLE1BR0FnRCxFQUFBbUMsT0FBQSxDQUdBZ0IsU0FBQSxFQUlBZ2IsVUFBQSxFQUdBckcsTUFBQSxTQUFBc0csS0FHQSxJQUFBQSxJQUFBcGUsRUFBQW1lLFVBQUFuZSxFQUFBbUQsV0FLQW5ELEVBQUFtRCxTQUFBLEtBR0FpYixHQUFBLElBQUFwZSxFQUFBbWUsV0FLQUgsRUFBQXJCLFlBQUEvZixFQUFBLENBQUFvRCxPQUlBQSxFQUFBOFgsTUFBQW1DLEtBQUErRCxFQUFBL0QsS0FhQSxhQUFBcmQsRUFBQXloQixZQUNBLFlBQUF6aEIsRUFBQXloQixhQUFBemhCLEVBQUFrUSxnQkFBQXdSLFNBR0F2aEIsRUFBQWtnQixXQUFBamQsRUFBQThYLFFBS0FsYixFQUFBdVEsaUJBQUEsbUJBQUE4USxHQUdBbGhCLEVBQUFvUSxpQkFBQSxPQUFBOFEsSUFRQSxJQUFBTSxFQUFBLFNBQUF6ZCxFQUFBWCxFQUFBbUwsRUFBQW5ILEVBQUFxYSxFQUFBQyxFQUFBQyxHQUNBLElBQUF2ZixFQUFBLEVBQ0EyQyxFQUFBaEIsRUFBQVIsT0FDQXFlLEVBQUEsTUFBQXJULEVBR0EsR0FBQSxXQUFBeEwsRUFBQXdMLEdBRUEsSUFBQW5NLEtBREFxZixHQUFBLEVBQ0FsVCxFQUNBaVQsRUFBQXpkLEVBQUFYLEVBQUFoQixFQUFBbU0sRUFBQW5NLElBQUEsRUFBQXNmLEVBQUFDLFFBSUEsUUFBQTViLElBQUFxQixJQUNBcWEsR0FBQSxFQUVBbmdCLEVBQUE4RixLQUNBdWEsR0FBQSxHQUdBQyxJQUtBeGUsRUFGQXVlLEdBQ0F2ZSxFQUFBMUMsS0FBQXFELEVBQUFxRCxHQUNBLE9BSUF3YSxFQUFBeGUsRUFDQSxTQUFBa0IsRUFBQXVkLEVBQUF6YSxHQUNBLE9BQUF3YSxFQUFBbGhCLEtBQUF1QyxFQUFBcUIsR0FBQThDLE1BS0FoRSxHQUNBLEtBQUFoQixFQUFBMkMsRUFBQTNDLElBQ0FnQixFQUNBVyxFQUFBM0IsR0FBQW1NLEVBQUFvVCxFQUNBdmEsRUFDQUEsRUFBQTFHLEtBQUFxRCxFQUFBM0IsR0FBQUEsRUFBQWdCLEVBQUFXLEVBQUEzQixHQUFBbU0sS0FNQSxPQUFBa1QsRUFDQTFkLEVBSUE2ZCxFQUNBeGUsRUFBQTFDLEtBQUFxRCxHQUdBZ0IsRUFBQTNCLEVBQUFXLEVBQUEsR0FBQXdLLEdBQUFtVCxHQUtBSSxFQUFBLFFBQ0FDLEVBQUEsWUFHQSxTQUFBQyxFQUFBQyxFQUFBQyxHQUNBLE9BQUFBLEVBQUFDLGNBTUEsU0FBQUMsRUFBQUMsR0FDQSxPQUFBQSxFQUFBbGMsUUFBQTJiLEVBQUEsT0FBQTNiLFFBQUE0YixFQUFBQyxHQUVBLElBQUFNLEVBQUEsU0FBQUMsR0FRQSxPQUFBLElBQUFBLEVBQUEvZ0IsVUFBQSxJQUFBK2dCLEVBQUEvZ0IsWUFBQStnQixFQUFBL2dCLFVBTUEsU0FBQWdoQixJQUNBdmlCLEtBQUErRixRQUFBL0MsRUFBQStDLFFBQUF3YyxFQUFBQyxNQUdBRCxFQUFBQyxJQUFBLEVBRUFELEVBQUFoZixVQUFBLENBRUE4SyxNQUFBLFNBQUFpVSxHQUdBLElBQUFuYixFQUFBbWIsRUFBQXRpQixLQUFBK0YsU0E0QkEsT0F6QkFvQixJQUNBQSxFQUFBLEdBS0FrYixFQUFBQyxLQUlBQSxFQUFBL2dCLFNBQ0ErZ0IsRUFBQXRpQixLQUFBK0YsU0FBQW9CLEVBTUEvRyxPQUFBcWlCLGVBQUFILEVBQUF0aUIsS0FBQStGLFFBQUEsQ0FDQW9CLE1BQUFBLEVBQ0F1YixjQUFBLE1BTUF2YixHQUVBd2IsSUFBQSxTQUFBTCxFQUFBTSxFQUFBemIsR0FDQSxJQUFBMGIsRUFDQXhVLEVBQUFyTyxLQUFBcU8sTUFBQWlVLEdBSUEsR0FBQSxpQkFBQU0sRUFDQXZVLEVBQUE4VCxFQUFBUyxJQUFBemIsT0FNQSxJQUFBMGIsS0FBQUQsRUFDQXZVLEVBQUE4VCxFQUFBVSxJQUFBRCxFQUFBQyxHQUdBLE9BQUF4VSxHQUVBMUssSUFBQSxTQUFBMmUsRUFBQWhVLEdBQ0EsWUFBQXhJLElBQUF3SSxFQUNBdE8sS0FBQXFPLE1BQUFpVSxHQUdBQSxFQUFBdGlCLEtBQUErRixVQUFBdWMsRUFBQXRpQixLQUFBK0YsU0FBQW9jLEVBQUE3VCxLQUVBaVQsT0FBQSxTQUFBZSxFQUFBaFUsRUFBQW5ILEdBYUEsWUFBQXJCLElBQUF3SSxHQUNBQSxHQUFBLGlCQUFBQSxRQUFBeEksSUFBQXFCLEVBRUFuSCxLQUFBMkQsSUFBQTJlLEVBQUFoVSxJQVNBdE8sS0FBQTJpQixJQUFBTCxFQUFBaFUsRUFBQW5ILFFBSUFyQixJQUFBcUIsRUFBQUEsRUFBQW1ILElBRUF5UCxPQUFBLFNBQUF1RSxFQUFBaFUsR0FDQSxJQUFBbk0sRUFDQWtNLEVBQUFpVSxFQUFBdGlCLEtBQUErRixTQUVBLFFBQUFELElBQUF1SSxFQUFBLENBSUEsUUFBQXZJLElBQUF3SSxFQUFBLENBa0JBbk0sR0FYQW1NLEVBSkExSSxNQUFBQyxRQUFBeUksR0FJQUEsRUFBQWxLLElBQUErZCxJQUVBN1QsRUFBQTZULEVBQUE3VCxNQUlBRCxFQUNBLENBQUFDLEdBQ0FBLEVBQUF4QixNQUFBdVAsSUFBQSxJQUdBL1ksT0FFQSxLQUFBbkIsWUFDQWtNLEVBQUFDLEVBQUFuTSxVQUtBMkQsSUFBQXdJLEdBQUF0TCxFQUFBeUQsY0FBQTRILE1BTUFpVSxFQUFBL2dCLFNBQ0ErZ0IsRUFBQXRpQixLQUFBK0YsY0FBQUQsU0FFQXdjLEVBQUF0aUIsS0FBQStGLFlBSUErYyxRQUFBLFNBQUFSLEdBQ0EsSUFBQWpVLEVBQUFpVSxFQUFBdGlCLEtBQUErRixTQUNBLFlBQUFELElBQUF1SSxJQUFBckwsRUFBQXlELGNBQUE0SCxLQUdBLElBQUEwVSxFQUFBLElBQUFSLEVBRUFTLEVBQUEsSUFBQVQsRUFjQVUsRUFBQSxnQ0FDQUMsRUFBQSxTQTJCQSxTQUFBQyxFQUFBOWUsRUFBQWlLLEVBQUFzVSxHQUNBLElBQUF2ZCxFQTFCQXVkLEVBOEJBLFFBQUE5YyxJQUFBOGMsR0FBQSxJQUFBdmUsRUFBQTlDLFNBSUEsR0FIQThELEVBQUEsUUFBQWlKLEVBQUFwSSxRQUFBZ2QsRUFBQSxPQUFBemIsY0FHQSxpQkFGQW1iLEVBQUF2ZSxFQUFBN0IsYUFBQTZDLElBRUEsQ0FDQSxJQUNBdWQsRUFuQ0EsVUFEQUEsRUFvQ0FBLElBL0JBLFVBQUFBLElBSUEsU0FBQUEsRUFDQSxLQUlBQSxLQUFBQSxFQUFBLElBQ0FBLEVBR0FLLEVBQUF4VixLQUFBbVYsR0FDQVEsS0FBQUMsTUFBQVQsR0FHQUEsR0FlQSxNQUFBblcsSUFHQXVXLEVBQUFMLElBQUF0ZSxFQUFBaUssRUFBQXNVLFFBRUFBLE9BQUE5YyxFQUdBLE9BQUE4YyxFQUdBNWYsRUFBQW1DLE9BQUEsQ0FDQTJkLFFBQUEsU0FBQXplLEdBQ0EsT0FBQTJlLEVBQUFGLFFBQUF6ZSxJQUFBMGUsRUFBQUQsUUFBQXplLElBR0F1ZSxLQUFBLFNBQUF2ZSxFQUFBZ0IsRUFBQXVkLEdBQ0EsT0FBQUksRUFBQXpCLE9BQUFsZCxFQUFBZ0IsRUFBQXVkLElBR0FVLFdBQUEsU0FBQWpmLEVBQUFnQixHQUNBMmQsRUFBQWpGLE9BQUExWixFQUFBZ0IsSUFLQWtlLE1BQUEsU0FBQWxmLEVBQUFnQixFQUFBdWQsR0FDQSxPQUFBRyxFQUFBeEIsT0FBQWxkLEVBQUFnQixFQUFBdWQsSUFHQVksWUFBQSxTQUFBbmYsRUFBQWdCLEdBQ0EwZCxFQUFBaEYsT0FBQTFaLEVBQUFnQixNQUlBckMsRUFBQUcsR0FBQWdDLE9BQUEsQ0FDQXlkLEtBQUEsU0FBQXRVLEVBQUFuSCxHQUNBLElBQUFoRixFQUFBa0QsRUFBQXVkLEVBQ0F2ZSxFQUFBckUsS0FBQSxHQUNBNk8sRUFBQXhLLEdBQUFBLEVBQUF1RixXQUdBLFFBQUE5RCxJQUFBd0ksRUEwQkEsTUFBQSxpQkFBQUEsRUFDQXRPLEtBQUFrRSxLQUFBLFdBQ0E4ZSxFQUFBTCxJQUFBM2lCLEtBQUFzTyxLQUlBaVQsRUFBQXZoQixLQUFBLFNBQUFtSCxHQUNBLElBQUF5YixFQU9BLEdBQUF2ZSxRQUFBeUIsSUFBQXFCLEVBS0EsWUFBQXJCLEtBREE4YyxFQUFBSSxFQUFBcmYsSUFBQVUsRUFBQWlLLElBRUFzVSxPQU1BOWMsS0FEQThjLEVBQUFPLEVBQUE5ZSxFQUFBaUssSUFFQXNVLE9BSUEsRUFJQTVpQixLQUFBa0UsS0FBQSxXQUdBOGUsRUFBQUwsSUFBQTNpQixLQUFBc08sRUFBQW5ILE1BRUEsS0FBQUEsRUFBQSxFQUFBN0MsVUFBQWhCLE9BQUEsTUFBQSxHQWpFQSxHQUFBdEQsS0FBQXNELFNBQ0FzZixFQUFBSSxFQUFBcmYsSUFBQVUsR0FFQSxJQUFBQSxFQUFBOUMsV0FBQXdoQixFQUFBcGYsSUFBQVUsRUFBQSxpQkFBQSxDQUVBLElBREFsQyxFQUFBME0sRUFBQXZMLE9BQ0FuQixLQUlBME0sRUFBQTFNLElBRUEsS0FEQWtELEVBQUF3SixFQUFBMU0sR0FBQWtELE1BQ0F4RSxRQUFBLFdBQ0F3RSxFQUFBOGMsRUFBQTljLEVBQUEvRSxNQUFBLElBQ0E2aUIsRUFBQTllLEVBQUFnQixFQUFBdWQsRUFBQXZkLEtBSUEwZCxFQUFBSixJQUFBdGUsRUFBQSxnQkFBQSxHQUlBLE9BQUF1ZSxHQStDQVUsV0FBQSxTQUFBaFYsR0FDQSxPQUFBdE8sS0FBQWtFLEtBQUEsV0FDQThlLEVBQUFqRixPQUFBL2QsS0FBQXNPLFFBTUF0TCxFQUFBbUMsT0FBQSxDQUNBdVksTUFBQSxTQUFBclosRUFBQTFDLEVBQUFpaEIsR0FDQSxJQUFBbEYsRUFFQSxHQUFBclosRUFZQSxPQVhBMUMsR0FBQUEsR0FBQSxNQUFBLFFBQ0ErYixFQUFBcUYsRUFBQXBmLElBQUFVLEVBQUExQyxHQUdBaWhCLEtBQ0FsRixHQUFBOVgsTUFBQUMsUUFBQStjLEdBQ0FsRixFQUFBcUYsRUFBQXhCLE9BQUFsZCxFQUFBMUMsRUFBQXFCLEVBQUEyRCxVQUFBaWMsSUFFQWxGLEVBQUE5YyxLQUFBZ2lCLElBR0FsRixHQUFBLElBSUErRixRQUFBLFNBQUFwZixFQUFBMUMsR0FDQUEsRUFBQUEsR0FBQSxLQUVBLElBQUErYixFQUFBMWEsRUFBQTBhLE1BQUFyWixFQUFBMUMsR0FDQStoQixFQUFBaEcsRUFBQXBhLE9BQ0FILEVBQUF1YSxFQUFBbFAsUUFDQW1WLEVBQUEzZ0IsRUFBQTRnQixZQUFBdmYsRUFBQTFDLEdBTUEsZUFBQXdCLElBQ0FBLEVBQUF1YSxFQUFBbFAsUUFDQWtWLEtBR0F2Z0IsSUFJQSxPQUFBeEIsR0FDQStiLEVBQUEzTCxRQUFBLHFCQUlBNFIsRUFBQUUsS0FDQTFnQixFQUFBMUMsS0FBQTRELEVBcEJBLFdBQ0FyQixFQUFBeWdCLFFBQUFwZixFQUFBMUMsSUFtQkFnaUIsS0FHQUQsR0FBQUMsR0FDQUEsRUFBQTFOLE1BQUEySCxRQUtBZ0csWUFBQSxTQUFBdmYsRUFBQTFDLEdBQ0EsSUFBQTJNLEVBQUEzTSxFQUFBLGFBQ0EsT0FBQW9oQixFQUFBcGYsSUFBQVUsRUFBQWlLLElBQUF5VSxFQUFBeEIsT0FBQWxkLEVBQUFpSyxFQUFBLENBQ0EySCxNQUFBalQsRUFBQWthLFVBQUEsZUFBQXZCLElBQUEsV0FDQW9ILEVBQUFoRixPQUFBMVosRUFBQSxDQUFBMUMsRUFBQSxRQUFBMk0sV0FNQXRMLEVBQUFHLEdBQUFnQyxPQUFBLENBQ0F1WSxNQUFBLFNBQUEvYixFQUFBaWhCLEdBQ0EsSUFBQWtCLEVBQUEsRUFRQSxNQU5BLGlCQUFBbmlCLElBQ0FpaEIsRUFBQWpoQixFQUNBQSxFQUFBLEtBQ0FtaUIsS0FHQXhmLFVBQUFoQixPQUFBd2dCLEVBQ0E5Z0IsRUFBQTBhLE1BQUExZCxLQUFBLEdBQUEyQixRQUdBbUUsSUFBQThjLEVBQ0E1aUIsS0FDQUEsS0FBQWtFLEtBQUEsV0FDQSxJQUFBd1osRUFBQTFhLEVBQUEwYSxNQUFBMWQsS0FBQTJCLEVBQUFpaEIsR0FHQTVmLEVBQUE0Z0IsWUFBQTVqQixLQUFBMkIsR0FFQSxPQUFBQSxHQUFBLGVBQUErYixFQUFBLElBQ0ExYSxFQUFBeWdCLFFBQUF6akIsS0FBQTJCLE1BSUE4aEIsUUFBQSxTQUFBOWhCLEdBQ0EsT0FBQTNCLEtBQUFrRSxLQUFBLFdBQ0FsQixFQUFBeWdCLFFBQUF6akIsS0FBQTJCLE1BR0FvaUIsV0FBQSxTQUFBcGlCLEdBQ0EsT0FBQTNCLEtBQUEwZCxNQUFBL2IsR0FBQSxLQUFBLEtBS0FvYixRQUFBLFNBQUFwYixFQUFBTCxHQUNBLElBQUF3UCxFQUNBa1QsRUFBQSxFQUNBQyxFQUFBamhCLEVBQUFtYixXQUNBbE0sRUFBQWpTLEtBQ0FtQyxFQUFBbkMsS0FBQXNELE9BQ0FxWixFQUFBLGFBQ0FxSCxHQUNBQyxFQUFBdEUsWUFBQTFOLEVBQUEsQ0FBQUEsS0FVQSxJQU5BLGlCQUFBdFEsSUFDQUwsRUFBQUssRUFDQUEsT0FBQW1FLEdBRUFuRSxFQUFBQSxHQUFBLEtBRUFRLE1BQ0EyTyxFQUFBaVMsRUFBQXBmLElBQUFzTyxFQUFBOVAsR0FBQVIsRUFBQSxnQkFDQW1QLEVBQUFtRixRQUNBK04sSUFDQWxULEVBQUFtRixNQUFBMEYsSUFBQWdCLElBSUEsT0FEQUEsSUFDQXNILEVBQUFsSCxRQUFBemIsTUFHQSxJQUFBNGlCLEdBQUEsc0NBQUFDLE9BRUFDLEdBQUEsSUFBQXJhLE9BQUEsaUJBQUFtYSxHQUFBLGNBQUEsS0FHQUcsR0FBQSxDQUFBLE1BQUEsUUFBQSxTQUFBLFFBRUF2VSxHQUFBbFEsRUFBQWtRLGdCQUlBd1UsR0FBQSxTQUFBamdCLEdBQ0EsT0FBQXJCLEVBQUF5RixTQUFBcEUsRUFBQTZJLGNBQUE3SSxJQUVBa2dCLEdBQUEsQ0FBQUEsVUFBQSxHQU9BelUsR0FBQTBVLGNBQ0FGLEdBQUEsU0FBQWpnQixHQUNBLE9BQUFyQixFQUFBeUYsU0FBQXBFLEVBQUE2SSxjQUFBN0ksSUFDQUEsRUFBQW1nQixZQUFBRCxNQUFBbGdCLEVBQUE2SSxnQkFHQSxJQUFBdVgsR0FBQSxTQUFBcGdCLEVBQUFzSyxHQU9BLE1BQUEsVUFIQXRLLEVBQUFzSyxHQUFBdEssR0FHQXFnQixNQUFBQyxTQUNBLEtBQUF0Z0IsRUFBQXFnQixNQUFBQyxTQU1BTCxHQUFBamdCLElBRUEsU0FBQXJCLEVBQUE0aEIsSUFBQXZnQixFQUFBLFlBS0EsU0FBQXdnQixHQUFBeGdCLEVBQUF3ZSxFQUFBaUMsRUFBQUMsR0FDQSxJQUFBQyxFQUFBQyxFQUNBQyxFQUFBLEdBQ0FDLEVBQUFKLEVBQ0EsV0FDQSxPQUFBQSxFQUFBOVYsT0FFQSxXQUNBLE9BQUFqTSxFQUFBNGhCLElBQUF2Z0IsRUFBQXdlLEVBQUEsS0FFQXVDLEVBQUFELElBQ0FFLEVBQUFQLEdBQUFBLEVBQUEsS0FBQTloQixFQUFBc2lCLFVBQUF6QyxHQUFBLEdBQUEsTUFHQTBDLEVBQUFsaEIsRUFBQTlDLFdBQ0F5QixFQUFBc2lCLFVBQUF6QyxJQUFBLE9BQUF3QyxJQUFBRCxJQUNBaEIsR0FBQWpYLEtBQUFuSyxFQUFBNGhCLElBQUF2Z0IsRUFBQXdlLElBRUEsR0FBQTBDLEdBQUFBLEVBQUEsS0FBQUYsRUFBQSxDQVlBLElBUkFELEdBQUEsRUFHQUMsRUFBQUEsR0FBQUUsRUFBQSxHQUdBQSxHQUFBSCxHQUFBLEVBRUFGLEtBSUFsaUIsRUFBQTBoQixNQUFBcmdCLEVBQUF3ZSxFQUFBMEMsRUFBQUYsSUFDQSxFQUFBSixJQUFBLEdBQUFBLEVBQUFFLElBQUFDLEdBQUEsTUFBQSxJQUNBRixFQUFBLEdBRUFLLEdBQUFOLEVBSUFNLEdBQUEsRUFDQXZpQixFQUFBMGhCLE1BQUFyZ0IsRUFBQXdlLEVBQUEwQyxFQUFBRixHQUdBUCxFQUFBQSxHQUFBLEdBZ0JBLE9BYkFBLElBQ0FTLEdBQUFBLElBQUFILEdBQUEsRUFHQUosRUFBQUYsRUFBQSxHQUNBUyxHQUFBVCxFQUFBLEdBQUEsR0FBQUEsRUFBQSxJQUNBQSxFQUFBLEdBQ0FDLElBQ0FBLEVBQUFNLEtBQUFBLEVBQ0FOLEVBQUExUSxNQUFBa1IsRUFDQVIsRUFBQS9mLElBQUFnZ0IsSUFHQUEsRUFJQSxJQUFBUSxHQUFBLEdBeUJBLFNBQUFDLEdBQUF4VCxFQUFBeVQsR0FPQSxJQU5BLElBQUFmLEVBQUF0Z0IsRUF4QkFBLEVBQ0EwVCxFQUNBN1YsRUFDQW1LLEVBQ0FzWSxFQXFCQWdCLEVBQUEsR0FDQWxLLEVBQUEsRUFDQW5ZLEVBQUEyTyxFQUFBM08sT0FHQW1ZLEVBQUFuWSxFQUFBbVksS0FDQXBYLEVBQUE0TixFQUFBd0osSUFDQWlKLFFBSUFDLEVBQUF0Z0IsRUFBQXFnQixNQUFBQyxRQUNBZSxHQUtBLFNBQUFmLElBQ0FnQixFQUFBbEssR0FBQXNILEVBQUFwZixJQUFBVSxFQUFBLFlBQUEsS0FDQXNoQixFQUFBbEssS0FDQXBYLEVBQUFxZ0IsTUFBQUMsUUFBQSxLQUdBLEtBQUF0Z0IsRUFBQXFnQixNQUFBQyxTQUFBRixHQUFBcGdCLEtBQ0FzaEIsRUFBQWxLLElBN0NBa0osRUFGQXppQixFQURBNlYsT0FBQUEsRUFDQTdWLEdBRkFtQyxFQWlEQUEsR0EvQ0E2SSxjQUNBYixFQUFBaEksRUFBQWdJLFVBQ0FzWSxFQUFBYSxHQUFBblosTUFNQTBMLEVBQUE3VixFQUFBMGpCLEtBQUFqakIsWUFBQVQsRUFBQUksY0FBQStKLElBQ0FzWSxFQUFBM2hCLEVBQUE0aEIsSUFBQTdNLEVBQUEsV0FFQUEsRUFBQW5WLFdBQUFDLFlBQUFrVixHQUVBLFNBQUE0TSxJQUNBQSxFQUFBLFNBRUFhLEdBQUFuWixHQUFBc1ksTUFrQ0EsU0FBQUEsSUFDQWdCLEVBQUFsSyxHQUFBLE9BR0FzSCxFQUFBSixJQUFBdGUsRUFBQSxVQUFBc2dCLEtBTUEsSUFBQWxKLEVBQUEsRUFBQUEsRUFBQW5ZLEVBQUFtWSxJQUNBLE1BQUFrSyxFQUFBbEssS0FDQXhKLEVBQUF3SixHQUFBaUosTUFBQUMsUUFBQWdCLEVBQUFsSyxJQUlBLE9BQUF4SixFQUdBalAsRUFBQUcsR0FBQWdDLE9BQUEsQ0FDQXVnQixLQUFBLFdBQ0EsT0FBQUQsR0FBQXpsQixNQUFBLElBRUE2bEIsS0FBQSxXQUNBLE9BQUFKLEdBQUF6bEIsT0FFQThsQixPQUFBLFNBQUF4SCxHQUNBLE1BQUEsa0JBQUFBLEVBQ0FBLEVBQUF0ZSxLQUFBMGxCLE9BQUExbEIsS0FBQTZsQixPQUdBN2xCLEtBQUFrRSxLQUFBLFdBQ0F1Z0IsR0FBQXprQixNQUNBZ0QsRUFBQWhELE1BQUEwbEIsT0FFQTFpQixFQUFBaEQsTUFBQTZsQixZQUtBLElBVUFFLEdBQ0FoVixHQVhBaVYsR0FBQSx3QkFFQUMsR0FBQSxpQ0FFQUMsR0FBQSxxQ0FNQUgsR0FEQW5tQixFQUFBdW1CLHlCQUNBeGpCLFlBQUEvQyxFQUFBMEMsY0FBQSxTQUNBeU8sR0FBQW5SLEVBQUEwQyxjQUFBLFVBTUFHLGFBQUEsT0FBQSxTQUNBc08sR0FBQXRPLGFBQUEsVUFBQSxXQUNBc08sR0FBQXRPLGFBQUEsT0FBQSxLQUVBc2pCLEdBQUFwakIsWUFBQW9PLElBSUEzUCxFQUFBZ2xCLFdBQUFMLEdBQUFNLFdBQUEsR0FBQUEsV0FBQSxHQUFBN1IsVUFBQXNCLFFBSUFpUSxHQUFBL1UsVUFBQSx5QkFDQTVQLEVBQUFrbEIsaUJBQUFQLEdBQUFNLFdBQUEsR0FBQTdSLFVBQUF1RixhQUtBZ00sR0FBQS9VLFVBQUEsb0JBQ0E1UCxFQUFBbWxCLFNBQUFSLEdBQUF2UixVQUtBLElBQUFnUyxHQUFBLENBS0FDLE1BQUEsQ0FBQSxFQUFBLFVBQUEsWUFDQUMsSUFBQSxDQUFBLEVBQUEsb0JBQUEsdUJBQ0FDLEdBQUEsQ0FBQSxFQUFBLGlCQUFBLG9CQUNBQyxHQUFBLENBQUEsRUFBQSxxQkFBQSx5QkFFQUMsU0FBQSxDQUFBLEVBQUEsR0FBQSxLQVlBLFNBQUFDLEdBQUE1akIsRUFBQTJOLEdBSUEsSUFBQTlNLEVBWUEsT0FUQUEsT0FEQSxJQUFBYixFQUFBb0sscUJBQ0FwSyxFQUFBb0sscUJBQUF1RCxHQUFBLFVBRUEsSUFBQTNOLEVBQUErSyxpQkFDQS9LLEVBQUErSyxpQkFBQTRDLEdBQUEsS0FHQSxRQUdBL0ssSUFBQStLLEdBQUFBLEdBQUF4RSxFQUFBbkosRUFBQTJOLEdBQ0E3TixFQUFBZ0IsTUFBQSxDQUFBZCxHQUFBYSxHQUdBQSxFQUtBLFNBQUFnakIsR0FBQWpqQixFQUFBa2pCLEdBSUEsSUFIQSxJQUFBN2tCLEVBQUEsRUFDQW9aLEVBQUF6WCxFQUFBUixPQUVBbkIsRUFBQW9aLEVBQUFwWixJQUNBNGdCLEVBQUFKLElBQ0E3ZSxFQUFBM0IsR0FDQSxjQUNBNmtCLEdBQUFqRSxFQUFBcGYsSUFBQXFqQixFQUFBN2tCLEdBQUEsZUExQ0Fxa0IsR0FBQVMsTUFBQVQsR0FBQVUsTUFBQVYsR0FBQVcsU0FBQVgsR0FBQVksUUFBQVosR0FBQUMsTUFDQUQsR0FBQWEsR0FBQWIsR0FBQUksR0FHQXhsQixFQUFBbWxCLFNBQ0FDLEdBQUFjLFNBQUFkLEdBQUFELE9BQUEsQ0FBQSxFQUFBLCtCQUFBLGNBMkNBLElBQUF4YixHQUFBLFlBRUEsU0FBQXdjLEdBQUF6akIsRUFBQVosRUFBQXNrQixFQUFBQyxFQUFBQyxHQU9BLElBTkEsSUFBQXJqQixFQUFBeU0sRUFBQUQsRUFBQThXLEVBQUFDLEVBQUE3aUIsRUFDQThpQixFQUFBM2tCLEVBQUFpakIseUJBQ0EyQixFQUFBLEdBQ0EzbEIsRUFBQSxFQUNBb1osRUFBQXpYLEVBQUFSLE9BRUFuQixFQUFBb1osRUFBQXBaLElBR0EsSUFGQWtDLEVBQUFQLEVBQUEzQixLQUVBLElBQUFrQyxFQUdBLEdBQUEsV0FBQXZCLEVBQUF1QixHQUlBckIsRUFBQWdCLE1BQUE4akIsRUFBQXpqQixFQUFBOUMsU0FBQSxDQUFBOEMsR0FBQUEsUUFHQSxHQUFBMEcsR0FBQTBDLEtBQUFwSixHQUlBLENBVUEsSUFUQXlNLEVBQUFBLEdBQUErVyxFQUFBbGxCLFlBQUFPLEVBQUFaLGNBQUEsUUFHQXVPLEdBQUFvVixHQUFBOVksS0FBQTlJLElBQUEsQ0FBQSxHQUFBLEtBQUEsR0FBQW9ELGNBQ0FrZ0IsRUFBQW5CLEdBQUEzVixJQUFBMlYsR0FBQUssU0FDQS9WLEVBQUFFLFVBQUEyVyxFQUFBLEdBQUEza0IsRUFBQStrQixjQUFBMWpCLEdBQUFzakIsRUFBQSxHQUdBNWlCLEVBQUE0aUIsRUFBQSxHQUNBNWlCLEtBQ0ErTCxFQUFBQSxFQUFBMEQsVUFLQXhSLEVBQUFnQixNQUFBOGpCLEVBQUFoWCxFQUFBdEUsYUFHQXNFLEVBQUErVyxFQUFBblYsWUFHQUQsWUFBQSxRQXpCQXFWLEVBQUFsbkIsS0FBQXNDLEVBQUE4a0IsZUFBQTNqQixJQWtDQSxJQUhBd2pCLEVBQUFwVixZQUFBLEdBRUF0USxFQUFBLEVBQ0FrQyxFQUFBeWpCLEVBQUEzbEIsTUFHQSxHQUFBc2xCLElBQUEsRUFBQXprQixFQUFBNkQsUUFBQXhDLEVBQUFvakIsR0FDQUMsR0FDQUEsRUFBQTltQixLQUFBeUQsUUFnQkEsR0FYQXVqQixFQUFBdEQsR0FBQWpnQixHQUdBeU0sRUFBQWdXLEdBQUFlLEVBQUFsbEIsWUFBQTBCLEdBQUEsVUFHQXVqQixHQUNBYixHQUFBalcsR0FJQTBXLEVBRUEsSUFEQXppQixFQUFBLEVBQ0FWLEVBQUF5TSxFQUFBL0wsTUFDQW1oQixHQUFBelksS0FBQXBKLEVBQUExQyxNQUFBLEtBQ0E2bEIsRUFBQTVtQixLQUFBeUQsR0FNQSxPQUFBd2pCLEVBSUEsSUFBQUksR0FBQSxzQkFFQSxTQUFBQyxLQUNBLE9BQUEsRUFHQSxTQUFBQyxLQUNBLE9BQUEsRUFTQSxTQUFBQyxHQUFBL2pCLEVBQUExQyxHQUNBLE9BQUEwQyxJQU1BLFdBQ0EsSUFDQSxPQUFBekUsRUFBQTZWLGNBQ0EsTUFBQTRTLEtBVEFDLEtBQUEsVUFBQTNtQixHQVlBLFNBQUE0bUIsR0FBQWxrQixFQUFBbWtCLEVBQUF2bEIsRUFBQTJmLEVBQUF6ZixFQUFBc2xCLEdBQ0EsSUFBQUMsRUFBQS9tQixFQUdBLEdBQUEsaUJBQUE2bUIsRUFBQSxDQVNBLElBQUE3bUIsSUFOQSxpQkFBQXNCLElBR0EyZixFQUFBQSxHQUFBM2YsRUFDQUEsT0FBQTZDLEdBRUEwaUIsRUFDQUQsR0FBQWxrQixFQUFBMUMsRUFBQXNCLEVBQUEyZixFQUFBNEYsRUFBQTdtQixHQUFBOG1CLEdBRUEsT0FBQXBrQixFQXNCQSxHQW5CQSxNQUFBdWUsR0FBQSxNQUFBemYsR0FHQUEsRUFBQUYsRUFDQTJmLEVBQUEzZixPQUFBNkMsR0FDQSxNQUFBM0MsSUFDQSxpQkFBQUYsR0FHQUUsRUFBQXlmLEVBQ0FBLE9BQUE5YyxJQUlBM0MsRUFBQXlmLEVBQ0FBLEVBQUEzZixFQUNBQSxPQUFBNkMsS0FHQSxJQUFBM0MsRUFDQUEsRUFBQWdsQixRQUNBLElBQUFobEIsRUFDQSxPQUFBa0IsRUFlQSxPQVpBLElBQUFva0IsSUFDQUMsRUFBQXZsQixHQUNBQSxFQUFBLFNBQUF3bEIsR0FJQSxPQURBM2xCLElBQUE0bEIsSUFBQUQsR0FDQUQsRUFBQS9uQixNQUFBWCxLQUFBc0UsYUFJQThDLEtBQUFzaEIsRUFBQXRoQixPQUFBc2hCLEVBQUF0aEIsS0FBQXBFLEVBQUFvRSxTQUVBL0MsRUFBQUgsS0FBQSxXQUNBbEIsRUFBQTJsQixNQUFBaE4sSUFBQTNiLEtBQUF3b0IsRUFBQXJsQixFQUFBeWYsRUFBQTNmLEtBK2FBLFNBQUE0bEIsR0FBQWxhLEVBQUFoTixFQUFBeW1CLEdBR0FBLEdBUUFyRixFQUFBSixJQUFBaFUsRUFBQWhOLEdBQUEsR0FDQXFCLEVBQUEybEIsTUFBQWhOLElBQUFoTixFQUFBaE4sRUFBQSxDQUNBaU8sV0FBQSxFQUNBZCxRQUFBLFNBQUE2WixHQUNBLElBQUFHLEVBQUFwVixFQUNBcVYsRUFBQWhHLEVBQUFwZixJQUFBM0QsS0FBQTJCLEdBRUEsR0FBQSxFQUFBZ25CLEVBQUFLLFdBQUFocEIsS0FBQTJCLElBS0EsR0FBQW9uQixFQUFBemxCLFFBdUNBTixFQUFBMmxCLE1BQUFySixRQUFBM2QsSUFBQSxJQUFBc25CLGNBQ0FOLEVBQUFPLHVCQXJCQSxHQWRBSCxFQUFBem9CLEVBQUFHLEtBQUE2RCxXQUNBeWUsRUFBQUosSUFBQTNpQixLQUFBMkIsRUFBQW9uQixHQUtBRCxFQUFBVixFQUFBcG9CLEtBQUEyQixHQUNBM0IsS0FBQTJCLEtBRUFvbkIsS0FEQXJWLEVBQUFxUCxFQUFBcGYsSUFBQTNELEtBQUEyQixLQUNBbW5CLEVBQ0EvRixFQUFBSixJQUFBM2lCLEtBQUEyQixHQUFBLEdBRUErUixFQUFBLEdBRUFxVixJQUFBclYsRUFXQSxPQVJBaVYsRUFBQVEsMkJBQ0FSLEVBQUFTLGlCQU9BMVYsR0FBQUEsRUFBQXZNLFdBZUE0aEIsRUFBQXpsQixTQUdBeWYsRUFBQUosSUFBQTNpQixLQUFBMkIsRUFBQSxDQUNBd0YsTUFBQW5FLEVBQUEybEIsTUFBQVUsUUFJQXJtQixFQUFBbUMsT0FBQTRqQixFQUFBLEdBQUEvbEIsRUFBQXNtQixNQUFBL2xCLFdBQ0F3bEIsRUFBQXpvQixNQUFBLEdBQ0FOLFFBS0Eyb0IsRUFBQVEscUNBL0VBcmpCLElBQUFpZCxFQUFBcGYsSUFBQWdMLEVBQUFoTixJQUNBcUIsRUFBQTJsQixNQUFBaE4sSUFBQWhOLEVBQUFoTixFQUFBdW1CLElBNWFBbGxCLEVBQUEybEIsTUFBQSxDQUVBbnBCLE9BQUEsR0FFQW1jLElBQUEsU0FBQXRYLEVBQUFta0IsRUFBQTFaLEVBQUE4VCxFQUFBM2YsR0FFQSxJQUFBc21CLEVBQUFDLEVBQUExWSxFQUNBMlksRUFBQUMsRUFBQUMsRUFDQXJLLEVBQUFzSyxFQUFBam9CLEVBQUFrb0IsRUFBQUMsRUFDQUMsRUFBQWhILEVBQUFwZixJQUFBVSxHQUdBLEdBQUFnZSxFQUFBaGUsR0F1Q0EsSUFsQ0F5SyxFQUFBQSxVQUVBQSxHQURBeWEsRUFBQXphLEdBQ0FBLFFBQ0E3TCxFQUFBc21CLEVBQUF0bUIsVUFLQUEsR0FDQUQsRUFBQTJOLEtBQUFNLGdCQUFBbkIsR0FBQTdNLEdBSUE2TCxFQUFBMUgsT0FDQTBILEVBQUExSCxLQUFBcEUsRUFBQW9FLFNBSUFxaUIsRUFBQU0sRUFBQU4sVUFDQUEsRUFBQU0sRUFBQU4sT0FBQXJwQixPQUFBNHBCLE9BQUEsUUFFQVIsRUFBQU8sRUFBQUUsVUFDQVQsRUFBQU8sRUFBQUUsT0FBQSxTQUFBeGQsR0FJQSxZQUFBLElBQUF6SixHQUFBQSxFQUFBMmxCLE1BQUF1QixZQUFBemQsRUFBQTlLLEtBQ0FxQixFQUFBMmxCLE1BQUF3QixTQUFBeHBCLE1BQUEwRCxFQUFBQyxnQkFBQXdCLElBTUE0akIsR0FEQWxCLEdBQUFBLEdBQUEsSUFBQTFiLE1BQUF1UCxJQUFBLENBQUEsS0FDQS9ZLE9BQ0FvbUIsS0FFQS9uQixFQUFBbW9CLEdBREFoWixFQUFBbVgsR0FBQTlhLEtBQUFxYixFQUFBa0IsS0FBQSxJQUNBLEdBQ0FHLEdBQUEvWSxFQUFBLElBQUEsSUFBQXZKLE1BQUEsS0FBQXRDLE9BR0F0RCxJQUtBMmQsRUFBQXRjLEVBQUEybEIsTUFBQXJKLFFBQUEzZCxJQUFBLEdBR0FBLEdBQUFzQixFQUFBcWMsRUFBQTJKLGFBQUEzSixFQUFBOEssV0FBQXpvQixFQUdBMmQsRUFBQXRjLEVBQUEybEIsTUFBQXJKLFFBQUEzZCxJQUFBLEdBR0Fnb0IsRUFBQTNtQixFQUFBbUMsT0FBQSxDQUNBeEQsS0FBQUEsRUFDQW1vQixTQUFBQSxFQUNBbEgsS0FBQUEsRUFDQTlULFFBQUFBLEVBQ0ExSCxLQUFBMEgsRUFBQTFILEtBQ0FuRSxTQUFBQSxFQUNBNkgsYUFBQTdILEdBQUFELEVBQUFnUCxLQUFBbEYsTUFBQWhDLGFBQUEyQyxLQUFBeEssR0FDQTJNLFVBQUFpYSxFQUFBaGMsS0FBQSxNQUNBMGIsSUFHQUssRUFBQUgsRUFBQTluQixPQUNBaW9CLEVBQUFILEVBQUE5bkIsR0FBQSxJQUNBMG9CLGNBQUEsRUFHQS9LLEVBQUFnTCxRQUNBLElBQUFoTCxFQUFBZ0wsTUFBQTdwQixLQUFBNEQsRUFBQXVlLEVBQUFpSCxFQUFBTCxJQUVBbmxCLEVBQUE4TCxrQkFDQTlMLEVBQUE4TCxpQkFBQXhPLEVBQUE2bkIsSUFLQWxLLEVBQUEzRCxNQUNBMkQsRUFBQTNELElBQUFsYixLQUFBNEQsRUFBQXNsQixHQUVBQSxFQUFBN2EsUUFBQTFILE9BQ0F1aUIsRUFBQTdhLFFBQUExSCxLQUFBMEgsRUFBQTFILE9BS0FuRSxFQUNBMm1CLEVBQUExa0IsT0FBQTBrQixFQUFBUyxnQkFBQSxFQUFBVixHQUVBQyxFQUFBaHBCLEtBQUErb0IsR0FJQTNtQixFQUFBMmxCLE1BQUFucEIsT0FBQW1DLElBQUEsSUFNQW9jLE9BQUEsU0FBQTFaLEVBQUFta0IsRUFBQTFaLEVBQUE3TCxFQUFBc25CLEdBRUEsSUFBQXhsQixFQUFBeWxCLEVBQUExWixFQUNBMlksRUFBQUMsRUFBQUMsRUFDQXJLLEVBQUFzSyxFQUFBam9CLEVBQUFrb0IsRUFBQUMsRUFDQUMsRUFBQWhILEVBQUFELFFBQUF6ZSxJQUFBMGUsRUFBQXBmLElBQUFVLEdBRUEsR0FBQTBsQixJQUFBTixFQUFBTSxFQUFBTixRQUFBLENBT0EsSUFEQUMsR0FEQWxCLEdBQUFBLEdBQUEsSUFBQTFiLE1BQUF1UCxJQUFBLENBQUEsS0FDQS9ZLE9BQ0FvbUIsS0FNQSxHQUpBL25CLEVBQUFtb0IsR0FEQWhaLEVBQUFtWCxHQUFBOWEsS0FBQXFiLEVBQUFrQixLQUFBLElBQ0EsR0FDQUcsR0FBQS9ZLEVBQUEsSUFBQSxJQUFBdkosTUFBQSxLQUFBdEMsT0FHQXRELEVBQUEsQ0FlQSxJQVJBMmQsRUFBQXRjLEVBQUEybEIsTUFBQXJKLFFBQUEzZCxJQUFBLEdBRUFpb0IsRUFBQUgsRUFEQTluQixHQUFBc0IsRUFBQXFjLEVBQUEySixhQUFBM0osRUFBQThLLFdBQUF6b0IsSUFDQSxHQUNBbVAsRUFBQUEsRUFBQSxJQUNBLElBQUEvRyxPQUFBLFVBQUE4ZixFQUFBaGMsS0FBQSxpQkFBQSxXQUdBMmMsRUFBQXpsQixFQUFBNmtCLEVBQUF0bUIsT0FDQXlCLEtBQ0E0a0IsRUFBQUMsRUFBQTdrQixJQUVBd2xCLEdBQUFULElBQUFILEVBQUFHLFVBQ0FoYixHQUFBQSxFQUFBMUgsT0FBQXVpQixFQUFBdmlCLE1BQ0EwSixJQUFBQSxFQUFBckQsS0FBQWtjLEVBQUEvWixZQUNBM00sR0FBQUEsSUFBQTBtQixFQUFBMW1CLFdBQ0EsT0FBQUEsSUFBQTBtQixFQUFBMW1CLFlBQ0EybUIsRUFBQTFrQixPQUFBSCxFQUFBLEdBRUE0a0IsRUFBQTFtQixVQUNBMm1CLEVBQUFTLGdCQUVBL0ssRUFBQXZCLFFBQ0F1QixFQUFBdkIsT0FBQXRkLEtBQUE0RCxFQUFBc2xCLElBT0FhLElBQUFaLEVBQUF0bUIsU0FDQWdjLEVBQUFtTCxXQUNBLElBQUFuTCxFQUFBbUwsU0FBQWhxQixLQUFBNEQsRUFBQXdsQixFQUFBRSxFQUFBRSxTQUVBam5CLEVBQUEwbkIsWUFBQXJtQixFQUFBMUMsRUFBQW9vQixFQUFBRSxlQUdBUixFQUFBOW5CLFNBMUNBLElBQUFBLEtBQUE4bkIsRUFDQXptQixFQUFBMmxCLE1BQUE1SyxPQUFBMVosRUFBQTFDLEVBQUE2bUIsRUFBQWtCLEdBQUE1YSxFQUFBN0wsR0FBQSxHQThDQUQsRUFBQXlELGNBQUFnakIsSUFDQTFHLEVBQUFoRixPQUFBMVosRUFBQSxtQkFJQThsQixTQUFBLFNBQUFRLEdBRUEsSUFBQXhvQixFQUFBNEMsRUFBQWhCLEVBQUErUSxFQUFBNlUsRUFBQWlCLEVBQ0FqVyxFQUFBLElBQUEvTyxNQUFBdEIsVUFBQWhCLFFBR0FxbEIsRUFBQTNsQixFQUFBMmxCLE1BQUFrQyxJQUFBRixHQUVBZixHQUNBN0csRUFBQXBmLElBQUEzRCxLQUFBLFdBQUFJLE9BQUE0cEIsT0FBQSxPQUNBckIsRUFBQWhuQixPQUFBLEdBQ0EyZCxFQUFBdGMsRUFBQTJsQixNQUFBckosUUFBQXFKLEVBQUFobkIsT0FBQSxHQUtBLElBRkFnVCxFQUFBLEdBQUFnVSxFQUVBeG1CLEVBQUEsRUFBQUEsRUFBQW1DLFVBQUFoQixPQUFBbkIsSUFDQXdTLEVBQUF4UyxHQUFBbUMsVUFBQW5DLEdBTUEsR0FIQXdtQixFQUFBbUMsZUFBQTlxQixNQUdBc2YsRUFBQXlMLGNBQUEsSUFBQXpMLEVBQUF5TCxZQUFBdHFCLEtBQUFULEtBQUEyb0IsR0FBQSxDQVNBLElBSkFpQyxFQUFBNW5CLEVBQUEybEIsTUFBQWlCLFNBQUFucEIsS0FBQVQsS0FBQTJvQixFQUFBaUIsR0FHQXpuQixFQUFBLEdBQ0EyUyxFQUFBOFYsRUFBQXpvQixRQUFBd21CLEVBQUFxQyx3QkFJQSxJQUhBckMsRUFBQXNDLGNBQUFuVyxFQUFBelEsS0FFQVUsRUFBQSxHQUNBNGtCLEVBQUE3VSxFQUFBOFUsU0FBQTdrQixRQUNBNGpCLEVBQUF1QyxpQ0FJQXZDLEVBQUF3QyxhQUFBLElBQUF4QixFQUFBL1osWUFDQStZLEVBQUF3QyxXQUFBMWQsS0FBQWtjLEVBQUEvWixhQUVBK1ksRUFBQWdCLFVBQUFBLEVBQ0FoQixFQUFBL0YsS0FBQStHLEVBQUEvRyxVQUtBOWMsS0FIQS9CLElBQUFmLEVBQUEybEIsTUFBQXJKLFFBQUFxSyxFQUFBRyxXQUFBLElBQUFHLFFBQ0FOLEVBQUE3YSxTQUFBbk8sTUFBQW1VLEVBQUF6USxLQUFBc1EsTUFHQSxLQUFBZ1UsRUFBQWpWLE9BQUEzUCxLQUNBNGtCLEVBQUFTLGlCQUNBVCxFQUFBTyxvQkFZQSxPQUpBNUosRUFBQThMLGNBQ0E5TCxFQUFBOEwsYUFBQTNxQixLQUFBVCxLQUFBMm9CLEdBR0FBLEVBQUFqVixTQUdBa1csU0FBQSxTQUFBakIsRUFBQWlCLEdBQ0EsSUFBQXpuQixFQUFBd25CLEVBQUF2WCxFQUFBaVosRUFBQUMsRUFDQVYsRUFBQSxHQUNBUCxFQUFBVCxFQUFBUyxjQUNBcGIsRUFBQTBaLEVBQUFsakIsT0FHQSxHQUFBNGtCLEdBSUFwYixFQUFBMU4sWUFPQSxVQUFBb25CLEVBQUFobkIsTUFBQSxHQUFBZ25CLEVBQUF4UyxRQUVBLEtBQUFsSCxJQUFBalAsS0FBQWlQLEVBQUFBLEVBQUFyTSxZQUFBNUMsS0FJQSxHQUFBLElBQUFpUCxFQUFBMU4sV0FBQSxVQUFBb25CLEVBQUFobkIsT0FBQSxJQUFBc04sRUFBQTdDLFVBQUEsQ0FHQSxJQUZBaWYsRUFBQSxHQUNBQyxFQUFBLEdBQ0FucEIsRUFBQSxFQUFBQSxFQUFBa29CLEVBQUFsb0IsU0FNQTJELElBQUF3bEIsRUFGQWxaLEdBSEF1WCxFQUFBQyxFQUFBem5CLElBR0FjLFNBQUEsT0FHQXFvQixFQUFBbFosR0FBQXVYLEVBQUE3ZSxjQUNBLEVBQUE5SCxFQUFBb1AsRUFBQXBTLE1BQUF5YixNQUFBeE0sR0FDQWpNLEVBQUEyTixLQUFBeUIsRUFBQXBTLEtBQUEsS0FBQSxDQUFBaVAsSUFBQTNMLFFBRUFnb0IsRUFBQWxaLElBQ0FpWixFQUFBenFCLEtBQUErb0IsR0FHQTBCLEVBQUEvbkIsUUFDQXNuQixFQUFBaHFCLEtBQUEsQ0FBQXlELEtBQUE0SyxFQUFBMmEsU0FBQXlCLElBWUEsT0FMQXBjLEVBQUFqUCxLQUNBcXFCLEVBQUFULEVBQUF0bUIsUUFDQXNuQixFQUFBaHFCLEtBQUEsQ0FBQXlELEtBQUE0SyxFQUFBMmEsU0FBQUEsRUFBQXRwQixNQUFBK3BCLEtBR0FPLEdBR0FXLFFBQUEsU0FBQWxtQixFQUFBbW1CLEdBQ0FwckIsT0FBQXFpQixlQUFBemYsRUFBQXNtQixNQUFBL2xCLFVBQUE4QixFQUFBLENBQ0FvbUIsWUFBQSxFQUNBL0ksY0FBQSxFQUVBL2UsSUFBQXRDLEVBQUFtcUIsR0FDQSxXQUNBLEdBQUF4ckIsS0FBQTByQixjQUNBLE9BQUFGLEVBQUF4ckIsS0FBQTByQixnQkFHQSxXQUNBLEdBQUExckIsS0FBQTByQixjQUNBLE9BQUExckIsS0FBQTByQixjQUFBcm1CLElBSUFzZCxJQUFBLFNBQUF4YixHQUNBL0csT0FBQXFpQixlQUFBemlCLEtBQUFxRixFQUFBLENBQ0FvbUIsWUFBQSxFQUNBL0ksY0FBQSxFQUNBaUosVUFBQSxFQUNBeGtCLE1BQUFBLFFBTUEwakIsSUFBQSxTQUFBYSxHQUNBLE9BQUFBLEVBQUExb0IsRUFBQStDLFNBQ0EybEIsRUFDQSxJQUFBMW9CLEVBQUFzbUIsTUFBQW9DLElBR0FwTSxRQUFBLENBQ0FzTSxLQUFBLENBR0FDLFVBQUEsR0FFQUMsTUFBQSxDQUdBeEIsTUFBQSxTQUFBMUgsR0FJQSxJQUFBalUsRUFBQTNPLE1BQUE0aUIsRUFXQSxPQVJBb0QsR0FBQXZZLEtBQUFrQixFQUFBaE4sT0FDQWdOLEVBQUFtZCxPQUFBemYsRUFBQXNDLEVBQUEsVUFHQWthLEdBQUFsYSxFQUFBLFFBQUF1WixLQUlBLEdBRUFtQixRQUFBLFNBQUF6RyxHQUlBLElBQUFqVSxFQUFBM08sTUFBQTRpQixFQVVBLE9BUEFvRCxHQUFBdlksS0FBQWtCLEVBQUFoTixPQUNBZ04sRUFBQW1kLE9BQUF6ZixFQUFBc0MsRUFBQSxVQUVBa2EsR0FBQWxhLEVBQUEsVUFJQSxHQUtBa1ksU0FBQSxTQUFBOEIsR0FDQSxJQUFBbGpCLEVBQUFrakIsRUFBQWxqQixPQUNBLE9BQUF1Z0IsR0FBQXZZLEtBQUFoSSxFQUFBOUQsT0FDQThELEVBQUFxbUIsT0FBQXpmLEVBQUE1RyxFQUFBLFVBQ0FzZCxFQUFBcGYsSUFBQThCLEVBQUEsVUFDQTRHLEVBQUE1RyxFQUFBLE9BSUFzbUIsYUFBQSxDQUNBWCxhQUFBLFNBQUF6QyxRQUlBN2lCLElBQUE2aUIsRUFBQWpWLFFBQUFpVixFQUFBK0MsZ0JBQ0EvQyxFQUFBK0MsY0FBQU0sWUFBQXJELEVBQUFqVixZQW9HQTFRLEVBQUEwbkIsWUFBQSxTQUFBcm1CLEVBQUExQyxFQUFBc29CLEdBR0E1bEIsRUFBQTZjLHFCQUNBN2MsRUFBQTZjLG9CQUFBdmYsRUFBQXNvQixJQUlBam5CLEVBQUFzbUIsTUFBQSxTQUFBMW5CLEVBQUFxcUIsR0FHQSxLQUFBanNCLGdCQUFBZ0QsRUFBQXNtQixPQUNBLE9BQUEsSUFBQXRtQixFQUFBc21CLE1BQUExbkIsRUFBQXFxQixHQUlBcnFCLEdBQUFBLEVBQUFELE1BQ0EzQixLQUFBMHJCLGNBQUE5cEIsRUFDQTVCLEtBQUEyQixLQUFBQyxFQUFBRCxLQUlBM0IsS0FBQWtzQixtQkFBQXRxQixFQUFBdXFCLHVCQUNBcm1CLElBQUFsRSxFQUFBdXFCLG1CQUdBLElBQUF2cUIsRUFBQW9xQixZQUNBOUQsR0FDQUMsR0FLQW5vQixLQUFBeUYsT0FBQTdELEVBQUE2RCxRQUFBLElBQUE3RCxFQUFBNkQsT0FBQWxFLFNBQ0FLLEVBQUE2RCxPQUFBN0MsV0FDQWhCLEVBQUE2RCxPQUVBekYsS0FBQWlyQixjQUFBcnBCLEVBQUFxcEIsY0FDQWpyQixLQUFBb3NCLGNBQUF4cUIsRUFBQXdxQixlQUlBcHNCLEtBQUEyQixLQUFBQyxFQUlBcXFCLEdBQ0FqcEIsRUFBQW1DLE9BQUFuRixLQUFBaXNCLEdBSUFqc0IsS0FBQXFzQixVQUFBenFCLEdBQUFBLEVBQUF5cUIsV0FBQTNqQixLQUFBNGpCLE1BR0F0c0IsS0FBQWdELEVBQUErQyxVQUFBLEdBS0EvQyxFQUFBc21CLE1BQUEvbEIsVUFBQSxDQUNBRSxZQUFBVCxFQUFBc21CLE1BQ0E0QyxtQkFBQS9ELEdBQ0E2QyxxQkFBQTdDLEdBQ0ErQyw4QkFBQS9DLEdBQ0FvRSxhQUFBLEVBRUFuRCxlQUFBLFdBQ0EsSUFBQTNjLEVBQUF6TSxLQUFBMHJCLGNBRUExckIsS0FBQWtzQixtQkFBQWhFLEdBRUF6YixJQUFBek0sS0FBQXVzQixhQUNBOWYsRUFBQTJjLGtCQUdBRixnQkFBQSxXQUNBLElBQUF6YyxFQUFBek0sS0FBQTByQixjQUVBMXJCLEtBQUFnckIscUJBQUE5QyxHQUVBemIsSUFBQXpNLEtBQUF1c0IsYUFDQTlmLEVBQUF5YyxtQkFHQUMseUJBQUEsV0FDQSxJQUFBMWMsRUFBQXpNLEtBQUEwckIsY0FFQTFyQixLQUFBa3JCLDhCQUFBaEQsR0FFQXpiLElBQUF6TSxLQUFBdXNCLGFBQ0E5ZixFQUFBMGMsMkJBR0FucEIsS0FBQWtwQixvQkFLQWxtQixFQUFBa0IsS0FBQSxDQUNBc29CLFFBQUEsRUFDQUMsU0FBQSxFQUNBQyxZQUFBLEVBQ0FDLGdCQUFBLEVBQ0FDLFNBQUEsRUFDQUMsUUFBQSxFQUNBQyxZQUFBLEVBQ0FDLFNBQUEsRUFDQUMsT0FBQSxFQUNBQyxPQUFBLEVBQ0FDLFVBQUEsRUFDQUMsTUFBQSxFQUNBQyxNQUFBLEVBQ0FwckIsTUFBQSxFQUNBcXJCLFVBQUEsRUFDQS9lLEtBQUEsRUFDQWdmLFNBQUEsRUFDQW5YLFFBQUEsRUFDQW9YLFNBQUEsRUFDQUMsU0FBQSxFQUNBQyxTQUFBLEVBQ0FDLFNBQUEsRUFDQUMsU0FBQSxFQUNBQyxXQUFBLEVBQ0FDLGFBQUEsRUFDQUMsU0FBQSxFQUNBQyxTQUFBLEVBQ0FDLGVBQUEsRUFDQUMsV0FBQSxFQUNBQyxTQUFBLEVBQ0FDLE9BQUEsR0FDQW5yQixFQUFBMmxCLE1BQUE0QyxTQUVBdm9CLEVBQUFrQixLQUFBLENBQUFzUixNQUFBLFVBQUE0WSxLQUFBLFlBQUEsU0FBQXpzQixFQUFBc25CLEdBQ0FqbUIsRUFBQTJsQixNQUFBckosUUFBQTNkLEdBQUEsQ0FHQTJvQixNQUFBLFdBUUEsT0FIQXpCLEdBQUE3b0IsS0FBQTJCLEVBQUF5bUIsS0FHQSxHQUVBaUIsUUFBQSxXQU1BLE9BSEFSLEdBQUE3b0IsS0FBQTJCLElBR0EsR0FLQWtsQixTQUFBLFNBQUE4QixHQUNBLE9BQUE1RixFQUFBcGYsSUFBQWdsQixFQUFBbGpCLE9BQUE5RCxJQUdBc25CLGFBQUFBLEtBWUFqbUIsRUFBQWtCLEtBQUEsQ0FDQW1xQixXQUFBLFlBQ0FDLFdBQUEsV0FDQUMsYUFBQSxjQUNBQyxhQUFBLGNBQ0EsU0FBQUMsRUFBQTVELEdBQ0E3bkIsRUFBQTJsQixNQUFBckosUUFBQW1QLEdBQUEsQ0FDQXhGLGFBQUE0QixFQUNBVCxTQUFBUyxFQUVBWixPQUFBLFNBQUF0QixHQUNBLElBQUE1a0IsRUFFQTJxQixFQUFBL0YsRUFBQXlELGNBQ0F6QyxFQUFBaEIsRUFBQWdCLFVBU0EsT0FMQStFLElBQUFBLElBTkExdUIsTUFNQWdELEVBQUF5RixTQU5BekksS0FNQTB1QixNQUNBL0YsRUFBQWhuQixLQUFBZ29CLEVBQUFHLFNBQ0EvbEIsRUFBQTRsQixFQUFBN2EsUUFBQW5PLE1BQUFYLEtBQUFzRSxXQUNBcWtCLEVBQUFobkIsS0FBQWtwQixHQUVBOW1CLE1BS0FmLEVBQUFHLEdBQUFnQyxPQUFBLENBRUFvakIsR0FBQSxTQUFBQyxFQUFBdmxCLEVBQUEyZixFQUFBemYsR0FDQSxPQUFBb2xCLEdBQUF2b0IsS0FBQXdvQixFQUFBdmxCLEVBQUEyZixFQUFBemYsSUFFQXNsQixJQUFBLFNBQUFELEVBQUF2bEIsRUFBQTJmLEVBQUF6ZixHQUNBLE9BQUFvbEIsR0FBQXZvQixLQUFBd29CLEVBQUF2bEIsRUFBQTJmLEVBQUF6ZixFQUFBLElBRUF5bEIsSUFBQSxTQUFBSixFQUFBdmxCLEVBQUFFLEdBQ0EsSUFBQXdtQixFQUFBaG9CLEVBQ0EsR0FBQTZtQixHQUFBQSxFQUFBWSxnQkFBQVosRUFBQW1CLFVBV0EsT0FSQUEsRUFBQW5CLEVBQUFtQixVQUNBM21CLEVBQUF3bEIsRUFBQXNDLGdCQUFBbEMsSUFDQWUsRUFBQS9aLFVBQ0ErWixFQUFBRyxTQUFBLElBQUFILEVBQUEvWixVQUNBK1osRUFBQUcsU0FDQUgsRUFBQTFtQixTQUNBMG1CLEVBQUE3YSxTQUVBOU8sS0FFQSxHQUFBLGlCQUFBd29CLEVBaUJBLE9BVEEsSUFBQXZsQixHQUFBLG1CQUFBQSxJQUdBRSxFQUFBRixFQUNBQSxPQUFBNkMsSUFFQSxJQUFBM0MsSUFDQUEsRUFBQWdsQixJQUVBbm9CLEtBQUFrRSxLQUFBLFdBQ0FsQixFQUFBMmxCLE1BQUE1SyxPQUFBL2QsS0FBQXdvQixFQUFBcmxCLEVBQUFGLEtBZkEsSUFBQXRCLEtBQUE2bUIsRUFDQXhvQixLQUFBNG9CLElBQUFqbkIsRUFBQXNCLEVBQUF1bEIsRUFBQTdtQixJQUVBLE9BQUEzQixRQWtCQSxJQUtBMnVCLEdBQUEsd0JBR0FDLEdBQUEsb0NBRUFDLEdBQUEsNkJBR0EsU0FBQUMsR0FBQXpxQixFQUFBOFgsR0FDQSxPQUFBOVAsRUFBQWhJLEVBQUEsVUFDQWdJLEVBQUEsS0FBQThQLEVBQUE1YSxTQUFBNGEsRUFBQUEsRUFBQXpKLFdBQUEsT0FFQTFQLEVBQUFxQixHQUFBNlcsU0FBQSxTQUFBLElBR0E3VyxFQUlBLFNBQUEwcUIsR0FBQTFxQixHQUVBLE9BREFBLEVBQUExQyxNQUFBLE9BQUEwQyxFQUFBN0IsYUFBQSxTQUFBLElBQUE2QixFQUFBMUMsS0FDQTBDLEVBRUEsU0FBQTJxQixHQUFBM3FCLEdBT0EsTUFOQSxXQUFBQSxFQUFBMUMsTUFBQSxJQUFBckIsTUFBQSxFQUFBLEdBQ0ErRCxFQUFBMUMsS0FBQTBDLEVBQUExQyxLQUFBckIsTUFBQSxHQUVBK0QsRUFBQThKLGdCQUFBLFFBR0E5SixFQUdBLFNBQUE0cUIsR0FBQXJ0QixFQUFBc3RCLEdBQ0EsSUFBQS9zQixFQUFBb1osRUFBQTVaLEVBQUF3dEIsRUFBQUMsRUFBQTNGLEVBRUEsR0FBQSxJQUFBeUYsRUFBQTN0QixTQUFBLENBS0EsR0FBQXdoQixFQUFBRCxRQUFBbGhCLEtBRUE2bkIsRUFEQTFHLEVBQUFwZixJQUFBL0IsR0FDQTZuQixRQUtBLElBQUE5bkIsS0FGQW9oQixFQUFBaEYsT0FBQW1SLEVBQUEsaUJBRUF6RixFQUNBLElBQUF0bkIsRUFBQSxFQUFBb1osRUFBQWtPLEVBQUE5bkIsR0FBQTJCLE9BQUFuQixFQUFBb1osRUFBQXBaLElBQ0FhLEVBQUEybEIsTUFBQWhOLElBQUF1VCxFQUFBdnRCLEVBQUE4bkIsRUFBQTluQixHQUFBUSxJQU9BNmdCLEVBQUFGLFFBQUFsaEIsS0FDQXV0QixFQUFBbk0sRUFBQXpCLE9BQUEzZixHQUNBd3RCLEVBQUFwc0IsRUFBQW1DLE9BQUEsR0FBQWdxQixHQUVBbk0sRUFBQUwsSUFBQXVNLEVBQUFFLEtBa0JBLFNBQUFDLEdBQUFDLEVBQUEzYSxFQUFBeFEsRUFBQXVqQixHQUdBL1MsRUFBQXBVLEVBQUFvVSxHQUVBLElBQUFrVCxFQUFBdGpCLEVBQUFpakIsRUFBQStILEVBQUF0dEIsRUFBQUMsRUFDQUMsRUFBQSxFQUNBb1osRUFBQStULEVBQUFoc0IsT0FDQWtzQixFQUFBalUsRUFBQSxFQUNBcFUsRUFBQXdOLEVBQUEsR0FDQThhLEVBQUFwdUIsRUFBQThGLEdBR0EsR0FBQXNvQixHQUNBLEVBQUFsVSxHQUFBLGlCQUFBcFUsSUFDQS9GLEVBQUFnbEIsWUFBQXdJLEdBQUFuaEIsS0FBQXRHLEdBQ0EsT0FBQW1vQixFQUFBcHJCLEtBQUEsU0FBQXVYLEdBQ0EsSUFBQWIsRUFBQTBVLEVBQUE5cUIsR0FBQWlYLEdBQ0FnVSxJQUNBOWEsRUFBQSxHQUFBeE4sRUFBQTFHLEtBQUFULEtBQUF5YixFQUFBYixFQUFBOFUsU0FFQUwsR0FBQXpVLEVBQUFqRyxFQUFBeFEsRUFBQXVqQixLQUlBLEdBQUFuTSxJQUVBaFgsR0FEQXNqQixFQUFBTixHQUFBNVMsRUFBQTJhLEVBQUEsR0FBQXBpQixlQUFBLEVBQUFvaUIsRUFBQTVILElBQ0FoVixXQUVBLElBQUFtVixFQUFBcmIsV0FBQWxKLFNBQ0F1a0IsRUFBQXRqQixHQUlBQSxHQUFBbWpCLEdBQUEsQ0FPQSxJQUxBNkgsR0FEQS9ILEVBQUF4a0IsRUFBQW9CLElBQUEwaUIsR0FBQWUsRUFBQSxVQUFBa0gsS0FDQXpyQixPQUtBbkIsRUFBQW9aLEVBQUFwWixJQUNBRixFQUFBNGxCLEVBRUExbEIsSUFBQXF0QixJQUNBdnRCLEVBQUFlLEVBQUF3QyxNQUFBdkQsR0FBQSxHQUFBLEdBR0FzdEIsR0FJQXZzQixFQUFBZ0IsTUFBQXdqQixFQUFBVixHQUFBN2tCLEVBQUEsWUFJQWtDLEVBQUExRCxLQUFBNnVCLEVBQUFudEIsR0FBQUYsRUFBQUUsR0FHQSxHQUFBb3RCLEVBT0EsSUFOQXJ0QixFQUFBc2xCLEVBQUFBLEVBQUFsa0IsT0FBQSxHQUFBNEosY0FHQWxLLEVBQUFvQixJQUFBb2pCLEVBQUF3SCxJQUdBN3NCLEVBQUEsRUFBQUEsRUFBQW90QixFQUFBcHRCLElBQ0FGLEVBQUF1bEIsRUFBQXJsQixHQUNBK2pCLEdBQUF6WSxLQUFBeEwsRUFBQU4sTUFBQSxNQUNBb2hCLEVBQUF4QixPQUFBdGYsRUFBQSxlQUNBZSxFQUFBeUYsU0FBQXZHLEVBQUFELEtBRUFBLEVBQUFMLEtBQUEsWUFBQUssRUFBQU4sTUFBQSxJQUFBOEYsY0FHQXpFLEVBQUEyc0IsV0FBQTF0QixFQUFBSCxVQUNBa0IsRUFBQTJzQixTQUFBMXRCLEVBQUFMLElBQUEsQ0FDQUMsTUFBQUksRUFBQUosT0FBQUksRUFBQU8sYUFBQSxVQUNBTixHQVNBSCxFQUFBRSxFQUFBd1EsWUFBQXZNLFFBQUEyb0IsR0FBQSxJQUFBNXNCLEVBQUFDLElBUUEsT0FBQW90QixFQUdBLFNBQUF2UixHQUFBMVosRUFBQXBCLEVBQUEyc0IsR0FLQSxJQUpBLElBQUEzdEIsRUFDQTZsQixFQUFBN2tCLEVBQUFELEVBQUF5TixPQUFBeE4sRUFBQW9CLEdBQUFBLEVBQ0FsQyxFQUFBLEVBRUEsT0FBQUYsRUFBQTZsQixFQUFBM2xCLElBQUFBLElBQ0F5dEIsR0FBQSxJQUFBM3RCLEVBQUFWLFVBQ0F5QixFQUFBNnNCLFVBQUEvSSxHQUFBN2tCLElBR0FBLEVBQUFXLGFBQ0FndEIsR0FBQXRMLEdBQUFyaUIsSUFDQThrQixHQUFBRCxHQUFBN2tCLEVBQUEsV0FFQUEsRUFBQVcsV0FBQUMsWUFBQVosSUFJQSxPQUFBb0MsRUFHQXJCLEVBQUFtQyxPQUFBLENBQ0E0aUIsY0FBQSxTQUFBMkgsR0FDQSxPQUFBQSxHQUdBbHFCLE1BQUEsU0FBQW5CLEVBQUF5ckIsRUFBQUMsR0FDQSxJQUFBNXRCLEVBQUFvWixFQUFBeVUsRUFBQUMsRUExSUFydUIsRUFBQXN0QixFQUNBN2lCLEVBMElBN0csRUFBQW5CLEVBQUFnaUIsV0FBQSxHQUNBNkosRUFBQTVMLEdBQUFqZ0IsR0FHQSxLQUFBakQsRUFBQWtsQixnQkFBQSxJQUFBamlCLEVBQUE5QyxVQUFBLEtBQUE4QyxFQUFBOUMsVUFDQXlCLEVBQUFpWCxTQUFBNVYsSUFNQSxJQUhBNHJCLEVBQUFuSixHQUFBdGhCLEdBR0FyRCxFQUFBLEVBQUFvWixHQUZBeVUsRUFBQWxKLEdBQUF6aUIsSUFFQWYsT0FBQW5CLEVBQUFvWixFQUFBcFosSUF0SkFQLEVBdUpBb3VCLEVBQUE3dEIsR0F2SkErc0IsRUF1SkFlLEVBQUE5dEIsUUF0SkFrSyxFQUdBLFdBSEFBLEVBQUE2aUIsRUFBQTdpQixTQUFBNUUsZ0JBR0F1ZSxHQUFBdlksS0FBQTdMLEVBQUFELE1BQ0F1dEIsRUFBQXBaLFFBQUFsVSxFQUFBa1UsUUFHQSxVQUFBekosR0FBQSxhQUFBQSxJQUNBNmlCLEVBQUFuVixhQUFBblksRUFBQW1ZLGNBbUpBLEdBQUErVixFQUNBLEdBQUFDLEVBSUEsSUFIQUMsRUFBQUEsR0FBQWxKLEdBQUF6aUIsR0FDQTRyQixFQUFBQSxHQUFBbkosR0FBQXRoQixHQUVBckQsRUFBQSxFQUFBb1osRUFBQXlVLEVBQUExc0IsT0FBQW5CLEVBQUFvWixFQUFBcFosSUFDQThzQixHQUFBZSxFQUFBN3RCLEdBQUE4dEIsRUFBQTl0QixTQUdBOHNCLEdBQUE1cUIsRUFBQW1CLEdBV0EsT0FMQSxHQURBeXFCLEVBQUFuSixHQUFBdGhCLEVBQUEsV0FDQWxDLFFBQ0F5akIsR0FBQWtKLEdBQUFDLEdBQUFwSixHQUFBemlCLEVBQUEsV0FJQW1CLEdBR0FxcUIsVUFBQSxTQUFBL3JCLEdBS0EsSUFKQSxJQUFBOGUsRUFBQXZlLEVBQUExQyxFQUNBMmQsRUFBQXRjLEVBQUEybEIsTUFBQXJKLFFBQ0FuZCxFQUFBLE9BRUEyRCxLQUFBekIsRUFBQVAsRUFBQTNCLElBQUFBLElBQ0EsR0FBQWtnQixFQUFBaGUsR0FBQSxDQUNBLEdBQUF1ZSxFQUFBdmUsRUFBQTBlLEVBQUFoZCxTQUFBLENBQ0EsR0FBQTZjLEVBQUE2RyxPQUNBLElBQUE5bkIsS0FBQWloQixFQUFBNkcsT0FDQW5LLEVBQUEzZCxHQUNBcUIsRUFBQTJsQixNQUFBNUssT0FBQTFaLEVBQUExQyxHQUlBcUIsRUFBQTBuQixZQUFBcm1CLEVBQUExQyxFQUFBaWhCLEVBQUFxSCxRQU9BNWxCLEVBQUEwZSxFQUFBaGQsY0FBQUQsRUFFQXpCLEVBQUEyZSxFQUFBamQsV0FJQTFCLEVBQUEyZSxFQUFBamQsY0FBQUQsT0FPQTlDLEVBQUFHLEdBQUFnQyxPQUFBLENBQ0FnckIsT0FBQSxTQUFBbHRCLEdBQ0EsT0FBQThhLEdBQUEvZCxLQUFBaUQsR0FBQSxJQUdBOGEsT0FBQSxTQUFBOWEsR0FDQSxPQUFBOGEsR0FBQS9kLEtBQUFpRCxJQUdBVixLQUFBLFNBQUE0RSxHQUNBLE9BQUFvYSxFQUFBdmhCLEtBQUEsU0FBQW1ILEdBQ0EsWUFBQXJCLElBQUFxQixFQUNBbkUsRUFBQVQsS0FBQXZDLE1BQ0FBLEtBQUFpVyxRQUFBL1IsS0FBQSxXQUNBLElBQUFsRSxLQUFBdUIsVUFBQSxLQUFBdkIsS0FBQXVCLFVBQUEsSUFBQXZCLEtBQUF1QixXQUNBdkIsS0FBQXlTLFlBQUF0TCxNQUdBLEtBQUFBLEVBQUE3QyxVQUFBaEIsU0FHQThzQixPQUFBLFdBQ0EsT0FBQWYsR0FBQXJ2QixLQUFBc0UsVUFBQSxTQUFBRCxHQUNBLElBQUFyRSxLQUFBdUIsVUFBQSxLQUFBdkIsS0FBQXVCLFVBQUEsSUFBQXZCLEtBQUF1QixVQUNBdXRCLEdBQUE5dUIsS0FBQXFFLEdBQ0ExQixZQUFBMEIsTUFLQWdzQixRQUFBLFdBQ0EsT0FBQWhCLEdBQUFydkIsS0FBQXNFLFVBQUEsU0FBQUQsR0FDQSxHQUFBLElBQUFyRSxLQUFBdUIsVUFBQSxLQUFBdkIsS0FBQXVCLFVBQUEsSUFBQXZCLEtBQUF1QixTQUFBLENBQ0EsSUFBQWtFLEVBQUFxcEIsR0FBQTl1QixLQUFBcUUsR0FDQW9CLEVBQUE2cUIsYUFBQWpzQixFQUFBb0IsRUFBQWlOLGdCQUtBNmQsT0FBQSxXQUNBLE9BQUFsQixHQUFBcnZCLEtBQUFzRSxVQUFBLFNBQUFELEdBQ0FyRSxLQUFBNEMsWUFDQTVDLEtBQUE0QyxXQUFBMHRCLGFBQUFqc0IsRUFBQXJFLFNBS0F3d0IsTUFBQSxXQUNBLE9BQUFuQixHQUFBcnZCLEtBQUFzRSxVQUFBLFNBQUFELEdBQ0FyRSxLQUFBNEMsWUFDQTVDLEtBQUE0QyxXQUFBMHRCLGFBQUFqc0IsRUFBQXJFLEtBQUFvUCxnQkFLQTZHLE1BQUEsV0FJQSxJQUhBLElBQUE1UixFQUNBbEMsRUFBQSxFQUVBLE9BQUFrQyxFQUFBckUsS0FBQW1DLElBQUFBLElBQ0EsSUFBQWtDLEVBQUE5QyxXQUdBeUIsRUFBQTZzQixVQUFBL0ksR0FBQXppQixHQUFBLElBR0FBLEVBQUFvTyxZQUFBLElBSUEsT0FBQXpTLE1BR0F3RixNQUFBLFNBQUFzcUIsRUFBQUMsR0FJQSxPQUhBRCxFQUFBLE1BQUFBLEdBQUFBLEVBQ0FDLEVBQUEsTUFBQUEsRUFBQUQsRUFBQUMsRUFFQS92QixLQUFBb0UsSUFBQSxXQUNBLE9BQUFwQixFQUFBd0MsTUFBQXhGLEtBQUE4dkIsRUFBQUMsTUFJQUwsS0FBQSxTQUFBdm9CLEdBQ0EsT0FBQW9hLEVBQUF2aEIsS0FBQSxTQUFBbUgsR0FDQSxJQUFBOUMsRUFBQXJFLEtBQUEsSUFBQSxHQUNBbUMsRUFBQSxFQUNBb1osRUFBQXZiLEtBQUFzRCxPQUVBLFFBQUF3QyxJQUFBcUIsR0FBQSxJQUFBOUMsRUFBQTlDLFNBQ0EsT0FBQThDLEVBQUEyTSxVQUlBLEdBQUEsaUJBQUE3SixJQUFBd25CLEdBQUFsaEIsS0FBQXRHLEtBQ0FxZixJQUFBUCxHQUFBOVksS0FBQWhHLElBQUEsQ0FBQSxHQUFBLEtBQUEsR0FBQU0sZUFBQSxDQUVBTixFQUFBbkUsRUFBQStrQixjQUFBNWdCLEdBRUEsSUFDQSxLQUFBaEYsRUFBQW9aLEVBQUFwWixJQUlBLEtBSEFrQyxFQUFBckUsS0FBQW1DLElBQUEsSUFHQVosV0FDQXlCLEVBQUE2c0IsVUFBQS9JLEdBQUF6aUIsR0FBQSxJQUNBQSxFQUFBMk0sVUFBQTdKLEdBSUE5QyxFQUFBLEVBR0EsTUFBQW9JLEtBR0FwSSxHQUNBckUsS0FBQWlXLFFBQUFtYSxPQUFBanBCLElBRUEsS0FBQUEsRUFBQTdDLFVBQUFoQixTQUdBbXRCLFlBQUEsV0FDQSxJQUFBL0ksRUFBQSxHQUdBLE9BQUEySCxHQUFBcnZCLEtBQUFzRSxVQUFBLFNBQUFELEdBQ0EsSUFBQWlRLEVBQUF0VSxLQUFBNEMsV0FFQUksRUFBQTZELFFBQUE3RyxLQUFBMG5CLEdBQUEsSUFDQTFrQixFQUFBNnNCLFVBQUEvSSxHQUFBOW1CLE9BQ0FzVSxHQUNBQSxFQUFBb2MsYUFBQXJzQixFQUFBckUsUUFLQTBuQixNQUlBMWtCLEVBQUFrQixLQUFBLENBQ0F5c0IsU0FBQSxTQUNBQyxVQUFBLFVBQ0FOLGFBQUEsU0FDQU8sWUFBQSxRQUNBQyxXQUFBLGVBQ0EsU0FBQXpyQixFQUFBMHJCLEdBQ0EvdEIsRUFBQUcsR0FBQWtDLEdBQUEsU0FBQXBDLEdBT0EsSUFOQSxJQUFBYSxFQUNBQyxFQUFBLEdBQ0FpdEIsRUFBQWh1QixFQUFBQyxHQUNBd0IsRUFBQXVzQixFQUFBMXRCLE9BQUEsRUFDQW5CLEVBQUEsRUFFQUEsR0FBQXNDLEVBQUF0QyxJQUNBMkIsRUFBQTNCLElBQUFzQyxFQUFBekUsS0FBQUEsS0FBQXdGLE9BQUEsR0FDQXhDLEVBQUFndUIsRUFBQTd1QixJQUFBNHVCLEdBQUFqdEIsR0FJQWxELEVBQUFELE1BQUFvRCxFQUFBRCxFQUFBSCxPQUdBLE9BQUEzRCxLQUFBNkQsVUFBQUUsTUFHQSxJQUFBa3RCLEdBQUEsSUFBQWxuQixPQUFBLEtBQUFtYSxHQUFBLGtCQUFBLEtBRUFnTixHQUFBLE1BR0FDLEdBQUEsU0FBQTlzQixHQUtBLElBQUE4b0IsRUFBQTlvQixFQUFBNkksY0FBQStDLFlBTUEsT0FKQWtkLEdBQUFBLEVBQUFpRSxTQUNBakUsRUFBQXB0QixHQUdBb3RCLEVBQUFrRSxpQkFBQWh0QixJQUdBaXRCLEdBQUEsU0FBQWp0QixFQUFBZSxFQUFBakIsR0FDQSxJQUFBSixFQUFBc0IsRUFDQWtzQixFQUFBLEdBR0EsSUFBQWxzQixLQUFBRCxFQUNBbXNCLEVBQUFsc0IsR0FBQWhCLEVBQUFxZ0IsTUFBQXJmLEdBQ0FoQixFQUFBcWdCLE1BQUFyZixHQUFBRCxFQUFBQyxHQU1BLElBQUFBLEtBSEF0QixFQUFBSSxFQUFBMUQsS0FBQTRELEdBR0FlLEVBQ0FmLEVBQUFxZ0IsTUFBQXJmLEdBQUFrc0IsRUFBQWxzQixHQUdBLE9BQUF0QixHQUlBeXRCLEdBQUEsSUFBQXpuQixPQUFBc2EsR0FBQXhXLEtBQUEsS0FBQSxLQUVBbkUsR0FBQSxzQkFHQStuQixHQUFBLElBQUExbkIsT0FDQSxJQUFBTCxHQUFBLDhCQUFBQSxHQUFBLEtBQ0EsS0FtSkEsU0FBQWdvQixHQUFBcnRCLEVBQUFnQixFQUFBc3NCLEdBQ0EsSUFBQUMsRUFBQUMsRUFBQUMsRUFBQS90QixFQUNBZ3VCLEVBQUFiLEdBQUF6akIsS0FBQXBJLEdBTUFxZixFQUFBcmdCLEVBQUFxZ0IsTUFvRUEsT0FsRUFpTixFQUFBQSxHQUFBUixHQUFBOXNCLE1BZ0JBTixFQUFBNHRCLEVBQUFLLGlCQUFBM3NCLElBQUFzc0IsRUFBQXRzQixHQUVBMHNCLEdBQUFodUIsSUFrQkFBLEVBQUFBLEVBQUFtQyxRQUFBdXJCLEdBQUEsWUFBQTNyQixHQUdBLEtBQUEvQixHQUFBdWdCLEdBQUFqZ0IsS0FDQU4sRUFBQWYsRUFBQTBoQixNQUFBcmdCLEVBQUFnQixLQVFBakUsRUFBQTZ3QixrQkFBQWhCLEdBQUF4akIsS0FBQTFKLElBQUF5dEIsR0FBQS9qQixLQUFBcEksS0FHQXVzQixFQUFBbE4sRUFBQWtOLE1BQ0FDLEVBQUFuTixFQUFBbU4sU0FDQUMsRUFBQXBOLEVBQUFvTixTQUdBcE4sRUFBQW1OLFNBQUFuTixFQUFBb04sU0FBQXBOLEVBQUFrTixNQUFBN3RCLEVBQ0FBLEVBQUE0dEIsRUFBQUMsTUFHQWxOLEVBQUFrTixNQUFBQSxFQUNBbE4sRUFBQW1OLFNBQUFBLEVBQ0FuTixFQUFBb04sU0FBQUEsU0FJQWhzQixJQUFBL0IsRUFJQUEsRUFBQSxHQUNBQSxFQUlBLFNBQUFtdUIsR0FBQUMsRUFBQUMsR0FHQSxNQUFBLENBQ0F6dUIsSUFBQSxXQUNBLElBQUF3dUIsSUFTQSxPQUFBbnlCLEtBQUEyRCxJQUFBeXVCLEdBQUF6eEIsTUFBQVgsS0FBQXNFLGtCQUxBdEUsS0FBQTJELE9BM09BLFdBSUEsU0FBQTB1QixJQUdBLEdBQUF0TSxFQUFBLENBSUF1TSxFQUFBNU4sTUFBQTZOLFFBQUEsK0VBRUF4TSxFQUFBckIsTUFBQTZOLFFBQ0EsNEhBR0F6aUIsR0FBQW5OLFlBQUEydkIsR0FBQTN2QixZQUFBb2pCLEdBRUEsSUFBQXlNLEVBQUF6eUIsRUFBQXN4QixpQkFBQXRMLEdBQ0EwTSxFQUFBLE9BQUFELEVBQUF0aUIsSUFHQXdpQixFQUFBLEtBQUFDLEVBQUFILEVBQUFJLFlBSUE3TSxFQUFBckIsTUFBQW1PLE1BQUEsTUFDQUMsRUFBQSxLQUFBSCxFQUFBSCxFQUFBSyxPQUlBRSxFQUFBLEtBQUFKLEVBQUFILEVBQUFaLE9BTUE3TCxFQUFBckIsTUFBQXNPLFNBQUEsV0FDQUMsRUFBQSxLQUFBTixFQUFBNU0sRUFBQW1OLFlBQUEsR0FFQXBqQixHQUFBak4sWUFBQXl2QixHQUlBdk0sRUFBQSxNQUdBLFNBQUE0TSxFQUFBUSxHQUNBLE9BQUFudEIsS0FBQW90QixNQUFBQyxXQUFBRixJQUdBLElBQUFWLEVBQUFNLEVBQUFFLEVBQUFILEVBQ0FRLEVBQUFaLEVBQ0FKLEVBQUExeUIsRUFBQTBDLGNBQUEsT0FDQXlqQixFQUFBbm1CLEVBQUEwQyxjQUFBLE9BR0F5akIsRUFBQXJCLFFBTUFxQixFQUFBckIsTUFBQTZPLGVBQUEsY0FDQXhOLEVBQUFNLFdBQUEsR0FBQTNCLE1BQUE2TyxlQUFBLEdBQ0FueUIsRUFBQW95QixnQkFBQSxnQkFBQXpOLEVBQUFyQixNQUFBNk8sZUFFQXZ3QixFQUFBbUMsT0FBQS9ELEVBQUEsQ0FDQXF5QixrQkFBQSxXQUVBLE9BREFwQixJQUNBVSxHQUVBZCxlQUFBLFdBRUEsT0FEQUksSUFDQVMsR0FFQVksY0FBQSxXQUVBLE9BREFyQixJQUNBSSxHQUVBa0IsbUJBQUEsV0FFQSxPQURBdEIsSUFDQUssR0FFQWtCLGNBQUEsV0FFQSxPQURBdkIsSUFDQVksR0FZQVkscUJBQUEsV0FDQSxJQUFBQyxFQUFBbk4sRUFBQW9OLEVBQUFDLEVBbUNBLE9BbENBLE1BQUFWLElBQ0FRLEVBQUFsMEIsRUFBQTBDLGNBQUEsU0FDQXFrQixFQUFBL21CLEVBQUEwQyxjQUFBLE1BQ0F5eEIsRUFBQW4wQixFQUFBMEMsY0FBQSxPQUVBd3hCLEVBQUFwUCxNQUFBNk4sUUFBQSwyREFDQTVMLEVBQUFqQyxNQUFBNk4sUUFBQSxtQkFLQTVMLEVBQUFqQyxNQUFBdVAsT0FBQSxNQUNBRixFQUFBclAsTUFBQXVQLE9BQUEsTUFRQUYsRUFBQXJQLE1BQUFDLFFBQUEsUUFFQTdVLEdBQ0FuTixZQUFBbXhCLEdBQ0FueEIsWUFBQWdrQixHQUNBaGtCLFlBQUFveEIsR0FFQUMsRUFBQWowQixFQUFBc3hCLGlCQUFBMUssR0FDQTJNLEVBQUFZLFNBQUFGLEVBQUFDLE9BQUEsSUFDQUMsU0FBQUYsRUFBQUcsZUFBQSxJQUNBRCxTQUFBRixFQUFBSSxrQkFBQSxNQUFBek4sRUFBQTBOLGFBRUF2a0IsR0FBQWpOLFlBQUFpeEIsSUFFQVIsTUF2SUEsR0FzUEEsSUFBQWdCLEdBQUEsQ0FBQSxTQUFBLE1BQUEsTUFDQUMsR0FBQTMwQixFQUFBMEMsY0FBQSxPQUFBb2lCLE1BQ0E4UCxHQUFBLEdBa0JBLFNBQUFDLEdBQUFwdkIsR0FDQSxJQUFBcXZCLEVBQUExeEIsRUFBQTJ4QixTQUFBdHZCLElBQUFtdkIsR0FBQW52QixHQUVBLE9BQUFxdkIsSUFHQXJ2QixLQUFBa3ZCLEdBQ0FsdkIsRUFFQW12QixHQUFBbnZCLEdBeEJBLFNBQUFBLEdBTUEsSUFIQSxJQUFBdXZCLEVBQUF2dkIsRUFBQSxHQUFBNmMsY0FBQTdjLEVBQUEvRSxNQUFBLEdBQ0E2QixFQUFBbXlCLEdBQUFoeEIsT0FFQW5CLEtBRUEsSUFEQWtELEVBQUFpdkIsR0FBQW55QixHQUFBeXlCLEtBQ0FMLEdBQ0EsT0FBQWx2QixFQWVBd3ZCLENBQUF4dkIsSUFBQUEsR0FJQSxJQUtBeXZCLEdBQUEsNEJBQ0FDLEdBQUEsQ0FBQS9CLFNBQUEsV0FBQWdDLFdBQUEsU0FBQXJRLFFBQUEsU0FDQXNRLEdBQUEsQ0FDQUMsY0FBQSxJQUNBQyxXQUFBLE9BR0EsU0FBQUMsR0FBQXh3QixFQUFBdUMsRUFBQWt1QixHQUlBLElBQUFydUIsRUFBQW9kLEdBQUFqWCxLQUFBaEcsR0FDQSxPQUFBSCxFQUdBaEIsS0FBQXN2QixJQUFBLEVBQUF0dUIsRUFBQSxJQUFBcXVCLEdBQUEsS0FBQXJ1QixFQUFBLElBQUEsTUFDQUcsRUFHQSxTQUFBb3VCLEdBQUFseEIsRUFBQW14QixFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxHQUNBLElBQUF6ekIsRUFBQSxVQUFBcXpCLEVBQUEsRUFBQSxFQUNBSyxFQUFBLEVBQ0FDLEVBQUEsRUFHQSxHQUFBTCxLQUFBQyxFQUFBLFNBQUEsV0FDQSxPQUFBLEVBR0EsS0FBQXZ6QixFQUFBLEVBQUFBLEdBQUEsRUFHQSxXQUFBc3pCLElBQ0FLLEdBQUE5eUIsRUFBQTRoQixJQUFBdmdCLEVBQUFveEIsRUFBQXBSLEdBQUFsaUIsSUFBQSxFQUFBd3pCLElBSUFELEdBbUJBLFlBQUFELElBQ0FLLEdBQUE5eUIsRUFBQTRoQixJQUFBdmdCLEVBQUEsVUFBQWdnQixHQUFBbGlCLElBQUEsRUFBQXd6QixJQUlBLFdBQUFGLElBQ0FLLEdBQUE5eUIsRUFBQTRoQixJQUFBdmdCLEVBQUEsU0FBQWdnQixHQUFBbGlCLEdBQUEsU0FBQSxFQUFBd3pCLE1BdEJBRyxHQUFBOXlCLEVBQUE0aEIsSUFBQXZnQixFQUFBLFVBQUFnZ0IsR0FBQWxpQixJQUFBLEVBQUF3ekIsR0FHQSxZQUFBRixFQUNBSyxHQUFBOXlCLEVBQUE0aEIsSUFBQXZnQixFQUFBLFNBQUFnZ0IsR0FBQWxpQixHQUFBLFNBQUEsRUFBQXd6QixHQUlBRSxHQUFBN3lCLEVBQUE0aEIsSUFBQXZnQixFQUFBLFNBQUFnZ0IsR0FBQWxpQixHQUFBLFNBQUEsRUFBQXd6QixJQW9DQSxPQWhCQUQsR0FBQSxHQUFBRSxJQUlBRSxHQUFBOXZCLEtBQUFzdkIsSUFBQSxFQUFBdHZCLEtBQUErdkIsS0FDQTF4QixFQUFBLFNBQUFteEIsRUFBQSxHQUFBdFQsY0FBQXNULEVBQUFsMUIsTUFBQSxJQUNBczFCLEVBQ0FFLEVBQ0FELEVBQ0EsTUFJQSxHQUdBQyxFQUdBLFNBQUFFLEdBQUEzeEIsRUFBQW14QixFQUFBSyxHQUdBLElBQUFGLEVBQUF4RSxHQUFBOXNCLEdBS0FxeEIsSUFEQXQwQixFQUFBcXlCLHFCQUFBb0MsSUFFQSxlQUFBN3lCLEVBQUE0aEIsSUFBQXZnQixFQUFBLGFBQUEsRUFBQXN4QixHQUNBTSxFQUFBUCxFQUVBdHpCLEVBQUFzdkIsR0FBQXJ0QixFQUFBbXhCLEVBQUFHLEdBQ0FPLEVBQUEsU0FBQVYsRUFBQSxHQUFBdFQsY0FBQXNULEVBQUFsMUIsTUFBQSxHQUlBLEdBQUEyd0IsR0FBQXhqQixLQUFBckwsR0FBQSxDQUNBLElBQUF5ekIsRUFDQSxPQUFBenpCLEVBRUFBLEVBQUEsT0F5Q0EsUUFsQ0FoQixFQUFBcXlCLHFCQUFBaUMsSUFNQXQwQixFQUFBeXlCLHdCQUFBeG5CLEVBQUFoSSxFQUFBLE9BSUEsU0FBQWpDLElBSUFpeEIsV0FBQWp4QixJQUFBLFdBQUFZLEVBQUE0aEIsSUFBQXZnQixFQUFBLFdBQUEsRUFBQXN4QixLQUdBdHhCLEVBQUE4eEIsaUJBQUE3eUIsU0FFQW95QixFQUFBLGVBQUExeUIsRUFBQTRoQixJQUFBdmdCLEVBQUEsYUFBQSxFQUFBc3hCLElBS0FNLEVBQUFDLEtBQUE3eEIsS0FFQWpDLEVBQUFpQyxFQUFBNnhCLE1BS0E5ekIsRUFBQWl4QixXQUFBanhCLElBQUEsR0FJQW16QixHQUNBbHhCLEVBQ0FteEIsRUFDQUssSUFBQUgsRUFBQSxTQUFBLFdBQ0FPLEVBQ0FOLEVBR0F2ekIsR0FFQSxLQStTQSxTQUFBZzBCLEdBQUEveEIsRUFBQWUsRUFBQXlkLEVBQUE3ZCxFQUFBcXhCLEdBQ0EsT0FBQSxJQUFBRCxHQUFBN3lCLFVBQUFILEtBQUFpQixFQUFBZSxFQUFBeWQsRUFBQTdkLEVBQUFxeEIsR0E3U0FyekIsRUFBQW1DLE9BQUEsQ0FJQW14QixTQUFBLENBQ0FDLFFBQUEsQ0FDQTV5QixJQUFBLFNBQUFVLEVBQUFzdEIsR0FDQSxHQUFBQSxFQUFBLENBR0EsSUFBQTV0QixFQUFBMnRCLEdBQUFydEIsRUFBQSxXQUNBLE1BQUEsS0FBQU4sRUFBQSxJQUFBQSxNQU9BdWhCLFVBQUEsQ0FDQWtSLHlCQUFBLEVBQ0FDLGFBQUEsRUFDQUMsYUFBQSxFQUNBQyxVQUFBLEVBQ0FDLFlBQUEsRUFDQXpCLFlBQUEsRUFDQTBCLFVBQUEsRUFDQUMsWUFBQSxFQUNBQyxlQUFBLEVBQ0FDLGlCQUFBLEVBQ0FDLFNBQUEsRUFDQUMsWUFBQSxFQUNBQyxjQUFBLEVBQ0FDLFlBQUEsRUFDQWIsU0FBQSxFQUNBYyxPQUFBLEVBQ0FDLFNBQUEsRUFDQUMsUUFBQSxFQUNBQyxRQUFBLEVBQ0FDLE1BQUEsR0FLQTlDLFNBQUEsR0FHQWpRLE1BQUEsU0FBQXJnQixFQUFBZ0IsRUFBQThCLEVBQUEwdUIsR0FHQSxHQUFBeHhCLEdBQUEsSUFBQUEsRUFBQTlDLFVBQUEsSUFBQThDLEVBQUE5QyxVQUFBOEMsRUFBQXFnQixNQUFBLENBS0EsSUFBQTNnQixFQUFBcEMsRUFBQWdpQixFQUNBK1QsRUFBQXZWLEVBQUE5YyxHQUNBMHNCLEVBQUFiLEdBQUF6akIsS0FBQXBJLEdBQ0FxZixFQUFBcmdCLEVBQUFxZ0IsTUFhQSxHQVJBcU4sSUFDQTFzQixFQUFBb3ZCLEdBQUFpRCxJQUlBL1QsRUFBQTNnQixFQUFBc3pCLFNBQUFqeEIsSUFBQXJDLEVBQUFzekIsU0FBQW9CLFFBR0E1eEIsSUFBQXFCLEVBMENBLE9BQUF3YyxHQUFBLFFBQUFBLFFBQ0E3ZCxLQUFBL0IsRUFBQTRmLEVBQUFoZ0IsSUFBQVUsR0FBQSxFQUFBd3hCLElBRUE5eEIsRUFJQTJnQixFQUFBcmYsR0E3Q0EsWUFIQTFELFNBQUF3RixLQUdBcEQsRUFBQXFnQixHQUFBalgsS0FBQWhHLEtBQUFwRCxFQUFBLEtBQ0FvRCxFQUFBMGQsR0FBQXhnQixFQUFBZ0IsRUFBQXRCLEdBR0FwQyxFQUFBLFVBSUEsTUFBQXdGLEdBQUFBLEdBQUFBLElBT0EsV0FBQXhGLEdBQUFvd0IsSUFDQTVxQixHQUFBcEQsR0FBQUEsRUFBQSxLQUFBZixFQUFBc2lCLFVBQUFvUyxHQUFBLEdBQUEsT0FJQXQyQixFQUFBb3lCLGlCQUFBLEtBQUFyc0IsR0FBQSxJQUFBOUIsRUFBQXhFLFFBQUEsZ0JBQ0E2akIsRUFBQXJmLEdBQUEsV0FJQXNlLEdBQUEsUUFBQUEsUUFDQTdkLEtBQUFxQixFQUFBd2MsRUFBQWhCLElBQUF0ZSxFQUFBOEMsRUFBQTB1QixNQUVBOUQsRUFDQXJOLEVBQUFpVCxZQUFBdHlCLEVBQUE4QixHQUVBdWQsRUFBQXJmLEdBQUE4QixNQWtCQXlkLElBQUEsU0FBQXZnQixFQUFBZ0IsRUFBQXd3QixFQUFBRixHQUNBLElBQUF2ekIsRUFBQXdCLEVBQUErZixFQUNBK1QsRUFBQXZWLEVBQUE5YyxHQTZCQSxPQTVCQTZyQixHQUFBempCLEtBQUFwSSxLQU1BQSxFQUFBb3ZCLEdBQUFpRCxLQUlBL1QsRUFBQTNnQixFQUFBc3pCLFNBQUFqeEIsSUFBQXJDLEVBQUFzekIsU0FBQW9CLEtBR0EsUUFBQS9ULElBQ0F2aEIsRUFBQXVoQixFQUFBaGdCLElBQUFVLEdBQUEsRUFBQXd4QixTQUlBL3ZCLElBQUExRCxJQUNBQSxFQUFBc3ZCLEdBQUFydEIsRUFBQWdCLEVBQUFzd0IsSUFJQSxXQUFBdnpCLEdBQUFpRCxLQUFBNHZCLEtBQ0E3eUIsRUFBQTZ5QixHQUFBNXZCLElBSUEsS0FBQXd3QixHQUFBQSxHQUNBanlCLEVBQUF5dkIsV0FBQWp4QixJQUNBLElBQUF5ekIsR0FBQStCLFNBQUFoMEIsR0FBQUEsR0FBQSxFQUFBeEIsR0FHQUEsS0FJQVksRUFBQWtCLEtBQUEsQ0FBQSxTQUFBLFNBQUEsU0FBQXNELEVBQUFndUIsR0FDQXh5QixFQUFBc3pCLFNBQUFkLEdBQUEsQ0FDQTd4QixJQUFBLFNBQUFVLEVBQUFzdEIsRUFBQWtFLEdBQ0EsR0FBQWxFLEVBSUEsT0FBQW1ELEdBQUFybkIsS0FBQXpLLEVBQUE0aEIsSUFBQXZnQixFQUFBLGFBUUFBLEVBQUE4eEIsaUJBQUE3eUIsUUFBQWUsRUFBQXd6Qix3QkFBQWpHLE1BSUFvRSxHQUFBM3hCLEVBQUFteEIsRUFBQUssR0FIQXZFLEdBQUFqdEIsRUFBQTB3QixHQUFBLFdBQ0EsT0FBQWlCLEdBQUEzeEIsRUFBQW14QixFQUFBSyxNQU1BbFQsSUFBQSxTQUFBdGUsRUFBQThDLEVBQUEwdUIsR0FDQSxJQUFBN3VCLEVBQ0EydUIsRUFBQXhFLEdBQUE5c0IsR0FJQXl6QixHQUFBMTJCLEVBQUF3eUIsaUJBQ0EsYUFBQStCLEVBQUEzQyxTQUlBMEMsR0FEQW9DLEdBQUFqQyxJQUVBLGVBQUE3eUIsRUFBQTRoQixJQUFBdmdCLEVBQUEsYUFBQSxFQUFBc3hCLEdBQ0FOLEVBQUFRLEVBQ0FOLEdBQ0FseEIsRUFDQW14QixFQUNBSyxFQUNBSCxFQUNBQyxHQUVBLEVBcUJBLE9BakJBRCxHQUFBb0MsSUFDQXpDLEdBQUFydkIsS0FBQSt2QixLQUNBMXhCLEVBQUEsU0FBQW14QixFQUFBLEdBQUF0VCxjQUFBc1QsRUFBQWwxQixNQUFBLElBQ0EreUIsV0FBQXNDLEVBQUFILElBQ0FELEdBQUFseEIsRUFBQW14QixFQUFBLFVBQUEsRUFBQUcsR0FDQSxLQUtBTixJQUFBcnVCLEVBQUFvZCxHQUFBalgsS0FBQWhHLEtBQ0EsUUFBQUgsRUFBQSxJQUFBLFFBRUEzQyxFQUFBcWdCLE1BQUE4USxHQUFBcnVCLEVBQ0FBLEVBQUFuRSxFQUFBNGhCLElBQUF2Z0IsRUFBQW14QixJQUdBSixHQUFBL3dCLEVBQUE4QyxFQUFBa3VCLE9BS0FyeUIsRUFBQXN6QixTQUFBMUQsV0FBQVYsR0FBQTl3QixFQUFBdXlCLG1CQUNBLFNBQUF0dkIsRUFBQXN0QixHQUNBLEdBQUFBLEVBQ0EsT0FBQTBCLFdBQUEzQixHQUFBcnRCLEVBQUEsZ0JBQ0FBLEVBQUF3ekIsd0JBQUFFLEtBQ0F6RyxHQUFBanRCLEVBQUEsQ0FBQXV1QixXQUFBLEdBQUEsV0FDQSxPQUFBdnVCLEVBQUF3ekIsd0JBQUFFLFFBRUEsT0FNQS8wQixFQUFBa0IsS0FBQSxDQUNBOHpCLE9BQUEsR0FDQUMsUUFBQSxHQUNBQyxPQUFBLFNBQ0EsU0FBQUMsRUFBQUMsR0FDQXAxQixFQUFBc3pCLFNBQUE2QixFQUFBQyxHQUFBLENBQ0FDLE9BQUEsU0FBQWx4QixHQU9BLElBTkEsSUFBQWhGLEVBQUEsRUFDQW0yQixFQUFBLEdBR0FDLEVBQUEsaUJBQUFweEIsRUFBQUEsRUFBQUksTUFBQSxLQUFBLENBQUFKLEdBRUFoRixFQUFBLEVBQUFBLElBQ0FtMkIsRUFBQUgsRUFBQTlULEdBQUFsaUIsR0FBQWkyQixHQUNBRyxFQUFBcDJCLElBQUFvMkIsRUFBQXAyQixFQUFBLElBQUFvMkIsRUFBQSxHQUdBLE9BQUFELElBSUEsV0FBQUgsSUFDQW4xQixFQUFBc3pCLFNBQUE2QixFQUFBQyxHQUFBelYsSUFBQXlTLE1BSUFweUIsRUFBQUcsR0FBQWdDLE9BQUEsQ0FDQXlmLElBQUEsU0FBQXZmLEVBQUE4QixHQUNBLE9BQUFvYSxFQUFBdmhCLEtBQUEsU0FBQXFFLEVBQUFnQixFQUFBOEIsR0FDQSxJQUFBd3VCLEVBQUE3d0IsRUFDQVYsRUFBQSxHQUNBakMsRUFBQSxFQUVBLEdBQUF5RCxNQUFBQyxRQUFBUixHQUFBLENBSUEsSUFIQXN3QixFQUFBeEUsR0FBQTlzQixHQUNBUyxFQUFBTyxFQUFBL0IsT0FFQW5CLEVBQUEyQyxFQUFBM0MsSUFDQWlDLEVBQUFpQixFQUFBbEQsSUFBQWEsRUFBQTRoQixJQUFBdmdCLEVBQUFnQixFQUFBbEQsSUFBQSxFQUFBd3pCLEdBR0EsT0FBQXZ4QixFQUdBLFlBQUEwQixJQUFBcUIsRUFDQW5FLEVBQUEwaEIsTUFBQXJnQixFQUFBZ0IsRUFBQThCLEdBQ0FuRSxFQUFBNGhCLElBQUF2Z0IsRUFBQWdCLElBQ0FBLEVBQUE4QixFQUFBLEVBQUE3QyxVQUFBaEIsYUFRQU4sRUFBQW96QixNQUFBQSxJQUVBN3lCLFVBQUEsQ0FDQUUsWUFBQTJ5QixHQUNBaHpCLEtBQUEsU0FBQWlCLEVBQUFlLEVBQUF5ZCxFQUFBN2QsRUFBQXF4QixFQUFBaFIsR0FDQXJsQixLQUFBcUUsS0FBQUEsRUFDQXJFLEtBQUE2aUIsS0FBQUEsRUFDQTdpQixLQUFBcTJCLE9BQUFBLEdBQUFyekIsRUFBQXF6QixPQUFBeFAsU0FDQTdtQixLQUFBb0YsUUFBQUEsRUFDQXBGLEtBQUFxVSxNQUFBclUsS0FBQXNzQixJQUFBdHNCLEtBQUFpUCxNQUNBalAsS0FBQWdGLElBQUFBLEVBQ0FoRixLQUFBcWxCLEtBQUFBLElBQUFyaUIsRUFBQXNpQixVQUFBekMsR0FBQSxHQUFBLE9BRUE1VCxJQUFBLFdBQ0EsSUFBQTBVLEVBQUF5UyxHQUFBb0MsVUFBQXg0QixLQUFBNmlCLE1BRUEsT0FBQWMsR0FBQUEsRUFBQWhnQixJQUNBZ2dCLEVBQUFoZ0IsSUFBQTNELE1BQ0FvMkIsR0FBQW9DLFVBQUEzUixTQUFBbGpCLElBQUEzRCxPQUVBeTRCLElBQUEsU0FBQUMsR0FDQSxJQUFBQyxFQUNBaFYsRUFBQXlTLEdBQUFvQyxVQUFBeDRCLEtBQUE2aUIsTUFvQkEsT0FsQkE3aUIsS0FBQW9GLFFBQUF3ekIsU0FDQTU0QixLQUFBNjRCLElBQUFGLEVBQUEzMUIsRUFBQXF6QixPQUFBcjJCLEtBQUFxMkIsUUFDQXFDLEVBQUExNEIsS0FBQW9GLFFBQUF3ekIsU0FBQUYsRUFBQSxFQUFBLEVBQUExNEIsS0FBQW9GLFFBQUF3ekIsVUFHQTU0QixLQUFBNjRCLElBQUFGLEVBQUFELEVBRUExNEIsS0FBQXNzQixLQUFBdHNCLEtBQUFnRixJQUFBaEYsS0FBQXFVLE9BQUFza0IsRUFBQTM0QixLQUFBcVUsTUFFQXJVLEtBQUFvRixRQUFBMHpCLE1BQ0E5NEIsS0FBQW9GLFFBQUEwekIsS0FBQXI0QixLQUFBVCxLQUFBcUUsS0FBQXJFLEtBQUFzc0IsSUFBQXRzQixNQUdBMmpCLEdBQUFBLEVBQUFoQixJQUNBZ0IsRUFBQWhCLElBQUEzaUIsTUFFQW8yQixHQUFBb0MsVUFBQTNSLFNBQUFsRSxJQUFBM2lCLE1BRUFBLFFBSUFvRCxLQUFBRyxVQUFBNnlCLEdBQUE3eUIsV0FFQTZ5QixHQUFBb0MsVUFBQSxDQUNBM1IsU0FBQSxDQUNBbGpCLElBQUEsU0FBQW9oQixHQUNBLElBQUFyUixFQUlBLE9BQUEsSUFBQXFSLEVBQUExZ0IsS0FBQTlDLFVBQ0EsTUFBQXdqQixFQUFBMWdCLEtBQUEwZ0IsRUFBQWxDLE9BQUEsTUFBQWtDLEVBQUExZ0IsS0FBQXFnQixNQUFBSyxFQUFBbEMsTUFDQWtDLEVBQUExZ0IsS0FBQTBnQixFQUFBbEMsT0FPQW5QLEVBQUExUSxFQUFBNGhCLElBQUFHLEVBQUExZ0IsS0FBQTBnQixFQUFBbEMsS0FBQSxNQUdBLFNBQUFuUCxFQUFBQSxFQUFBLEdBRUFpUCxJQUFBLFNBQUFvQyxHQUtBL2hCLEVBQUErMUIsR0FBQUQsS0FBQS9ULEVBQUFsQyxNQUNBN2YsRUFBQSsxQixHQUFBRCxLQUFBL1QsRUFBQWxDLE1BQUFrQyxHQUNBLElBQUFBLEVBQUExZ0IsS0FBQTlDLFdBQ0F5QixFQUFBc3pCLFNBQUF2UixFQUFBbEMsT0FDQSxNQUFBa0MsRUFBQTFnQixLQUFBcWdCLE1BQUErUCxHQUFBMVAsRUFBQWxDLE9BR0FrQyxFQUFBMWdCLEtBQUEwZ0IsRUFBQWxDLE1BQUFrQyxFQUFBdUgsSUFGQXRwQixFQUFBMGhCLE1BQUFLLEVBQUExZ0IsS0FBQTBnQixFQUFBbEMsS0FBQWtDLEVBQUF1SCxJQUFBdkgsRUFBQU0sVUFVQTJULFVBQUE1QyxHQUFBb0MsVUFBQVMsV0FBQSxDQUNBdFcsSUFBQSxTQUFBb0MsR0FDQUEsRUFBQTFnQixLQUFBOUMsVUFBQXdqQixFQUFBMWdCLEtBQUF6QixhQUNBbWlCLEVBQUExZ0IsS0FBQTBnQixFQUFBbEMsTUFBQWtDLEVBQUF1SCxPQUtBdHBCLEVBQUFxekIsT0FBQSxDQUNBNkMsT0FBQSxTQUFBQyxHQUNBLE9BQUFBLEdBRUFDLE1BQUEsU0FBQUQsR0FDQSxNQUFBLEdBQUFuekIsS0FBQXF6QixJQUFBRixFQUFBbnpCLEtBQUFzekIsSUFBQSxHQUVBelMsU0FBQSxTQUdBN2pCLEVBQUErMUIsR0FBQTNDLEdBQUE3eUIsVUFBQUgsS0FHQUosRUFBQSsxQixHQUFBRCxLQUFBLEdBS0EsSUFDQVMsR0FBQUMsR0FrckJBem9CLEdBRUEwb0IsR0FuckJBQyxHQUFBLHlCQUNBQyxHQUFBLGNBRUEsU0FBQUMsS0FDQUosTUFDQSxJQUFBNTVCLEVBQUFpNkIsUUFBQTk1QixFQUFBKzVCLHNCQUNBLzVCLEVBQUErNUIsc0JBQUFGLElBRUE3NUIsRUFBQWtnQixXQUFBMlosR0FBQTUyQixFQUFBKzFCLEdBQUFnQixVQUdBLzJCLEVBQUErMUIsR0FBQWlCLFFBS0EsU0FBQUMsS0FJQSxPQUhBbDZCLEVBQUFrZ0IsV0FBQSxXQUNBc1osUUFBQXp6QixJQUVBeXpCLEdBQUE3d0IsS0FBQTRqQixNQUlBLFNBQUE0TixHQUFBdjRCLEVBQUF3NEIsR0FDQSxJQUFBaE0sRUFDQWhzQixFQUFBLEVBQ0EwTSxFQUFBLENBQUFvbEIsT0FBQXR5QixHQUtBLElBREF3NEIsRUFBQUEsRUFBQSxFQUFBLEVBQ0FoNEIsRUFBQSxFQUFBQSxHQUFBLEVBQUFnNEIsRUFFQXRyQixFQUFBLFVBREFzZixFQUFBOUosR0FBQWxpQixLQUNBME0sRUFBQSxVQUFBc2YsR0FBQXhzQixFQU9BLE9BSkF3NEIsSUFDQXRyQixFQUFBMG5CLFFBQUExbkIsRUFBQStpQixNQUFBandCLEdBR0FrTixFQUdBLFNBQUF1ckIsR0FBQWp6QixFQUFBMGIsRUFBQXdYLEdBS0EsSUFKQSxJQUFBdFYsRUFDQXVLLEdBQUFnTCxHQUFBQyxTQUFBMVgsSUFBQSxJQUFBbmlCLE9BQUE0NUIsR0FBQUMsU0FBQSxNQUNBOWUsRUFBQSxFQUNBblksRUFBQWdzQixFQUFBaHNCLE9BQ0FtWSxFQUFBblksRUFBQW1ZLElBQ0EsR0FBQXNKLEVBQUF1SyxFQUFBN1QsR0FBQWhiLEtBQUE0NUIsRUFBQXhYLEVBQUExYixHQUdBLE9BQUE0ZCxFQXNOQSxTQUFBdVYsR0FBQWoyQixFQUFBbTJCLEVBQUFwMUIsR0FDQSxJQUFBc08sRUFDQSttQixFQUNBaGYsRUFBQSxFQUNBblksRUFBQWczQixHQUFBSSxXQUFBcDNCLE9BQ0FrYixFQUFBeGIsRUFBQW1iLFdBQUFJLE9BQUEsa0JBR0F5YixFQUFBMzFCLE9BRUEyMUIsRUFBQSxXQUNBLEdBQUFTLEVBQ0EsT0FBQSxFQVlBLElBVkEsSUFBQUUsRUFBQXBCLElBQUFVLEtBQ0E1WixFQUFBcmEsS0FBQXN2QixJQUFBLEVBQUErRSxFQUFBTyxVQUFBUCxFQUFBekIsU0FBQStCLEdBS0FqQyxFQUFBLEdBREFyWSxFQUFBZ2EsRUFBQXpCLFVBQUEsR0FFQW5kLEVBQUEsRUFDQW5ZLEVBQUErMkIsRUFBQVEsT0FBQXYzQixPQUVBbVksRUFBQW5ZLEVBQUFtWSxJQUNBNGUsRUFBQVEsT0FBQXBmLEdBQUFnZCxJQUFBQyxHQU1BLE9BSEFsYSxFQUFBa0IsV0FBQXJiLEVBQUEsQ0FBQWcyQixFQUFBM0IsRUFBQXJZLElBR0FxWSxFQUFBLEdBQUFwMUIsRUFDQStjLEdBSUEvYyxHQUNBa2IsRUFBQWtCLFdBQUFyYixFQUFBLENBQUFnMkIsRUFBQSxFQUFBLElBSUE3YixFQUFBbUIsWUFBQXRiLEVBQUEsQ0FBQWcyQixLQUNBLElBRUFBLEVBQUE3YixFQUFBekIsUUFBQSxDQUNBMVksS0FBQUEsRUFDQTRuQixNQUFBanBCLEVBQUFtQyxPQUFBLEdBQUFxMUIsR0FDQU0sS0FBQTkzQixFQUFBbUMsUUFBQSxFQUFBLENBQ0E0MUIsY0FBQSxHQUNBMUUsT0FBQXJ6QixFQUFBcXpCLE9BQUF4UCxVQUNBemhCLEdBQ0E0MUIsbUJBQUFSLEVBQ0FTLGdCQUFBNzFCLEVBQ0F3MUIsVUFBQXJCLElBQUFVLEtBQ0FyQixTQUFBeHpCLEVBQUF3ekIsU0FDQWlDLE9BQUEsR0FDQVQsWUFBQSxTQUFBdlgsRUFBQTdkLEdBQ0EsSUFBQStmLEVBQUEvaEIsRUFBQW96QixNQUFBL3hCLEVBQUFnMkIsRUFBQVMsS0FBQWpZLEVBQUE3ZCxFQUNBcTFCLEVBQUFTLEtBQUFDLGNBQUFsWSxJQUFBd1gsRUFBQVMsS0FBQXpFLFFBRUEsT0FEQWdFLEVBQUFRLE9BQUFqNkIsS0FBQW1rQixHQUNBQSxHQUVBbEIsS0FBQSxTQUFBcVgsR0FDQSxJQUFBemYsRUFBQSxFQUlBblksRUFBQTQzQixFQUFBYixFQUFBUSxPQUFBdjNCLE9BQUEsRUFDQSxHQUFBbTNCLEVBQ0EsT0FBQXo2QixLQUdBLElBREF5NkIsR0FBQSxFQUNBaGYsRUFBQW5ZLEVBQUFtWSxJQUNBNGUsRUFBQVEsT0FBQXBmLEdBQUFnZCxJQUFBLEdBVUEsT0FOQXlDLEdBQ0ExYyxFQUFBa0IsV0FBQXJiLEVBQUEsQ0FBQWcyQixFQUFBLEVBQUEsSUFDQTdiLEVBQUFtQixZQUFBdGIsRUFBQSxDQUFBZzJCLEVBQUFhLEtBRUExYyxFQUFBdUIsV0FBQTFiLEVBQUEsQ0FBQWcyQixFQUFBYSxJQUVBbDdCLFFBR0Fpc0IsRUFBQW9PLEVBQUFwTyxNQUlBLEtBL0hBLFNBQUFBLEVBQUE4TyxHQUNBLElBQUF0ZixFQUFBcFcsRUFBQWd4QixFQUFBbHZCLEVBQUF3YyxFQUdBLElBQUFsSSxLQUFBd1EsRUFlQSxHQWJBb0ssRUFBQTBFLEVBREExMUIsRUFBQThjLEVBQUExRyxJQUVBdFUsRUFBQThrQixFQUFBeFEsR0FDQTdWLE1BQUFDLFFBQUFzQixLQUNBa3ZCLEVBQUFsdkIsRUFBQSxHQUNBQSxFQUFBOGtCLEVBQUF4USxHQUFBdFUsRUFBQSxJQUdBc1UsSUFBQXBXLElBQ0E0bUIsRUFBQTVtQixHQUFBOEIsU0FDQThrQixFQUFBeFEsS0FHQWtJLEVBQUEzZ0IsRUFBQXN6QixTQUFBanhCLEtBQ0EsV0FBQXNlLEVBTUEsSUFBQWxJLEtBTEF0VSxFQUFBd2MsRUFBQTBVLE9BQUFseEIsVUFDQThrQixFQUFBNW1CLEdBSUE4QixFQUNBc1UsS0FBQXdRLElBQ0FBLEVBQUF4USxHQUFBdFUsRUFBQXNVLEdBQ0FzZixFQUFBdGYsR0FBQTRhLFFBSUEwRSxFQUFBMTFCLEdBQUFneEIsRUE2RkE4RSxDQUFBbFAsRUFBQW9PLEVBQUFTLEtBQUFDLGVBRUF0ZixFQUFBblksRUFBQW1ZLElBRUEsR0FEQS9ILEVBQUE0bUIsR0FBQUksV0FBQWpmLEdBQUFoYixLQUFBNDVCLEVBQUFoMkIsRUFBQTRuQixFQUFBb08sRUFBQVMsTUFNQSxPQUpBejVCLEVBQUFxUyxFQUFBbVEsUUFDQTdnQixFQUFBNGdCLFlBQUF5VyxFQUFBaDJCLEtBQUFnMkIsRUFBQVMsS0FBQXBkLE9BQUFtRyxLQUNBblEsRUFBQW1RLEtBQUF1WCxLQUFBMW5CLElBRUFBLEVBeUJBLE9BckJBMVEsRUFBQW9CLElBQUE2bkIsRUFBQW1PLEdBQUFDLEdBRUFoNUIsRUFBQWc1QixFQUFBUyxLQUFBem1CLFFBQ0FnbUIsRUFBQVMsS0FBQXptQixNQUFBNVQsS0FBQTRELEVBQUFnMkIsR0FJQUEsRUFDQXRiLFNBQUFzYixFQUFBUyxLQUFBL2IsVUFDQWxXLEtBQUF3eEIsRUFBQVMsS0FBQWp5QixLQUFBd3hCLEVBQUFTLEtBQUFPLFVBQ0FyZSxLQUFBcWQsRUFBQVMsS0FBQTlkLE1BQ0F1QixPQUFBOGIsRUFBQVMsS0FBQXZjLFFBRUF2YixFQUFBKzFCLEdBQUF1QyxNQUNBdDRCLEVBQUFtQyxPQUFBNjBCLEVBQUEsQ0FDQTMxQixLQUFBQSxFQUNBazNCLEtBQUFsQixFQUNBM2MsTUFBQTJjLEVBQUFTLEtBQUFwZCxTQUlBMmMsRUFHQXIzQixFQUFBczNCLFVBQUF0M0IsRUFBQW1DLE9BQUFtMUIsR0FBQSxDQUVBQyxTQUFBLENBQ0FpQixJQUFBLENBQUEsU0FBQTNZLEVBQUExYixHQUNBLElBQUE0ZCxFQUFBL2tCLEtBQUFvNkIsWUFBQXZYLEVBQUExYixHQUVBLE9BREEwZCxHQUFBRSxFQUFBMWdCLEtBQUF3ZSxFQUFBdUIsR0FBQWpYLEtBQUFoRyxHQUFBNGQsR0FDQUEsS0FJQTBXLFFBQUEsU0FBQXhQLEVBQUE5bkIsR0FZQSxJQUpBLElBQUEwZSxFQUNBcEgsRUFBQSxFQUNBblksR0FQQTJvQixFQUZBNXFCLEVBQUE0cUIsSUFDQTluQixFQUFBOG5CLEVBQ0EsQ0FBQSxNQUVBQSxFQUFBbmYsTUFBQXVQLElBS0EvWSxPQUVBbVksRUFBQW5ZLEVBQUFtWSxJQUNBb0gsRUFBQW9KLEVBQUF4USxHQUNBNmUsR0FBQUMsU0FBQTFYLEdBQUF5WCxHQUFBQyxTQUFBMVgsSUFBQSxHQUNBeVgsR0FBQUMsU0FBQTFYLEdBQUE5USxRQUFBNU4sSUFJQXUyQixXQUFBLENBM1dBLFNBQUFyMkIsRUFBQTRuQixFQUFBNk8sR0FDQSxJQUFBalksRUFBQTFiLEVBQUEyZSxFQUFBbkMsRUFBQStYLEVBQUFDLEVBQUFDLEVBQUFqWCxFQUNBa1gsRUFBQSxVQUFBNVAsR0FBQSxXQUFBQSxFQUNBc1AsRUFBQXY3QixLQUNBeXVCLEVBQUEsR0FDQS9KLEVBQUFyZ0IsRUFBQXFnQixNQUNBbVYsRUFBQXgxQixFQUFBOUMsVUFBQWtqQixHQUFBcGdCLEdBQ0F5M0IsRUFBQS9ZLEVBQUFwZixJQUFBVSxFQUFBLFVBNkJBLElBQUF3ZSxLQTFCQWlZLEVBQUFwZCxRQUVBLE9BREFpRyxFQUFBM2dCLEVBQUE0Z0IsWUFBQXZmLEVBQUEsT0FDQTAzQixXQUNBcFksRUFBQW9ZLFNBQUEsRUFDQUwsRUFBQS9YLEVBQUExTixNQUFBMkgsS0FDQStGLEVBQUExTixNQUFBMkgsS0FBQSxXQUNBK0YsRUFBQW9ZLFVBQ0FMLE1BSUEvWCxFQUFBb1ksV0FFQVIsRUFBQWhkLE9BQUEsV0FHQWdkLEVBQUFoZCxPQUFBLFdBQ0FvRixFQUFBb1ksV0FDQS80QixFQUFBMGEsTUFBQXJaLEVBQUEsTUFBQWYsUUFDQXFnQixFQUFBMU4sTUFBQTJILFlBT0FxTyxFQUVBLEdBREE5a0IsRUFBQThrQixFQUFBcEosR0FDQTZXLEdBQUFqc0IsS0FBQXRHLEdBQUEsQ0FHQSxVQUZBOGtCLEVBQUFwSixHQUNBaUQsRUFBQUEsR0FBQSxXQUFBM2UsRUFDQUEsS0FBQTB5QixFQUFBLE9BQUEsUUFBQSxDQUlBLEdBQUEsU0FBQTF5QixJQUFBMjBCLFFBQUFoMkIsSUFBQWcyQixFQUFBalosR0FLQSxTQUpBZ1gsR0FBQSxFQU9BcEwsRUFBQTVMLEdBQUFpWixHQUFBQSxFQUFBalosSUFBQTdmLEVBQUEwaEIsTUFBQXJnQixFQUFBd2UsR0FNQSxJQURBOFksR0FBQTM0QixFQUFBeUQsY0FBQXdsQixNQUNBanBCLEVBQUF5RCxjQUFBZ29CLEdBOERBLElBQUE1TCxLQXpEQWdaLEdBQUEsSUFBQXgzQixFQUFBOUMsV0FNQXU1QixFQUFBa0IsU0FBQSxDQUFBdFgsRUFBQXNYLFNBQUF0WCxFQUFBdVgsVUFBQXZYLEVBQUF3WCxXQUlBLE9BREFOLEVBQUFFLEdBQUFBLEVBQUFuWCxXQUVBaVgsRUFBQTdZLEVBQUFwZixJQUFBVSxFQUFBLFlBR0EsVUFEQXNnQixFQUFBM2hCLEVBQUE0aEIsSUFBQXZnQixFQUFBLGNBRUF1M0IsRUFDQWpYLEVBQUFpWCxHQUlBblcsR0FBQSxDQUFBcGhCLElBQUEsR0FDQXUzQixFQUFBdjNCLEVBQUFxZ0IsTUFBQUMsU0FBQWlYLEVBQ0FqWCxFQUFBM2hCLEVBQUE0aEIsSUFBQXZnQixFQUFBLFdBQ0FvaEIsR0FBQSxDQUFBcGhCLE9BS0EsV0FBQXNnQixHQUFBLGlCQUFBQSxHQUFBLE1BQUFpWCxJQUNBLFNBQUE1NEIsRUFBQTRoQixJQUFBdmdCLEVBQUEsV0FHQXMzQixJQUNBSixFQUFBMXlCLEtBQUEsV0FDQTZiLEVBQUFDLFFBQUFpWCxJQUVBLE1BQUFBLElBQ0FqWCxFQUFBRCxFQUFBQyxRQUNBaVgsRUFBQSxTQUFBalgsRUFBQSxHQUFBQSxJQUdBRCxFQUFBQyxRQUFBLGlCQUtBbVcsRUFBQWtCLFdBQ0F0WCxFQUFBc1gsU0FBQSxTQUNBVCxFQUFBaGQsT0FBQSxXQUNBbUcsRUFBQXNYLFNBQUFsQixFQUFBa0IsU0FBQSxHQUNBdFgsRUFBQXVYLFVBQUFuQixFQUFBa0IsU0FBQSxHQUNBdFgsRUFBQXdYLFVBQUFwQixFQUFBa0IsU0FBQSxNQUtBTCxHQUFBLEVBQ0FsTixFQUdBa04sSUFDQUcsRUFDQSxXQUFBQSxJQUNBakMsRUFBQWlDLEVBQUFqQyxRQUdBaUMsRUFBQS9ZLEVBQUF4QixPQUFBbGQsRUFBQSxTQUFBLENBQUFzZ0IsUUFBQWlYLElBSUE5VixJQUNBZ1csRUFBQWpDLFFBQUFBLEdBSUFBLEdBQ0FwVSxHQUFBLENBQUFwaEIsSUFBQSxHQUtBazNCLEVBQUExeUIsS0FBQSxXQVNBLElBQUFnYSxLQUpBZ1gsR0FDQXBVLEdBQUEsQ0FBQXBoQixJQUVBMGUsRUFBQWhGLE9BQUExWixFQUFBLFVBQ0FvcUIsRUFDQXpyQixFQUFBMGhCLE1BQUFyZ0IsRUFBQXdlLEVBQUE0TCxFQUFBNUwsT0FNQThZLEVBQUF2QixHQUFBUCxFQUFBaUMsRUFBQWpaLEdBQUEsRUFBQUEsRUFBQTBZLEdBQ0ExWSxLQUFBaVosSUFDQUEsRUFBQWpaLEdBQUE4WSxFQUFBdG5CLE1BQ0F3bEIsSUFDQThCLEVBQUEzMkIsSUFBQTIyQixFQUFBdG5CLE1BQ0FzbkIsRUFBQXRuQixNQUFBLE1BdU1BOG5CLFVBQUEsU0FBQWg0QixFQUFBa3NCLEdBQ0FBLEVBQ0FpSyxHQUFBSSxXQUFBM29CLFFBQUE1TixHQUVBbTJCLEdBQUFJLFdBQUE5NUIsS0FBQXVELE1BS0FuQixFQUFBbzVCLE1BQUEsU0FBQUEsRUFBQS9GLEVBQUFsekIsR0FDQSxJQUFBczJCLEVBQUEyQyxHQUFBLGlCQUFBQSxFQUFBcDVCLEVBQUFtQyxPQUFBLEdBQUFpM0IsR0FBQSxDQUNBZixTQUFBbDRCLElBQUFBLEdBQUFrekIsR0FDQWgxQixFQUFBKzZCLElBQUFBLEVBQ0F4RCxTQUFBd0QsRUFDQS9GLE9BQUFsekIsR0FBQWt6QixHQUFBQSxJQUFBaDFCLEVBQUFnMUIsSUFBQUEsR0FvQ0EsT0FoQ0FyekIsRUFBQSsxQixHQUFBblEsSUFDQTZRLEVBQUFiLFNBQUEsRUFHQSxpQkFBQWEsRUFBQWIsV0FDQWEsRUFBQWIsWUFBQTUxQixFQUFBKzFCLEdBQUFzRCxPQUNBNUMsRUFBQWIsU0FBQTUxQixFQUFBKzFCLEdBQUFzRCxPQUFBNUMsRUFBQWIsVUFHQWEsRUFBQWIsU0FBQTUxQixFQUFBKzFCLEdBQUFzRCxPQUFBeFYsVUFNQSxNQUFBNFMsRUFBQS9iLFFBQUEsSUFBQStiLEVBQUEvYixRQUNBK2IsRUFBQS9iLE1BQUEsTUFJQStiLEVBQUFsSSxJQUFBa0ksRUFBQTRCLFNBRUE1QixFQUFBNEIsU0FBQSxXQUNBaDZCLEVBQUFvNEIsRUFBQWxJLE1BQ0FrSSxFQUFBbEksSUFBQTl3QixLQUFBVCxNQUdBeTVCLEVBQUEvYixPQUNBMWEsRUFBQXlnQixRQUFBempCLEtBQUF5NUIsRUFBQS9iLFFBSUErYixHQUdBejJCLEVBQUFHLEdBQUFnQyxPQUFBLENBQ0FtM0IsT0FBQSxTQUFBRixFQUFBRyxFQUFBbEcsRUFBQWx5QixHQUdBLE9BQUFuRSxLQUFBeVEsT0FBQWdVLElBQUFHLElBQUEsVUFBQSxHQUFBYyxPQUdBMWdCLE1BQUF3M0IsUUFBQSxDQUFBakcsUUFBQWdHLEdBQUFILEVBQUEvRixFQUFBbHlCLElBRUFxNEIsUUFBQSxTQUFBM1osRUFBQXVaLEVBQUEvRixFQUFBbHlCLEdBQ0EsSUFBQThSLEVBQUFqVCxFQUFBeUQsY0FBQW9jLEdBQ0E0WixFQUFBejVCLEVBQUFvNUIsTUFBQUEsRUFBQS9GLEVBQUFseUIsR0FDQXU0QixFQUFBLFdBR0EsSUFBQW5CLEVBQUFqQixHQUFBdDZCLEtBQUFnRCxFQUFBbUMsT0FBQSxHQUFBMGQsR0FBQTRaLElBR0F4bUIsR0FBQThNLEVBQUFwZixJQUFBM0QsS0FBQSxZQUNBdTdCLEVBQUExWCxNQUFBLElBTUEsT0FGQTZZLEVBQUFDLE9BQUFELEVBRUF6bUIsSUFBQSxJQUFBd21CLEVBQUEvZSxNQUNBMWQsS0FBQWtFLEtBQUF3NEIsR0FDQTE4QixLQUFBMGQsTUFBQStlLEVBQUEvZSxNQUFBZ2YsSUFFQTdZLEtBQUEsU0FBQWxpQixFQUFBb2lCLEVBQUFtWCxHQUNBLElBQUEwQixFQUFBLFNBQUFqWixHQUNBLElBQUFFLEVBQUFGLEVBQUFFLFlBQ0FGLEVBQUFFLEtBQ0FBLEVBQUFxWCxJQVlBLE1BVEEsaUJBQUF2NUIsSUFDQXU1QixFQUFBblgsRUFDQUEsRUFBQXBpQixFQUNBQSxPQUFBbUUsR0FFQWllLEdBQ0EvakIsS0FBQTBkLE1BQUEvYixHQUFBLEtBQUEsSUFHQTNCLEtBQUFrRSxLQUFBLFdBQ0EsSUFBQXVmLEdBQUEsRUFDQWhJLEVBQUEsTUFBQTlaLEdBQUFBLEVBQUEsYUFDQWs3QixFQUFBNzVCLEVBQUE2NUIsT0FDQWphLEVBQUFHLEVBQUFwZixJQUFBM0QsTUFFQSxHQUFBeWIsRUFDQW1ILEVBQUFuSCxJQUFBbUgsRUFBQW5ILEdBQUFvSSxNQUNBK1ksRUFBQWhhLEVBQUFuSCxTQUdBLElBQUFBLEtBQUFtSCxFQUNBQSxFQUFBbkgsSUFBQW1ILEVBQUFuSCxHQUFBb0ksTUFBQThWLEdBQUFsc0IsS0FBQWdPLElBQ0FtaEIsRUFBQWhhLEVBQUFuSCxJQUtBLElBQUFBLEVBQUFvaEIsRUFBQXY1QixPQUFBbVksS0FDQW9oQixFQUFBcGhCLEdBQUFwWCxPQUFBckUsTUFDQSxNQUFBMkIsR0FBQWs3QixFQUFBcGhCLEdBQUFpQyxRQUFBL2IsSUFFQWs3QixFQUFBcGhCLEdBQUE4ZixLQUFBMVgsS0FBQXFYLEdBQ0F6WCxHQUFBLEVBQ0FvWixFQUFBMzNCLE9BQUF1VyxFQUFBLEtBT0FnSSxHQUFBeVgsR0FDQWw0QixFQUFBeWdCLFFBQUF6akIsS0FBQTJCLE1BSUFnN0IsT0FBQSxTQUFBaDdCLEdBSUEsT0FIQSxJQUFBQSxJQUNBQSxFQUFBQSxHQUFBLE1BRUEzQixLQUFBa0UsS0FBQSxXQUNBLElBQUF1WCxFQUNBbUgsRUFBQUcsRUFBQXBmLElBQUEzRCxNQUNBMGQsRUFBQWtGLEVBQUFqaEIsRUFBQSxTQUNBZ2lCLEVBQUFmLEVBQUFqaEIsRUFBQSxjQUNBazdCLEVBQUE3NUIsRUFBQTY1QixPQUNBdjVCLEVBQUFvYSxFQUFBQSxFQUFBcGEsT0FBQSxFQWFBLElBVkFzZixFQUFBK1osUUFBQSxFQUdBMzVCLEVBQUEwYSxNQUFBMWQsS0FBQTJCLEVBQUEsSUFFQWdpQixHQUFBQSxFQUFBRSxNQUNBRixFQUFBRSxLQUFBcGpCLEtBQUFULE1BQUEsR0FJQXliLEVBQUFvaEIsRUFBQXY1QixPQUFBbVksS0FDQW9oQixFQUFBcGhCLEdBQUFwWCxPQUFBckUsTUFBQTY4QixFQUFBcGhCLEdBQUFpQyxRQUFBL2IsSUFDQWs3QixFQUFBcGhCLEdBQUE4ZixLQUFBMVgsTUFBQSxHQUNBZ1osRUFBQTMzQixPQUFBdVcsRUFBQSxJQUtBLElBQUFBLEVBQUEsRUFBQUEsRUFBQW5ZLEVBQUFtWSxJQUNBaUMsRUFBQWpDLElBQUFpQyxFQUFBakMsR0FBQWtoQixRQUNBamYsRUFBQWpDLEdBQUFraEIsT0FBQWw4QixLQUFBVCxhQUtBNGlCLEVBQUErWixZQUtBMzVCLEVBQUFrQixLQUFBLENBQUEsU0FBQSxPQUFBLFFBQUEsU0FBQXNELEVBQUFuQyxHQUNBLElBQUF5M0IsRUFBQTk1QixFQUFBRyxHQUFBa0MsR0FDQXJDLEVBQUFHLEdBQUFrQyxHQUFBLFNBQUErMkIsRUFBQS9GLEVBQUFseUIsR0FDQSxPQUFBLE1BQUFpNEIsR0FBQSxrQkFBQUEsRUFDQVUsRUFBQW44QixNQUFBWCxLQUFBc0UsV0FDQXRFLEtBQUF3OEIsUUFBQXRDLEdBQUE3MEIsR0FBQSxHQUFBKzJCLEVBQUEvRixFQUFBbHlCLE1BS0FuQixFQUFBa0IsS0FBQSxDQUNBNjRCLFVBQUE3QyxHQUFBLFFBQ0E4QyxRQUFBOUMsR0FBQSxRQUNBK0MsWUFBQS9DLEdBQUEsVUFDQWdELE9BQUEsQ0FBQTNHLFFBQUEsUUFDQTRHLFFBQUEsQ0FBQTVHLFFBQUEsUUFDQTZHLFdBQUEsQ0FBQTdHLFFBQUEsV0FDQSxTQUFBbHhCLEVBQUE0bUIsR0FDQWpwQixFQUFBRyxHQUFBa0MsR0FBQSxTQUFBKzJCLEVBQUEvRixFQUFBbHlCLEdBQ0EsT0FBQW5FLEtBQUF3OEIsUUFBQXZRLEVBQUFtUSxFQUFBL0YsRUFBQWx5QixNQUlBbkIsRUFBQTY1QixPQUFBLEdBQ0E3NUIsRUFBQSsxQixHQUFBaUIsS0FBQSxXQUNBLElBQUFzQixFQUNBbjVCLEVBQUEsRUFDQTA2QixFQUFBNzVCLEVBQUE2NUIsT0FJQSxJQUZBdEQsR0FBQTd3QixLQUFBNGpCLE1BRUFucUIsRUFBQTA2QixFQUFBdjVCLE9BQUFuQixLQUNBbTVCLEVBQUF1QixFQUFBMTZCLE9BR0EwNkIsRUFBQTE2QixLQUFBbTVCLEdBQ0F1QixFQUFBMzNCLE9BQUEvQyxJQUFBLEdBSUEwNkIsRUFBQXY1QixRQUNBTixFQUFBKzFCLEdBQUFsVixPQUVBMFYsUUFBQXp6QixHQUdBOUMsRUFBQSsxQixHQUFBdUMsTUFBQSxTQUFBQSxHQUNBdDRCLEVBQUE2NUIsT0FBQWo4QixLQUFBMDZCLEdBQ0F0NEIsRUFBQSsxQixHQUFBMWtCLFNBR0FyUixFQUFBKzFCLEdBQUFnQixTQUFBLEdBQ0EvMkIsRUFBQSsxQixHQUFBMWtCLE1BQUEsV0FDQW1sQixLQUlBQSxJQUFBLEVBQ0FJLE9BR0E1MkIsRUFBQSsxQixHQUFBbFYsS0FBQSxXQUNBMlYsR0FBQSxNQUdBeDJCLEVBQUErMUIsR0FBQXNELE9BQUEsQ0FDQWdCLEtBQUEsSUFDQUMsS0FBQSxJQUdBelcsU0FBQSxLQUtBN2pCLEVBQUFHLEdBQUFvNkIsTUFBQSxTQUFBQyxFQUFBNzdCLEdBSUEsT0FIQTY3QixFQUFBeDZCLEVBQUErMUIsSUFBQS8xQixFQUFBKzFCLEdBQUFzRCxPQUFBbUIsSUFBQUEsRUFDQTc3QixFQUFBQSxHQUFBLEtBRUEzQixLQUFBMGQsTUFBQS9iLEVBQUEsU0FBQTRLLEVBQUFvWCxHQUNBLElBQUE4WixFQUFBMTlCLEVBQUFrZ0IsV0FBQTFULEVBQUFpeEIsR0FDQTdaLEVBQUFFLEtBQUEsV0FDQTlqQixFQUFBMjlCLGFBQUFELE9BT0Exc0IsR0FBQW5SLEVBQUEwQyxjQUFBLFNBRUFtM0IsR0FEQTc1QixFQUFBMEMsY0FBQSxVQUNBSyxZQUFBL0MsRUFBQTBDLGNBQUEsV0FFQXlPLEdBQUFwUCxLQUFBLFdBSUFQLEVBQUF1OEIsUUFBQSxLQUFBNXNCLEdBQUE1SixNQUlBL0YsRUFBQXc4QixZQUFBbkUsR0FBQTFqQixVQUlBaEYsR0FBQW5SLEVBQUEwQyxjQUFBLFVBQ0E2RSxNQUFBLElBQ0E0SixHQUFBcFAsS0FBQSxRQUNBUCxFQUFBeThCLFdBQUEsTUFBQTlzQixHQUFBNUosTUFJQSxJQUFBMjJCLEdBQ0EvdUIsR0FBQS9MLEVBQUFnUCxLQUFBakQsV0FFQS9MLEVBQUFHLEdBQUFnQyxPQUFBLENBQ0ErTSxLQUFBLFNBQUE3TSxFQUFBOEIsR0FDQSxPQUFBb2EsRUFBQXZoQixLQUFBZ0QsRUFBQWtQLEtBQUE3TSxFQUFBOEIsRUFBQSxFQUFBN0MsVUFBQWhCLFNBR0F5NkIsV0FBQSxTQUFBMTRCLEdBQ0EsT0FBQXJGLEtBQUFrRSxLQUFBLFdBQ0FsQixFQUFBKzZCLFdBQUEvOUIsS0FBQXFGLFFBS0FyQyxFQUFBbUMsT0FBQSxDQUNBK00sS0FBQSxTQUFBN04sRUFBQWdCLEVBQUE4QixHQUNBLElBQUFwRCxFQUFBNGYsRUFDQXFhLEVBQUEzNUIsRUFBQTlDLFNBR0EsR0FBQSxJQUFBeThCLEdBQUEsSUFBQUEsR0FBQSxJQUFBQSxFQUtBLFlBQUEsSUFBQTM1QixFQUFBN0IsYUFDQVEsRUFBQTZmLEtBQUF4ZSxFQUFBZ0IsRUFBQThCLElBS0EsSUFBQTYyQixHQUFBaDdCLEVBQUFpWCxTQUFBNVYsS0FDQXNmLEVBQUEzZ0IsRUFBQWk3QixVQUFBNTRCLEVBQUFvQyxpQkFDQXpFLEVBQUFnUCxLQUFBbEYsTUFBQWpDLEtBQUE0QyxLQUFBcEksR0FBQXk0QixRQUFBaDRCLFNBR0FBLElBQUFxQixFQUNBLE9BQUFBLE9BQ0FuRSxFQUFBKzZCLFdBQUExNUIsRUFBQWdCLEdBSUFzZSxHQUFBLFFBQUFBLFFBQ0E3ZCxLQUFBL0IsRUFBQTRmLEVBQUFoQixJQUFBdGUsRUFBQThDLEVBQUE5QixJQUNBdEIsR0FHQU0sRUFBQTVCLGFBQUE0QyxFQUFBOEIsRUFBQSxJQUNBQSxHQUdBd2MsR0FBQSxRQUFBQSxHQUFBLFFBQUE1ZixFQUFBNGYsRUFBQWhnQixJQUFBVSxFQUFBZ0IsSUFDQXRCLEVBTUEsT0FIQUEsRUFBQWYsRUFBQTJOLEtBQUF1QixLQUFBN04sRUFBQWdCLFNBR0FTLEVBQUEvQixJQUdBazZCLFVBQUEsQ0FDQXQ4QixLQUFBLENBQ0FnaEIsSUFBQSxTQUFBdGUsRUFBQThDLEdBQ0EsSUFBQS9GLEVBQUF5OEIsWUFBQSxVQUFBMTJCLEdBQ0FrRixFQUFBaEksRUFBQSxTQUFBLENBQ0EsSUFBQWpDLEVBQUFpQyxFQUFBOEMsTUFLQSxPQUpBOUMsRUFBQTVCLGFBQUEsT0FBQTBFLEdBQ0EvRSxJQUNBaUMsRUFBQThDLE1BQUEvRSxHQUVBK0UsTUFNQTQyQixXQUFBLFNBQUExNUIsRUFBQThDLEdBQ0EsSUFBQTlCLEVBQ0FsRCxFQUFBLEVBSUErN0IsRUFBQS8yQixHQUFBQSxFQUFBMkYsTUFBQXVQLEdBRUEsR0FBQTZoQixHQUFBLElBQUE3NUIsRUFBQTlDLFNBQ0EsS0FBQThELEVBQUE2NEIsRUFBQS83QixNQUNBa0MsRUFBQThKLGdCQUFBOUksTUFPQXk0QixHQUFBLENBQ0FuYixJQUFBLFNBQUF0ZSxFQUFBOEMsRUFBQTlCLEdBUUEsT0FQQSxJQUFBOEIsRUFHQW5FLEVBQUErNkIsV0FBQTE1QixFQUFBZ0IsR0FFQWhCLEVBQUE1QixhQUFBNEMsRUFBQUEsR0FFQUEsSUFJQXJDLEVBQUFrQixLQUFBbEIsRUFBQWdQLEtBQUFsRixNQUFBakMsS0FBQXNaLE9BQUFyWCxNQUFBLFFBQUEsU0FBQXRGLEVBQUFuQyxHQUNBLElBQUE4NEIsRUFBQXB2QixHQUFBMUosSUFBQXJDLEVBQUEyTixLQUFBdUIsS0FFQW5ELEdBQUExSixHQUFBLFNBQUFoQixFQUFBZ0IsRUFBQXdDLEdBQ0EsSUFBQTlELEVBQUFrbUIsRUFDQW1VLEVBQUEvNEIsRUFBQW9DLGNBWUEsT0FWQUksSUFHQW9pQixFQUFBbGIsR0FBQXF2QixHQUNBcnZCLEdBQUFxdkIsR0FBQXI2QixFQUNBQSxFQUFBLE1BQUFvNkIsRUFBQTk1QixFQUFBZ0IsRUFBQXdDLEdBQ0F1MkIsRUFDQSxLQUNBcnZCLEdBQUFxdkIsR0FBQW5VLEdBRUFsbUIsS0FPQSxJQUFBczZCLEdBQUEsc0NBQ0FDLEdBQUEsZ0JBd0lBLFNBQUFDLEdBQUFwM0IsR0FFQSxPQURBQSxFQUFBMkYsTUFBQXVQLElBQUEsSUFDQXhPLEtBQUEsS0FJQSxTQUFBMndCLEdBQUFuNkIsR0FDQSxPQUFBQSxFQUFBN0IsY0FBQTZCLEVBQUE3QixhQUFBLFVBQUEsR0FHQSxTQUFBaThCLEdBQUF0M0IsR0FDQSxPQUFBdkIsTUFBQUMsUUFBQXNCLEdBQ0FBLEVBRUEsaUJBQUFBLEdBQ0FBLEVBQUEyRixNQUFBdVAsSUFFQSxHQXZKQXJaLEVBQUFHLEdBQUFnQyxPQUFBLENBQ0EwZCxLQUFBLFNBQUF4ZCxFQUFBOEIsR0FDQSxPQUFBb2EsRUFBQXZoQixLQUFBZ0QsRUFBQTZmLEtBQUF4ZCxFQUFBOEIsRUFBQSxFQUFBN0MsVUFBQWhCLFNBR0FvN0IsV0FBQSxTQUFBcjVCLEdBQ0EsT0FBQXJGLEtBQUFrRSxLQUFBLGtCQUNBbEUsS0FBQWdELEVBQUEyN0IsUUFBQXQ1QixJQUFBQSxRQUtBckMsRUFBQW1DLE9BQUEsQ0FDQTBkLEtBQUEsU0FBQXhlLEVBQUFnQixFQUFBOEIsR0FDQSxJQUFBcEQsRUFBQTRmLEVBQ0FxYSxFQUFBMzVCLEVBQUE5QyxTQUdBLEdBQUEsSUFBQXk4QixHQUFBLElBQUFBLEdBQUEsSUFBQUEsRUFXQSxPQVBBLElBQUFBLEdBQUFoN0IsRUFBQWlYLFNBQUE1VixLQUdBZ0IsRUFBQXJDLEVBQUEyN0IsUUFBQXQ1QixJQUFBQSxFQUNBc2UsRUFBQTNnQixFQUFBdzFCLFVBQUFuekIsU0FHQVMsSUFBQXFCLEVBQ0F3YyxHQUFBLFFBQUFBLFFBQ0E3ZCxLQUFBL0IsRUFBQTRmLEVBQUFoQixJQUFBdGUsRUFBQThDLEVBQUE5QixJQUNBdEIsRUFHQU0sRUFBQWdCLEdBQUE4QixFQUdBd2MsR0FBQSxRQUFBQSxHQUFBLFFBQUE1ZixFQUFBNGYsRUFBQWhnQixJQUFBVSxFQUFBZ0IsSUFDQXRCLEVBR0FNLEVBQUFnQixJQUdBbXpCLFVBQUEsQ0FDQTVpQixTQUFBLENBQ0FqUyxJQUFBLFNBQUFVLEdBTUEsSUFBQXU2QixFQUFBNTdCLEVBQUEyTixLQUFBdUIsS0FBQTdOLEVBQUEsWUFFQSxPQUFBdTZCLEVBQ0ExSyxTQUFBMEssRUFBQSxJQUlBUCxHQUFBNXdCLEtBQUFwSixFQUFBZ0ksV0FDQWl5QixHQUFBN3dCLEtBQUFwSixFQUFBZ0ksV0FDQWhJLEVBQUFzUixLQUVBLEdBR0EsS0FLQWdwQixRQUFBLENBQ0FFLElBQUEsVUFDQUMsTUFBQSxlQVlBMTlCLEVBQUF3OEIsY0FDQTU2QixFQUFBdzFCLFVBQUF6aUIsU0FBQSxDQUNBcFMsSUFBQSxTQUFBVSxHQUlBLElBQUFpUSxFQUFBalEsRUFBQXpCLFdBSUEsT0FIQTBSLEdBQUFBLEVBQUExUixZQUNBMFIsRUFBQTFSLFdBQUFvVCxjQUVBLE1BRUEyTSxJQUFBLFNBQUF0ZSxHQUlBLElBQUFpUSxFQUFBalEsRUFBQXpCLFdBQ0EwUixJQUNBQSxFQUFBMEIsY0FFQTFCLEVBQUExUixZQUNBMFIsRUFBQTFSLFdBQUFvVCxrQkFPQWhULEVBQUFrQixLQUFBLENBQ0EsV0FDQSxXQUNBLFlBQ0EsY0FDQSxjQUNBLFVBQ0EsVUFDQSxTQUNBLGNBQ0EsbUJBQ0EsV0FDQWxCLEVBQUEyN0IsUUFBQTMrQixLQUFBeUgsZUFBQXpILE9BNEJBZ0QsRUFBQUcsR0FBQWdDLE9BQUEsQ0FDQTQ1QixTQUFBLFNBQUE1M0IsR0FDQSxJQUFBNjNCLEVBQUEvdkIsRUFBQWd3QixFQUFBNXVCLEVBQUFsTyxFQUFBKzhCLEVBRUEsT0FBQTc5QixFQUFBOEYsR0FDQW5ILEtBQUFrRSxLQUFBLFNBQUFhLEdBQ0EvQixFQUFBaEQsTUFBQSsrQixTQUFBNTNCLEVBQUExRyxLQUFBVCxLQUFBK0UsRUFBQXk1QixHQUFBeCtCLFdBSUFnL0IsRUFBQVAsR0FBQXQzQixJQUVBN0QsT0FDQXRELEtBQUFrRSxLQUFBLFdBSUEsR0FIQSs2QixFQUFBVCxHQUFBeCtCLE1BQ0FpUCxFQUFBLElBQUFqUCxLQUFBdUIsVUFBQSxJQUFBZzlCLEdBQUFVLEdBQUEsSUFFQSxDQUNBLElBQUE5OEIsRUFBQSxFQUFBQSxFQUFBNjhCLEVBQUExN0IsT0FBQW5CLElBQ0FrTyxFQUFBMnVCLEVBQUE3OEIsR0FDQThNLEVBQUFwTyxRQUFBLElBQUF3UCxFQUFBLEtBQUEsSUFDQXBCLEdBQUFvQixFQUFBLEtBS0E2dUIsRUFBQVgsR0FBQXR2QixHQUNBZ3dCLElBQUFDLEdBQ0FsL0IsS0FBQXlDLGFBQUEsUUFBQXk4QixNQU1BbC9CLE1BR0FtL0IsWUFBQSxTQUFBaDRCLEdBQ0EsSUFBQTYzQixFQUFBL3ZCLEVBQUFnd0IsRUFBQTV1QixFQUFBbE8sRUFBQSs4QixFQUVBLE9BQUE3OUIsRUFBQThGLEdBQ0FuSCxLQUFBa0UsS0FBQSxTQUFBYSxHQUNBL0IsRUFBQWhELE1BQUFtL0IsWUFBQWg0QixFQUFBMUcsS0FBQVQsS0FBQStFLEVBQUF5NUIsR0FBQXgrQixVQUlBc0UsVUFBQWhCLFFBSUEwN0IsRUFBQVAsR0FBQXQzQixJQUVBN0QsT0FDQXRELEtBQUFrRSxLQUFBLFdBTUEsR0FMQSs2QixFQUFBVCxHQUFBeCtCLE1BR0FpUCxFQUFBLElBQUFqUCxLQUFBdUIsVUFBQSxJQUFBZzlCLEdBQUFVLEdBQUEsSUFFQSxDQUNBLElBQUE5OEIsRUFBQSxFQUFBQSxFQUFBNjhCLEVBQUExN0IsT0FBQW5CLElBSUEsSUFIQWtPLEVBQUEydUIsRUFBQTc4QixJQUdBLEVBQUE4TSxFQUFBcE8sUUFBQSxJQUFBd1AsRUFBQSxNQUNBcEIsRUFBQUEsRUFBQS9JLFFBQUEsSUFBQW1LLEVBQUEsSUFBQSxLQUtBNnVCLEVBQUFYLEdBQUF0dkIsR0FDQWd3QixJQUFBQyxHQUNBbC9CLEtBQUF5QyxhQUFBLFFBQUF5OEIsTUFNQWwvQixLQS9CQUEsS0FBQWtTLEtBQUEsUUFBQSxLQWtDQWt0QixZQUFBLFNBQUFqNEIsRUFBQWs0QixHQUNBLElBQUFMLEVBQUEzdUIsRUFBQWxPLEVBQUF5WSxFQUNBalosU0FBQXdGLEVBQ0FtNEIsRUFBQSxXQUFBMzlCLEdBQUFpRSxNQUFBQyxRQUFBc0IsR0FFQSxPQUFBOUYsRUFBQThGLEdBQ0FuSCxLQUFBa0UsS0FBQSxTQUFBL0IsR0FDQWEsRUFBQWhELE1BQUFvL0IsWUFDQWo0QixFQUFBMUcsS0FBQVQsS0FBQW1DLEVBQUFxOEIsR0FBQXgrQixNQUFBcS9CLEdBQ0FBLEtBS0Esa0JBQUFBLEdBQUFDLEVBQ0FELEVBQUFyL0IsS0FBQSsrQixTQUFBNTNCLEdBQUFuSCxLQUFBbS9CLFlBQUFoNEIsSUFHQTYzQixFQUFBUCxHQUFBdDNCLEdBRUFuSCxLQUFBa0UsS0FBQSxXQUNBLEdBQUFvN0IsRUFLQSxJQUZBMWtCLEVBQUE1WCxFQUFBaEQsTUFFQW1DLEVBQUEsRUFBQUEsRUFBQTY4QixFQUFBMTdCLE9BQUFuQixJQUNBa08sRUFBQTJ1QixFQUFBNzhCLEdBR0F5WSxFQUFBMmtCLFNBQUFsdkIsR0FDQXVLLEVBQUF1a0IsWUFBQTl1QixHQUVBdUssRUFBQW1rQixTQUFBMXVCLGFBS0F2SyxJQUFBcUIsR0FBQSxZQUFBeEYsS0FDQTBPLEVBQUFtdUIsR0FBQXgrQixRQUlBK2lCLEVBQUFKLElBQUEzaUIsS0FBQSxnQkFBQXFRLEdBT0FyUSxLQUFBeUMsY0FDQXpDLEtBQUF5QyxhQUFBLFFBQ0E0TixJQUFBLElBQUFsSixFQUNBLEdBQ0E0YixFQUFBcGYsSUFBQTNELEtBQUEsa0JBQUEsU0FPQXUvQixTQUFBLFNBQUF0OEIsR0FDQSxJQUFBb04sRUFBQWhNLEVBQ0FsQyxFQUFBLEVBR0EsSUFEQWtPLEVBQUEsSUFBQXBOLEVBQUEsSUFDQW9CLEVBQUFyRSxLQUFBbUMsTUFDQSxHQUFBLElBQUFrQyxFQUFBOUMsV0FDQSxHQUFBLElBQUFnOUIsR0FBQUMsR0FBQW42QixJQUFBLEtBQUF4RCxRQUFBd1AsR0FDQSxPQUFBLEVBSUEsT0FBQSxLQU9BLElBQUFtdkIsR0FBQSxNQUVBeDhCLEVBQUFHLEdBQUFnQyxPQUFBLENBQ0EvQyxJQUFBLFNBQUErRSxHQUNBLElBQUF3YyxFQUFBNWYsRUFBQTByQixFQUNBcHJCLEVBQUFyRSxLQUFBLEdBRUEsT0FBQXNFLFVBQUFoQixRQTBCQW1zQixFQUFBcHVCLEVBQUE4RixHQUVBbkgsS0FBQWtFLEtBQUEsU0FBQS9CLEdBQ0EsSUFBQUMsRUFFQSxJQUFBcEMsS0FBQXVCLFdBV0EsT0FOQWEsRUFEQXF0QixFQUNBdG9CLEVBQUExRyxLQUFBVCxLQUFBbUMsRUFBQWEsRUFBQWhELE1BQUFvQyxPQUVBK0UsR0FLQS9FLEVBQUEsR0FFQSxpQkFBQUEsRUFDQUEsR0FBQSxHQUVBd0QsTUFBQUMsUUFBQXpELEtBQ0FBLEVBQUFZLEVBQUFvQixJQUFBaEMsRUFBQSxTQUFBK0UsR0FDQSxPQUFBLE1BQUFBLEVBQUEsR0FBQUEsRUFBQSxPQUlBd2MsRUFBQTNnQixFQUFBeThCLFNBQUF6L0IsS0FBQTJCLE9BQUFxQixFQUFBeThCLFNBQUF6L0IsS0FBQXFNLFNBQUE1RSxpQkFHQSxRQUFBa2MsUUFBQTdkLElBQUE2ZCxFQUFBaEIsSUFBQTNpQixLQUFBb0MsRUFBQSxXQUNBcEMsS0FBQW1ILE1BQUEvRSxPQXpEQWlDLEdBQ0FzZixFQUFBM2dCLEVBQUF5OEIsU0FBQXA3QixFQUFBMUMsT0FDQXFCLEVBQUF5OEIsU0FBQXA3QixFQUFBZ0ksU0FBQTVFLGlCQUdBLFFBQUFrYyxRQUNBN2QsS0FBQS9CLEVBQUE0ZixFQUFBaGdCLElBQUFVLEVBQUEsVUFFQU4sRUFNQSxpQkFIQUEsRUFBQU0sRUFBQThDLE9BSUFwRCxFQUFBbUMsUUFBQXM1QixHQUFBLElBSUEsTUFBQXo3QixFQUFBLEdBQUFBLE9BR0EsS0F5Q0FmLEVBQUFtQyxPQUFBLENBQ0FzNkIsU0FBQSxDQUNBbFosT0FBQSxDQUNBNWlCLElBQUEsU0FBQVUsR0FFQSxJQUFBakMsRUFBQVksRUFBQTJOLEtBQUF1QixLQUFBN04sRUFBQSxTQUNBLE9BQUEsTUFBQWpDLEVBQ0FBLEVBTUFtOEIsR0FBQXY3QixFQUFBVCxLQUFBOEIsTUFHQTJELE9BQUEsQ0FDQXJFLElBQUEsU0FBQVUsR0FDQSxJQUFBOEMsRUFBQW9mLEVBQUFwa0IsRUFDQWlELEVBQUFmLEVBQUFlLFFBQ0FxVyxFQUFBcFgsRUFBQTJSLGNBQ0F5UyxFQUFBLGVBQUFwa0IsRUFBQTFDLEtBQ0Fna0IsRUFBQThDLEVBQUEsS0FBQSxHQUNBNk0sRUFBQTdNLEVBQUFoTixFQUFBLEVBQUFyVyxFQUFBOUIsT0FVQSxJQVBBbkIsRUFEQXNaLEVBQUEsRUFDQTZaLEVBR0E3TSxFQUFBaE4sRUFBQSxFQUlBdFosRUFBQW16QixFQUFBbnpCLElBS0EsS0FKQW9rQixFQUFBbmhCLEVBQUFqRCxJQUlBNFQsVUFBQTVULElBQUFzWixLQUdBOEssRUFBQW5hLFlBQ0FtYSxFQUFBM2pCLFdBQUF3SixXQUNBQyxFQUFBa2EsRUFBQTNqQixXQUFBLGFBQUEsQ0FNQSxHQUhBdUUsRUFBQW5FLEVBQUF1akIsR0FBQW5rQixNQUdBcW1CLEVBQ0EsT0FBQXRoQixFQUlBd2UsRUFBQS9rQixLQUFBdUcsR0FJQSxPQUFBd2UsR0FHQWhELElBQUEsU0FBQXRlLEVBQUE4QyxHQU1BLElBTEEsSUFBQXU0QixFQUFBblosRUFDQW5oQixFQUFBZixFQUFBZSxRQUNBdWdCLEVBQUEzaUIsRUFBQTJELFVBQUFRLEdBQ0FoRixFQUFBaUQsRUFBQTlCLE9BRUFuQixPQUNBb2tCLEVBQUFuaEIsRUFBQWpELElBSUE0VCxVQUNBLEVBQUEvUyxFQUFBNkQsUUFBQTdELEVBQUF5OEIsU0FBQWxaLE9BQUE1aUIsSUFBQTRpQixHQUFBWixNQUVBK1osR0FBQSxHQVVBLE9BSEFBLElBQ0FyN0IsRUFBQTJSLGVBQUEsR0FFQTJQLE9BT0EzaUIsRUFBQWtCLEtBQUEsQ0FBQSxRQUFBLFlBQUEsV0FDQWxCLEVBQUF5OEIsU0FBQXovQixNQUFBLENBQ0EyaUIsSUFBQSxTQUFBdGUsRUFBQThDLEdBQ0EsR0FBQXZCLE1BQUFDLFFBQUFzQixHQUNBLE9BQUE5QyxFQUFBeVIsU0FBQSxFQUFBOVMsRUFBQTZELFFBQUE3RCxFQUFBcUIsR0FBQWpDLE1BQUErRSxLQUlBL0YsRUFBQXU4QixVQUNBMzZCLEVBQUF5OEIsU0FBQXovQixNQUFBMkQsSUFBQSxTQUFBVSxHQUNBLE9BQUEsT0FBQUEsRUFBQTdCLGFBQUEsU0FBQSxLQUFBNkIsRUFBQThDLFVBV0EvRixFQUFBdStCLFFBQUEsY0FBQTUvQixFQUdBLElBQUE2L0IsR0FBQSxrQ0FDQUMsR0FBQSxTQUFBcHpCLEdBQ0FBLEVBQUF5YyxtQkFHQWxtQixFQUFBbUMsT0FBQW5DLEVBQUEybEIsTUFBQSxDQUVBVSxRQUFBLFNBQUFWLEVBQUEvRixFQUFBdmUsRUFBQXk3QixHQUVBLElBQUEzOUIsRUFBQThNLEVBQUE2QixFQUFBaXZCLEVBQUFDLEVBQUEvVixFQUFBM0ssRUFBQTJnQixFQUNBQyxFQUFBLENBQUE3N0IsR0FBQXpFLEdBQ0ErQixFQUFBWCxFQUFBUCxLQUFBa29CLEVBQUEsUUFBQUEsRUFBQWhuQixLQUFBZ25CLEVBQ0FrQixFQUFBN29CLEVBQUFQLEtBQUFrb0IsRUFBQSxhQUFBQSxFQUFBL1ksVUFBQXJJLE1BQUEsS0FBQSxHQUtBLEdBSEEwSCxFQUFBZ3hCLEVBQUFudkIsRUFBQXpNLEVBQUFBLEdBQUF6RSxFQUdBLElBQUF5RSxFQUFBOUMsVUFBQSxJQUFBOEMsRUFBQTlDLFdBS0FxK0IsR0FBQW55QixLQUFBOUwsRUFBQXFCLEVBQUEybEIsTUFBQXVCLGNBSUEsRUFBQXZvQixFQUFBZCxRQUFBLE9BSUFjLEdBREFrb0IsRUFBQWxvQixFQUFBNEYsTUFBQSxNQUNBaUgsUUFDQXFiLEVBQUE1a0IsUUFFQSs2QixFQUFBcitCLEVBQUFkLFFBQUEsS0FBQSxHQUFBLEtBQUFjLEdBR0FnbkIsRUFBQUEsRUFBQTNsQixFQUFBK0MsU0FDQTRpQixFQUNBLElBQUEzbEIsRUFBQXNtQixNQUFBM25CLEVBQUEsaUJBQUFnbkIsR0FBQUEsSUFHQUssVUFBQThXLEVBQUEsRUFBQSxFQUNBblgsRUFBQS9ZLFVBQUFpYSxFQUFBaGMsS0FBQSxLQUNBOGEsRUFBQXdDLFdBQUF4QyxFQUFBL1ksVUFDQSxJQUFBN0YsT0FBQSxVQUFBOGYsRUFBQWhjLEtBQUEsaUJBQUEsV0FDQSxLQUdBOGEsRUFBQWpWLFlBQUE1TixFQUNBNmlCLEVBQUFsakIsU0FDQWtqQixFQUFBbGpCLE9BQUFwQixHQUlBdWUsRUFBQSxNQUFBQSxFQUNBLENBQUErRixHQUNBM2xCLEVBQUEyRCxVQUFBaWMsRUFBQSxDQUFBK0YsSUFHQXJKLEVBQUF0YyxFQUFBMmxCLE1BQUFySixRQUFBM2QsSUFBQSxHQUNBbStCLElBQUF4Z0IsRUFBQStKLFVBQUEsSUFBQS9KLEVBQUErSixRQUFBMW9CLE1BQUEwRCxFQUFBdWUsSUFBQSxDQU1BLElBQUFrZCxJQUFBeGdCLEVBQUF1TSxXQUFBcHFCLEVBQUE0QyxHQUFBLENBTUEsSUFKQTA3QixFQUFBemdCLEVBQUEySixjQUFBdG5CLEVBQ0FpK0IsR0FBQW55QixLQUFBc3lCLEVBQUFwK0IsS0FDQXNOLEVBQUFBLEVBQUFyTSxZQUVBcU0sRUFBQUEsRUFBQUEsRUFBQXJNLFdBQ0FzOUIsRUFBQXQvQixLQUFBcU8sR0FDQTZCLEVBQUE3QixFQUlBNkIsS0FBQXpNLEVBQUE2SSxlQUFBdE4sSUFDQXNnQyxFQUFBdC9CLEtBQUFrUSxFQUFBYixhQUFBYSxFQUFBcXZCLGNBQUFwZ0MsR0FNQSxJQURBb0MsRUFBQSxHQUNBOE0sRUFBQWl4QixFQUFBLzlCLFFBQUF3bUIsRUFBQXFDLHdCQUNBaVYsRUFBQWh4QixFQUNBMFosRUFBQWhuQixLQUFBLEVBQUFRLEVBQ0E0OUIsRUFDQXpnQixFQUFBOEssVUFBQXpvQixHQUdBc29CLEdBQUFsSCxFQUFBcGYsSUFBQXNMLEVBQUEsV0FBQTdPLE9BQUE0cEIsT0FBQSxPQUFBckIsRUFBQWhuQixPQUNBb2hCLEVBQUFwZixJQUFBc0wsRUFBQSxZQUVBZ2IsRUFBQXRwQixNQUFBc08sRUFBQTJULElBSUFxSCxFQUFBK1YsR0FBQS93QixFQUFBK3dCLEtBQ0EvVixFQUFBdHBCLE9BQUEwaEIsRUFBQXBULEtBQ0EwWixFQUFBalYsT0FBQXVXLEVBQUF0cEIsTUFBQXNPLEVBQUEyVCxJQUNBLElBQUErRixFQUFBalYsUUFDQWlWLEVBQUFTLGtCQThDQSxPQTFDQVQsRUFBQWhuQixLQUFBQSxFQUdBbStCLEdBQUFuWCxFQUFBdUQsc0JBRUE1TSxFQUFBdUgsV0FDQSxJQUFBdkgsRUFBQXVILFNBQUFsbUIsTUFBQXUvQixFQUFBNTJCLE1BQUFzWixLQUNBUCxFQUFBaGUsSUFJQTI3QixHQUFBMytCLEVBQUFnRCxFQUFBMUMsTUFBQUYsRUFBQTRDLE1BR0F5TSxFQUFBek0sRUFBQTI3QixNQUdBMzdCLEVBQUEyN0IsR0FBQSxNQUlBaDlCLEVBQUEybEIsTUFBQXVCLFVBQUF2b0IsRUFFQWduQixFQUFBcUMsd0JBQ0FpVixFQUFBOXZCLGlCQUFBeE8sRUFBQWsrQixJQUdBeDdCLEVBQUExQyxLQUVBZ25CLEVBQUFxQyx3QkFDQWlWLEVBQUEvZSxvQkFBQXZmLEVBQUFrK0IsSUFHQTc4QixFQUFBMmxCLE1BQUF1QixlQUFBcGtCLEVBRUFnTCxJQUNBek0sRUFBQTI3QixHQUFBbHZCLElBTUE2WCxFQUFBalYsU0FLQTBzQixTQUFBLFNBQUF6K0IsRUFBQTBDLEVBQUFza0IsR0FDQSxJQUFBbGMsRUFBQXpKLEVBQUFtQyxPQUNBLElBQUFuQyxFQUFBc21CLE1BQ0FYLEVBQ0EsQ0FDQWhuQixLQUFBQSxFQUNBNHFCLGFBQUEsSUFJQXZwQixFQUFBMmxCLE1BQUFVLFFBQUE1YyxFQUFBLEtBQUFwSSxNQUtBckIsRUFBQUcsR0FBQWdDLE9BQUEsQ0FFQWtrQixRQUFBLFNBQUExbkIsRUFBQWloQixHQUNBLE9BQUE1aUIsS0FBQWtFLEtBQUEsV0FDQWxCLEVBQUEybEIsTUFBQVUsUUFBQTFuQixFQUFBaWhCLEVBQUE1aUIsU0FHQXFnQyxlQUFBLFNBQUExK0IsRUFBQWloQixHQUNBLElBQUF2ZSxFQUFBckUsS0FBQSxHQUNBLEdBQUFxRSxFQUNBLE9BQUFyQixFQUFBMmxCLE1BQUFVLFFBQUExbkIsRUFBQWloQixFQUFBdmUsR0FBQSxNQWNBakQsRUFBQXUrQixTQUNBMzhCLEVBQUFrQixLQUFBLENBQUFzUixNQUFBLFVBQUE0WSxLQUFBLFlBQUEsU0FBQUssRUFBQTVELEdBR0EsSUFBQS9iLEVBQUEsU0FBQTZaLEdBQ0EzbEIsRUFBQTJsQixNQUFBeVgsU0FBQXZWLEVBQUFsQyxFQUFBbGpCLE9BQUF6QyxFQUFBMmxCLE1BQUFrQyxJQUFBbEMsS0FHQTNsQixFQUFBMmxCLE1BQUFySixRQUFBdUwsR0FBQSxDQUNBUCxNQUFBLFdBSUEsSUFBQXBvQixFQUFBbEMsS0FBQWtOLGVBQUFsTixLQUFBSixVQUFBSSxLQUNBc2dDLEVBQUF2ZCxFQUFBeEIsT0FBQXJmLEVBQUEyb0IsR0FFQXlWLEdBQ0FwK0IsRUFBQWlPLGlCQUFBc2UsRUFBQTNmLEdBQUEsR0FFQWlVLEVBQUF4QixPQUFBcmYsRUFBQTJvQixHQUFBeVYsR0FBQSxHQUFBLElBRUE3VixTQUFBLFdBQ0EsSUFBQXZvQixFQUFBbEMsS0FBQWtOLGVBQUFsTixLQUFBSixVQUFBSSxLQUNBc2dDLEVBQUF2ZCxFQUFBeEIsT0FBQXJmLEVBQUEyb0IsR0FBQSxFQUVBeVYsRUFLQXZkLEVBQUF4QixPQUFBcmYsRUFBQTJvQixFQUFBeVYsSUFKQXArQixFQUFBZ2Ysb0JBQUF1TixFQUFBM2YsR0FBQSxHQUNBaVUsRUFBQWhGLE9BQUE3YixFQUFBMm9CLFFBU0EsSUFBQXZWLEdBQUF2VixFQUFBdVYsU0FFQXpULEdBQUEsQ0FBQXVGLEtBQUFzQixLQUFBNGpCLE9BRUFpVSxHQUFBLEtBS0F2OUIsRUFBQXc5QixTQUFBLFNBQUE1ZCxHQUNBLElBQUEzTyxFQUFBd3NCLEVBQ0EsSUFBQTdkLEdBQUEsaUJBQUFBLEVBQ0EsT0FBQSxLQUtBLElBQ0EzTyxHQUFBLElBQUFsVSxFQUFBMmdDLFdBQUFDLGdCQUFBL2QsRUFBQSxZQUNBLE1BQUFuVyxJQVlBLE9BVkFnMEIsRUFBQXhzQixHQUFBQSxFQUFBM0cscUJBQUEsZUFBQSxHQUNBMkcsSUFBQXdzQixHQUNBejlCLEVBQUFvRCxNQUFBLGlCQUNBcTZCLEVBQ0F6OUIsRUFBQW9CLElBQUFxOEIsRUFBQWowQixXQUFBLFNBQUFtQyxHQUNBLE9BQUFBLEVBQUE4RCxjQUNBNUUsS0FBQSxNQUNBK1UsSUFHQTNPLEdBSUEsSUFDQTJzQixHQUFBLFFBQ0FDLEdBQUEsU0FDQUMsR0FBQSx3Q0FDQUMsR0FBQSxxQ0FFQSxTQUFBQyxHQUFBN0ksRUFBQTcyQixFQUFBMi9CLEVBQUF0bEIsR0FDQSxJQUFBdFcsRUFFQSxHQUFBTyxNQUFBQyxRQUFBdkUsR0FHQTBCLEVBQUFrQixLQUFBNUMsRUFBQSxTQUFBYSxFQUFBb2EsR0FDQTBrQixHQUFBTCxHQUFBbnpCLEtBQUEwcUIsR0FHQXhjLEVBQUF3YyxFQUFBNWIsR0FLQXlrQixHQUNBN0ksRUFBQSxLQUFBLGlCQUFBNWIsR0FBQSxNQUFBQSxFQUFBcGEsRUFBQSxJQUFBLElBQ0FvYSxFQUNBMGtCLEVBQ0F0bEIsVUFLQSxHQUFBc2xCLEdBQUEsV0FBQW4rQixFQUFBeEIsR0FVQXFhLEVBQUF3YyxFQUFBNzJCLFFBUEEsSUFBQStELEtBQUEvRCxFQUNBMC9CLEdBQUE3SSxFQUFBLElBQUE5eUIsRUFBQSxJQUFBL0QsRUFBQStELEdBQUE0N0IsRUFBQXRsQixHQVlBM1ksRUFBQWsrQixNQUFBLFNBQUE5M0IsRUFBQTYzQixHQUNBLElBQUE5SSxFQUNBZ0osRUFBQSxHQUNBeGxCLEVBQUEsU0FBQXJOLEVBQUE4eUIsR0FHQSxJQUFBajZCLEVBQUE5RixFQUFBKy9CLEdBQ0FBLElBQ0FBLEVBRUFELEVBQUFBLEVBQUE3OUIsUUFBQSs5QixtQkFBQS95QixHQUFBLElBQ0EreUIsbUJBQUEsTUFBQWw2QixFQUFBLEdBQUFBLElBR0EsR0FBQSxNQUFBaUMsRUFDQSxNQUFBLEdBSUEsR0FBQXhELE1BQUFDLFFBQUF1RCxJQUFBQSxFQUFBNUYsU0FBQVIsRUFBQTJDLGNBQUF5RCxHQUdBcEcsRUFBQWtCLEtBQUFrRixFQUFBLFdBQ0F1UyxFQUFBM2IsS0FBQXFGLEtBQUFyRixLQUFBbUgsY0FPQSxJQUFBZ3hCLEtBQUEvdUIsRUFDQTQzQixHQUFBN0ksRUFBQS91QixFQUFBK3VCLEdBQUE4SSxFQUFBdGxCLEdBS0EsT0FBQXdsQixFQUFBdHpCLEtBQUEsTUFHQTdLLEVBQUFHLEdBQUFnQyxPQUFBLENBQ0FtOEIsVUFBQSxXQUNBLE9BQUF0K0IsRUFBQWsrQixNQUFBbGhDLEtBQUF1aEMsbUJBRUFBLGVBQUEsV0FDQSxPQUFBdmhDLEtBQUFvRSxJQUFBLFdBR0EsSUFBQTZOLEVBQUFqUCxFQUFBNmYsS0FBQTdpQixLQUFBLFlBQ0EsT0FBQWlTLEVBQUFqUCxFQUFBMkQsVUFBQXNMLEdBQUFqUyxPQUNBeVEsT0FBQSxXQUNBLElBQUE5TyxFQUFBM0IsS0FBQTJCLEtBR0EsT0FBQTNCLEtBQUFxRixPQUFBckMsRUFBQWhELE1BQUFxYSxHQUFBLGNBQ0EwbUIsR0FBQXR6QixLQUFBek4sS0FBQXFNLFlBQUF5MEIsR0FBQXJ6QixLQUFBOUwsS0FDQTNCLEtBQUE4VixVQUFBa1EsR0FBQXZZLEtBQUE5TCxNQUNBeUMsSUFBQSxTQUFBb0QsRUFBQW5ELEdBQ0EsSUFBQWpDLEVBQUFZLEVBQUFoRCxNQUFBb0MsTUFFQSxPQUFBLE1BQUFBLEVBQ0EsS0FHQXdELE1BQUFDLFFBQUF6RCxHQUNBWSxFQUFBb0IsSUFBQWhDLEVBQUEsU0FBQUEsR0FDQSxNQUFBLENBQUFpRCxLQUFBaEIsRUFBQWdCLEtBQUE4QixNQUFBL0UsRUFBQThELFFBQUEyNkIsR0FBQSxXQUlBLENBQUF4N0IsS0FBQWhCLEVBQUFnQixLQUFBOEIsTUFBQS9FLEVBQUE4RCxRQUFBMjZCLEdBQUEsV0FDQWw5QixTQUtBLElBQ0E2OUIsR0FBQSxPQUNBQyxHQUFBLE9BQ0FDLEdBQUEsZ0JBQ0FDLEdBQUEsNkJBSUFDLEdBQUEsaUJBQ0FDLEdBQUEsUUFXQW5ILEdBQUEsR0FPQW9ILEdBQUEsR0FHQUMsR0FBQSxLQUFBcmhDLE9BQUEsS0FHQXNoQyxHQUFBcGlDLEVBQUEwQyxjQUFBLEtBS0EsU0FBQTIvQixHQUFBQyxHQUdBLE9BQUEsU0FBQUMsRUFBQS9qQixHQUVBLGlCQUFBK2pCLElBQ0EvakIsRUFBQStqQixFQUNBQSxFQUFBLEtBR0EsSUFBQUMsRUFDQWpnQyxFQUFBLEVBQ0FrZ0MsRUFBQUYsRUFBQTE2QixjQUFBcUYsTUFBQXVQLElBQUEsR0FFQSxHQUFBaGIsRUFBQStjLEdBR0EsS0FBQWdrQixFQUFBQyxFQUFBbGdDLE1BR0EsTUFBQWlnQyxFQUFBLElBQ0FBLEVBQUFBLEVBQUE5aEMsTUFBQSxJQUFBLEtBQ0E0aEMsRUFBQUUsR0FBQUYsRUFBQUUsSUFBQSxJQUFBcndCLFFBQUFxTSxLQUlBOGpCLEVBQUFFLEdBQUFGLEVBQUFFLElBQUEsSUFBQXhoQyxLQUFBd2QsSUFRQSxTQUFBa2tCLEdBQUFKLEVBQUE5OEIsRUFBQTYxQixFQUFBc0gsR0FFQSxJQUFBQyxFQUFBLEdBQ0FDLEVBQUFQLElBQUFKLEdBRUEsU0FBQVksRUFBQU4sR0FDQSxJQUFBcnNCLEVBY0EsT0FiQXlzQixFQUFBSixJQUFBLEVBQ0FwL0IsRUFBQWtCLEtBQUFnK0IsRUFBQUUsSUFBQSxHQUFBLFNBQUFobEIsRUFBQXVsQixHQUNBLElBQUFDLEVBQUFELEVBQUF2OUIsRUFBQTYxQixFQUFBc0gsR0FDQSxNQUFBLGlCQUFBSyxHQUNBSCxHQUFBRCxFQUFBSSxHQUtBSCxJQUNBMXNCLEVBQUE2c0IsUUFEQSxHQUhBeDlCLEVBQUFpOUIsVUFBQXR3QixRQUFBNndCLEdBQ0FGLEVBQUFFLElBQ0EsS0FLQTdzQixFQUdBLE9BQUEyc0IsRUFBQXQ5QixFQUFBaTlCLFVBQUEsTUFBQUcsRUFBQSxNQUFBRSxFQUFBLEtBTUEsU0FBQUcsR0FBQXA5QixFQUFBN0QsR0FDQSxJQUFBME0sRUFBQTVJLEVBQ0FvOUIsRUFBQTkvQixFQUFBKy9CLGFBQUFELGFBQUEsR0FFQSxJQUFBeDBCLEtBQUExTSxPQUNBa0UsSUFBQWxFLEVBQUEwTSxNQUNBdzBCLEVBQUF4MEIsR0FBQTdJLEVBQUFDLElBQUFBLEVBQUEsS0FBQTRJLEdBQUExTSxFQUFBME0sSUFPQSxPQUpBNUksR0FDQTFDLEVBQUFtQyxRQUFBLEVBQUFNLEVBQUFDLEdBR0FELEVBL0VBdThCLEdBQUFyc0IsS0FBQUwsR0FBQUssS0FnUEEzUyxFQUFBbUMsT0FBQSxDQUdBNjlCLE9BQUEsRUFHQUMsYUFBQSxHQUNBQyxLQUFBLEdBRUFILGFBQUEsQ0FDQUksSUFBQTd0QixHQUFBSyxLQUNBaFUsS0FBQSxNQUNBeWhDLFFBeFJBLDREQXdSQTMxQixLQUFBNkgsR0FBQSt0QixVQUNBN2pDLFFBQUEsRUFDQThqQyxhQUFBLEVBQ0FDLE9BQUEsRUFDQUMsWUFBQSxtREFjQUMsUUFBQSxDQUNBakksSUFBQXVHLEdBQ0F4L0IsS0FBQSxhQUNBbXRCLEtBQUEsWUFDQXpiLElBQUEsNEJBQ0F5dkIsS0FBQSxxQ0FHQXZvQixTQUFBLENBQ0FsSCxJQUFBLFVBQ0F5YixLQUFBLFNBQ0FnVSxLQUFBLFlBR0FDLGVBQUEsQ0FDQTF2QixJQUFBLGNBQ0ExUixLQUFBLGVBQ0FtaEMsS0FBQSxnQkFLQUUsV0FBQSxDQUdBQyxTQUFBbjRCLE9BR0FvNEIsYUFBQSxFQUdBQyxZQUFBM2dCLEtBQUFDLE1BR0EyZ0IsV0FBQWhoQyxFQUFBdzlCLFVBT0FzQyxZQUFBLENBQ0FLLEtBQUEsRUFDQWpnQyxTQUFBLElBT0ErZ0MsVUFBQSxTQUFBeCtCLEVBQUF5K0IsR0FDQSxPQUFBQSxFQUdBckIsR0FBQUEsR0FBQXA5QixFQUFBekMsRUFBQSsvQixjQUFBbUIsR0FHQXJCLEdBQUE3L0IsRUFBQSsvQixhQUFBdDlCLElBR0EwK0IsY0FBQWxDLEdBQUF2SCxJQUNBMEosY0FBQW5DLEdBQUFILElBR0F1QyxLQUFBLFNBQUFsQixFQUFBLzlCLEdBR0EsaUJBQUErOUIsSUFDQS85QixFQUFBKzlCLEVBQ0FBLE9BQUFyOUIsR0FJQVYsRUFBQUEsR0FBQSxHQUVBLElBQUFrL0IsRUFHQUMsRUFHQUMsRUFDQUMsRUFHQUMsRUFHQUMsRUFHQTFqQixFQUdBMmpCLEVBR0F6aUMsRUFHQTBpQyxFQUdBMUQsRUFBQW4rQixFQUFBaWhDLFVBQUEsR0FBQTcrQixHQUdBMC9CLEVBQUEzRCxFQUFBaitCLFNBQUFpK0IsRUFHQTRELEVBQUE1RCxFQUFBaitCLFVBQ0E0aEMsRUFBQXZqQyxVQUFBdWpDLEVBQUF0aEMsUUFDQVIsRUFBQThoQyxHQUNBOWhDLEVBQUEybEIsTUFHQW5LLEVBQUF4YixFQUFBbWIsV0FDQTZtQixFQUFBaGlDLEVBQUFrYSxVQUFBLGVBR0ErbkIsRUFBQTlELEVBQUE4RCxZQUFBLEdBR0FDLEVBQUEsR0FDQUMsRUFBQSxHQUdBQyxFQUFBLFdBR0E3QyxFQUFBLENBQ0FsaEIsV0FBQSxFQUdBZ2tCLGtCQUFBLFNBQUEvMkIsR0FDQSxJQUFBeEIsRUFDQSxHQUFBbVUsRUFBQSxDQUNBLElBQUF3akIsRUFFQSxJQURBQSxFQUFBLEdBQ0EzM0IsRUFBQTYwQixHQUFBeDBCLEtBQUFxM0IsSUFDQUMsRUFBQTMzQixFQUFBLEdBQUFyRixjQUFBLE1BQ0FnOUIsRUFBQTMzQixFQUFBLEdBQUFyRixjQUFBLE1BQUEsSUFDQS9HLE9BQUFvTSxFQUFBLElBR0FBLEVBQUEyM0IsRUFBQW4yQixFQUFBN0csY0FBQSxLQUVBLE9BQUEsTUFBQXFGLEVBQUEsS0FBQUEsRUFBQWUsS0FBQSxPQUlBeTNCLHNCQUFBLFdBQ0EsT0FBQXJrQixFQUFBdWpCLEVBQUEsTUFJQWUsaUJBQUEsU0FBQWxnQyxFQUFBOEIsR0FNQSxPQUxBLE1BQUE4WixJQUNBNWIsRUFBQTgvQixFQUFBOS9CLEVBQUFvQyxlQUNBMDlCLEVBQUE5L0IsRUFBQW9DLGdCQUFBcEMsRUFDQTYvQixFQUFBNy9CLEdBQUE4QixHQUVBbkgsTUFJQXdsQyxpQkFBQSxTQUFBN2pDLEdBSUEsT0FIQSxNQUFBc2YsSUFDQWtnQixFQUFBc0UsU0FBQTlqQyxHQUVBM0IsTUFJQWlsQyxXQUFBLFNBQUE3Z0MsR0FDQSxJQUFBcEMsRUFDQSxHQUFBb0MsRUFDQSxHQUFBNmMsRUFHQXNoQixFQUFBaGtCLE9BQUFuYSxFQUFBbStCLEVBQUFtRCxjQUlBLElBQUExakMsS0FBQW9DLEVBQ0E2Z0MsRUFBQWpqQyxHQUFBLENBQUFpakMsRUFBQWpqQyxHQUFBb0MsRUFBQXBDLElBSUEsT0FBQWhDLE1BSUEybEMsTUFBQSxTQUFBQyxHQUNBLElBQUFDLEVBQUFELEdBQUFSLEVBS0EsT0FKQWQsR0FDQUEsRUFBQXFCLE1BQUFFLEdBRUFoOUIsRUFBQSxFQUFBZzlCLEdBQ0E3bEMsT0FvQkEsR0FmQXdlLEVBQUF6QixRQUFBd2xCLEdBS0FwQixFQUFBZ0MsTUFBQUEsR0FBQWhDLEVBQUFnQyxLQUFBN3RCLEdBQUFLLE1BQUEsSUFDQXpQLFFBQUEyN0IsR0FBQXZzQixHQUFBK3RCLFNBQUEsTUFHQWxDLEVBQUF4L0IsS0FBQXlELEVBQUEwWCxRQUFBMVgsRUFBQXpELE1BQUF3L0IsRUFBQXJrQixRQUFBcWtCLEVBQUF4L0IsS0FHQXcvQixFQUFBa0IsV0FBQWxCLEVBQUFpQixVQUFBLEtBQUEzNkIsY0FBQXFGLE1BQUF1UCxJQUFBLENBQUEsSUFHQSxNQUFBOGtCLEVBQUEyRSxZQUFBLENBQ0FuQixFQUFBL2tDLEVBQUEwQyxjQUFBLEtBS0EsSUFDQXFpQyxFQUFBaHZCLEtBQUF3ckIsRUFBQWdDLElBSUF3QixFQUFBaHZCLEtBQUFndkIsRUFBQWh2QixLQUNBd3JCLEVBQUEyRSxZQUFBOUQsR0FBQXFCLFNBQUEsS0FBQXJCLEdBQUErRCxNQUNBcEIsRUFBQXRCLFNBQUEsS0FBQXNCLEVBQUFvQixLQUNBLE1BQUF0NUIsR0FJQTAwQixFQUFBMkUsYUFBQSxHQWFBLEdBUkEzRSxFQUFBdmUsTUFBQXVlLEVBQUFtQyxhQUFBLGlCQUFBbkMsRUFBQXZlLE9BQ0F1ZSxFQUFBdmUsS0FBQTVmLEVBQUFrK0IsTUFBQUMsRUFBQXZlLEtBQUF1ZSxFQUFBRixjQUlBcUIsR0FBQTVILEdBQUF5RyxFQUFBLzdCLEVBQUFtOUIsR0FHQXRoQixFQUNBLE9BQUFzaEIsRUE4RUEsSUFBQXBnQyxLQXpFQXlpQyxFQUFBNWhDLEVBQUEybEIsT0FBQXdZLEVBQUEzaEMsU0FHQSxHQUFBd0QsRUFBQWdnQyxVQUNBaGdDLEVBQUEybEIsTUFBQVUsUUFBQSxhQUlBOFgsRUFBQXgvQixLQUFBdy9CLEVBQUF4L0IsS0FBQXVnQixjQUdBaWYsRUFBQTZFLFlBQUFwRSxHQUFBbjBCLEtBQUEwekIsRUFBQXgvQixNQUtBNGlDLEVBQUFwRCxFQUFBZ0MsSUFBQWo5QixRQUFBdTdCLEdBQUEsSUFHQU4sRUFBQTZFLFdBd0JBN0UsRUFBQXZlLE1BQUF1ZSxFQUFBbUMsYUFDQSxLQUFBbkMsRUFBQXFDLGFBQUEsSUFBQTNpQyxRQUFBLHVDQUNBc2dDLEVBQUF2ZSxLQUFBdWUsRUFBQXZlLEtBQUExYyxRQUFBczdCLEdBQUEsT0F2QkFxRCxFQUFBMUQsRUFBQWdDLElBQUE3aUMsTUFBQWlrQyxFQUFBamhDLFFBR0E2OUIsRUFBQXZlLE9BQUF1ZSxFQUFBbUMsYUFBQSxpQkFBQW5DLEVBQUF2ZSxRQUNBMmhCLElBQUFoRSxHQUFBOXlCLEtBQUE4MkIsR0FBQSxJQUFBLEtBQUFwRCxFQUFBdmUsWUFHQXVlLEVBQUF2ZSxPQUlBLElBQUF1ZSxFQUFBOXlCLFFBQ0FrMkIsRUFBQUEsRUFBQXIrQixRQUFBdzdCLEdBQUEsTUFDQW1ELEdBQUF0RSxHQUFBOXlCLEtBQUE4MkIsR0FBQSxJQUFBLEtBQUEsS0FBQTFpQyxHQUFBdUYsT0FDQXk5QixHQUlBMUQsRUFBQWdDLElBQUFvQixFQUFBTSxHQVNBMUQsRUFBQThFLGFBQ0FqakMsRUFBQWlnQyxhQUFBc0IsSUFDQWhDLEVBQUFnRCxpQkFBQSxvQkFBQXZpQyxFQUFBaWdDLGFBQUFzQixJQUVBdmhDLEVBQUFrZ0MsS0FBQXFCLElBQ0FoQyxFQUFBZ0QsaUJBQUEsZ0JBQUF2aUMsRUFBQWtnQyxLQUFBcUIsTUFLQXBELEVBQUF2ZSxNQUFBdWUsRUFBQTZFLGFBQUEsSUFBQTdFLEVBQUFxQyxhQUFBcCtCLEVBQUFvK0IsY0FDQWpCLEVBQUFnRCxpQkFBQSxlQUFBcEUsRUFBQXFDLGFBSUFqQixFQUFBZ0QsaUJBQ0EsU0FDQXBFLEVBQUFrQixVQUFBLElBQUFsQixFQUFBc0MsUUFBQXRDLEVBQUFrQixVQUFBLElBQ0FsQixFQUFBc0MsUUFBQXRDLEVBQUFrQixVQUFBLEtBQ0EsTUFBQWxCLEVBQUFrQixVQUFBLEdBQUEsS0FBQU4sR0FBQSxXQUFBLElBQ0FaLEVBQUFzQyxRQUFBLE1BSUF0QyxFQUFBK0UsUUFDQTNELEVBQUFnRCxpQkFBQXBqQyxFQUFBZy9CLEVBQUErRSxRQUFBL2pDLElBSUEsR0FBQWcvQixFQUFBZ0YsY0FDQSxJQUFBaEYsRUFBQWdGLFdBQUExbEMsS0FBQXFrQyxFQUFBdkMsRUFBQXBCLElBQUFsZ0IsR0FHQSxPQUFBc2hCLEVBQUFvRCxRQWVBLEdBWEFQLEVBQUEsUUFHQUosRUFBQXJwQixJQUFBd2xCLEVBQUE5RixVQUNBa0gsRUFBQTE1QixLQUFBczRCLEVBQUFpRixTQUNBN0QsRUFBQXZsQixLQUFBbWtCLEVBQUEvNkIsT0FHQWsrQixFQUFBaEMsR0FBQVIsR0FBQVgsRUFBQS83QixFQUFBbTlCLEdBS0EsQ0FTQSxHQVJBQSxFQUFBbGhCLFdBQUEsRUFHQXVqQixHQUNBRyxFQUFBMWIsUUFBQSxXQUFBLENBQUFrWixFQUFBcEIsSUFJQWxnQixFQUNBLE9BQUFzaEIsRUFJQXBCLEVBQUFvQyxPQUFBLEVBQUFwQyxFQUFBMUQsVUFDQWlILEVBQUEza0MsRUFBQWtnQixXQUFBLFdBQ0FzaUIsRUFBQW9ELE1BQUEsWUFDQXhFLEVBQUExRCxVQUdBLElBQ0F4YyxHQUFBLEVBQ0FxakIsRUFBQStCLEtBQUFuQixFQUFBcjhCLEdBQ0EsTUFBQTRELEdBR0EsR0FBQXdVLEVBQ0EsTUFBQXhVLEVBSUE1RCxHQUFBLEVBQUE0RCxTQWhDQTVELEdBQUEsRUFBQSxnQkFxQ0EsU0FBQUEsRUFBQTY4QixFQUFBWSxFQUFBQyxFQUFBTCxHQUNBLElBQUFNLEVBQUFKLEVBQUFoZ0MsRUFBQXFnQyxFQUFBQyxFQUNBZCxFQUFBVSxFQUdBcmxCLElBSUFBLEdBQUEsRUFHQXlqQixHQUNBM2tDLEVBQUEyOUIsYUFBQWdILEdBS0FKLE9BQUF4K0IsRUFHQTArQixFQUFBMEIsR0FBQSxHQUdBM0QsRUFBQWxoQixXQUFBLEVBQUFxa0IsRUFBQSxFQUFBLEVBR0FjLEVBQUEsS0FBQWQsR0FBQUEsRUFBQSxLQUFBLE1BQUFBLEVBR0FhLElBQ0FFLEVBN2xCQSxTQUFBdEYsRUFBQW9CLEVBQUFnRSxHQU9BLElBTEEsSUFBQUksRUFBQWhsQyxFQUFBaWxDLEVBQUFDLEVBQ0ExckIsRUFBQWdtQixFQUFBaG1CLFNBQ0FrbkIsRUFBQWxCLEVBQUFrQixVQUdBLE1BQUFBLEVBQUEsSUFDQUEsRUFBQTd6QixhQUNBMUksSUFBQTZnQyxJQUNBQSxFQUFBeEYsRUFBQXNFLFVBQUFsRCxFQUFBOEMsa0JBQUEsaUJBS0EsR0FBQXNCLEVBQ0EsSUFBQWhsQyxLQUFBd1osRUFDQSxHQUFBQSxFQUFBeFosSUFBQXdaLEVBQUF4WixHQUFBOEwsS0FBQWs1QixHQUFBLENBQ0F0RSxFQUFBdHdCLFFBQUFwUSxHQUNBLE1BTUEsR0FBQTBnQyxFQUFBLEtBQUFrRSxFQUNBSyxFQUFBdkUsRUFBQSxPQUNBLENBR0EsSUFBQTFnQyxLQUFBNGtDLEVBQUEsQ0FDQSxJQUFBbEUsRUFBQSxJQUFBbEIsRUFBQXlDLFdBQUFqaUMsRUFBQSxJQUFBMGdDLEVBQUEsSUFBQSxDQUNBdUUsRUFBQWpsQyxFQUNBLE1BRUFrbEMsSUFDQUEsRUFBQWxsQyxHQUtBaWxDLEVBQUFBLEdBQUFDLEVBTUEsR0FBQUQsRUFJQSxPQUhBQSxJQUFBdkUsRUFBQSxJQUNBQSxFQUFBdHdCLFFBQUE2MEIsR0FFQUwsRUFBQUssR0EwaUJBRSxDQUFBM0YsRUFBQW9CLEVBQUFnRSxLQUlBQyxJQUNBLEVBQUF4akMsRUFBQTZELFFBQUEsU0FBQXM2QixFQUFBa0IsWUFDQXIvQixFQUFBNkQsUUFBQSxPQUFBczZCLEVBQUFrQixXQUFBLElBQ0FsQixFQUFBeUMsV0FBQSxlQUFBLGNBSUE2QyxFQTlpQkEsU0FBQXRGLEVBQUFzRixFQUFBbEUsRUFBQWlFLEdBQ0EsSUFBQU8sRUFBQUMsRUFBQUMsRUFBQW4yQixFQUFBc0ssRUFDQXdvQixFQUFBLEdBR0F2QixFQUFBbEIsRUFBQWtCLFVBQUEvaEMsUUFHQSxHQUFBK2hDLEVBQUEsR0FDQSxJQUFBNEUsS0FBQTlGLEVBQUF5QyxXQUNBQSxFQUFBcUQsRUFBQXgvQixlQUFBMDVCLEVBQUF5QyxXQUFBcUQsR0FPQSxJQUhBRCxFQUFBM0UsRUFBQTd6QixRQUdBdzRCLEdBY0EsR0FaQTdGLEVBQUF3QyxlQUFBcUQsS0FDQXpFLEVBQUFwQixFQUFBd0MsZUFBQXFELElBQUFQLElBSUFyckIsR0FBQW9yQixHQUFBckYsRUFBQStGLGFBQ0FULEVBQUF0RixFQUFBK0YsV0FBQVQsRUFBQXRGLEVBQUFpQixXQUdBaG5CLEVBQUE0ckIsRUFDQUEsRUFBQTNFLEVBQUE3ekIsUUFLQSxHQUFBLE1BQUF3NEIsRUFFQUEsRUFBQTVyQixPQUdBLEdBQUEsTUFBQUEsR0FBQUEsSUFBQTRyQixFQUFBLENBTUEsS0FIQUMsRUFBQXJELEVBQUF4b0IsRUFBQSxJQUFBNHJCLElBQUFwRCxFQUFBLEtBQUFvRCxJQUlBLElBQUFELEtBQUFuRCxFQUlBLElBREE5eUIsRUFBQWkyQixFQUFBeC9CLE1BQUEsTUFDQSxLQUFBeS9CLElBR0FDLEVBQUFyRCxFQUFBeG9CLEVBQUEsSUFBQXRLLEVBQUEsS0FDQTh5QixFQUFBLEtBQUE5eUIsRUFBQSxLQUNBLEVBR0EsSUFBQW0yQixFQUNBQSxFQUFBckQsRUFBQW1ELElBR0EsSUFBQW5ELEVBQUFtRCxLQUNBQyxFQUFBbDJCLEVBQUEsR0FDQXV4QixFQUFBdHdCLFFBQUFqQixFQUFBLEtBRUEsTUFPQSxJQUFBLElBQUFtMkIsRUFHQSxHQUFBQSxHQUFBOUYsRUFBQWdHLE9BQ0FWLEVBQUFRLEVBQUFSLFFBRUEsSUFDQUEsRUFBQVEsRUFBQVIsR0FDQSxNQUFBaDZCLEdBQ0EsTUFBQSxDQUNBNlIsTUFBQSxjQUNBbFksTUFBQTZnQyxFQUFBeDZCLEVBQUEsc0JBQUEyTyxFQUFBLE9BQUE0ckIsSUFTQSxNQUFBLENBQUExb0IsTUFBQSxVQUFBc0UsS0FBQTZqQixHQWlkQVcsQ0FBQWpHLEVBQUFzRixFQUFBbEUsRUFBQWlFLEdBR0FBLEdBR0FyRixFQUFBOEUsY0FDQVMsRUFBQW5FLEVBQUE4QyxrQkFBQSxvQkFFQXJpQyxFQUFBaWdDLGFBQUFzQixHQUFBbUMsSUFFQUEsRUFBQW5FLEVBQUE4QyxrQkFBQSxXQUVBcmlDLEVBQUFrZ0MsS0FBQXFCLEdBQUFtQyxJQUtBLE1BQUFoQixHQUFBLFNBQUF2RSxFQUFBeC9CLEtBQ0Fpa0MsRUFBQSxZQUdBLE1BQUFGLEVBQ0FFLEVBQUEsZUFJQUEsRUFBQWEsRUFBQW5vQixNQUNBOG5CLEVBQUFLLEVBQUE3akIsS0FFQTRqQixJQURBcGdDLEVBQUFxZ0MsRUFBQXJnQyxVQU1BQSxFQUFBdy9CLEdBQ0FGLEdBQUFFLElBQ0FBLEVBQUEsUUFDQUYsRUFBQSxJQUNBQSxFQUFBLEtBTUFuRCxFQUFBbUQsT0FBQUEsRUFDQW5ELEVBQUFxRCxZQUFBVSxHQUFBVixHQUFBLEdBR0FZLEVBQ0Fob0IsRUFBQW1CLFlBQUFtbEIsRUFBQSxDQUFBc0IsRUFBQVIsRUFBQXJELElBRUEvakIsRUFBQXVCLFdBQUEra0IsRUFBQSxDQUFBdkMsRUFBQXFELEVBQUF4L0IsSUFJQW04QixFQUFBMEMsV0FBQUEsR0FDQUEsT0FBQW4vQixFQUVBOCtCLEdBQ0FHLEVBQUExYixRQUFBbWQsRUFBQSxjQUFBLFlBQ0EsQ0FBQWpFLEVBQUFwQixFQUFBcUYsRUFBQUosRUFBQWhnQyxJQUlBNCtCLEVBQUE5bUIsU0FBQTRtQixFQUFBLENBQUF2QyxFQUFBcUQsSUFFQWhCLElBQ0FHLEVBQUExYixRQUFBLGVBQUEsQ0FBQWtaLEVBQUFwQixNQUdBbitCLEVBQUFnZ0MsUUFDQWhnQyxFQUFBMmxCLE1BQUFVLFFBQUEsY0FLQSxPQUFBa1osR0FHQThFLFFBQUEsU0FBQWxFLEVBQUF2Z0IsRUFBQXplLEdBQ0EsT0FBQW5CLEVBQUFXLElBQUF3L0IsRUFBQXZnQixFQUFBemUsRUFBQSxTQUdBbWpDLFVBQUEsU0FBQW5FLEVBQUFoL0IsR0FDQSxPQUFBbkIsRUFBQVcsSUFBQXcvQixPQUFBcjlCLEVBQUEzQixFQUFBLGFBSUFuQixFQUFBa0IsS0FBQSxDQUFBLE1BQUEsUUFBQSxTQUFBc0QsRUFBQXNWLEdBQ0E5WixFQUFBOFosR0FBQSxTQUFBcW1CLEVBQUF2Z0IsRUFBQXplLEVBQUF4QyxHQVVBLE9BUEFOLEVBQUF1aEIsS0FDQWpoQixFQUFBQSxHQUFBd0MsRUFDQUEsRUFBQXllLEVBQ0FBLE9BQUE5YyxHQUlBOUMsRUFBQXFoQyxLQUFBcmhDLEVBQUFtQyxPQUFBLENBQ0FnK0IsSUFBQUEsRUFDQXhoQyxLQUFBbWIsRUFDQXNsQixTQUFBemdDLEVBQ0FpaEIsS0FBQUEsRUFDQXdqQixRQUFBamlDLEdBQ0FuQixFQUFBMkMsY0FBQXc5QixJQUFBQSxPQUlBbmdDLEVBQUFtaEMsY0FBQSxTQUFBaEQsR0FDQSxJQUFBaC9CLEVBQ0EsSUFBQUEsS0FBQWcvQixFQUFBK0UsUUFDQSxpQkFBQS9qQyxFQUFBc0YsZ0JBQ0EwNUIsRUFBQXFDLFlBQUFyQyxFQUFBK0UsUUFBQS9qQyxJQUFBLE1BTUFhLEVBQUEyc0IsU0FBQSxTQUFBd1QsRUFBQS85QixFQUFBbEQsR0FDQSxPQUFBYyxFQUFBcWhDLEtBQUEsQ0FDQWxCLElBQUFBLEVBR0F4aEMsS0FBQSxNQUNBeWdDLFNBQUEsU0FDQS96QixPQUFBLEVBQ0FrMUIsT0FBQSxFQUNBL2pDLFFBQUEsRUFLQW9rQyxXQUFBLENBQ0EyRCxjQUFBLGNBRUFMLFdBQUEsU0FBQVQsR0FDQXpqQyxFQUFBMEQsV0FBQSsvQixFQUFBcmhDLEVBQUFsRCxPQU1BYyxFQUFBRyxHQUFBZ0MsT0FBQSxDQUNBcWlDLFFBQUEsU0FBQTlYLEdBQ0EsSUFBQS9ILEVBeUJBLE9BdkJBM25CLEtBQUEsS0FDQXFCLEVBQUFxdUIsS0FDQUEsRUFBQUEsRUFBQWp2QixLQUFBVCxLQUFBLEtBSUEybkIsRUFBQTNrQixFQUFBMHNCLEVBQUExdkIsS0FBQSxHQUFBa04sZUFBQTFJLEdBQUEsR0FBQWdCLE9BQUEsR0FFQXhGLEtBQUEsR0FBQTRDLFlBQ0Era0IsRUFBQTJJLGFBQUF0d0IsS0FBQSxJQUdBMm5CLEVBQUF2akIsSUFBQSxXQUdBLElBRkEsSUFBQUMsRUFBQXJFLEtBRUFxRSxFQUFBb2pDLG1CQUNBcGpDLEVBQUFBLEVBQUFvakMsa0JBR0EsT0FBQXBqQyxJQUNBK3JCLE9BQUFwd0IsT0FHQUEsTUFHQTBuQyxVQUFBLFNBQUFoWSxHQUNBLE9BQUFydUIsRUFBQXF1QixHQUNBMXZCLEtBQUFrRSxLQUFBLFNBQUEvQixHQUNBYSxFQUFBaEQsTUFBQTBuQyxVQUFBaFksRUFBQWp2QixLQUFBVCxLQUFBbUMsTUFJQW5DLEtBQUFrRSxLQUFBLFdBQ0EsSUFBQTBXLEVBQUE1WCxFQUFBaEQsTUFDQW1iLEVBQUFQLEVBQUFPLFdBRUFBLEVBQUE3WCxPQUNBNlgsRUFBQXFzQixRQUFBOVgsR0FHQTlVLEVBQUF3VixPQUFBVixNQUtBL0gsS0FBQSxTQUFBK0gsR0FDQSxJQUFBaVksRUFBQXRtQyxFQUFBcXVCLEdBRUEsT0FBQTF2QixLQUFBa0UsS0FBQSxTQUFBL0IsR0FDQWEsRUFBQWhELE1BQUF3bkMsUUFBQUcsRUFBQWpZLEVBQUFqdkIsS0FBQVQsS0FBQW1DLEdBQUF1dEIsTUFJQWtZLE9BQUEsU0FBQTNrQyxHQUlBLE9BSEFqRCxLQUFBc1UsT0FBQXJSLEdBQUE4UixJQUFBLFFBQUE3USxLQUFBLFdBQ0FsQixFQUFBaEQsTUFBQXl3QixZQUFBendCLEtBQUF3TSxjQUVBeE0sUUFLQWdELEVBQUFnUCxLQUFBbkksUUFBQWd3QixPQUFBLFNBQUF4MUIsR0FDQSxPQUFBckIsRUFBQWdQLEtBQUFuSSxRQUFBZytCLFFBQUF4akMsSUFFQXJCLEVBQUFnUCxLQUFBbkksUUFBQWcrQixRQUFBLFNBQUF4akMsR0FDQSxTQUFBQSxFQUFBNnVCLGFBQUE3dUIsRUFBQWd3QixjQUFBaHdCLEVBQUE4eEIsaUJBQUE3eUIsU0FNQU4sRUFBQSsvQixhQUFBK0UsSUFBQSxXQUNBLElBQ0EsT0FBQSxJQUFBL25DLEVBQUFnb0MsZUFDQSxNQUFBdDdCLE1BR0EsSUFBQXU3QixHQUFBLENBR0FDLEVBQUEsSUFJQUMsS0FBQSxLQUVBQyxHQUFBbmxDLEVBQUErL0IsYUFBQStFLE1BRUExbUMsRUFBQWduQyxPQUFBRCxJQUFBLG9CQUFBQSxHQUNBL21DLEVBQUFpakMsS0FBQThELEtBQUFBLEdBRUFubEMsRUFBQW9oQyxjQUFBLFNBQUFoL0IsR0FDQSxJQUFBakIsRUFBQWtrQyxFQUdBLEdBQUFqbkMsRUFBQWduQyxNQUFBRCxLQUFBL2lDLEVBQUEwZ0MsWUFDQSxNQUFBLENBQ0FPLEtBQUEsU0FBQUgsRUFBQTdLLEdBQ0EsSUFBQWw1QixFQUNBMmxDLEVBQUExaUMsRUFBQTBpQyxNQVdBLEdBVEFBLEVBQUFRLEtBQ0FsakMsRUFBQXpELEtBQ0F5RCxFQUFBKzlCLElBQ0EvOUIsRUFBQW0rQixNQUNBbitCLEVBQUFtakMsU0FDQW5qQyxFQUFBc1IsVUFJQXRSLEVBQUFvakMsVUFDQSxJQUFBcm1DLEtBQUFpRCxFQUFBb2pDLFVBQ0FWLEVBQUEzbEMsR0FBQWlELEVBQUFvakMsVUFBQXJtQyxHQW1CQSxJQUFBQSxLQWRBaUQsRUFBQXFnQyxVQUFBcUMsRUFBQXRDLGtCQUNBc0MsRUFBQXRDLGlCQUFBcGdDLEVBQUFxZ0MsVUFRQXJnQyxFQUFBMGdDLGFBQUFJLEVBQUEsc0JBQ0FBLEVBQUEsb0JBQUEsa0JBSUFBLEVBQ0E0QixFQUFBdkMsaUJBQUFwakMsRUFBQStqQyxFQUFBL2pDLElBSUFnQyxFQUFBLFNBQUF4QyxHQUNBLE9BQUEsV0FDQXdDLElBQ0FBLEVBQUFra0MsRUFBQVAsRUFBQVcsT0FDQVgsRUFBQVksUUFBQVosRUFBQWEsUUFBQWIsRUFBQWMsVUFDQWQsRUFBQWUsbUJBQUEsS0FFQSxVQUFBbG5DLEVBQ0FtbUMsRUFBQW5DLFFBQ0EsVUFBQWhrQyxFQUtBLGlCQUFBbW1DLEVBQUFwQyxPQUNBckssRUFBQSxFQUFBLFNBRUFBLEVBR0F5TSxFQUFBcEMsT0FDQW9DLEVBQUFsQyxZQUlBdkssRUFDQTJNLEdBQUFGLEVBQUFwQyxTQUFBb0MsRUFBQXBDLE9BQ0FvQyxFQUFBbEMsV0FLQSxVQUFBa0MsRUFBQWdCLGNBQUEsU0FDQSxpQkFBQWhCLEVBQUFpQixhQUNBLENBQUFDLE9BQUFsQixFQUFBckIsVUFDQSxDQUFBbGtDLEtBQUF1bEMsRUFBQWlCLGNBQ0FqQixFQUFBeEMsNEJBUUF3QyxFQUFBVyxPQUFBdGtDLElBQ0Fra0MsRUFBQVAsRUFBQVksUUFBQVosRUFBQWMsVUFBQXprQyxFQUFBLGNBS0EyQixJQUFBZ2lDLEVBQUFhLFFBQ0FiLEVBQUFhLFFBQUFOLEVBRUFQLEVBQUFlLG1CQUFBLFdBR0EsSUFBQWYsRUFBQXptQixZQU1BdGhCLEVBQUFrZ0IsV0FBQSxXQUNBOWIsR0FDQWtrQyxPQVFBbGtDLEVBQUFBLEVBQUEsU0FFQSxJQUdBMmpDLEVBQUF6QixLQUFBamhDLEVBQUE0Z0MsWUFBQTVnQyxFQUFBd2QsTUFBQSxNQUNBLE1BQUFuVyxHQUdBLEdBQUF0SSxFQUNBLE1BQUFzSSxJQUtBazVCLE1BQUEsV0FDQXhoQyxHQUNBQSxRQVdBbkIsRUFBQW1oQyxjQUFBLFNBQUFoRCxHQUNBQSxFQUFBMkUsY0FDQTNFLEVBQUFobUIsU0FBQTlZLFFBQUEsS0FLQVcsRUFBQWloQyxVQUFBLENBQ0FSLFFBQUEsQ0FDQXBoQyxPQUFBLDZGQUdBOFksU0FBQSxDQUNBOVksT0FBQSwyQkFFQXVoQyxXQUFBLENBQ0EyRCxjQUFBLFNBQUFobEMsR0FFQSxPQURBUyxFQUFBMEQsV0FBQW5FLEdBQ0FBLE1BTUFTLEVBQUFtaEMsY0FBQSxTQUFBLFNBQUFoRCxRQUNBcjdCLElBQUFxN0IsRUFBQTl5QixRQUNBOHlCLEVBQUE5eUIsT0FBQSxHQUVBOHlCLEVBQUEyRSxjQUNBM0UsRUFBQXgvQixLQUFBLFNBS0FxQixFQUFBb2hDLGNBQUEsU0FBQSxTQUFBakQsR0FJQSxJQUFBOStCLEVBQUE4QixFQURBLEdBQUFnOUIsRUFBQTJFLGFBQUEzRSxFQUFBOEgsWUFFQSxNQUFBLENBQ0E1QyxLQUFBLFNBQUFqcEIsRUFBQWllLEdBQ0FoNUIsRUFBQVcsRUFBQSxZQUNBa1AsS0FBQWl2QixFQUFBOEgsYUFBQSxJQUNBcG1CLEtBQUEsQ0FBQXFtQixRQUFBL0gsRUFBQWdJLGNBQUF2bkMsSUFBQXUvQixFQUFBZ0MsTUFDQTVhLEdBQUEsYUFBQXBrQixFQUFBLFNBQUFpbEMsR0FDQS9tQyxFQUFBMGIsU0FDQTVaLEVBQUEsS0FDQWlsQyxHQUNBL04sRUFBQSxVQUFBK04sRUFBQXpuQyxLQUFBLElBQUEsSUFBQXluQyxFQUFBem5DLFFBS0EvQixFQUFBOEMsS0FBQUMsWUFBQU4sRUFBQSxLQUVBc2pDLE1BQUEsV0FDQXhoQyxHQUNBQSxRQVVBLElBcUdBeWhCLEdBckdBeWpCLEdBQUEsR0FDQUMsR0FBQSxvQkFHQXRtQyxFQUFBaWhDLFVBQUEsQ0FDQXNGLE1BQUEsV0FDQUMsY0FBQSxXQUNBLElBQUFybEMsRUFBQWtsQyxHQUFBLy9CLE9BQUF0RyxFQUFBK0MsUUFBQSxJQUFBbEUsR0FBQXVGLE9BRUEsT0FEQXBILEtBQUFtRSxJQUFBLEVBQ0FBLEtBS0FuQixFQUFBbWhDLGNBQUEsYUFBQSxTQUFBaEQsRUFBQXNJLEVBQUFsSCxHQUVBLElBQUFtSCxFQUFBQyxFQUFBQyxFQUNBQyxHQUFBLElBQUExSSxFQUFBb0ksUUFBQUQsR0FBQTc3QixLQUFBMHpCLEVBQUFnQyxLQUNBLE1BQ0EsaUJBQUFoQyxFQUFBdmUsTUFFQSxLQURBdWUsRUFBQXFDLGFBQUEsSUFDQTNpQyxRQUFBLHNDQUNBeW9DLEdBQUE3N0IsS0FBQTB6QixFQUFBdmUsT0FBQSxRQUlBLEdBQUFpbkIsR0FBQSxVQUFBMUksRUFBQWtCLFVBQUEsR0E4REEsT0EzREFxSCxFQUFBdkksRUFBQXFJLGNBQUFub0MsRUFBQTgvQixFQUFBcUksZUFDQXJJLEVBQUFxSSxnQkFDQXJJLEVBQUFxSSxjQUdBSyxFQUNBMUksRUFBQTBJLEdBQUExSSxFQUFBMEksR0FBQTNqQyxRQUFBb2pDLEdBQUEsS0FBQUksSUFDQSxJQUFBdkksRUFBQW9JLFFBQ0FwSSxFQUFBZ0MsTUFBQTVDLEdBQUE5eUIsS0FBQTB6QixFQUFBZ0MsS0FBQSxJQUFBLEtBQUFoQyxFQUFBb0ksTUFBQSxJQUFBRyxHQUlBdkksRUFBQXlDLFdBQUEsZUFBQSxXQUlBLE9BSEFnRyxHQUNBNW1DLEVBQUFvRCxNQUFBc2pDLEVBQUEsbUJBRUFFLEVBQUEsSUFJQXpJLEVBQUFrQixVQUFBLEdBQUEsT0FHQXNILEVBQUE1cEMsRUFBQTJwQyxHQUNBM3BDLEVBQUEycEMsR0FBQSxXQUNBRSxFQUFBdGxDLFdBSUFpK0IsRUFBQWhrQixPQUFBLGdCQUdBelksSUFBQTZqQyxFQUNBM21DLEVBQUFqRCxHQUFBMitCLFdBQUFnTCxHQUlBM3BDLEVBQUEycEMsR0FBQUMsRUFJQXhJLEVBQUF1SSxLQUdBdkksRUFBQXFJLGNBQUFDLEVBQUFELGNBR0FILEdBQUF6b0MsS0FBQThvQyxJQUlBRSxHQUFBdm9DLEVBQUFzb0MsSUFDQUEsRUFBQUMsRUFBQSxJQUdBQSxFQUFBRCxPQUFBN2pDLElBSUEsV0FZQTFFLEVBQUEwb0MscUJBQ0Fsa0IsR0FBQWhtQixFQUFBbXFDLGVBQUFELG1CQUFBLElBQUFsa0IsTUFDQTVVLFVBQUEsNkJBQ0EsSUFBQTRVLEdBQUFwWixXQUFBbEosUUFRQU4sRUFBQStYLFVBQUEsU0FBQTZILEVBQUExZixFQUFBOG1DLEdBQ0EsTUFBQSxpQkFBQXBuQixFQUNBLElBRUEsa0JBQUExZixJQUNBOG1DLEVBQUE5bUMsRUFDQUEsR0FBQSxHQUtBQSxJQUlBOUIsRUFBQTBvQyxxQkFNQTl5QixHQUxBOVQsRUFBQXRELEVBQUFtcUMsZUFBQUQsbUJBQUEsS0FLQXhuQyxjQUFBLFNBQ0FxVCxLQUFBL1YsRUFBQTBWLFNBQUFLLEtBQ0F6UyxFQUFBUixLQUFBQyxZQUFBcVUsSUFFQTlULEVBQUF0RCxHQUtBNG5CLEdBQUF3aUIsR0FBQSxJQURBQyxFQUFBeHZCLEVBQUF0TixLQUFBeVYsSUFLQSxDQUFBMWYsRUFBQVosY0FBQTJuQyxFQUFBLE1BR0FBLEVBQUExaUIsR0FBQSxDQUFBM0UsR0FBQTFmLEVBQUFza0IsR0FFQUEsR0FBQUEsRUFBQWxrQixRQUNBTixFQUFBd2tCLEdBQUF6SixTQUdBL2EsRUFBQWdCLE1BQUEsR0FBQWltQyxFQUFBejlCLGNBbENBLElBQUF3SyxFQUFBaXpCLEVBQUF6aUIsR0F5Q0F4a0IsRUFBQUcsR0FBQXlvQixLQUFBLFNBQUF1WCxFQUFBK0csRUFBQS9sQyxHQUNBLElBQUFsQixFQUFBdEIsRUFBQThrQyxFQUNBN3JCLEVBQUE1YSxLQUNBNG9CLEVBQUF1YSxFQUFBdGlDLFFBQUEsS0FzREEsT0FwREEsRUFBQStuQixJQUNBM2xCLEVBQUFzN0IsR0FBQTRFLEVBQUE3aUMsTUFBQXNvQixJQUNBdWEsRUFBQUEsRUFBQTdpQyxNQUFBLEVBQUFzb0IsSUFJQXZuQixFQUFBNm9DLElBR0EvbEMsRUFBQStsQyxFQUNBQSxPQUFBcGtDLEdBR0Fva0MsR0FBQSxpQkFBQUEsSUFDQXZvQyxFQUFBLFFBSUEsRUFBQWlaLEVBQUF0WCxRQUNBTixFQUFBcWhDLEtBQUEsQ0FDQWxCLElBQUFBLEVBS0F4aEMsS0FBQUEsR0FBQSxNQUNBeWdDLFNBQUEsT0FDQXhmLEtBQUFzbkIsSUFDQXJoQyxLQUFBLFNBQUFrZ0MsR0FHQXRDLEVBQUFuaUMsVUFFQXNXLEVBQUE4VSxLQUFBenNCLEVBSUFELEVBQUEsU0FBQW90QixPQUFBcHRCLEVBQUErWCxVQUFBZ3VCLElBQUFwNEIsS0FBQTFOLEdBR0E4bEMsS0FLQXhxQixPQUFBcGEsR0FBQSxTQUFBbytCLEVBQUFtRCxHQUNBOXFCLEVBQUExVyxLQUFBLFdBQ0FDLEVBQUF4RCxNQUFBWCxLQUFBeW1DLEdBQUEsQ0FBQWxFLEVBQUF3RyxhQUFBckQsRUFBQW5ELFFBS0F2aUMsTUFNQWdELEVBQUFnUCxLQUFBbkksUUFBQXNnQyxTQUFBLFNBQUE5bEMsR0FDQSxPQUFBckIsRUFBQTJCLEtBQUEzQixFQUFBNjVCLE9BQUEsU0FBQTE1QixHQUNBLE9BQUFrQixJQUFBbEIsRUFBQWtCLE9BQ0FmLFFBTUFOLEVBQUFvbkMsT0FBQSxDQUNBQyxVQUFBLFNBQUFobUMsRUFBQWUsRUFBQWpELEdBQ0EsSUFBQW1vQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUNBM1gsRUFBQWh3QixFQUFBNGhCLElBQUF2Z0IsRUFBQSxZQUNBdW1DLEVBQUE1bkMsRUFBQXFCLEdBQ0E0bkIsRUFBQSxHQUdBLFdBQUErRyxJQUNBM3VCLEVBQUFxZ0IsTUFBQXNPLFNBQUEsWUFHQTBYLEVBQUFFLEVBQUFSLFNBQ0FJLEVBQUF4bkMsRUFBQTRoQixJQUFBdmdCLEVBQUEsT0FDQXNtQyxFQUFBM25DLEVBQUE0aEIsSUFBQXZnQixFQUFBLFFBU0FrbUMsR0FSQSxhQUFBdlgsR0FBQSxVQUFBQSxLQUNBLEdBQUF3WCxFQUFBRyxHQUFBOXBDLFFBQUEsU0FNQTRwQyxHQURBSCxFQUFBTSxFQUFBNVgsWUFDQTlpQixJQUNBbzZCLEVBQUF2UyxPQUdBMFMsRUFBQXBYLFdBQUFtWCxJQUFBLEVBQ0FuWCxXQUFBc1gsSUFBQSxHQUdBdHBDLEVBQUErRCxLQUdBQSxFQUFBQSxFQUFBM0UsS0FBQTRELEVBQUFsQyxFQUFBYSxFQUFBbUMsT0FBQSxHQUFBdWxDLEtBR0EsTUFBQXRsQyxFQUFBOEssTUFDQStiLEVBQUEvYixJQUFBOUssRUFBQThLLElBQUF3NkIsRUFBQXg2QixJQUFBdTZCLEdBRUEsTUFBQXJsQyxFQUFBMnlCLE9BQ0E5TCxFQUFBOEwsS0FBQTN5QixFQUFBMnlCLEtBQUEyUyxFQUFBM1MsS0FBQXdTLEdBR0EsVUFBQW5sQyxFQUNBQSxFQUFBeWxDLE1BQUFwcUMsS0FBQTRELEVBQUE0bkIsR0FHQTJlLEVBQUFobUIsSUFBQXFILEtBS0FqcEIsRUFBQUcsR0FBQWdDLE9BQUEsQ0FHQWlsQyxPQUFBLFNBQUFobEMsR0FHQSxHQUFBZCxVQUFBaEIsT0FDQSxZQUFBd0MsSUFBQVYsRUFDQXBGLEtBQ0FBLEtBQUFrRSxLQUFBLFNBQUEvQixHQUNBYSxFQUFBb25DLE9BQUFDLFVBQUFycUMsS0FBQW9GLEVBQUFqRCxLQUlBLElBQUEyb0MsRUFBQUMsRUFDQTFtQyxFQUFBckUsS0FBQSxHQUVBLE9BQUFxRSxFQVFBQSxFQUFBOHhCLGlCQUFBN3lCLFFBS0F3bkMsRUFBQXptQyxFQUFBd3pCLHdCQUNBa1QsRUFBQTFtQyxFQUFBNkksY0FBQStDLFlBQ0EsQ0FDQUMsSUFBQTQ2QixFQUFBNTZCLElBQUE2NkIsRUFBQUMsWUFDQWpULEtBQUErUyxFQUFBL1MsS0FBQWdULEVBQUFFLGNBUkEsQ0FBQS82QixJQUFBLEVBQUE2bkIsS0FBQSxRQVRBLEdBdUJBL0UsU0FBQSxXQUNBLEdBQUFoekIsS0FBQSxHQUFBLENBSUEsSUFBQWtyQyxFQUFBZCxFQUFBbG9DLEVBQ0FtQyxFQUFBckUsS0FBQSxHQUNBbXJDLEVBQUEsQ0FBQWo3QixJQUFBLEVBQUE2bkIsS0FBQSxHQUdBLEdBQUEsVUFBQS8wQixFQUFBNGhCLElBQUF2Z0IsRUFBQSxZQUdBK2xDLEVBQUEvbEMsRUFBQXd6Qiw0QkFFQSxDQU9BLElBTkF1UyxFQUFBcHFDLEtBQUFvcUMsU0FJQWxvQyxFQUFBbUMsRUFBQTZJLGNBQ0FnK0IsRUFBQTdtQyxFQUFBNm1DLGNBQUFocEMsRUFBQTROLGdCQUNBbzdCLElBQ0FBLElBQUFocEMsRUFBQTBqQixNQUFBc2xCLElBQUFocEMsRUFBQTROLGtCQUNBLFdBQUE5TSxFQUFBNGhCLElBQUFzbUIsRUFBQSxhQUVBQSxFQUFBQSxFQUFBdG9DLFdBRUFzb0MsR0FBQUEsSUFBQTdtQyxHQUFBLElBQUE2bUMsRUFBQTNwQyxZQUdBNHBDLEVBQUFub0MsRUFBQWtvQyxHQUFBZCxVQUNBbDZCLEtBQUFsTixFQUFBNGhCLElBQUFzbUIsRUFBQSxrQkFBQSxHQUNBQyxFQUFBcFQsTUFBQS8wQixFQUFBNGhCLElBQUFzbUIsRUFBQSxtQkFBQSxJQUtBLE1BQUEsQ0FDQWg3QixJQUFBazZCLEVBQUFsNkIsSUFBQWk3QixFQUFBajdCLElBQUFsTixFQUFBNGhCLElBQUF2Z0IsRUFBQSxhQUFBLEdBQ0EwekIsS0FBQXFTLEVBQUFyUyxLQUFBb1QsRUFBQXBULEtBQUEvMEIsRUFBQTRoQixJQUFBdmdCLEVBQUEsY0FBQSxNQWNBNm1DLGFBQUEsV0FDQSxPQUFBbHJDLEtBQUFvRSxJQUFBLFdBR0EsSUFGQSxJQUFBOG1DLEVBQUFsckMsS0FBQWtyQyxhQUVBQSxHQUFBLFdBQUFsb0MsRUFBQTRoQixJQUFBc21CLEVBQUEsYUFDQUEsRUFBQUEsRUFBQUEsYUFHQSxPQUFBQSxHQUFBcDdCLFFBTUE5TSxFQUFBa0IsS0FBQSxDQUFBKzBCLFdBQUEsY0FBQUQsVUFBQSxlQUFBLFNBQUFsYyxFQUFBK0YsR0FDQSxJQUFBM1MsRUFBQSxnQkFBQTJTLEVBRUE3ZixFQUFBRyxHQUFBMlosR0FBQSxTQUFBMWEsR0FDQSxPQUFBbWYsRUFBQXZoQixLQUFBLFNBQUFxRSxFQUFBeVksRUFBQTFhLEdBR0EsSUFBQTJvQyxFQU9BLEdBTkF0cEMsRUFBQTRDLEdBQ0EwbUMsRUFBQTFtQyxFQUNBLElBQUFBLEVBQUE5QyxXQUNBd3BDLEVBQUExbUMsRUFBQTRMLGtCQUdBbkssSUFBQTFELEVBQ0EsT0FBQTJvQyxFQUFBQSxFQUFBbG9CLEdBQUF4ZSxFQUFBeVksR0FHQWl1QixFQUNBQSxFQUFBSyxTQUNBbDdCLEVBQUE2NkIsRUFBQUUsWUFBQTdvQyxFQUNBOE4sRUFBQTlOLEVBQUEyb0MsRUFBQUMsYUFJQTNtQyxFQUFBeVksR0FBQTFhLEdBRUEwYSxFQUFBMWEsRUFBQWtDLFVBQUFoQixXQVVBTixFQUFBa0IsS0FBQSxDQUFBLE1BQUEsUUFBQSxTQUFBc0QsRUFBQXFiLEdBQ0E3ZixFQUFBc3pCLFNBQUF6VCxHQUFBcVAsR0FBQTl3QixFQUFBc3lCLGNBQ0EsU0FBQXJ2QixFQUFBc3RCLEdBQ0EsR0FBQUEsRUFJQSxPQUhBQSxFQUFBRCxHQUFBcnRCLEVBQUF3ZSxHQUdBb08sR0FBQXhqQixLQUFBa2tCLEdBQ0EzdUIsRUFBQXFCLEdBQUEydUIsV0FBQW5RLEdBQUEsS0FDQThPLE1BUUEzdUIsRUFBQWtCLEtBQUEsQ0FBQW1uQyxPQUFBLFNBQUFDLE1BQUEsU0FBQSxTQUFBam1DLEVBQUExRCxHQUNBcUIsRUFBQWtCLEtBQUEsQ0FDQSt6QixRQUFBLFFBQUE1eUIsRUFDQThXLFFBQUF4YSxFQUNBNHBDLEdBQUEsUUFBQWxtQyxHQUNBLFNBQUFtbUMsRUFBQUMsR0FHQXpvQyxFQUFBRyxHQUFBc29DLEdBQUEsU0FBQXpULEVBQUE3d0IsR0FDQSxJQUFBcWEsRUFBQWxkLFVBQUFoQixTQUFBa29DLEdBQUEsa0JBQUF4VCxHQUNBbkMsRUFBQTJWLEtBQUEsSUFBQXhULElBQUEsSUFBQTd3QixFQUFBLFNBQUEsVUFFQSxPQUFBb2EsRUFBQXZoQixLQUFBLFNBQUFxRSxFQUFBMUMsRUFBQXdGLEdBQ0EsSUFBQWpGLEVBRUEsT0FBQVQsRUFBQTRDLEdBR0EsSUFBQW9uQyxFQUFBNXFDLFFBQUEsU0FDQXdELEVBQUEsUUFBQWdCLEdBQ0FoQixFQUFBekUsU0FBQWtRLGdCQUFBLFNBQUF6SyxHQUlBLElBQUFoQixFQUFBOUMsVUFDQVcsRUFBQW1DLEVBQUF5TCxnQkFJQTlKLEtBQUFzdkIsSUFDQWp4QixFQUFBdWhCLEtBQUEsU0FBQXZnQixHQUFBbkQsRUFBQSxTQUFBbUQsR0FDQWhCLEVBQUF1aEIsS0FBQSxTQUFBdmdCLEdBQUFuRCxFQUFBLFNBQUFtRCxHQUNBbkQsRUFBQSxTQUFBbUQsVUFJQVMsSUFBQXFCLEVBR0FuRSxFQUFBNGhCLElBQUF2Z0IsRUFBQTFDLEVBQUFrMEIsR0FHQTd5QixFQUFBMGhCLE1BQUFyZ0IsRUFBQTFDLEVBQUF3RixFQUFBMHVCLElBQ0FsMEIsRUFBQTZmLEVBQUF3VyxPQUFBbHlCLEVBQUEwYixRQU1BeGUsRUFBQWtCLEtBQUEsQ0FDQSxZQUNBLFdBQ0EsZUFDQSxZQUNBLGNBQ0EsWUFDQSxTQUFBc0QsRUFBQTdGLEdBQ0FxQixFQUFBRyxHQUFBeEIsR0FBQSxTQUFBd0IsR0FDQSxPQUFBbkQsS0FBQXVvQixHQUFBNW1CLEVBQUF3QixNQU9BSCxFQUFBRyxHQUFBZ0MsT0FBQSxDQUVBaTJCLEtBQUEsU0FBQTVTLEVBQUE1RixFQUFBemYsR0FDQSxPQUFBbkQsS0FBQXVvQixHQUFBQyxFQUFBLEtBQUE1RixFQUFBemYsSUFFQXVvQyxPQUFBLFNBQUFsakIsRUFBQXJsQixHQUNBLE9BQUFuRCxLQUFBNG9CLElBQUFKLEVBQUEsS0FBQXJsQixJQUdBd29DLFNBQUEsU0FBQTFvQyxFQUFBdWxCLEVBQUE1RixFQUFBemYsR0FDQSxPQUFBbkQsS0FBQXVvQixHQUFBQyxFQUFBdmxCLEVBQUEyZixFQUFBemYsSUFFQXlvQyxXQUFBLFNBQUEzb0MsRUFBQXVsQixFQUFBcmxCLEdBR0EsT0FBQSxJQUFBbUIsVUFBQWhCLE9BQ0F0RCxLQUFBNG9CLElBQUEzbEIsRUFBQSxNQUNBakQsS0FBQTRvQixJQUFBSixFQUFBdmxCLEdBQUEsS0FBQUUsSUFHQTBvQyxNQUFBLFNBQUFDLEVBQUFDLEdBQ0EsT0FBQS9yQyxLQUFBcXVCLFdBQUF5ZCxHQUFBeGQsV0FBQXlkLEdBQUFELE1BSUE5b0MsRUFBQWtCLEtBQ0Esd0xBRUFxRCxNQUFBLEtBQ0EsU0FBQUMsRUFBQW5DLEdBR0FyQyxFQUFBRyxHQUFBa0MsR0FBQSxTQUFBdWQsRUFBQXpmLEdBQ0EsT0FBQSxFQUFBbUIsVUFBQWhCLE9BQ0F0RCxLQUFBdW9CLEdBQUFsakIsRUFBQSxLQUFBdWQsRUFBQXpmLEdBQ0FuRCxLQUFBcXBCLFFBQUFoa0IsTUFZQSxJQUFBMkUsR0FBQSxzREFNQWhILEVBQUFncEMsTUFBQSxTQUFBN29DLEVBQUFELEdBQ0EsSUFBQTROLEVBQUE2RCxFQUFBcTNCLEVBVUEsR0FSQSxpQkFBQTlvQyxJQUNBNE4sRUFBQTNOLEVBQUFELEdBQ0FBLEVBQUFDLEVBQ0FBLEVBQUEyTixHQUtBelAsRUFBQThCLEdBYUEsT0FSQXdSLEVBQUFyVSxFQUFBRyxLQUFBNkQsVUFBQSxJQUNBMG5DLEVBQUEsV0FDQSxPQUFBN29DLEVBQUF4QyxNQUFBdUMsR0FBQWxELEtBQUEyVSxFQUFBalUsT0FBQUosRUFBQUcsS0FBQTZELGVBSUE4QyxLQUFBakUsRUFBQWlFLEtBQUFqRSxFQUFBaUUsTUFBQXBFLEVBQUFvRSxPQUVBNGtDLEdBR0FocEMsRUFBQWlwQyxVQUFBLFNBQUFDLEdBQ0FBLEVBQ0FscEMsRUFBQW1lLFlBRUFuZSxFQUFBOFgsT0FBQSxJQUdBOVgsRUFBQTZDLFFBQUFELE1BQUFDLFFBQ0E3QyxFQUFBbXBDLFVBQUEvb0IsS0FBQUMsTUFDQXJnQixFQUFBcUosU0FBQUEsRUFDQXJKLEVBQUEzQixXQUFBQSxFQUNBMkIsRUFBQXZCLFNBQUFBLEVBQ0F1QixFQUFBbWYsVUFBQUEsRUFDQW5mLEVBQUFyQixLQUFBbUIsRUFFQUUsRUFBQXNwQixJQUFBNWpCLEtBQUE0akIsSUFFQXRwQixFQUFBb3BDLFVBQUEsU0FBQTlxQyxHQUtBLElBQUFLLEVBQUFxQixFQUFBckIsS0FBQUwsR0FDQSxPQUFBLFdBQUFLLEdBQUEsV0FBQUEsS0FLQTBxQyxNQUFBL3FDLEVBQUEreEIsV0FBQS94QixLQUdBMEIsRUFBQXNwQyxLQUFBLFNBQUEvcEMsR0FDQSxPQUFBLE1BQUFBLEVBQ0EsSUFDQUEsRUFBQSxJQUFBMkQsUUFBQThELEdBQUEsT0FrQkEsbUJBQUF1aUMsUUFBQUEsT0FBQUMsS0FDQUQsT0FBQSxTQUFBLEdBQUEsV0FDQSxPQUFBdnBDLElBT0EsSUFHQXlwQyxHQUFBMXNDLEVBQUFpRCxPQUdBMHBDLEdBQUEzc0MsRUFBQTRzQyxFQXdCQSxPQXRCQTNwQyxFQUFBNHBDLFdBQUEsU0FBQWxuQyxHQVNBLE9BUkEzRixFQUFBNHNDLElBQUEzcEMsSUFDQWpELEVBQUE0c0MsRUFBQUQsSUFHQWhuQyxHQUFBM0YsRUFBQWlELFNBQUFBLElBQ0FqRCxFQUFBaUQsT0FBQXlwQyxJQUdBenBDLFFBTUEsSUFBQS9DLElBQ0FGLEVBQUFpRCxPQUFBakQsRUFBQTRzQyxFQUFBM3BDLEdBTUFBLElDOXVWQSxTQUFBdVgsR0FBQSxtQkFBQWd5QixRQUFBQSxPQUFBQyxJQUFBRCxPQUFBLENBQUEsVUFBQWh5QixHQUFBLGlCQUFBN2EsUUFBQUEsT0FBQUMsUUFBQUQsT0FBQUMsUUFBQSxTQUFBOE0sRUFBQWlkLEdBQUEsWUFBQSxJQUFBQSxJQUFBQSxFQUFBLG9CQUFBM3BCLE9BQUE4c0MsUUFBQSxVQUFBQSxRQUFBLFNBQUFBLENBQUFwZ0MsSUFBQThOLEVBQUFtUCxHQUFBQSxHQUFBblAsRUFBQXZYLFFBQUEsQ0FBQSxTQUFBOHBDLEdBQUEsSUFBQXJnQyxFQUFBLFdBQUEsR0FBQXFnQyxHQUFBQSxFQUFBM3BDLElBQUEycEMsRUFBQTNwQyxHQUFBNHBDLFNBQUFELEVBQUEzcEMsR0FBQTRwQyxRQUFBUCxJQUFBLElBQUEvL0IsRUFBQXFnQyxFQUFBM3BDLEdBQUE0cEMsUUFBQVAsSUFBQSxJQUFBOWlCLEVBQUFuUCxFQUFBcFksRUFBQTZxQyxFQUFBQyxFQUFBOUwsRUFBQStMLEVBQUFDLEVBQUF2Z0MsRUFBQTJQLEVBQUE2d0IsRUFBQWh3QixFQUFBaXdCLEVBQUFqa0MsRUFBQXZKLEVBQUEwYixFQUFBLFNBQUFsUyxFQUFBb0QsRUFBQWlkLEdBQUEsT0FBQTJqQixFQUFBNXNDLEtBQUFnTSxFQUFBaWQsR0FBQSxTQUFBNGpCLEVBQUE3Z0MsRUFBQWlkLEdBQUEsSUFBQW5QLEVBQUFwWSxFQUFBa3JDLEVBQUFKLEVBQUE5TCxFQUFBLzNCLEVBQUFtUyxFQUFBK3hCLEVBQUFDLEVBQUFULEVBQUEzVCxFQUFBNlQsRUFBQXRqQixHQUFBQSxFQUFBbmlCLE1BQUEsS0FBQTJsQyxFQUFBRSxFQUFBaHBDLElBQUErb0MsRUFBQUQsR0FBQUEsRUFBQSxNQUFBLEdBQUEsR0FBQXpnQyxFQUFBLENBQUEsSUFBQTAwQixHQUFBMTBCLEVBQUFBLEVBQUFsRixNQUFBLE1BQUFqRSxPQUFBLEVBQUE4cEMsRUFBQUksY0FBQTN0QyxFQUFBNE4sS0FBQWhCLEVBQUEwMEIsTUFBQTEwQixFQUFBMDBCLEdBQUExMEIsRUFBQTAwQixHQUFBajdCLFFBQUFyRyxFQUFBLEtBQUEsTUFBQTRNLEVBQUEsR0FBQWdoQyxPQUFBLElBQUFULElBQUF2Z0MsRUFBQXVnQyxFQUFBMXNDLE1BQUEsRUFBQTBzQyxFQUFBMXBDLE9BQUEsR0FBQTVDLE9BQUErTCxJQUFBOGdDLEVBQUEsRUFBQUEsRUFBQTlnQyxFQUFBbkosT0FBQWlxQyxJQUFBLEdBQUEsT0FBQXBVLEVBQUExc0IsRUFBQThnQyxJQUFBOWdDLEVBQUF2SCxPQUFBcW9DLEVBQUEsR0FBQUEsR0FBQSxPQUFBLEdBQUEsT0FBQXBVLEVBQUEsQ0FBQSxHQUFBLElBQUFvVSxHQUFBLElBQUFBLEdBQUEsT0FBQTlnQyxFQUFBLElBQUEsT0FBQUEsRUFBQThnQyxFQUFBLEdBQUEsU0FBQSxFQUFBQSxJQUFBOWdDLEVBQUF2SCxPQUFBcW9DLEVBQUEsRUFBQSxHQUFBQSxHQUFBLEdBQUE5Z0MsRUFBQUEsRUFBQW9CLEtBQUEsS0FBQSxJQUFBbS9CLEdBQUFHLElBQUFELEVBQUEsQ0FBQSxJQUFBSyxHQUFBaHpCLEVBQUE5TixFQUFBbEYsTUFBQSxNQUFBakUsT0FBQSxFQUFBaXFDLEVBQUFBLEdBQUEsRUFBQSxDQUFBLEdBQUFwckMsRUFBQW9ZLEVBQUFqYSxNQUFBLEVBQUFpdEMsR0FBQTEvQixLQUFBLEtBQUFtL0IsRUFBQSxJQUFBRixFQUFBRSxFQUFBMXBDLE9BQUEsRUFBQXdwQyxFQUFBQSxHQUFBLEVBQUEsR0FBQU8sR0FBQUEsRUFBQUgsRUFBQUYsRUFBQTFzQyxNQUFBLEVBQUF3c0MsR0FBQWovQixLQUFBLFFBQUF3L0IsRUFBQWxyQyxHQUFBLENBQUE4cUMsRUFBQUksRUFBQWprQyxFQUFBbWtDLEVBQUEsTUFBQSxHQUFBTixFQUFBLE9BQUExeEIsR0FBQTR4QixHQUFBQSxFQUFBaHJDLEtBQUFvWixFQUFBNHhCLEVBQUFockMsR0FBQW1yQyxFQUFBQyxJQUFBTixHQUFBMXhCLElBQUEweEIsRUFBQTF4QixFQUFBblMsRUFBQWtrQyxHQUFBTCxJQUFBMXlCLEVBQUFyVixPQUFBLEVBQUFrRSxFQUFBNmpDLEdBQUF4Z0MsRUFBQThOLEVBQUExTSxLQUFBLE1BQUEsT0FBQXBCLEVBQUEsU0FBQWloQyxFQUFBaGtCLEVBQUFuUCxHQUFBLE9BQUEsV0FBQSxJQUFBOU4sRUFBQXJELEVBQUEzSSxLQUFBNkQsVUFBQSxHQUFBLE1BQUEsaUJBQUFtSSxFQUFBLElBQUEsSUFBQUEsRUFBQW5KLFFBQUFtSixFQUFBN0wsS0FBQSxNQUFBdWdDLEVBQUF4Z0MsTUFBQXFzQyxFQUFBdmdDLEVBQUEvTCxPQUFBLENBQUFncEIsRUFBQW5QLE1BQUEsU0FBQW96QixFQUFBamtCLEdBQUEsT0FBQSxTQUFBamQsR0FBQUcsRUFBQThjLEdBQUFqZCxHQUFBLFNBQUFtaEMsRUFBQW5oQyxHQUFBLEdBQUFwRCxFQUFBa1QsRUFBQTlQLEdBQUEsQ0FBQSxJQUFBaWQsRUFBQW5OLEVBQUE5UCxVQUFBOFAsRUFBQTlQLEdBQUEyUSxFQUFBM1EsSUFBQSxFQUFBd2dDLEVBQUF0c0MsTUFBQXFzQyxFQUFBdGpCLEdBQUEsSUFBQXJnQixFQUFBdUQsRUFBQUgsS0FBQXBELEVBQUErVCxFQUFBM1EsR0FBQSxNQUFBLElBQUEzTSxNQUFBLE1BQUEyTSxHQUFBLE9BQUFHLEVBQUFILEdBQUEsU0FBQThnQyxFQUFBOWdDLEdBQUEsSUFBQWlkLEVBQUFuUCxFQUFBOU4sRUFBQUEsRUFBQTVMLFFBQUEsTUFBQSxFQUFBLE9BQUEsRUFBQTBaLElBQUFtUCxFQUFBamQsRUFBQW9oQyxVQUFBLEVBQUF0ekIsR0FBQTlOLEVBQUFBLEVBQUFvaEMsVUFBQXR6QixFQUFBLEVBQUE5TixFQUFBbkosU0FBQSxDQUFBb21CLEVBQUFqZCxHQUFBLFNBQUFxaEMsRUFBQXJoQyxHQUFBLE9BQUFBLEVBQUE4Z0MsRUFBQTlnQyxHQUFBLEdBQUEsT0FBQUEsR0FBQUEsRUFBQXNoQyxZQUFBdGhDLEVBQUE4TixFQUFBOU4sRUFBQUEsRUFBQSxHQUFBRyxFQUFBLEdBQUEyUCxFQUFBLEdBQUE2d0IsRUFBQSxHQUFBaHdCLEVBQUEsR0FBQWl3QixFQUFBanRDLE9BQUFtRCxVQUFBdEMsZUFBQW1JLEVBQUEsR0FBQTlJLE1BQUFULEVBQUEsUUFBQXF0QyxFQUFBLFNBQUF6Z0MsRUFBQWlkLEdBQUEsSUFBQW5QLEVBQUFtUCxFQUFBdm5CLEVBQUFvckMsRUFBQTlnQyxHQUFBNGdDLEVBQUFsckMsRUFBQSxHQUFBOHFDLEVBQUF2akIsRUFBQSxHQUFBLE9BQUFqZCxFQUFBdEssRUFBQSxHQUFBa3JDLElBQUE5eUIsRUFBQXF6QixFQUFBUCxFQUFBQyxFQUFBRCxFQUFBSixLQUFBSSxFQUFBNWdDLEVBQUE4TixHQUFBQSxFQUFBeXpCLFVBQUF6ekIsRUFBQXl6QixVQUFBdmhDLEdBQUFpZCxFQUFBdWpCLEVBQUEsU0FBQXhnQyxHQUFBLE9BQUE2Z0MsRUFBQTdnQyxFQUFBaWQsTUFBQTRqQixFQUFBN2dDLEVBQUF3Z0MsSUFBQUksR0FBQWxyQyxFQUFBb3JDLEVBQUE5Z0MsRUFBQTZnQyxFQUFBN2dDLEVBQUF3Z0MsS0FBQSxHQUFBeGdDLEVBQUF0SyxFQUFBLEdBQUFrckMsSUFBQTl5QixFQUFBcXpCLEVBQUFQLEtBQUEsQ0FBQUgsRUFBQUcsRUFBQUEsRUFBQSxJQUFBNWdDLEVBQUFBLEVBQUE4TixFQUFBOU4sRUFBQXdoQyxHQUFBWixFQUFBbFUsRUFBQTVlLElBQUE0eUIsRUFBQSxDQUFBTixRQUFBLFNBQUFwZ0MsR0FBQSxPQUFBaWhDLEVBQUFqaEMsSUFBQTlNLFFBQUEsU0FBQThNLEdBQUEsSUFBQWlkLEVBQUE5YyxFQUFBSCxHQUFBLFlBQUEsSUFBQWlkLEVBQUFBLEVBQUE5YyxFQUFBSCxHQUFBLElBQUEvTSxPQUFBLFNBQUErTSxHQUFBLE1BQUEsQ0FBQVksR0FBQVosRUFBQXloQyxJQUFBLEdBQUF2dUMsUUFBQWlOLEVBQUFILEdBQUEwaEMsUUFBQTFoQyxFQUFBQSxFQUFBLFdBQUEsT0FBQTJnQyxHQUFBQSxFQUFBZSxRQUFBZixFQUFBZSxPQUFBMWhDLElBQUEsTUFBQSxJQUFBQSxJQUFBd2dDLEVBQUEsU0FBQXhnQyxFQUFBaWQsRUFBQW5QLEVBQUFwWSxHQUFBLElBQUFrckMsRUFBQUosRUFBQTlMLEVBQUEvM0IsRUFBQW1TLEVBQUEreEIsRUFBQUMsRUFBQVQsRUFBQSxHQUFBM1QsU0FBQTVlLEVBQUEsR0FBQSt5QixFQUFBUSxFQUFBM3JDLEVBQUFBLEdBQUFzSyxHQUFBLGFBQUEwc0IsR0FBQSxZQUFBQSxFQUFBLENBQUEsSUFBQXpQLEdBQUFBLEVBQUFwbUIsUUFBQWlYLEVBQUFqWCxPQUFBLENBQUEsVUFBQSxVQUFBLFVBQUFvbUIsRUFBQW5PLEVBQUEsRUFBQUEsRUFBQW1PLEVBQUFwbUIsT0FBQWlZLEdBQUEsRUFBQSxHQUFBLGFBQUEweEIsR0FBQTdqQyxFQUFBOGpDLEVBQUF4akIsRUFBQW5PLEdBQUEreEIsSUFBQUosR0FBQUosRUFBQXZ4QixHQUFBNHhCLEVBQUFOLFFBQUFwZ0MsUUFBQSxHQUFBLFlBQUF3Z0MsRUFBQUgsRUFBQXZ4QixHQUFBNHhCLEVBQUF4dEMsUUFBQThNLEdBQUE4Z0MsR0FBQSxPQUFBLEdBQUEsV0FBQU4sRUFBQUksRUFBQVAsRUFBQXZ4QixHQUFBNHhCLEVBQUF6dEMsT0FBQStNLFFBQUEsR0FBQXBELEVBQUF1RCxFQUFBcWdDLElBQUE1akMsRUFBQWtULEVBQUEwd0IsSUFBQTVqQyxFQUFBK1QsRUFBQTZ2QixHQUFBSCxFQUFBdnhCLEdBQUFxeUIsRUFBQVgsT0FBQSxDQUFBLElBQUE3akMsRUFBQSt2QixFQUFBLE1BQUEsSUFBQXI1QixNQUFBMk0sRUFBQSxZQUFBd2dDLEdBQUE3akMsRUFBQSt2QixFQUFBdk4sS0FBQXhpQixFQUFBbVIsRUFBQW16QixFQUFBdnJDLEdBQUEsR0FBQXdyQyxFQUFBVixHQUFBLElBQUFILEVBQUF2eEIsR0FBQTNPLEVBQUFxZ0MsR0FBQTlMLEVBQUE1bUIsRUFBQUEsRUFBQTVaLE1BQUFpTSxFQUFBSCxHQUFBcWdDLFFBQUEsRUFBQXJnQyxJQUFBNGdDLEdBQUFBLEVBQUExdEMsVUFBQXF0QyxHQUFBSyxFQUFBMXRDLFVBQUFpTixFQUFBSCxHQUFBRyxFQUFBSCxHQUFBNGdDLEVBQUExdEMsUUFBQXdoQyxJQUFBNkwsR0FBQU8sSUFBQTNnQyxFQUFBSCxHQUFBMDBCLFNBQUExMEIsSUFBQUcsRUFBQUgsR0FBQThOLElBQUFtUCxFQUFBblAsRUFBQTRtQixFQUFBLFNBQUExMEIsRUFBQWlkLEVBQUFuUCxFQUFBcFksRUFBQWtyQyxHQUFBLEdBQUEsaUJBQUE1Z0MsRUFBQSxPQUFBMGdDLEVBQUExZ0MsR0FBQTBnQyxFQUFBMWdDLEdBQUFpZCxHQUFBa2tCLEVBQUFWLEVBQUF6Z0MsRUFBQXFoQyxFQUFBcGtCLElBQUF3akIsR0FBQSxJQUFBemdDLEVBQUF2SCxPQUFBLENBQUEsSUFBQWtvQyxFQUFBM2dDLEdBQUEyaEMsTUFBQWpOLEVBQUFpTSxFQUFBZ0IsS0FBQWhCLEVBQUFqcEMsV0FBQXVsQixFQUFBLE9BQUFBLEVBQUF4a0IsUUFBQXVILEVBQUFpZCxFQUFBQSxFQUFBblAsRUFBQUEsRUFBQSxNQUFBOU4sRUFBQXVnQyxFQUFBLE9BQUF0akIsRUFBQUEsR0FBQSxhQUFBLG1CQUFBblAsSUFBQUEsRUFBQXBZLEVBQUFBLEVBQUFrckMsR0FBQWxyQyxFQUFBOHFDLEVBQUFELEVBQUF2Z0MsRUFBQWlkLEVBQUFuUCxHQUFBMEYsV0FBQSxXQUFBZ3RCLEVBQUFELEVBQUF2Z0MsRUFBQWlkLEVBQUFuUCxJQUFBLEdBQUE0bUIsR0FBQUEsRUFBQWdOLE9BQUEsU0FBQTFoQyxHQUFBLE9BQUEwMEIsRUFBQTEwQixJQUFBaWQsRUFBQTJrQixTQUFBemhDLEdBQUF6SyxFQUFBLFNBQUFzSyxFQUFBaWQsRUFBQW5QLEdBQUEsR0FBQSxpQkFBQTlOLEVBQUEsTUFBQSxJQUFBM00sTUFBQSw2REFBQTRwQixFQUFBeGtCLFNBQUFxVixFQUFBbVAsRUFBQUEsRUFBQSxJQUFBcmdCLEVBQUF1RCxFQUFBSCxJQUFBcEQsRUFBQWtULEVBQUE5UCxLQUFBOFAsRUFBQTlQLEdBQUEsQ0FBQUEsRUFBQWlkLEVBQUFuUCxNQUFBaXlCLElBQUEsQ0FBQXhwQyxRQUFBLEdBQUF5SixFQUFBc2hDLFVBQUFya0IsRUFBQWpkLEVBQUFvZ0MsUUFBQXR5QixFQUFBOU4sRUFBQTgvQixPQUFBcHFDLEdBQUFzSyxFQUFBOC9CLE9BQUEsU0FBQSxjQUFBOS9CLEVBQUE4L0IsT0FBQSxTQUFBLEdBQUEsV0FBQSxJQUFBOS9CLEVBQUFxZ0MsR0FBQUgsRUFBQSxPQUFBLE1BQUFsZ0MsR0FBQW1VLFNBQUFBLFFBQUF4YSxPQUFBd2EsUUFBQXhhLE1BQUEseUpBQUFxRyxJQUFBQSxFQUFBOC9CLE9BQUEsZ0JBQUEsQ0FBQSxVQUFBLFNBQUFVLEdBQUEsSUFBQUksRUFBQSxHQUFBLFNBQUFFLEVBQUE5Z0MsR0FBQSxJQUFBaWQsRUFBQWpkLEVBQUFsSixVQUFBZ1gsRUFBQSxHQUFBLElBQUEsSUFBQXBZLEtBQUF1bkIsRUFBQSxtQkFBQUEsRUFBQXZuQixJQUFBLGdCQUFBQSxHQUFBb1ksRUFBQTNaLEtBQUF1QixHQUFBLE9BQUFvWSxFQUFBLFNBQUE5TixJQUFBek0sS0FBQXN1QyxVQUFBLEdBQUFqQixFQUFBa0IsT0FBQSxTQUFBOWhDLEVBQUFpZCxHQUFBLElBQUFuUCxFQUFBLEdBQUF0WixlQUFBLFNBQUFrQixJQUFBbkMsS0FBQXlELFlBQUFnSixFQUFBLElBQUEsSUFBQTRnQyxLQUFBM2pCLEVBQUFuUCxFQUFBOVosS0FBQWlwQixFQUFBMmpCLEtBQUE1Z0MsRUFBQTRnQyxHQUFBM2pCLEVBQUEyakIsSUFBQSxPQUFBbHJDLEVBQUFvQixVQUFBbW1CLEVBQUFubUIsVUFBQWtKLEVBQUFsSixVQUFBLElBQUFwQixFQUFBc0ssRUFBQStoQyxVQUFBOWtCLEVBQUFubUIsVUFBQWtKLEdBQUE0Z0MsRUFBQW9CLFNBQUEsU0FBQXRzQyxFQUFBa3JDLEdBQUEsSUFBQTVnQyxFQUFBOGdDLEVBQUFGLEdBQUEzakIsRUFBQTZqQixFQUFBcHJDLEdBQUEsU0FBQThxQyxJQUFBLElBQUF4Z0MsRUFBQTdHLE1BQUFyQyxVQUFBd08sUUFBQTJYLEVBQUEyakIsRUFBQTlwQyxVQUFBRSxZQUFBSCxPQUFBaVgsRUFBQXBZLEVBQUFvQixVQUFBRSxZQUFBLEVBQUFpbUIsSUFBQWpkLEVBQUFoTSxLQUFBNkQsVUFBQW5DLEVBQUFvQixVQUFBRSxhQUFBOFcsRUFBQTh5QixFQUFBOXBDLFVBQUFFLGFBQUE4VyxFQUFBNVosTUFBQVgsS0FBQXNFLFdBQUErb0MsRUFBQXFCLFlBQUF2c0MsRUFBQXVzQyxZQUFBekIsRUFBQTFwQyxVQUFBLElBQUEsV0FBQXZELEtBQUF5RCxZQUFBd3BDLEdBQUEsSUFBQSxJQUFBMXlCLEVBQUEsRUFBQUEsRUFBQW1QLEVBQUFwbUIsT0FBQWlYLElBQUEsQ0FBQSxJQUFBNG1CLEVBQUF6WCxFQUFBblAsR0FBQTB5QixFQUFBMXBDLFVBQUE0OUIsR0FBQWgvQixFQUFBb0IsVUFBQTQ5QixHQUFBLFNBQUEvM0IsRUFBQXFELEdBQUEsSUFBQWlkLEVBQUEsYUFBQWpkLEtBQUF3Z0MsRUFBQTFwQyxZQUFBbW1CLEVBQUF1akIsRUFBQTFwQyxVQUFBa0osSUFBQSxJQUFBOE4sRUFBQTh5QixFQUFBOXBDLFVBQUFrSixHQUFBLE9BQUEsV0FBQSxPQUFBN0csTUFBQXJDLFVBQUF3TyxRQUFBdFIsS0FBQTZELFVBQUFvbEIsR0FBQW5QLEVBQUE1WixNQUFBWCxLQUFBc0UsWUFBQSxJQUFBLElBQUFpWCxFQUFBLEVBQUFBLEVBQUE5TyxFQUFBbkosT0FBQWlZLElBQUEsQ0FBQSxJQUFBK3hCLEVBQUE3Z0MsRUFBQThPLEdBQUEweEIsRUFBQTFwQyxVQUFBK3BDLEdBQUFsa0MsRUFBQWtrQyxHQUFBLE9BQUFMLEdBQUF4Z0MsRUFBQWxKLFVBQUFnbEIsR0FBQSxTQUFBOWIsRUFBQWlkLEdBQUExcEIsS0FBQXN1QyxVQUFBdHVDLEtBQUFzdUMsV0FBQSxHQUFBN2hDLEtBQUF6TSxLQUFBc3VDLFVBQUF0dUMsS0FBQXN1QyxVQUFBN2hDLEdBQUE3TCxLQUFBOG9CLEdBQUExcEIsS0FBQXN1QyxVQUFBN2hDLEdBQUEsQ0FBQWlkLElBQUFqZCxFQUFBbEosVUFBQThsQixRQUFBLFNBQUE1YyxHQUFBLElBQUFpZCxFQUFBOWpCLE1BQUFyQyxVQUFBakQsTUFBQWlhLEVBQUFtUCxFQUFBanBCLEtBQUE2RCxVQUFBLEdBQUF0RSxLQUFBc3VDLFVBQUF0dUMsS0FBQXN1QyxXQUFBLEdBQUEsTUFBQS96QixJQUFBQSxFQUFBLElBQUEsSUFBQUEsRUFBQWpYLFFBQUFpWCxFQUFBM1osS0FBQSxLQUFBMlosRUFBQSxHQUFBbzBCLE1BQUFsaUMsS0FBQXpNLEtBQUFzdUMsV0FBQXR1QyxLQUFBNHVDLE9BQUE1dUMsS0FBQXN1QyxVQUFBN2hDLEdBQUFpZCxFQUFBanBCLEtBQUE2RCxVQUFBLElBQUEsTUFBQXRFLEtBQUFzdUMsV0FBQXR1QyxLQUFBNHVDLE9BQUE1dUMsS0FBQXN1QyxVQUFBLEtBQUFocUMsWUFBQW1JLEVBQUFsSixVQUFBcXJDLE9BQUEsU0FBQW5pQyxFQUFBaWQsR0FBQSxJQUFBLElBQUFuUCxFQUFBLEVBQUFwWSxFQUFBc0ssRUFBQW5KLE9BQUFpWCxFQUFBcFksRUFBQW9ZLElBQUE5TixFQUFBOE4sR0FBQTVaLE1BQUFYLEtBQUEwcEIsSUFBQTJqQixFQUFBd0IsV0FBQXBpQyxFQUFBNGdDLEVBQUF5QixjQUFBLFNBQUFyaUMsR0FBQSxJQUFBLElBQUFpZCxFQUFBLEdBQUFuUCxFQUFBLEVBQUFBLEVBQUE5TixFQUFBOE4sSUFBQW1QLEdBQUExakIsS0FBQStvQyxNQUFBLEdBQUEvb0MsS0FBQUMsVUFBQWxGLFNBQUEsSUFBQSxPQUFBMm9CLEdBQUEyakIsRUFBQWpTLEtBQUEsU0FBQTN1QixFQUFBaWQsR0FBQSxPQUFBLFdBQUFqZCxFQUFBOUwsTUFBQStvQixFQUFBcGxCLGFBQUErb0MsRUFBQTJCLGFBQUEsU0FBQXZpQyxHQUFBLElBQUEsSUFBQWlkLEtBQUFqZCxFQUFBLENBQUEsSUFBQThOLEVBQUFtUCxFQUFBbmlCLE1BQUEsS0FBQXBGLEVBQUFzSyxFQUFBLEdBQUEsSUFBQThOLEVBQUFqWCxPQUFBLENBQUEsSUFBQSxJQUFBK3BDLEVBQUEsRUFBQUEsRUFBQTl5QixFQUFBalgsT0FBQStwQyxJQUFBLENBQUEsSUFBQUosRUFBQTF5QixFQUFBOHlCLElBQUFKLEVBQUFBLEVBQUFZLFVBQUEsRUFBQSxHQUFBcG1DLGNBQUF3bEMsRUFBQVksVUFBQSxNQUFBMXJDLElBQUFBLEVBQUE4cUMsR0FBQSxJQUFBSSxHQUFBOXlCLEVBQUFqWCxPQUFBLElBQUFuQixFQUFBOHFDLEdBQUF4Z0MsRUFBQWlkLElBQUF2bkIsRUFBQUEsRUFBQThxQyxVQUFBeGdDLEVBQUFpZCxJQUFBLE9BQUFqZCxHQUFBNGdDLEVBQUE0QixVQUFBLFNBQUF4aUMsRUFBQWlkLEdBQUEsSUFBQW5QLEVBQUEweUIsRUFBQXZqQixHQUFBdm5CLEVBQUF1bkIsRUFBQWhGLE1BQUF1WCxVQUFBb1IsRUFBQTNqQixFQUFBaEYsTUFBQXdYLFVBQUEsT0FBQS81QixJQUFBa3JDLEdBQUEsV0FBQUEsR0FBQSxZQUFBQSxLQUFBLFdBQUFsckMsR0FBQSxXQUFBa3JDLEdBQUE5eUIsRUFBQTIwQixjQUFBeGxCLEVBQUF5bEIsY0FBQTUwQixFQUFBNjBCLGFBQUExbEIsRUFBQTJsQixjQUFBaEMsRUFBQWlDLGFBQUEsU0FBQTdpQyxHQUFBLElBQUFpZCxFQUFBLENBQUE2bEIsS0FBQSxRQUFBQyxJQUFBLFFBQUFDLElBQUEsT0FBQTE4QixJQUFBLE9BQUEyOEIsSUFBQSxTQUFBQyxJQUFBLFFBQUFDLElBQUEsU0FBQSxNQUFBLGlCQUFBbmpDLEVBQUFBLEVBQUFmLE9BQUFlLEdBQUF2RyxRQUFBLGVBQUEsU0FBQXVHLEdBQUEsT0FBQWlkLEVBQUFqZCxNQUFBNGdDLEVBQUF3QyxXQUFBLFNBQUFwakMsRUFBQWlkLEdBQUEsR0FBQSxRQUFBdWpCLEVBQUE5cEMsR0FBQUssT0FBQXNzQyxPQUFBLEVBQUEsR0FBQSxDQUFBLElBQUF2MUIsRUFBQTB5QixJQUFBQSxFQUFBN29DLElBQUFzbEIsRUFBQSxTQUFBamQsR0FBQThOLEVBQUFBLEVBQUFvQixJQUFBbFAsS0FBQWlkLEVBQUFuUCxFQUFBOU4sRUFBQTJqQixPQUFBMUcsSUFBQTJqQixFQUFBMEMsUUFBQSxHQUFBLElBQUF4MUIsRUFBQSxFQUFBLE9BQUE4eUIsRUFBQTJDLG1CQUFBLFNBQUF2akMsR0FBQSxJQUFBaWQsRUFBQWpkLEVBQUFqSyxhQUFBLG1CQUFBLE9BQUEsTUFBQWtuQixJQUFBamQsRUFBQVksSUFBQXFjLEVBQUFqZCxFQUFBWSxHQUFBWixFQUFBaEssYUFBQSxrQkFBQWluQixLQUFBamQsRUFBQWhLLGFBQUEsb0JBQUE4WCxHQUFBbVAsRUFBQW5QLEVBQUF4WixhQUFBMm9CLEdBQUEyakIsRUFBQTRDLFVBQUEsU0FBQXhqQyxFQUFBaWQsRUFBQW5QLEdBQUEsSUFBQXBZLEVBQUFrckMsRUFBQTJDLG1CQUFBdmpDLEdBQUE0Z0MsRUFBQTBDLFFBQUE1dEMsS0FBQWtyQyxFQUFBMEMsUUFBQTV0QyxHQUFBLElBQUFrckMsRUFBQTBDLFFBQUE1dEMsR0FBQXVuQixHQUFBblAsR0FBQTh5QixFQUFBNkMsUUFBQSxTQUFBempDLEVBQUFpZCxHQUFBLElBQUFuUCxFQUFBOHlCLEVBQUEyQyxtQkFBQXZqQyxHQUFBLE9BQUFpZCxFQUFBMmpCLEVBQUEwQyxRQUFBeDFCLElBQUEsTUFBQTh5QixFQUFBMEMsUUFBQXgxQixHQUFBbVAsR0FBQTJqQixFQUFBMEMsUUFBQXgxQixHQUFBbVAsR0FBQXVqQixFQUFBeGdDLEdBQUFtVyxLQUFBOEcsR0FBQTJqQixFQUFBMEMsUUFBQXgxQixJQUFBOHlCLEVBQUE4QyxXQUFBLFNBQUExakMsR0FBQSxJQUFBaWQsRUFBQTJqQixFQUFBMkMsbUJBQUF2akMsR0FBQSxNQUFBNGdDLEVBQUEwQyxRQUFBcm1CLFdBQUEyakIsRUFBQTBDLFFBQUFybUIsSUFBQTJqQixJQUFBNWdDLEVBQUE4L0IsT0FBQSxrQkFBQSxDQUFBLFNBQUEsV0FBQSxTQUFBcFQsRUFBQTZULEdBQUEsU0FBQTdxQyxFQUFBc0ssRUFBQWlkLEVBQUFuUCxHQUFBdmEsS0FBQW93QyxTQUFBM2pDLEVBQUF6TSxLQUFBNGlCLEtBQUFySSxFQUFBdmEsS0FBQW9GLFFBQUFza0IsRUFBQXZuQixFQUFBcXNDLFVBQUEvcUMsWUFBQWhELEtBQUFULE1BQUEsT0FBQWd0QyxFQUFBdUIsT0FBQXBzQyxFQUFBNnFDLEVBQUE2QixZQUFBMXNDLEVBQUFvQixVQUFBOHNDLE9BQUEsV0FBQSxJQUFBNWpDLEVBQUEwc0IsRUFBQSwwREFBQSxPQUFBbjVCLEtBQUFvRixRQUFBekIsSUFBQSxhQUFBOEksRUFBQXlGLEtBQUEsdUJBQUEsUUFBQWxTLEtBQUFzd0MsU0FBQTdqQyxHQUFBdEssRUFBQW9CLFVBQUFndEMsTUFBQSxXQUFBdndDLEtBQUFzd0MsU0FBQXI2QixTQUFBOVQsRUFBQW9CLFVBQUFpdEMsZUFBQSxTQUFBL2pDLEdBQUEsSUFBQWlkLEVBQUExcEIsS0FBQW9GLFFBQUF6QixJQUFBLGdCQUFBM0QsS0FBQXV3QyxRQUFBdndDLEtBQUF5d0MsY0FBQSxJQUFBbDJCLEVBQUE0ZSxFQUFBLG1GQUFBaDNCLEVBQUFuQyxLQUFBb0YsUUFBQXpCLElBQUEsZ0JBQUFBLElBQUE4SSxFQUFBcVUsU0FBQXZHLEVBQUE2VixPQUFBMUcsRUFBQXZuQixFQUFBc0ssRUFBQWtJLFFBQUE0RixFQUFBLEdBQUFsSyxXQUFBLDRCQUFBclEsS0FBQXN3QyxTQUFBbGdCLE9BQUE3VixJQUFBcFksRUFBQW9CLFVBQUFtdEMsYUFBQSxXQUFBMXdDLEtBQUFzd0MsU0FBQTMvQixLQUFBLDZCQUFBb04sVUFBQTViLEVBQUFvQixVQUFBNnNCLE9BQUEsU0FBQTNqQixHQUFBek0sS0FBQXl3QyxjQUFBLElBQUEvbUIsRUFBQSxHQUFBLEdBQUEsTUFBQWpkLEVBQUE3RixTQUFBLElBQUE2RixFQUFBN0YsUUFBQXRELE9BQUEsQ0FBQW1KLEVBQUE3RixRQUFBNUcsS0FBQWlGLEtBQUF3SCxFQUFBN0YsU0FBQSxJQUFBLElBQUEyVCxFQUFBLEVBQUFBLEVBQUE5TixFQUFBN0YsUUFBQXRELE9BQUFpWCxJQUFBLENBQUEsSUFBQXBZLEVBQUFzSyxFQUFBN0YsUUFBQTJULEdBQUE4eUIsRUFBQXJ0QyxLQUFBdW1CLE9BQUFwa0IsR0FBQXVuQixFQUFBOW9CLEtBQUF5c0MsR0FBQXJ0QyxLQUFBc3dDLFNBQUFsZ0IsT0FBQTFHLFFBQUEsSUFBQTFwQixLQUFBc3dDLFNBQUFwMUIsV0FBQTVYLFFBQUF0RCxLQUFBcXBCLFFBQUEsa0JBQUEsQ0FBQXZJLFFBQUEsZUFBQTNlLEVBQUFvQixVQUFBeXZCLFNBQUEsU0FBQXZtQixFQUFBaWQsR0FBQUEsRUFBQS9ZLEtBQUEsb0JBQUF5ZixPQUFBM2pCLElBQUF0SyxFQUFBb0IsVUFBQTBCLEtBQUEsU0FBQXdILEdBQUEsT0FBQXpNLEtBQUFvRixRQUFBekIsSUFBQSxTQUFBM0QsQ0FBQXlNLElBQUF0SyxFQUFBb0IsVUFBQW90QyxtQkFBQSxXQUFBLElBQUFsa0MsRUFBQXpNLEtBQUFzd0MsU0FBQTMvQixLQUFBLDJDQUFBK1ksRUFBQWpkLEVBQUFnRSxPQUFBLHdCQUFBLEVBQUFpWixFQUFBcG1CLE9BQUFvbUIsRUFBQW5sQixRQUFBOGtCLFFBQUEsY0FBQTVjLEVBQUFsSSxRQUFBOGtCLFFBQUEsY0FBQXJwQixLQUFBNHdDLDBCQUFBenVDLEVBQUFvQixVQUFBc3RDLFdBQUEsV0FBQSxJQUFBbm5CLEVBQUExcEIsS0FBQUEsS0FBQTRpQixLQUFBb2tCLFFBQUEsU0FBQXY2QixHQUFBLElBQUF0SyxFQUFBZzNCLEVBQUEvMEIsSUFBQXFJLEVBQUEsU0FBQUEsR0FBQSxPQUFBQSxFQUFBWSxHQUFBdE0sYUFBQTJvQixFQUFBNG1CLFNBQUEzL0IsS0FBQSwyQ0FBQXpNLEtBQUEsV0FBQSxJQUFBdUksRUFBQTBzQixFQUFBbjVCLE1BQUEwcEIsRUFBQXNqQixFQUFBa0QsUUFBQWx3QyxLQUFBLFFBQUF1YSxFQUFBLEdBQUFtUCxFQUFBcmMsR0FBQSxNQUFBcWMsRUFBQW9uQixTQUFBcG5CLEVBQUFvbkIsUUFBQS82QixVQUFBLE1BQUEyVCxFQUFBb25CLFVBQUEsRUFBQTNYLEVBQUF0eUIsUUFBQTBULEVBQUFwWSxHQUFBc0ssRUFBQXlGLEtBQUEsZ0JBQUEsUUFBQXpGLEVBQUF5RixLQUFBLGdCQUFBLGNBQUEvUCxFQUFBb0IsVUFBQXd0QyxZQUFBLFNBQUF0a0MsR0FBQXpNLEtBQUF5d0MsY0FBQSxJQUFBL21CLEVBQUEsQ0FBQXRkLFVBQUEsRUFBQTRrQyxTQUFBLEVBQUF6dUMsS0FBQXZDLEtBQUFvRixRQUFBekIsSUFBQSxnQkFBQUEsSUFBQSxZQUFBM0QsQ0FBQXlNLElBQUE4TixFQUFBdmEsS0FBQXVtQixPQUFBbUQsR0FBQW5QLEVBQUFsSyxXQUFBLG1CQUFBclEsS0FBQXN3QyxTQUFBamdCLFFBQUE5VixJQUFBcFksRUFBQW9CLFVBQUFrdEMsWUFBQSxXQUFBendDLEtBQUFzd0MsU0FBQTMvQixLQUFBLG9CQUFBb04sVUFBQTViLEVBQUFvQixVQUFBZ2pCLE9BQUEsU0FBQTlaLEdBQUEsSUFBQWlkLEVBQUE5cEIsU0FBQTBDLGNBQUEsTUFBQW9uQixFQUFBclosVUFBQSwwQkFBQSxJQUFBa0ssRUFBQSxDQUFBMDJCLEtBQUEsV0FBQUMsZ0JBQUEsU0FBQSxJQUFBLElBQUEvdUMsS0FBQXNLLEVBQUFMLGtCQUFBbU8sRUFBQSxpQkFBQUEsRUFBQSxpQkFBQSxRQUFBLE1BQUE5TixFQUFBWSxXQUFBa04sRUFBQSxpQkFBQSxNQUFBOU4sRUFBQTBrQyxZQUFBem5CLEVBQUFyYyxHQUFBWixFQUFBMGtDLFdBQUExa0MsRUFBQTJrQyxRQUFBMW5CLEVBQUEwbkIsTUFBQTNrQyxFQUFBMmtDLE9BQUEza0MsRUFBQXlPLFdBQUFYLEVBQUEwMkIsS0FBQSxRQUFBMTJCLEVBQUEsY0FBQTlOLEVBQUFsSyxZQUFBZ1ksRUFBQSxrQkFBQUEsRUFBQSxDQUFBLElBQUE4eUIsRUFBQTl5QixFQUFBcFksR0FBQXVuQixFQUFBam5CLGFBQUFOLEVBQUFrckMsR0FBQSxHQUFBNWdDLEVBQUF5TyxTQUFBLENBQUEsSUFBQSt4QixFQUFBOVQsRUFBQXpQLEdBQUF5WCxFQUFBdmhDLFNBQUEwQyxjQUFBLFVBQUE2K0IsRUFBQTl3QixVQUFBLHlCQUFBOG9CLEVBQUFnSSxHQUFBbmhDLEtBQUFxeEMsU0FBQTVrQyxFQUFBMDBCLEdBQUEsSUFBQSxJQUFBLzNCLEVBQUEsR0FBQW1TLEVBQUEsRUFBQUEsRUFBQTlPLEVBQUF5TyxTQUFBNVgsT0FBQWlZLElBQUEsQ0FBQSxJQUFBK3hCLEVBQUE3Z0MsRUFBQXlPLFNBQUFLLEdBQUFneUIsRUFBQXZ0QyxLQUFBdW1CLE9BQUErbUIsR0FBQWxrQyxFQUFBeEksS0FBQTJzQyxHQUFBLElBQUFULEVBQUEzVCxFQUFBLFlBQUEsQ0FBQTJGLE1BQUEsOERBQUFnTyxFQUFBMWMsT0FBQWhuQixHQUFBNmpDLEVBQUE3YyxPQUFBK1EsR0FBQThMLEVBQUE3YyxPQUFBMGMsUUFBQTlzQyxLQUFBcXhDLFNBQUE1a0MsRUFBQWlkLEdBQUEsT0FBQXNqQixFQUFBaUQsVUFBQXZtQixFQUFBLE9BQUFqZCxHQUFBaWQsR0FBQXZuQixFQUFBb0IsVUFBQTYzQixLQUFBLFNBQUExUixFQUFBamQsR0FBQSxJQUFBOE8sRUFBQXZiLEtBQUF1YSxFQUFBbVAsRUFBQXJjLEdBQUEsV0FBQXJOLEtBQUFzd0MsU0FBQXArQixLQUFBLEtBQUFxSSxHQUFBbVAsRUFBQW5CLEdBQUEsY0FBQSxTQUFBOWIsR0FBQThPLEVBQUFnMUIsUUFBQWgxQixFQUFBNlUsT0FBQTNqQixFQUFBbVcsTUFBQThHLEVBQUE0bkIsV0FBQS8xQixFQUFBczFCLGFBQUF0MUIsRUFBQW8xQix3QkFBQWpuQixFQUFBbkIsR0FBQSxpQkFBQSxTQUFBOWIsR0FBQThPLEVBQUE2VSxPQUFBM2pCLEVBQUFtVyxNQUFBOEcsRUFBQTRuQixVQUFBLzFCLEVBQUFzMUIsZUFBQW5uQixFQUFBbkIsR0FBQSxRQUFBLFNBQUE5YixHQUFBOE8sRUFBQW0xQixlQUFBbjFCLEVBQUF3MUIsWUFBQXRrQyxLQUFBaWQsRUFBQW5CLEdBQUEsU0FBQSxXQUFBbUIsRUFBQTRuQixXQUFBLzFCLEVBQUFzMUIsYUFBQXQxQixFQUFBblcsUUFBQXpCLElBQUEsc0JBQUE0WCxFQUFBbzFCLHdCQUFBam5CLEVBQUFuQixHQUFBLFdBQUEsV0FBQW1CLEVBQUE0bkIsV0FBQS8xQixFQUFBczFCLGFBQUF0MUIsRUFBQW5XLFFBQUF6QixJQUFBLHNCQUFBNFgsRUFBQW8xQix3QkFBQWpuQixFQUFBbkIsR0FBQSxPQUFBLFdBQUFoTixFQUFBKzBCLFNBQUFwK0IsS0FBQSxnQkFBQSxRQUFBcUosRUFBQSswQixTQUFBcCtCLEtBQUEsY0FBQSxTQUFBcUosRUFBQXMxQixhQUFBdDFCLEVBQUFxMUIsMkJBQUFsbkIsRUFBQW5CLEdBQUEsUUFBQSxXQUFBaE4sRUFBQSswQixTQUFBcCtCLEtBQUEsZ0JBQUEsU0FBQXFKLEVBQUErMEIsU0FBQXArQixLQUFBLGNBQUEsUUFBQXFKLEVBQUErMEIsU0FBQXZTLFdBQUEsMkJBQUFyVSxFQUFBbkIsR0FBQSxpQkFBQSxXQUFBLElBQUE5YixFQUFBOE8sRUFBQWcyQix3QkFBQSxJQUFBOWtDLEVBQUFuSixRQUFBbUosRUFBQTRjLFFBQUEsYUFBQUssRUFBQW5CLEdBQUEsaUJBQUEsV0FBQSxJQUFBOWIsRUFBQThPLEVBQUFnMkIsd0JBQUEsR0FBQSxJQUFBOWtDLEVBQUFuSixPQUFBLENBQUEsSUFBQW9tQixFQUFBc2pCLEVBQUFrRCxRQUFBempDLEVBQUEsR0FBQSxRQUFBLFFBQUFBLEVBQUF5RixLQUFBLGlCQUFBcUosRUFBQThOLFFBQUEsUUFBQSxJQUFBOU4sRUFBQThOLFFBQUEsU0FBQSxDQUFBekcsS0FBQThHLE9BQUFBLEVBQUFuQixHQUFBLG1CQUFBLFdBQUEsSUFBQTliLEVBQUE4TyxFQUFBZzJCLHdCQUFBN25CLEVBQUFuTyxFQUFBKzBCLFNBQUEzL0IsS0FBQSxtQkFBQTRKLEVBQUFtUCxFQUFBak8sTUFBQWhQLEdBQUEsS0FBQThOLEdBQUEsR0FBQSxDQUFBLElBQUFwWSxFQUFBb1ksRUFBQSxFQUFBLElBQUE5TixFQUFBbkosU0FBQW5CLEVBQUEsR0FBQSxJQUFBa3JDLEVBQUEzakIsRUFBQWxsQixHQUFBckMsR0FBQWtyQyxFQUFBaGtCLFFBQUEsY0FBQSxJQUFBNGpCLEVBQUExeEIsRUFBQSswQixTQUFBbEcsU0FBQWw2QixJQUFBaXhCLEVBQUFrTSxFQUFBakQsU0FBQWw2QixJQUFBOUcsRUFBQW1TLEVBQUErMEIsU0FBQXRYLGFBQUFtSSxFQUFBOEwsR0FBQSxJQUFBOXFDLEVBQUFvWixFQUFBKzBCLFNBQUF0WCxVQUFBLEdBQUFtSSxFQUFBOEwsRUFBQSxHQUFBMXhCLEVBQUErMEIsU0FBQXRYLFVBQUE1dkIsTUFBQXNnQixFQUFBbkIsR0FBQSxlQUFBLFdBQUEsSUFBQTliLEVBQUE4TyxFQUFBZzJCLHdCQUFBN25CLEVBQUFuTyxFQUFBKzBCLFNBQUEzL0IsS0FBQSxtQkFBQTRKLEVBQUFtUCxFQUFBak8sTUFBQWhQLEdBQUEsRUFBQSxLQUFBOE4sR0FBQW1QLEVBQUFwbUIsUUFBQSxDQUFBLElBQUFuQixFQUFBdW5CLEVBQUFsbEIsR0FBQStWLEdBQUFwWSxFQUFBa25CLFFBQUEsY0FBQSxJQUFBZ2tCLEVBQUE5eEIsRUFBQSswQixTQUFBbEcsU0FBQWw2QixJQUFBcUwsRUFBQSswQixTQUFBa0IsYUFBQSxHQUFBdkUsRUFBQTlxQyxFQUFBaW9DLFNBQUFsNkIsSUFBQS9OLEVBQUFxdkMsYUFBQSxHQUFBclEsRUFBQTVsQixFQUFBKzBCLFNBQUF0WCxZQUFBaVUsRUFBQUksRUFBQSxJQUFBOXlCLEVBQUFnQixFQUFBKzBCLFNBQUF0WCxVQUFBLEdBQUFxVSxFQUFBSixHQUFBMXhCLEVBQUErMEIsU0FBQXRYLFVBQUFtSSxNQUFBelgsRUFBQW5CLEdBQUEsZ0JBQUEsU0FBQTliLEdBQUFBLEVBQUFxa0MsUUFBQS9SLFNBQUEsMENBQUFyVixFQUFBbkIsR0FBQSxrQkFBQSxTQUFBOWIsR0FBQThPLEVBQUFpMUIsZUFBQS9qQyxLQUFBMHNCLEVBQUFoMkIsR0FBQXN1QyxZQUFBenhDLEtBQUFzd0MsU0FBQS9uQixHQUFBLGFBQUEsU0FBQTliLEdBQUEsSUFBQWlkLEVBQUFuTyxFQUFBKzBCLFNBQUF0WCxZQUFBemUsRUFBQWdCLEVBQUErMEIsU0FBQTNzQyxJQUFBLEdBQUF3ckMsYUFBQXpsQixFQUFBamQsRUFBQWlsQyxPQUFBdnZDLEVBQUEsRUFBQXNLLEVBQUFpbEMsUUFBQWhvQixFQUFBamQsRUFBQWlsQyxRQUFBLEVBQUFyRSxFQUFBNWdDLEVBQUFpbEMsT0FBQSxHQUFBbjNCLEdBQUFnQixFQUFBKzBCLFNBQUFyYyxTQUFBOXhCLEdBQUFvWixFQUFBKzBCLFNBQUF0WCxVQUFBLEdBQUF2c0IsRUFBQTJjLGlCQUFBM2MsRUFBQXljLG1CQUFBbWtCLElBQUE5eEIsRUFBQSswQixTQUFBdFgsVUFBQXpkLEVBQUErMEIsU0FBQTNzQyxJQUFBLEdBQUF3ckMsYUFBQTV6QixFQUFBKzBCLFNBQUFyYyxVQUFBeG5CLEVBQUEyYyxpQkFBQTNjLEVBQUF5YyxxQkFBQWxwQixLQUFBc3dDLFNBQUEvbkIsR0FBQSxVQUFBLDBDQUFBLFNBQUE5YixHQUFBLElBQUFpZCxFQUFBeVAsRUFBQW41QixNQUFBdWEsRUFBQXl5QixFQUFBa0QsUUFBQWx3QyxLQUFBLFFBQUEsU0FBQTBwQixFQUFBeFgsS0FBQSxpQkFBQXFKLEVBQUE4TixRQUFBLFNBQUEsQ0FBQXFDLGNBQUFqZixFQUFBbVcsS0FBQXJJLElBQUFnQixFQUFBblcsUUFBQXpCLElBQUEsWUFBQTRYLEVBQUE4TixRQUFBLFdBQUEsQ0FBQXFDLGNBQUFqZixFQUFBbVcsS0FBQXJJLElBQUFnQixFQUFBOE4sUUFBQSxRQUFBLE1BQUFycEIsS0FBQXN3QyxTQUFBL25CLEdBQUEsYUFBQSwwQ0FBQSxTQUFBOWIsR0FBQSxJQUFBaWQsRUFBQXNqQixFQUFBa0QsUUFBQWx3QyxLQUFBLFFBQUF1YixFQUFBZzJCLHdCQUFBcFMsWUFBQSx3Q0FBQTVqQixFQUFBOE4sUUFBQSxnQkFBQSxDQUFBekcsS0FBQThHLEVBQUFvbkIsUUFBQTNYLEVBQUFuNUIsV0FBQW1DLEVBQUFvQixVQUFBZ3VDLHNCQUFBLFdBQUEsT0FBQXZ4QyxLQUFBc3dDLFNBQUEzL0IsS0FBQSwwQ0FBQXhPLEVBQUFvQixVQUFBb3VDLFFBQUEsV0FBQTN4QyxLQUFBc3dDLFNBQUF2eUIsVUFBQTViLEVBQUFvQixVQUFBcXRDLHVCQUFBLFdBQUEsSUFBQW5rQyxFQUFBek0sS0FBQXV4Qyx3QkFBQSxHQUFBLElBQUE5a0MsRUFBQW5KLE9BQUEsQ0FBQSxJQUFBb21CLEVBQUExcEIsS0FBQXN3QyxTQUFBMy9CLEtBQUEsbUJBQUE4SyxNQUFBaFAsR0FBQThOLEVBQUF2YSxLQUFBc3dDLFNBQUFsRyxTQUFBbDZCLElBQUEvTixFQUFBc0ssRUFBQTI5QixTQUFBbDZCLElBQUFtOUIsRUFBQXJ0QyxLQUFBc3dDLFNBQUF0WCxhQUFBNzJCLEVBQUFvWSxHQUFBMHlCLEVBQUE5cUMsRUFBQW9ZLEVBQUE4eUIsR0FBQSxFQUFBNWdDLEVBQUEra0MsYUFBQSxHQUFBOW5CLEdBQUEsRUFBQTFwQixLQUFBc3dDLFNBQUF0WCxVQUFBLElBQUFpVSxFQUFBanRDLEtBQUFzd0MsU0FBQWtCLGVBQUF2RSxFQUFBLElBQUFqdEMsS0FBQXN3QyxTQUFBdFgsVUFBQXFVLEtBQUFsckMsRUFBQW9CLFVBQUE4dEMsU0FBQSxTQUFBNWtDLEVBQUFpZCxHQUFBLElBQUFuUCxFQUFBdmEsS0FBQW9GLFFBQUF6QixJQUFBLGtCQUFBeEIsRUFBQW5DLEtBQUFvRixRQUFBekIsSUFBQSxnQkFBQTBwQyxFQUFBOXlCLEVBQUE5TixFQUFBaWQsR0FBQSxNQUFBMmpCLEVBQUEzakIsRUFBQWhGLE1BQUFDLFFBQUEsT0FBQSxpQkFBQTBvQixFQUFBM2pCLEVBQUExWSxVQUFBN08sRUFBQWtyQyxHQUFBbFUsRUFBQXpQLEdBQUEwRyxPQUFBaWQsSUFBQWxyQyxJQUFBc0ssRUFBQTgvQixPQUFBLGVBQUEsR0FBQSxXQUFBLE1BQUEsQ0FBQXFGLFVBQUEsRUFBQUMsSUFBQSxFQUFBQyxNQUFBLEdBQUFDLE1BQUEsR0FBQUMsS0FBQSxHQUFBQyxJQUFBLEdBQUFDLElBQUEsR0FBQUMsTUFBQSxHQUFBQyxRQUFBLEdBQUFDLFVBQUEsR0FBQUMsSUFBQSxHQUFBQyxLQUFBLEdBQUFDLEtBQUEsR0FBQUMsR0FBQSxHQUFBQyxNQUFBLEdBQUFDLEtBQUEsR0FBQUMsT0FBQSxNQUFBbm1DLEVBQUE4L0IsT0FBQSx5QkFBQSxDQUFBLFNBQUEsV0FBQSxXQUFBLFNBQUFoeUIsRUFBQXBZLEVBQUFrckMsR0FBQSxTQUFBSixFQUFBeGdDLEVBQUFpZCxHQUFBMXBCLEtBQUFvd0MsU0FBQTNqQyxFQUFBek0sS0FBQW9GLFFBQUFza0IsRUFBQXVqQixFQUFBdUIsVUFBQS9xQyxZQUFBaEQsS0FBQVQsTUFBQSxPQUFBbUMsRUFBQW9zQyxPQUFBdEIsRUFBQTlxQyxFQUFBMHNDLFlBQUE1QixFQUFBMXBDLFVBQUE4c0MsT0FBQSxXQUFBLElBQUE1akMsRUFBQThOLEVBQUEsdUdBQUEsT0FBQXZhLEtBQUE2eUMsVUFBQSxFQUFBLE1BQUExd0MsRUFBQSt0QyxRQUFBbHdDLEtBQUFvd0MsU0FBQSxHQUFBLGdCQUFBcHdDLEtBQUE2eUMsVUFBQTF3QyxFQUFBK3RDLFFBQUFsd0MsS0FBQW93QyxTQUFBLEdBQUEsZ0JBQUEsTUFBQXB3QyxLQUFBb3dDLFNBQUFsK0IsS0FBQSxjQUFBbFMsS0FBQTZ5QyxVQUFBN3lDLEtBQUFvd0MsU0FBQWwrQixLQUFBLGFBQUF6RixFQUFBeUYsS0FBQSxRQUFBbFMsS0FBQW93QyxTQUFBbCtCLEtBQUEsVUFBQXpGLEVBQUF5RixLQUFBLFdBQUFsUyxLQUFBNnlDLFdBQUE3eUMsS0FBQTh5QyxXQUFBcm1DLEdBQUF3Z0MsRUFBQTFwQyxVQUFBNjNCLEtBQUEsU0FBQTN1QixFQUFBaWQsR0FBQSxJQUFBblAsRUFBQXZhLEtBQUFtQyxHQUFBc0ssRUFBQVksR0FBQVosRUFBQVksR0FBQSxZQUFBck4sS0FBQXN5QixVQUFBN2xCLEVBQUF6TSxLQUFBOHlDLFdBQUF2cUIsR0FBQSxRQUFBLFNBQUE5YixHQUFBOE4sRUFBQThPLFFBQUEsUUFBQTVjLEtBQUF6TSxLQUFBOHlDLFdBQUF2cUIsR0FBQSxPQUFBLFNBQUE5YixHQUFBOE4sRUFBQXc0QixZQUFBdG1DLEtBQUF6TSxLQUFBOHlDLFdBQUF2cUIsR0FBQSxVQUFBLFNBQUE5YixHQUFBOE4sRUFBQThPLFFBQUEsV0FBQTVjLEdBQUFBLEVBQUEwaEIsUUFBQWtmLEVBQUE4RSxPQUFBMWxDLEVBQUEyYyxtQkFBQTNjLEVBQUE4YixHQUFBLGdCQUFBLFNBQUE5YixHQUFBOE4sRUFBQXU0QixXQUFBNWdDLEtBQUEsd0JBQUF6RixFQUFBbVcsS0FBQXV1QixhQUFBMWtDLEVBQUE4YixHQUFBLG1CQUFBLFNBQUE5YixHQUFBOE4sRUFBQXk0QixPQUFBdm1DLEVBQUFtVyxRQUFBblcsRUFBQThiLEdBQUEsT0FBQSxXQUFBaE8sRUFBQXU0QixXQUFBNWdDLEtBQUEsZ0JBQUEsUUFBQXFJLEVBQUF1NEIsV0FBQTVnQyxLQUFBLFlBQUEvUCxHQUFBb1ksRUFBQTA0QixvQkFBQXhtQyxLQUFBQSxFQUFBOGIsR0FBQSxRQUFBLFdBQUFoTyxFQUFBdTRCLFdBQUE1Z0MsS0FBQSxnQkFBQSxTQUFBcUksRUFBQXU0QixXQUFBL1UsV0FBQSx5QkFBQXhqQixFQUFBdTRCLFdBQUEvVSxXQUFBLGFBQUFoK0IsT0FBQWtnQixXQUFBLFdBQUExRixFQUFBdTRCLFdBQUF0OUIsU0FBQSxHQUFBK0UsRUFBQTI0QixvQkFBQXptQyxLQUFBQSxFQUFBOGIsR0FBQSxTQUFBLFdBQUFoTyxFQUFBdTRCLFdBQUE1Z0MsS0FBQSxXQUFBcUksRUFBQXM0QixhQUFBcG1DLEVBQUE4YixHQUFBLFVBQUEsV0FBQWhPLEVBQUF1NEIsV0FBQTVnQyxLQUFBLFdBQUEsU0FBQSs2QixFQUFBMXBDLFVBQUF3dkMsWUFBQSxTQUFBdG1DLEdBQUEsSUFBQWlkLEVBQUExcEIsS0FBQUQsT0FBQWtnQixXQUFBLFdBQUFyZ0IsU0FBQTZWLGVBQUFpVSxFQUFBb3BCLFdBQUEsSUFBQXY0QixFQUFBOVIsU0FBQWloQixFQUFBb3BCLFdBQUEsR0FBQWx6QyxTQUFBNlYsZ0JBQUFpVSxFQUFBTCxRQUFBLE9BQUE1YyxJQUFBLElBQUF3Z0MsRUFBQTFwQyxVQUFBMHZDLG9CQUFBLFNBQUF4bUMsR0FBQThOLEVBQUEzYSxTQUFBZ21CLE1BQUEyQyxHQUFBLHFCQUFBOWIsRUFBQVksR0FBQSxTQUFBWixHQUFBLElBQUFpZCxFQUFBblAsRUFBQTlOLEVBQUFoSCxRQUFBK1YsUUFBQSxZQUFBakIsRUFBQSxvQ0FBQXJXLEtBQUEsV0FBQXFXLEVBQUF2YSxNQUFBQSxNQUFBMHBCLEVBQUEsSUFBQXZuQixFQUFBK3RDLFFBQUFsd0MsS0FBQSxXQUFBK3NDLFFBQUEsY0FBQUUsRUFBQTFwQyxVQUFBMnZDLG9CQUFBLFNBQUF6bUMsR0FBQThOLEVBQUEzYSxTQUFBZ21CLE1BQUFnRCxJQUFBLHFCQUFBbmMsRUFBQVksS0FBQTQvQixFQUFBMXBDLFVBQUF5dkIsU0FBQSxTQUFBdm1CLEVBQUFpZCxHQUFBQSxFQUFBL1ksS0FBQSxjQUFBeWYsT0FBQTNqQixJQUFBd2dDLEVBQUExcEMsVUFBQW91QyxRQUFBLFdBQUEzeEMsS0FBQWt6QyxvQkFBQWx6QyxLQUFBc3lCLFlBQUEyYSxFQUFBMXBDLFVBQUF5dkMsT0FBQSxTQUFBdm1DLEdBQUEsTUFBQSxJQUFBM00sTUFBQSwwREFBQW10QyxJQUFBeGdDLEVBQUE4L0IsT0FBQSwyQkFBQSxDQUFBLFNBQUEsU0FBQSxXQUFBLFdBQUEsU0FBQTkvQixFQUFBaWQsRUFBQW5QLEVBQUFwWSxHQUFBLFNBQUFrckMsSUFBQUEsRUFBQW1CLFVBQUEvcUMsWUFBQTlDLE1BQUFYLEtBQUFzRSxXQUFBLE9BQUFpVyxFQUFBZzBCLE9BQUFsQixFQUFBM2pCLEdBQUEyakIsRUFBQTlwQyxVQUFBOHNDLE9BQUEsV0FBQSxJQUFBNWpDLEVBQUE0Z0MsRUFBQW1CLFVBQUE2QixPQUFBNXZDLEtBQUFULE1BQUEsT0FBQXlNLEVBQUFzeUIsU0FBQSw2QkFBQXR5QixFQUFBaWpCLEtBQUEsa0pBQUFqakIsR0FBQTRnQyxFQUFBOXBDLFVBQUE2M0IsS0FBQSxTQUFBMVIsRUFBQWpkLEdBQUEsSUFBQThOLEVBQUF2YSxLQUFBcXRDLEVBQUFtQixVQUFBcFQsS0FBQXo2QixNQUFBWCxLQUFBc0UsV0FBQSxJQUFBbkMsRUFBQXVuQixFQUFBcmMsR0FBQSxhQUFBck4sS0FBQTh5QyxXQUFBbmlDLEtBQUEsZ0NBQUF1QixLQUFBLEtBQUEvUCxHQUFBK1AsS0FBQSxPQUFBLFdBQUFBLEtBQUEsZ0JBQUEsUUFBQWxTLEtBQUE4eUMsV0FBQTVnQyxLQUFBLGtCQUFBL1AsR0FBQW5DLEtBQUE4eUMsV0FBQXZxQixHQUFBLFlBQUEsU0FBQTliLEdBQUEsSUFBQUEsRUFBQTBoQixPQUFBNVQsRUFBQThPLFFBQUEsU0FBQSxDQUFBcUMsY0FBQWpmLE1BQUF6TSxLQUFBOHlDLFdBQUF2cUIsR0FBQSxRQUFBLFNBQUE5YixNQUFBek0sS0FBQTh5QyxXQUFBdnFCLEdBQUEsT0FBQSxTQUFBOWIsTUFBQWlkLEVBQUFuQixHQUFBLFFBQUEsU0FBQTliLEdBQUFpZCxFQUFBNG5CLFVBQUEvMkIsRUFBQXU0QixXQUFBdDlCLFdBQUE2M0IsRUFBQTlwQyxVQUFBZ3RDLE1BQUEsV0FBQSxJQUFBOWpDLEVBQUF6TSxLQUFBOHlDLFdBQUFuaUMsS0FBQSxnQ0FBQWxFLEVBQUF3SixRQUFBeEosRUFBQXN4QixXQUFBLFVBQUFzUCxFQUFBOXBDLFVBQUFvaEIsUUFBQSxTQUFBbFksRUFBQWlkLEdBQUEsSUFBQW5QLEVBQUF2YSxLQUFBb0YsUUFBQXpCLElBQUEscUJBQUEsT0FBQTNELEtBQUFvRixRQUFBekIsSUFBQSxlQUFBM0QsQ0FBQXVhLEVBQUE5TixFQUFBaWQsS0FBQTJqQixFQUFBOXBDLFVBQUE0dkMsbUJBQUEsV0FBQSxPQUFBMW1DLEVBQUEsa0JBQUE0Z0MsRUFBQTlwQyxVQUFBeXZDLE9BQUEsU0FBQXZtQyxHQUFBLEdBQUEsSUFBQUEsRUFBQW5KLE9BQUEsQ0FBQSxJQUFBb21CLEVBQUFqZCxFQUFBLEdBQUE4TixFQUFBdmEsS0FBQTh5QyxXQUFBbmlDLEtBQUEsZ0NBQUF4TyxFQUFBbkMsS0FBQTJrQixRQUFBK0UsRUFBQW5QLEdBQUFBLEVBQUF0RSxRQUFBbWEsT0FBQWp1QixHQUFBb1ksRUFBQXJJLEtBQUEsUUFBQXdYLEVBQUEwbkIsT0FBQTFuQixFQUFBbm5CLFdBQUF2QyxLQUFBdXdDLFNBQUFsRCxJQUFBNWdDLEVBQUE4L0IsT0FBQSw2QkFBQSxDQUFBLFNBQUEsU0FBQSxZQUFBLFNBQUFjLEVBQUE1Z0MsRUFBQXJELEdBQUEsU0FBQW1SLEVBQUE5TixFQUFBaWQsR0FBQW5QLEVBQUFpMEIsVUFBQS9xQyxZQUFBOUMsTUFBQVgsS0FBQXNFLFdBQUEsT0FBQThFLEVBQUFtbEMsT0FBQWgwQixFQUFBOU4sR0FBQThOLEVBQUFoWCxVQUFBOHNDLE9BQUEsV0FBQSxJQUFBNWpDLEVBQUE4TixFQUFBaTBCLFVBQUE2QixPQUFBNXZDLEtBQUFULE1BQUEsT0FBQXlNLEVBQUFzeUIsU0FBQSwrQkFBQXR5QixFQUFBaWpCLEtBQUEsaURBQUFqakIsR0FBQThOLEVBQUFoWCxVQUFBNjNCLEtBQUEsU0FBQTN1QixFQUFBaWQsR0FBQSxJQUFBdm5CLEVBQUFuQyxLQUFBdWEsRUFBQWkwQixVQUFBcFQsS0FBQXo2QixNQUFBWCxLQUFBc0UsV0FBQXRFLEtBQUE4eUMsV0FBQXZxQixHQUFBLFFBQUEsU0FBQTliLEdBQUF0SyxFQUFBa25CLFFBQUEsU0FBQSxDQUFBcUMsY0FBQWpmLE1BQUF6TSxLQUFBOHlDLFdBQUF2cUIsR0FBQSxRQUFBLHFDQUFBLFNBQUE5YixHQUFBLElBQUF0SyxFQUFBaUQsUUFBQXpCLElBQUEsWUFBQSxDQUFBLElBQUErbEIsRUFBQTJqQixFQUFBcnRDLE1BQUFzVSxTQUFBaUcsRUFBQW5SLEVBQUE4bUMsUUFBQXhtQixFQUFBLEdBQUEsUUFBQXZuQixFQUFBa25CLFFBQUEsV0FBQSxDQUFBcUMsY0FBQWpmLEVBQUFtVyxLQUFBckksUUFBQUEsRUFBQWhYLFVBQUFndEMsTUFBQSxXQUFBLElBQUE5akMsRUFBQXpNLEtBQUE4eUMsV0FBQW5pQyxLQUFBLGdDQUFBbEUsRUFBQXdKLFFBQUF4SixFQUFBc3hCLFdBQUEsVUFBQXhqQixFQUFBaFgsVUFBQW9oQixRQUFBLFNBQUFsWSxFQUFBaWQsR0FBQSxJQUFBblAsRUFBQXZhLEtBQUFvRixRQUFBekIsSUFBQSxxQkFBQSxPQUFBM0QsS0FBQW9GLFFBQUF6QixJQUFBLGVBQUEzRCxDQUFBdWEsRUFBQTlOLEVBQUFpZCxLQUFBblAsRUFBQWhYLFVBQUE0dkMsbUJBQUEsV0FBQSxPQUFBOUYsRUFBQSxrSUFBQTl5QixFQUFBaFgsVUFBQXl2QyxPQUFBLFNBQUF2bUMsR0FBQSxHQUFBek0sS0FBQXV3QyxRQUFBLElBQUE5akMsRUFBQW5KLE9BQUEsQ0FBQSxJQUFBLElBQUFvbUIsRUFBQSxHQUFBblAsRUFBQSxFQUFBQSxFQUFBOU4sRUFBQW5KLE9BQUFpWCxJQUFBLENBQUEsSUFBQXBZLEVBQUFzSyxFQUFBOE4sR0FBQTh5QixFQUFBcnRDLEtBQUFtekMscUJBQUFsRyxFQUFBanRDLEtBQUEya0IsUUFBQXhpQixFQUFBa3JDLEdBQUFBLEVBQUFqZCxPQUFBNmMsR0FBQUksRUFBQW43QixLQUFBLFFBQUEvUCxFQUFBaXZDLE9BQUFqdkMsRUFBQUksTUFBQTZHLEVBQUE2bUMsVUFBQTVDLEVBQUEsR0FBQSxPQUFBbHJDLEdBQUF1bkIsRUFBQTlvQixLQUFBeXNDLEdBQUEsSUFBQWxNLEVBQUFuaEMsS0FBQTh5QyxXQUFBbmlDLEtBQUEsZ0NBQUF2SCxFQUFBeW1DLFdBQUExTyxFQUFBelgsS0FBQW5QLElBQUE5TixFQUFBOC9CLE9BQUEsZ0NBQUEsQ0FBQSxZQUFBLFNBQUE5L0IsR0FBQSxTQUFBaWQsRUFBQWpkLEVBQUFpZCxFQUFBblAsR0FBQXZhLEtBQUFvekMsWUFBQXB6QyxLQUFBcXpDLHFCQUFBOTRCLEVBQUE1VyxJQUFBLGdCQUFBOEksRUFBQWhNLEtBQUFULEtBQUEwcEIsRUFBQW5QLEdBQUEsT0FBQW1QLEVBQUFubUIsVUFBQTh2QyxxQkFBQSxTQUFBNW1DLEVBQUFpZCxHQUFBLE1BQUEsaUJBQUFBLElBQUFBLEVBQUEsQ0FBQXJjLEdBQUEsR0FBQTlLLEtBQUFtbkIsSUFBQUEsR0FBQUEsRUFBQW5tQixVQUFBK3ZDLGtCQUFBLFNBQUE3bUMsRUFBQWlkLEdBQUEsSUFBQW5QLEVBQUF2YSxLQUFBbXpDLHFCQUFBLE9BQUE1NEIsRUFBQW1WLEtBQUExdkIsS0FBQTJrQixRQUFBK0UsSUFBQW5QLEVBQUF3a0IsU0FBQSxrQ0FBQUksWUFBQSw2QkFBQTVrQixHQUFBbVAsRUFBQW5tQixVQUFBeXZDLE9BQUEsU0FBQXZtQyxFQUFBaWQsR0FBQSxJQUFBblAsRUFBQSxHQUFBbVAsRUFBQXBtQixRQUFBb21CLEVBQUEsR0FBQXJjLElBQUFyTixLQUFBb3pDLFlBQUEvbEMsR0FBQSxHQUFBLEVBQUFxYyxFQUFBcG1CLFFBQUFpWCxFQUFBLE9BQUE5TixFQUFBaE0sS0FBQVQsS0FBQTBwQixHQUFBMXBCLEtBQUF1d0MsUUFBQSxJQUFBcHVDLEVBQUFuQyxLQUFBc3pDLGtCQUFBdHpDLEtBQUFvekMsYUFBQXB6QyxLQUFBOHlDLFdBQUFuaUMsS0FBQSxnQ0FBQXlmLE9BQUFqdUIsSUFBQXVuQixJQUFBamQsRUFBQTgvQixPQUFBLCtCQUFBLENBQUEsU0FBQSxVQUFBLFlBQUEsU0FBQWMsRUFBQWxyQyxFQUFBaUgsR0FBQSxTQUFBcUQsS0FBQSxPQUFBQSxFQUFBbEosVUFBQTYzQixLQUFBLFNBQUEzdUIsRUFBQWlkLEVBQUFuUCxHQUFBLElBQUFwWSxFQUFBbkMsS0FBQXlNLEVBQUFoTSxLQUFBVCxLQUFBMHBCLEVBQUFuUCxHQUFBLE1BQUF2YSxLQUFBb3pDLGFBQUFwekMsS0FBQW9GLFFBQUF6QixJQUFBLFVBQUE1RCxPQUFBNmdCLFNBQUFBLFFBQUF4YSxPQUFBd2EsUUFBQXhhLE1BQUEsaUdBQUFwRyxLQUFBOHlDLFdBQUF2cUIsR0FBQSxZQUFBLDRCQUFBLFNBQUE5YixHQUFBdEssRUFBQW94QyxhQUFBOW1DLEtBQUFpZCxFQUFBbkIsR0FBQSxXQUFBLFNBQUE5YixHQUFBdEssRUFBQXF4QyxxQkFBQS9tQyxFQUFBaWQsTUFBQWpkLEVBQUFsSixVQUFBZ3dDLGFBQUEsU0FBQTltQyxFQUFBaWQsR0FBQSxJQUFBMXBCLEtBQUFvRixRQUFBekIsSUFBQSxZQUFBLENBQUEsSUFBQTRXLEVBQUF2YSxLQUFBOHlDLFdBQUFuaUMsS0FBQSw2QkFBQSxHQUFBLElBQUE0SixFQUFBalgsT0FBQSxDQUFBb21CLEVBQUFSLGtCQUFBLElBQUEvbUIsRUFBQWlILEVBQUE4bUMsUUFBQTMxQixFQUFBLEdBQUEsUUFBQTh5QixFQUFBcnRDLEtBQUFvd0MsU0FBQWh1QyxNQUFBcEMsS0FBQW93QyxTQUFBaHVDLElBQUFwQyxLQUFBb3pDLFlBQUEvbEMsSUFBQSxJQUFBNC9CLEVBQUEsQ0FBQXJxQixLQUFBemdCLEdBQUEsR0FBQW5DLEtBQUFxcEIsUUFBQSxRQUFBNGpCLEdBQUFBLEVBQUF3RyxVQUFBenpDLEtBQUFvd0MsU0FBQWh1QyxJQUFBaXJDLE9BQUEsQ0FBQSxJQUFBLElBQUFsTSxFQUFBLEVBQUFBLEVBQUFoL0IsRUFBQW1CLE9BQUE2OUIsSUFBQSxHQUFBOEwsRUFBQSxDQUFBcnFCLEtBQUF6Z0IsRUFBQWcvQixJQUFBbmhDLEtBQUFxcEIsUUFBQSxXQUFBNGpCLEdBQUFBLEVBQUF3RyxVQUFBLFlBQUF6ekMsS0FBQW93QyxTQUFBaHVDLElBQUFpckMsR0FBQXJ0QyxLQUFBb3dDLFNBQUEvbUIsUUFBQSxVQUFBcnBCLEtBQUFxcEIsUUFBQSxTQUFBLFFBQUE1YyxFQUFBbEosVUFBQWl3QyxxQkFBQSxTQUFBL21DLEVBQUFpZCxFQUFBblAsR0FBQUEsRUFBQSsyQixVQUFBNW5CLEVBQUF5RSxPQUFBaHNCLEVBQUF5d0MsUUFBQWxwQixFQUFBeUUsT0FBQWhzQixFQUFBeXZDLFdBQUE1eEMsS0FBQXV6QyxhQUFBN3BCLElBQUFqZCxFQUFBbEosVUFBQXl2QyxPQUFBLFNBQUF2bUMsRUFBQWlkLEdBQUEsR0FBQWpkLEVBQUFoTSxLQUFBVCxLQUFBMHBCLEtBQUEsRUFBQTFwQixLQUFBOHlDLFdBQUFuaUMsS0FBQSxtQ0FBQXJOLFFBQUEsSUFBQW9tQixFQUFBcG1CLFFBQUEsQ0FBQSxJQUFBaVgsRUFBQXZhLEtBQUFvRixRQUFBekIsSUFBQSxnQkFBQUEsSUFBQSxrQkFBQXhCLEVBQUFrckMsRUFBQSxpREFBQTl5QixJQUFBLG9CQUFBblIsRUFBQTZtQyxVQUFBOXRDLEVBQUEsR0FBQSxPQUFBdW5CLEdBQUExcEIsS0FBQTh5QyxXQUFBbmlDLEtBQUEsZ0NBQUEwZixRQUFBbHVCLEtBQUFzSyxJQUFBQSxFQUFBOC9CLE9BQUEsMkJBQUEsQ0FBQSxTQUFBLFdBQUEsV0FBQSxTQUFBcHFDLEVBQUFnL0IsRUFBQS8zQixHQUFBLFNBQUFxRCxFQUFBQSxFQUFBaWQsRUFBQW5QLEdBQUE5TixFQUFBaE0sS0FBQVQsS0FBQTBwQixFQUFBblAsR0FBQSxPQUFBOU4sRUFBQWxKLFVBQUE4c0MsT0FBQSxTQUFBNWpDLEdBQUEsSUFBQWlkLEVBQUF2bkIsRUFBQSxvUEFBQW5DLEtBQUEwekMsaUJBQUFocUIsRUFBQTFwQixLQUFBMnpDLFFBQUFqcUIsRUFBQS9ZLEtBQUEsU0FBQSxJQUFBNEosRUFBQTlOLEVBQUFoTSxLQUFBVCxNQUFBLE9BQUFBLEtBQUE0ekMsb0JBQUFyNUIsR0FBQTlOLEVBQUFsSixVQUFBNjNCLEtBQUEsU0FBQTN1QixFQUFBaWQsRUFBQW5QLEdBQUEsSUFBQXBZLEVBQUFuQyxLQUFBeU0sRUFBQWhNLEtBQUFULEtBQUEwcEIsRUFBQW5QLEdBQUFtUCxFQUFBbkIsR0FBQSxPQUFBLFdBQUFwbUIsRUFBQXd4QyxRQUFBdHFCLFFBQUEsV0FBQUssRUFBQW5CLEdBQUEsUUFBQSxXQUFBcG1CLEVBQUF3eEMsUUFBQXZ4QyxJQUFBLElBQUFELEVBQUF3eEMsUUFBQTVWLFdBQUEseUJBQUE1N0IsRUFBQXd4QyxRQUFBdHFCLFFBQUEsV0FBQUssRUFBQW5CLEdBQUEsU0FBQSxXQUFBcG1CLEVBQUF3eEMsUUFBQTl3QixLQUFBLFlBQUEsR0FBQTFnQixFQUFBeXhDLHNCQUFBbHFCLEVBQUFuQixHQUFBLFVBQUEsV0FBQXBtQixFQUFBd3hDLFFBQUE5d0IsS0FBQSxZQUFBLEtBQUE2RyxFQUFBbkIsR0FBQSxRQUFBLFNBQUE5YixHQUFBdEssRUFBQXd4QyxRQUFBdHFCLFFBQUEsV0FBQUssRUFBQW5CLEdBQUEsZ0JBQUEsU0FBQTliLEdBQUF0SyxFQUFBd3hDLFFBQUF6aEMsS0FBQSx3QkFBQXpGLEVBQUFZLE1BQUFyTixLQUFBOHlDLFdBQUF2cUIsR0FBQSxVQUFBLDBCQUFBLFNBQUE5YixHQUFBdEssRUFBQWtuQixRQUFBLFFBQUE1YyxLQUFBek0sS0FBQTh5QyxXQUFBdnFCLEdBQUEsV0FBQSwwQkFBQSxTQUFBOWIsR0FBQXRLLEVBQUE0d0MsWUFBQXRtQyxLQUFBek0sS0FBQTh5QyxXQUFBdnFCLEdBQUEsVUFBQSwwQkFBQSxTQUFBOWIsR0FBQSxHQUFBQSxFQUFBeWMsa0JBQUEvbUIsRUFBQWtuQixRQUFBLFdBQUE1YyxHQUFBdEssRUFBQTB4QyxnQkFBQXBuQyxFQUFBeWYscUJBQUF6ZixFQUFBMGhCLFFBQUEva0IsRUFBQXdvQyxXQUFBLEtBQUF6dkMsRUFBQXd4QyxRQUFBdnhDLE1BQUEsQ0FBQSxJQUFBc25CLEVBQUF2bkIsRUFBQXV4QyxpQkFBQXQ0QixLQUFBLDhCQUFBLEdBQUEsRUFBQXNPLEVBQUFwbUIsT0FBQSxDQUFBLElBQUFpWCxFQUFBNG1CLEVBQUErTyxRQUFBeG1CLEVBQUEsR0FBQSxRQUFBdm5CLEVBQUEyeEMsbUJBQUF2NUIsR0FBQTlOLEVBQUEyYyxxQkFBQSxJQUFBaWtCLEVBQUF6dEMsU0FBQW0wQyxhQUFBOUcsRUFBQUksR0FBQUEsR0FBQSxHQUFBcnRDLEtBQUE4eUMsV0FBQXZxQixHQUFBLG9CQUFBLDBCQUFBLFNBQUE5YixHQUFBd2dDLEVBQUE5cUMsRUFBQTJ3QyxXQUFBbHFCLElBQUEsa0NBQUF6bUIsRUFBQTJ3QyxXQUFBbHFCLElBQUEsa0JBQUE1b0IsS0FBQTh5QyxXQUFBdnFCLEdBQUEsNEJBQUEsMEJBQUEsU0FBQTliLEdBQUEsR0FBQXdnQyxHQUFBLFVBQUF4Z0MsRUFBQTlLLEtBQUFRLEVBQUEyd0MsV0FBQWxxQixJQUFBLHNDQUFBLENBQUEsSUFBQWMsRUFBQWpkLEVBQUEwaEIsTUFBQXpFLEdBQUF0Z0IsRUFBQTJvQyxPQUFBcm9CLEdBQUF0Z0IsRUFBQTRvQyxNQUFBdG9CLEdBQUF0Z0IsRUFBQTZvQyxLQUFBdm9CLEdBQUF0Z0IsRUFBQXlvQyxLQUFBMXZDLEVBQUE2eEMsYUFBQXZuQyxPQUFBQSxFQUFBbEosVUFBQXF3QyxrQkFBQSxTQUFBbm5DLEdBQUF6TSxLQUFBMnpDLFFBQUF6aEMsS0FBQSxXQUFBbFMsS0FBQTh5QyxXQUFBNWdDLEtBQUEsYUFBQWxTLEtBQUE4eUMsV0FBQTVnQyxLQUFBLFdBQUEsT0FBQXpGLEVBQUFsSixVQUFBK3ZDLGtCQUFBLFNBQUE3bUMsRUFBQWlkLEdBQUExcEIsS0FBQTJ6QyxRQUFBemhDLEtBQUEsY0FBQXdYLEVBQUFubkIsT0FBQWtLLEVBQUFsSixVQUFBeXZDLE9BQUEsU0FBQXZtQyxFQUFBaWQsR0FBQSxJQUFBblAsRUFBQXZhLEtBQUEyekMsUUFBQSxJQUFBL3pDLFNBQUE2VixjQUFBelYsS0FBQTJ6QyxRQUFBemhDLEtBQUEsY0FBQSxJQUFBekYsRUFBQWhNLEtBQUFULEtBQUEwcEIsR0FBQTFwQixLQUFBOHlDLFdBQUFuaUMsS0FBQSxnQ0FBQXlmLE9BQUFwd0IsS0FBQTB6QyxrQkFBQTF6QyxLQUFBaTBDLGVBQUExNUIsSUFBQXZhLEtBQUFvd0MsU0FBQXovQixLQUFBLHNCQUFBck4sT0FBQXRELEtBQUFvd0MsU0FBQTU2QixRQUFBeFYsS0FBQTJ6QyxRQUFBbitCLFVBQUEvSSxFQUFBbEosVUFBQXl3QyxhQUFBLFdBQUEsR0FBQWgwQyxLQUFBaTBDLGdCQUFBajBDLEtBQUE2ekMsZ0JBQUEsQ0FBQSxJQUFBcG5DLEVBQUF6TSxLQUFBMnpDLFFBQUF2eEMsTUFBQXBDLEtBQUFxcEIsUUFBQSxRQUFBLENBQUE2cUIsS0FBQXpuQyxJQUFBek0sS0FBQTZ6QyxpQkFBQSxHQUFBcG5DLEVBQUFsSixVQUFBdXdDLG1CQUFBLFNBQUFybkMsRUFBQWlkLEdBQUExcEIsS0FBQXFwQixRQUFBLFdBQUEsQ0FBQXpHLEtBQUE4RyxJQUFBMXBCLEtBQUEyekMsUUFBQXZ4QyxJQUFBc25CLEVBQUFubkIsTUFBQXZDLEtBQUFnMEMsZ0JBQUF2bkMsRUFBQWxKLFVBQUEwd0MsYUFBQSxXQUFBajBDLEtBQUEyekMsUUFBQS91QixJQUFBLFFBQUEsUUFBQSxJQUFBblksRUFBQSxHQUFBQSxFQUFBLEtBQUF6TSxLQUFBMnpDLFFBQUF6aEMsS0FBQSxlQUFBbFMsS0FBQTh5QyxXQUFBbmlDLEtBQUEsZ0NBQUF5K0IsYUFBQSxLQUFBcHZDLEtBQUEyekMsUUFBQXZ4QyxNQUFBa0IsT0FBQSxHQUFBLEtBQUF0RCxLQUFBMnpDLFFBQUEvdUIsSUFBQSxRQUFBblksSUFBQUEsSUFBQUEsRUFBQTgvQixPQUFBLCtCQUFBLENBQUEsVUFBQSxTQUFBcEwsR0FBQSxTQUFBMTBCLEtBQUEsT0FBQUEsRUFBQWxKLFVBQUE2M0IsS0FBQSxTQUFBM3VCLEVBQUFpZCxFQUFBblAsR0FBQSxJQUFBcFksRUFBQW5DLEtBQUFxdEMsRUFBQSxDQUFBLE9BQUEsVUFBQSxRQUFBLFVBQUEsU0FBQSxZQUFBLFdBQUEsY0FBQSxRQUFBLFlBQUFKLEVBQUEsQ0FBQSxVQUFBLFVBQUEsWUFBQSxjQUFBLFlBQUF4Z0MsRUFBQWhNLEtBQUFULEtBQUEwcEIsRUFBQW5QLEdBQUFtUCxFQUFBbkIsR0FBQSxJQUFBLFNBQUE5YixFQUFBaWQsR0FBQSxJQUFBLElBQUF5WCxFQUFBdDZCLFFBQUE0RixFQUFBNGdDLEdBQUEsQ0FBQTNqQixFQUFBQSxHQUFBLEdBQUEsSUFBQW5QLEVBQUE0bUIsRUFBQTdYLE1BQUEsV0FBQTdjLEVBQUEsQ0FBQXk5QixPQUFBeGdCLElBQUF2bkIsRUFBQWl1QyxTQUFBL21CLFFBQUE5TyxJQUFBLElBQUE0bUIsRUFBQXQ2QixRQUFBNEYsRUFBQXdnQyxLQUFBdmpCLEVBQUErcEIsVUFBQWw1QixFQUFBMlIsMEJBQUF6ZixJQUFBQSxFQUFBOC9CLE9BQUEsc0JBQUEsQ0FBQSxTQUFBLFdBQUEsU0FBQTdpQixFQUFBblAsR0FBQSxTQUFBcFksRUFBQXNLLEdBQUF6TSxLQUFBbTBDLEtBQUExbkMsR0FBQSxHQUFBLE9BQUF0SyxFQUFBb0IsVUFBQTZ3QyxJQUFBLFdBQUEsT0FBQXAwQyxLQUFBbTBDLE1BQUFoeUMsRUFBQW9CLFVBQUFJLElBQUEsU0FBQThJLEdBQUEsT0FBQXpNLEtBQUFtMEMsS0FBQTFuQyxJQUFBdEssRUFBQW9CLFVBQUE0QixPQUFBLFNBQUFzSCxHQUFBek0sS0FBQW0wQyxLQUFBenFCLEVBQUF2a0IsT0FBQSxHQUFBc0gsRUFBQTJuQyxNQUFBcDBDLEtBQUFtMEMsT0FBQWh5QyxFQUFBa3lDLE9BQUEsR0FBQWx5QyxFQUFBbXlDLFNBQUEsU0FBQTduQyxHQUFBLEtBQUFBLEtBQUF0SyxFQUFBa3lDLFFBQUEsQ0FBQSxJQUFBM3FCLEVBQUFuUCxFQUFBOU4sR0FBQXRLLEVBQUFreUMsT0FBQTVuQyxHQUFBaWQsRUFBQSxPQUFBLElBQUF2bkIsRUFBQUEsRUFBQWt5QyxPQUFBNW5DLEtBQUF0SyxJQUFBc0ssRUFBQTgvQixPQUFBLHFCQUFBLEdBQUEsV0FBQSxNQUFBLENBQUFnSSxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLEtBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxLQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsS0FBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLEtBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLEtBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsS0FBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLEtBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElBQUFDLElBQUEsSUFBQUMsSUFBQSxJQUFBQyxJQUFBLElB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QUFBLGdCQUFBN3NCLEtBQUEsY0FBQSxXQUFBN0ksRUFBQTlGLFVBQUF5eEIsV0FBQSxXQUFBaDFCLEtBQUFvRixRQUFBNnRFLFdBQUFyekUsU0FBQUksS0FBQTY1QixRQUFBNzVCLEtBQUFzM0UsYUFBQSxFQUFBdDNFLEtBQUFzM0UsYUFBQSxJQUFBbHVFLEVBQUFqRyxHQUFBMDJFLE1BQUEsV0FBQSxJQUFBM3NDLEVBQUFDLEVBQUEvakMsRUFBQXBKLEtBQUFzdEMsRUFBQWhwQyxVQUFBLEdBQUF3b0MsRUFBQWxuQyxNQUFBckMsVUFBQWpELE1BQUFHLEtBQUE2RCxVQUFBLEdBQUFtSSxFQUFBckQsRUFBQTlGLE9BQUEsSUFBQTRwQyxFQUFBLEVBQUFBLEVBQUF6Z0MsRUFBQXlnQyxJQUFBLEdBQUEsaUJBQUFJLFFBQUEsSUFBQUEsRUFBQWxrQyxFQUFBOGpDLEdBQUEyc0MsTUFBQSxJQUFBeHdFLEVBQUFELEVBQUE4akMsR0FBQUksR0FBQUgsRUFBQS9qQyxFQUFBOGpDLEdBQUEyc0MsTUFBQXZzQyxHQUFBM3NDLE1BQUF5SSxFQUFBOGpDLEdBQUEyc0MsTUFBQS9zQyxRQUFBLElBQUFLLEVBQUEsT0FBQUEsRUFBQSxPQUFBL2pDIiwiZmlsZSI6ImxpYnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGpRdWVyeSBKYXZhU2NyaXB0IExpYnJhcnkgdjMuNi4zXG4gKiBodHRwczovL2pxdWVyeS5jb20vXG4gKlxuICogSW5jbHVkZXMgU2l6emxlLmpzXG4gKiBodHRwczovL3NpenpsZWpzLmNvbS9cbiAqXG4gKiBDb3B5cmlnaHQgT3BlbkpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2pxdWVyeS5vcmcvbGljZW5zZVxuICpcbiAqIERhdGU6IDIwMjItMTItMjBUMjE6MjhaXG4gKi9cbiggZnVuY3Rpb24oIGdsb2JhbCwgZmFjdG9yeSApIHtcblxuXHRcInVzZSBzdHJpY3RcIjtcblxuXHRpZiAoIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gRm9yIENvbW1vbkpTIGFuZCBDb21tb25KUy1saWtlIGVudmlyb25tZW50cyB3aGVyZSBhIHByb3BlciBgd2luZG93YFxuXHRcdC8vIGlzIHByZXNlbnQsIGV4ZWN1dGUgdGhlIGZhY3RvcnkgYW5kIGdldCBqUXVlcnkuXG5cdFx0Ly8gRm9yIGVudmlyb25tZW50cyB0aGF0IGRvIG5vdCBoYXZlIGEgYHdpbmRvd2Agd2l0aCBhIGBkb2N1bWVudGBcblx0XHQvLyAoc3VjaCBhcyBOb2RlLmpzKSwgZXhwb3NlIGEgZmFjdG9yeSBhcyBtb2R1bGUuZXhwb3J0cy5cblx0XHQvLyBUaGlzIGFjY2VudHVhdGVzIHRoZSBuZWVkIGZvciB0aGUgY3JlYXRpb24gb2YgYSByZWFsIGB3aW5kb3dgLlxuXHRcdC8vIGUuZy4gdmFyIGpRdWVyeSA9IHJlcXVpcmUoXCJqcXVlcnlcIikod2luZG93KTtcblx0XHQvLyBTZWUgdGlja2V0IHRyYWMtMTQ1NDkgZm9yIG1vcmUgaW5mby5cblx0XHRtb2R1bGUuZXhwb3J0cyA9IGdsb2JhbC5kb2N1bWVudCA/XG5cdFx0XHRmYWN0b3J5KCBnbG9iYWwsIHRydWUgKSA6XG5cdFx0XHRmdW5jdGlvbiggdyApIHtcblx0XHRcdFx0aWYgKCAhdy5kb2N1bWVudCApIHtcblx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoIFwialF1ZXJ5IHJlcXVpcmVzIGEgd2luZG93IHdpdGggYSBkb2N1bWVudFwiICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIGZhY3RvcnkoIHcgKTtcblx0XHRcdH07XG5cdH0gZWxzZSB7XG5cdFx0ZmFjdG9yeSggZ2xvYmFsICk7XG5cdH1cblxuLy8gUGFzcyB0aGlzIGlmIHdpbmRvdyBpcyBub3QgZGVmaW5lZCB5ZXRcbn0gKSggdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHRoaXMsIGZ1bmN0aW9uKCB3aW5kb3csIG5vR2xvYmFsICkge1xuXG4vLyBFZGdlIDw9IDEyIC0gMTMrLCBGaXJlZm94IDw9MTggLSA0NSssIElFIDEwIC0gMTEsIFNhZmFyaSA1LjEgLSA5KywgaU9TIDYgLSA5LjFcbi8vIHRocm93IGV4Y2VwdGlvbnMgd2hlbiBub24tc3RyaWN0IGNvZGUgKGUuZy4sIEFTUC5ORVQgNC41KSBhY2Nlc3NlcyBzdHJpY3QgbW9kZVxuLy8gYXJndW1lbnRzLmNhbGxlZS5jYWxsZXIgKHRyYWMtMTMzMzUpLiBCdXQgYXMgb2YgalF1ZXJ5IDMuMCAoMjAxNiksIHN0cmljdCBtb2RlIHNob3VsZCBiZSBjb21tb25cbi8vIGVub3VnaCB0aGF0IGFsbCBzdWNoIGF0dGVtcHRzIGFyZSBndWFyZGVkIGluIGEgdHJ5IGJsb2NrLlxuXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBhcnIgPSBbXTtcblxudmFyIGdldFByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuXG52YXIgc2xpY2UgPSBhcnIuc2xpY2U7XG5cbnZhciBmbGF0ID0gYXJyLmZsYXQgPyBmdW5jdGlvbiggYXJyYXkgKSB7XG5cdHJldHVybiBhcnIuZmxhdC5jYWxsKCBhcnJheSApO1xufSA6IGZ1bmN0aW9uKCBhcnJheSApIHtcblx0cmV0dXJuIGFyci5jb25jYXQuYXBwbHkoIFtdLCBhcnJheSApO1xufTtcblxuXG52YXIgcHVzaCA9IGFyci5wdXNoO1xuXG52YXIgaW5kZXhPZiA9IGFyci5pbmRleE9mO1xuXG52YXIgY2xhc3MydHlwZSA9IHt9O1xuXG52YXIgdG9TdHJpbmcgPSBjbGFzczJ0eXBlLnRvU3RyaW5nO1xuXG52YXIgaGFzT3duID0gY2xhc3MydHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxudmFyIGZuVG9TdHJpbmcgPSBoYXNPd24udG9TdHJpbmc7XG5cbnZhciBPYmplY3RGdW5jdGlvblN0cmluZyA9IGZuVG9TdHJpbmcuY2FsbCggT2JqZWN0ICk7XG5cbnZhciBzdXBwb3J0ID0ge307XG5cbnZhciBpc0Z1bmN0aW9uID0gZnVuY3Rpb24gaXNGdW5jdGlvbiggb2JqICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9NTcsIEZpcmVmb3ggPD01MlxuXHRcdC8vIEluIHNvbWUgYnJvd3NlcnMsIHR5cGVvZiByZXR1cm5zIFwiZnVuY3Rpb25cIiBmb3IgSFRNTCA8b2JqZWN0PiBlbGVtZW50c1xuXHRcdC8vIChpLmUuLCBgdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwib2JqZWN0XCIgKSA9PT0gXCJmdW5jdGlvblwiYCkuXG5cdFx0Ly8gV2UgZG9uJ3Qgd2FudCB0byBjbGFzc2lmeSAqYW55KiBET00gbm9kZSBhcyBhIGZ1bmN0aW9uLlxuXHRcdC8vIFN1cHBvcnQ6IFF0V2ViIDw9My44LjUsIFdlYktpdCA8PTUzNC4zNCwgd2todG1sdG9wZGYgdG9vbCA8PTAuMTIuNVxuXHRcdC8vIFBsdXMgZm9yIG9sZCBXZWJLaXQsIHR5cGVvZiByZXR1cm5zIFwiZnVuY3Rpb25cIiBmb3IgSFRNTCBjb2xsZWN0aW9uc1xuXHRcdC8vIChlLmcuLCBgdHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiZGl2XCIpID09PSBcImZ1bmN0aW9uXCJgKS4gKGdoLTQ3NTYpXG5cdFx0cmV0dXJuIHR5cGVvZiBvYmogPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2Ygb2JqLm5vZGVUeXBlICE9PSBcIm51bWJlclwiICYmXG5cdFx0XHR0eXBlb2Ygb2JqLml0ZW0gIT09IFwiZnVuY3Rpb25cIjtcblx0fTtcblxuXG52YXIgaXNXaW5kb3cgPSBmdW5jdGlvbiBpc1dpbmRvdyggb2JqICkge1xuXHRcdHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmogPT09IG9iai53aW5kb3c7XG5cdH07XG5cblxudmFyIGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50O1xuXG5cblxuXHR2YXIgcHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyA9IHtcblx0XHR0eXBlOiB0cnVlLFxuXHRcdHNyYzogdHJ1ZSxcblx0XHRub25jZTogdHJ1ZSxcblx0XHRub01vZHVsZTogdHJ1ZVxuXHR9O1xuXG5cdGZ1bmN0aW9uIERPTUV2YWwoIGNvZGUsIG5vZGUsIGRvYyApIHtcblx0XHRkb2MgPSBkb2MgfHwgZG9jdW1lbnQ7XG5cblx0XHR2YXIgaSwgdmFsLFxuXHRcdFx0c2NyaXB0ID0gZG9jLmNyZWF0ZUVsZW1lbnQoIFwic2NyaXB0XCIgKTtcblxuXHRcdHNjcmlwdC50ZXh0ID0gY29kZTtcblx0XHRpZiAoIG5vZGUgKSB7XG5cdFx0XHRmb3IgKCBpIGluIHByZXNlcnZlZFNjcmlwdEF0dHJpYnV0ZXMgKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA2NCssIEVkZ2UgMTgrXG5cdFx0XHRcdC8vIFNvbWUgYnJvd3NlcnMgZG9uJ3Qgc3VwcG9ydCB0aGUgXCJub25jZVwiIHByb3BlcnR5IG9uIHNjcmlwdHMuXG5cdFx0XHRcdC8vIE9uIHRoZSBvdGhlciBoYW5kLCBqdXN0IHVzaW5nIGBnZXRBdHRyaWJ1dGVgIGlzIG5vdCBlbm91Z2ggYXNcblx0XHRcdFx0Ly8gdGhlIGBub25jZWAgYXR0cmlidXRlIGlzIHJlc2V0IHRvIGFuIGVtcHR5IHN0cmluZyB3aGVuZXZlciBpdFxuXHRcdFx0XHQvLyBiZWNvbWVzIGJyb3dzaW5nLWNvbnRleHQgY29ubmVjdGVkLlxuXHRcdFx0XHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3doYXR3Zy9odG1sL2lzc3Vlcy8yMzY5XG5cdFx0XHRcdC8vIFNlZSBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnLyNub25jZS1hdHRyaWJ1dGVzXG5cdFx0XHRcdC8vIFRoZSBgbm9kZS5nZXRBdHRyaWJ1dGVgIGNoZWNrIHdhcyBhZGRlZCBmb3IgdGhlIHNha2Ugb2Zcblx0XHRcdFx0Ly8gYGpRdWVyeS5nbG9iYWxFdmFsYCBzbyB0aGF0IGl0IGNhbiBmYWtlIGEgbm9uY2UtY29udGFpbmluZyBub2RlXG5cdFx0XHRcdC8vIHZpYSBhbiBvYmplY3QuXG5cdFx0XHRcdHZhbCA9IG5vZGVbIGkgXSB8fCBub2RlLmdldEF0dHJpYnV0ZSAmJiBub2RlLmdldEF0dHJpYnV0ZSggaSApO1xuXHRcdFx0XHRpZiAoIHZhbCApIHtcblx0XHRcdFx0XHRzY3JpcHQuc2V0QXR0cmlidXRlKCBpLCB2YWwgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRkb2MuaGVhZC5hcHBlbmRDaGlsZCggc2NyaXB0ICkucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggc2NyaXB0ICk7XG5cdH1cblxuXG5mdW5jdGlvbiB0b1R5cGUoIG9iaiApIHtcblx0aWYgKCBvYmogPT0gbnVsbCApIHtcblx0XHRyZXR1cm4gb2JqICsgXCJcIjtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seSAoZnVuY3Rpb25pc2ggUmVnRXhwKVxuXHRyZXR1cm4gdHlwZW9mIG9iaiA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2Ygb2JqID09PSBcImZ1bmN0aW9uXCIgP1xuXHRcdGNsYXNzMnR5cGVbIHRvU3RyaW5nLmNhbGwoIG9iaiApIF0gfHwgXCJvYmplY3RcIiA6XG5cdFx0dHlwZW9mIG9iajtcbn1cbi8qIGdsb2JhbCBTeW1ib2wgKi9cbi8vIERlZmluaW5nIHRoaXMgZ2xvYmFsIGluIC5lc2xpbnRyYy5qc29uIHdvdWxkIGNyZWF0ZSBhIGRhbmdlciBvZiB1c2luZyB0aGUgZ2xvYmFsXG4vLyB1bmd1YXJkZWQgaW4gYW5vdGhlciBwbGFjZSwgaXQgc2VlbXMgc2FmZXIgdG8gZGVmaW5lIGdsb2JhbCBvbmx5IGZvciB0aGlzIG1vZHVsZVxuXG5cblxudmFyXG5cdHZlcnNpb24gPSBcIjMuNi4zXCIsXG5cblx0Ly8gRGVmaW5lIGEgbG9jYWwgY29weSBvZiBqUXVlcnlcblx0alF1ZXJ5ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkge1xuXG5cdFx0Ly8gVGhlIGpRdWVyeSBvYmplY3QgaXMgYWN0dWFsbHkganVzdCB0aGUgaW5pdCBjb25zdHJ1Y3RvciAnZW5oYW5jZWQnXG5cdFx0Ly8gTmVlZCBpbml0IGlmIGpRdWVyeSBpcyBjYWxsZWQgKGp1c3QgYWxsb3cgZXJyb3IgdG8gYmUgdGhyb3duIGlmIG5vdCBpbmNsdWRlZClcblx0XHRyZXR1cm4gbmV3IGpRdWVyeS5mbi5pbml0KCBzZWxlY3RvciwgY29udGV4dCApO1xuXHR9O1xuXG5qUXVlcnkuZm4gPSBqUXVlcnkucHJvdG90eXBlID0ge1xuXG5cdC8vIFRoZSBjdXJyZW50IHZlcnNpb24gb2YgalF1ZXJ5IGJlaW5nIHVzZWRcblx0anF1ZXJ5OiB2ZXJzaW9uLFxuXG5cdGNvbnN0cnVjdG9yOiBqUXVlcnksXG5cblx0Ly8gVGhlIGRlZmF1bHQgbGVuZ3RoIG9mIGEgalF1ZXJ5IG9iamVjdCBpcyAwXG5cdGxlbmd0aDogMCxcblxuXHR0b0FycmF5OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc2xpY2UuY2FsbCggdGhpcyApO1xuXHR9LFxuXG5cdC8vIEdldCB0aGUgTnRoIGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgZWxlbWVudCBzZXQgT1Jcblx0Ly8gR2V0IHRoZSB3aG9sZSBtYXRjaGVkIGVsZW1lbnQgc2V0IGFzIGEgY2xlYW4gYXJyYXlcblx0Z2V0OiBmdW5jdGlvbiggbnVtICkge1xuXG5cdFx0Ly8gUmV0dXJuIGFsbCB0aGUgZWxlbWVudHMgaW4gYSBjbGVhbiBhcnJheVxuXHRcdGlmICggbnVtID09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gc2xpY2UuY2FsbCggdGhpcyApO1xuXHRcdH1cblxuXHRcdC8vIFJldHVybiBqdXN0IHRoZSBvbmUgZWxlbWVudCBmcm9tIHRoZSBzZXRcblx0XHRyZXR1cm4gbnVtIDwgMCA/IHRoaXNbIG51bSArIHRoaXMubGVuZ3RoIF0gOiB0aGlzWyBudW0gXTtcblx0fSxcblxuXHQvLyBUYWtlIGFuIGFycmF5IG9mIGVsZW1lbnRzIGFuZCBwdXNoIGl0IG9udG8gdGhlIHN0YWNrXG5cdC8vIChyZXR1cm5pbmcgdGhlIG5ldyBtYXRjaGVkIGVsZW1lbnQgc2V0KVxuXHRwdXNoU3RhY2s6IGZ1bmN0aW9uKCBlbGVtcyApIHtcblxuXHRcdC8vIEJ1aWxkIGEgbmV3IGpRdWVyeSBtYXRjaGVkIGVsZW1lbnQgc2V0XG5cdFx0dmFyIHJldCA9IGpRdWVyeS5tZXJnZSggdGhpcy5jb25zdHJ1Y3RvcigpLCBlbGVtcyApO1xuXG5cdFx0Ly8gQWRkIHRoZSBvbGQgb2JqZWN0IG9udG8gdGhlIHN0YWNrIChhcyBhIHJlZmVyZW5jZSlcblx0XHRyZXQucHJldk9iamVjdCA9IHRoaXM7XG5cblx0XHQvLyBSZXR1cm4gdGhlIG5ld2x5LWZvcm1lZCBlbGVtZW50IHNldFxuXHRcdHJldHVybiByZXQ7XG5cdH0sXG5cblx0Ly8gRXhlY3V0ZSBhIGNhbGxiYWNrIGZvciBldmVyeSBlbGVtZW50IGluIHRoZSBtYXRjaGVkIHNldC5cblx0ZWFjaDogZnVuY3Rpb24oIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBqUXVlcnkuZWFjaCggdGhpcywgY2FsbGJhY2sgKTtcblx0fSxcblxuXHRtYXA6IGZ1bmN0aW9uKCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeS5tYXAoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBpICkge1xuXHRcdFx0cmV0dXJuIGNhbGxiYWNrLmNhbGwoIGVsZW0sIGksIGVsZW0gKTtcblx0XHR9ICkgKTtcblx0fSxcblxuXHRzbGljZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBzbGljZS5hcHBseSggdGhpcywgYXJndW1lbnRzICkgKTtcblx0fSxcblxuXHRmaXJzdDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuZXEoIDAgKTtcblx0fSxcblxuXHRsYXN0OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5lcSggLTEgKTtcblx0fSxcblxuXHRldmVuOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeS5ncmVwKCB0aGlzLCBmdW5jdGlvbiggX2VsZW0sIGkgKSB7XG5cdFx0XHRyZXR1cm4gKCBpICsgMSApICUgMjtcblx0XHR9ICkgKTtcblx0fSxcblxuXHRvZGQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5LmdyZXAoIHRoaXMsIGZ1bmN0aW9uKCBfZWxlbSwgaSApIHtcblx0XHRcdHJldHVybiBpICUgMjtcblx0XHR9ICkgKTtcblx0fSxcblxuXHRlcTogZnVuY3Rpb24oIGkgKSB7XG5cdFx0dmFyIGxlbiA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0aiA9ICtpICsgKCBpIDwgMCA/IGxlbiA6IDAgKTtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGogPj0gMCAmJiBqIDwgbGVuID8gWyB0aGlzWyBqIF0gXSA6IFtdICk7XG5cdH0sXG5cblx0ZW5kOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wcmV2T2JqZWN0IHx8IHRoaXMuY29uc3RydWN0b3IoKTtcblx0fSxcblxuXHQvLyBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuXG5cdC8vIEJlaGF2ZXMgbGlrZSBhbiBBcnJheSdzIG1ldGhvZCwgbm90IGxpa2UgYSBqUXVlcnkgbWV0aG9kLlxuXHRwdXNoOiBwdXNoLFxuXHRzb3J0OiBhcnIuc29ydCxcblx0c3BsaWNlOiBhcnIuc3BsaWNlXG59O1xuXG5qUXVlcnkuZXh0ZW5kID0galF1ZXJ5LmZuLmV4dGVuZCA9IGZ1bmN0aW9uKCkge1xuXHR2YXIgb3B0aW9ucywgbmFtZSwgc3JjLCBjb3B5LCBjb3B5SXNBcnJheSwgY2xvbmUsXG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWyAwIF0gfHwge30sXG5cdFx0aSA9IDEsXG5cdFx0bGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aCxcblx0XHRkZWVwID0gZmFsc2U7XG5cblx0Ly8gSGFuZGxlIGEgZGVlcCBjb3B5IHNpdHVhdGlvblxuXHRpZiAoIHR5cGVvZiB0YXJnZXQgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdGRlZXAgPSB0YXJnZXQ7XG5cblx0XHQvLyBTa2lwIHRoZSBib29sZWFuIGFuZCB0aGUgdGFyZ2V0XG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWyBpIF0gfHwge307XG5cdFx0aSsrO1xuXHR9XG5cblx0Ly8gSGFuZGxlIGNhc2Ugd2hlbiB0YXJnZXQgaXMgYSBzdHJpbmcgb3Igc29tZXRoaW5nIChwb3NzaWJsZSBpbiBkZWVwIGNvcHkpXG5cdGlmICggdHlwZW9mIHRhcmdldCAhPT0gXCJvYmplY3RcIiAmJiAhaXNGdW5jdGlvbiggdGFyZ2V0ICkgKSB7XG5cdFx0dGFyZ2V0ID0ge307XG5cdH1cblxuXHQvLyBFeHRlbmQgalF1ZXJ5IGl0c2VsZiBpZiBvbmx5IG9uZSBhcmd1bWVudCBpcyBwYXNzZWRcblx0aWYgKCBpID09PSBsZW5ndGggKSB7XG5cdFx0dGFyZ2V0ID0gdGhpcztcblx0XHRpLS07XG5cdH1cblxuXHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblxuXHRcdC8vIE9ubHkgZGVhbCB3aXRoIG5vbi1udWxsL3VuZGVmaW5lZCB2YWx1ZXNcblx0XHRpZiAoICggb3B0aW9ucyA9IGFyZ3VtZW50c1sgaSBdICkgIT0gbnVsbCApIHtcblxuXHRcdFx0Ly8gRXh0ZW5kIHRoZSBiYXNlIG9iamVjdFxuXHRcdFx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdFx0XHRjb3B5ID0gb3B0aW9uc1sgbmFtZSBdO1xuXG5cdFx0XHRcdC8vIFByZXZlbnQgT2JqZWN0LnByb3RvdHlwZSBwb2xsdXRpb25cblx0XHRcdFx0Ly8gUHJldmVudCBuZXZlci1lbmRpbmcgbG9vcFxuXHRcdFx0XHRpZiAoIG5hbWUgPT09IFwiX19wcm90b19fXCIgfHwgdGFyZ2V0ID09PSBjb3B5ICkge1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVjdXJzZSBpZiB3ZSdyZSBtZXJnaW5nIHBsYWluIG9iamVjdHMgb3IgYXJyYXlzXG5cdFx0XHRcdGlmICggZGVlcCAmJiBjb3B5ICYmICggalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGNvcHkgKSB8fFxuXHRcdFx0XHRcdCggY29weUlzQXJyYXkgPSBBcnJheS5pc0FycmF5KCBjb3B5ICkgKSApICkge1xuXHRcdFx0XHRcdHNyYyA9IHRhcmdldFsgbmFtZSBdO1xuXG5cdFx0XHRcdFx0Ly8gRW5zdXJlIHByb3BlciB0eXBlIGZvciB0aGUgc291cmNlIHZhbHVlXG5cdFx0XHRcdFx0aWYgKCBjb3B5SXNBcnJheSAmJiAhQXJyYXkuaXNBcnJheSggc3JjICkgKSB7XG5cdFx0XHRcdFx0XHRjbG9uZSA9IFtdO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAoICFjb3B5SXNBcnJheSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHNyYyApICkge1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSB7fTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSBzcmM7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGNvcHlJc0FycmF5ID0gZmFsc2U7XG5cblx0XHRcdFx0XHQvLyBOZXZlciBtb3ZlIG9yaWdpbmFsIG9iamVjdHMsIGNsb25lIHRoZW1cblx0XHRcdFx0XHR0YXJnZXRbIG5hbWUgXSA9IGpRdWVyeS5leHRlbmQoIGRlZXAsIGNsb25lLCBjb3B5ICk7XG5cblx0XHRcdFx0Ly8gRG9uJ3QgYnJpbmcgaW4gdW5kZWZpbmVkIHZhbHVlc1xuXHRcdFx0XHR9IGVsc2UgaWYgKCBjb3B5ICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0dGFyZ2V0WyBuYW1lIF0gPSBjb3B5O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSBtb2RpZmllZCBvYmplY3Rcblx0cmV0dXJuIHRhcmdldDtcbn07XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBVbmlxdWUgZm9yIGVhY2ggY29weSBvZiBqUXVlcnkgb24gdGhlIHBhZ2Vcblx0ZXhwYW5kbzogXCJqUXVlcnlcIiArICggdmVyc2lvbiArIE1hdGgucmFuZG9tKCkgKS5yZXBsYWNlKCAvXFxEL2csIFwiXCIgKSxcblxuXHQvLyBBc3N1bWUgalF1ZXJ5IGlzIHJlYWR5IHdpdGhvdXQgdGhlIHJlYWR5IG1vZHVsZVxuXHRpc1JlYWR5OiB0cnVlLFxuXG5cdGVycm9yOiBmdW5jdGlvbiggbXNnICkge1xuXHRcdHRocm93IG5ldyBFcnJvciggbXNnICk7XG5cdH0sXG5cblx0bm9vcDogZnVuY3Rpb24oKSB7fSxcblxuXHRpc1BsYWluT2JqZWN0OiBmdW5jdGlvbiggb2JqICkge1xuXHRcdHZhciBwcm90bywgQ3RvcjtcblxuXHRcdC8vIERldGVjdCBvYnZpb3VzIG5lZ2F0aXZlc1xuXHRcdC8vIFVzZSB0b1N0cmluZyBpbnN0ZWFkIG9mIGpRdWVyeS50eXBlIHRvIGNhdGNoIGhvc3Qgb2JqZWN0c1xuXHRcdGlmICggIW9iaiB8fCB0b1N0cmluZy5jYWxsKCBvYmogKSAhPT0gXCJbb2JqZWN0IE9iamVjdF1cIiApIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRwcm90byA9IGdldFByb3RvKCBvYmogKTtcblxuXHRcdC8vIE9iamVjdHMgd2l0aCBubyBwcm90b3R5cGUgKGUuZy4sIGBPYmplY3QuY3JlYXRlKCBudWxsIClgKSBhcmUgcGxhaW5cblx0XHRpZiAoICFwcm90byApIHtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblxuXHRcdC8vIE9iamVjdHMgd2l0aCBwcm90b3R5cGUgYXJlIHBsYWluIGlmZiB0aGV5IHdlcmUgY29uc3RydWN0ZWQgYnkgYSBnbG9iYWwgT2JqZWN0IGZ1bmN0aW9uXG5cdFx0Q3RvciA9IGhhc093bi5jYWxsKCBwcm90bywgXCJjb25zdHJ1Y3RvclwiICkgJiYgcHJvdG8uY29uc3RydWN0b3I7XG5cdFx0cmV0dXJuIHR5cGVvZiBDdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgZm5Ub1N0cmluZy5jYWxsKCBDdG9yICkgPT09IE9iamVjdEZ1bmN0aW9uU3RyaW5nO1xuXHR9LFxuXG5cdGlzRW1wdHlPYmplY3Q6IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0dmFyIG5hbWU7XG5cblx0XHRmb3IgKCBuYW1lIGluIG9iaiApIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdFx0cmV0dXJuIHRydWU7XG5cdH0sXG5cblx0Ly8gRXZhbHVhdGVzIGEgc2NyaXB0IGluIGEgcHJvdmlkZWQgY29udGV4dDsgZmFsbHMgYmFjayB0byB0aGUgZ2xvYmFsIG9uZVxuXHQvLyBpZiBub3Qgc3BlY2lmaWVkLlxuXHRnbG9iYWxFdmFsOiBmdW5jdGlvbiggY29kZSwgb3B0aW9ucywgZG9jICkge1xuXHRcdERPTUV2YWwoIGNvZGUsIHsgbm9uY2U6IG9wdGlvbnMgJiYgb3B0aW9ucy5ub25jZSB9LCBkb2MgKTtcblx0fSxcblxuXHRlYWNoOiBmdW5jdGlvbiggb2JqLCBjYWxsYmFjayApIHtcblx0XHR2YXIgbGVuZ3RoLCBpID0gMDtcblxuXHRcdGlmICggaXNBcnJheUxpa2UoIG9iaiApICkge1xuXHRcdFx0bGVuZ3RoID0gb2JqLmxlbmd0aDtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrLmNhbGwoIG9ialsgaSBdLCBpLCBvYmpbIGkgXSApID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRmb3IgKCBpIGluIG9iaiApIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjay5jYWxsKCBvYmpbIGkgXSwgaSwgb2JqWyBpIF0gKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gb2JqO1xuXHR9LFxuXG5cdC8vIHJlc3VsdHMgaXMgZm9yIGludGVybmFsIHVzYWdlIG9ubHlcblx0bWFrZUFycmF5OiBmdW5jdGlvbiggYXJyLCByZXN1bHRzICkge1xuXHRcdHZhciByZXQgPSByZXN1bHRzIHx8IFtdO1xuXG5cdFx0aWYgKCBhcnIgIT0gbnVsbCApIHtcblx0XHRcdGlmICggaXNBcnJheUxpa2UoIE9iamVjdCggYXJyICkgKSApIHtcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCByZXQsXG5cdFx0XHRcdFx0dHlwZW9mIGFyciA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0XHRcdFx0XHRbIGFyciBdIDogYXJyXG5cdFx0XHRcdCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRwdXNoLmNhbGwoIHJldCwgYXJyICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHJldDtcblx0fSxcblxuXHRpbkFycmF5OiBmdW5jdGlvbiggZWxlbSwgYXJyLCBpICkge1xuXHRcdHJldHVybiBhcnIgPT0gbnVsbCA/IC0xIDogaW5kZXhPZi5jYWxsKCBhcnIsIGVsZW0sIGkgKTtcblx0fSxcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRtZXJnZTogZnVuY3Rpb24oIGZpcnN0LCBzZWNvbmQgKSB7XG5cdFx0dmFyIGxlbiA9ICtzZWNvbmQubGVuZ3RoLFxuXHRcdFx0aiA9IDAsXG5cdFx0XHRpID0gZmlyc3QubGVuZ3RoO1xuXG5cdFx0Zm9yICggOyBqIDwgbGVuOyBqKysgKSB7XG5cdFx0XHRmaXJzdFsgaSsrIF0gPSBzZWNvbmRbIGogXTtcblx0XHR9XG5cblx0XHRmaXJzdC5sZW5ndGggPSBpO1xuXG5cdFx0cmV0dXJuIGZpcnN0O1xuXHR9LFxuXG5cdGdyZXA6IGZ1bmN0aW9uKCBlbGVtcywgY2FsbGJhY2ssIGludmVydCApIHtcblx0XHR2YXIgY2FsbGJhY2tJbnZlcnNlLFxuXHRcdFx0bWF0Y2hlcyA9IFtdLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRsZW5ndGggPSBlbGVtcy5sZW5ndGgsXG5cdFx0XHRjYWxsYmFja0V4cGVjdCA9ICFpbnZlcnQ7XG5cblx0XHQvLyBHbyB0aHJvdWdoIHRoZSBhcnJheSwgb25seSBzYXZpbmcgdGhlIGl0ZW1zXG5cdFx0Ly8gdGhhdCBwYXNzIHRoZSB2YWxpZGF0b3IgZnVuY3Rpb25cblx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblx0XHRcdGNhbGxiYWNrSW52ZXJzZSA9ICFjYWxsYmFjayggZWxlbXNbIGkgXSwgaSApO1xuXHRcdFx0aWYgKCBjYWxsYmFja0ludmVyc2UgIT09IGNhbGxiYWNrRXhwZWN0ICkge1xuXHRcdFx0XHRtYXRjaGVzLnB1c2goIGVsZW1zWyBpIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gbWF0Y2hlcztcblx0fSxcblxuXHQvLyBhcmcgaXMgZm9yIGludGVybmFsIHVzYWdlIG9ubHlcblx0bWFwOiBmdW5jdGlvbiggZWxlbXMsIGNhbGxiYWNrLCBhcmcgKSB7XG5cdFx0dmFyIGxlbmd0aCwgdmFsdWUsXG5cdFx0XHRpID0gMCxcblx0XHRcdHJldCA9IFtdO1xuXG5cdFx0Ly8gR28gdGhyb3VnaCB0aGUgYXJyYXksIHRyYW5zbGF0aW5nIGVhY2ggb2YgdGhlIGl0ZW1zIHRvIHRoZWlyIG5ldyB2YWx1ZXNcblx0XHRpZiAoIGlzQXJyYXlMaWtlKCBlbGVtcyApICkge1xuXHRcdFx0bGVuZ3RoID0gZWxlbXMubGVuZ3RoO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRcdHZhbHVlID0gY2FsbGJhY2soIGVsZW1zWyBpIF0sIGksIGFyZyApO1xuXG5cdFx0XHRcdGlmICggdmFsdWUgIT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXQucHVzaCggdmFsdWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0Ly8gR28gdGhyb3VnaCBldmVyeSBrZXkgb24gdGhlIG9iamVjdCxcblx0XHR9IGVsc2Uge1xuXHRcdFx0Zm9yICggaSBpbiBlbGVtcyApIHtcblx0XHRcdFx0dmFsdWUgPSBjYWxsYmFjayggZWxlbXNbIGkgXSwgaSwgYXJnICk7XG5cblx0XHRcdFx0aWYgKCB2YWx1ZSAhPSBudWxsICkge1xuXHRcdFx0XHRcdHJldC5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gRmxhdHRlbiBhbnkgbmVzdGVkIGFycmF5c1xuXHRcdHJldHVybiBmbGF0KCByZXQgKTtcblx0fSxcblxuXHQvLyBBIGdsb2JhbCBHVUlEIGNvdW50ZXIgZm9yIG9iamVjdHNcblx0Z3VpZDogMSxcblxuXHQvLyBqUXVlcnkuc3VwcG9ydCBpcyBub3QgdXNlZCBpbiBDb3JlIGJ1dCBvdGhlciBwcm9qZWN0cyBhdHRhY2ggdGhlaXJcblx0Ly8gcHJvcGVydGllcyB0byBpdCBzbyBpdCBuZWVkcyB0byBleGlzdC5cblx0c3VwcG9ydDogc3VwcG9ydFxufSApO1xuXG5pZiAoIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiApIHtcblx0alF1ZXJ5LmZuWyBTeW1ib2wuaXRlcmF0b3IgXSA9IGFyclsgU3ltYm9sLml0ZXJhdG9yIF07XG59XG5cbi8vIFBvcHVsYXRlIHRoZSBjbGFzczJ0eXBlIG1hcFxualF1ZXJ5LmVhY2goIFwiQm9vbGVhbiBOdW1iZXIgU3RyaW5nIEZ1bmN0aW9uIEFycmF5IERhdGUgUmVnRXhwIE9iamVjdCBFcnJvciBTeW1ib2xcIi5zcGxpdCggXCIgXCIgKSxcblx0ZnVuY3Rpb24oIF9pLCBuYW1lICkge1xuXHRcdGNsYXNzMnR5cGVbIFwiW29iamVjdCBcIiArIG5hbWUgKyBcIl1cIiBdID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuXHR9ICk7XG5cbmZ1bmN0aW9uIGlzQXJyYXlMaWtlKCBvYmogKSB7XG5cblx0Ly8gU3VwcG9ydDogcmVhbCBpT1MgOC4yIG9ubHkgKG5vdCByZXByb2R1Y2libGUgaW4gc2ltdWxhdG9yKVxuXHQvLyBgaW5gIGNoZWNrIHVzZWQgdG8gcHJldmVudCBKSVQgZXJyb3IgKGdoLTIxNDUpXG5cdC8vIGhhc093biBpc24ndCB1c2VkIGhlcmUgZHVlIHRvIGZhbHNlIG5lZ2F0aXZlc1xuXHQvLyByZWdhcmRpbmcgTm9kZWxpc3QgbGVuZ3RoIGluIElFXG5cdHZhciBsZW5ndGggPSAhIW9iaiAmJiBcImxlbmd0aFwiIGluIG9iaiAmJiBvYmoubGVuZ3RoLFxuXHRcdHR5cGUgPSB0b1R5cGUoIG9iaiApO1xuXG5cdGlmICggaXNGdW5jdGlvbiggb2JqICkgfHwgaXNXaW5kb3coIG9iaiApICkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdHJldHVybiB0eXBlID09PSBcImFycmF5XCIgfHwgbGVuZ3RoID09PSAwIHx8XG5cdFx0dHlwZW9mIGxlbmd0aCA9PT0gXCJudW1iZXJcIiAmJiBsZW5ndGggPiAwICYmICggbGVuZ3RoIC0gMSApIGluIG9iajtcbn1cbnZhciBTaXp6bGUgPVxuLyohXG4gKiBTaXp6bGUgQ1NTIFNlbGVjdG9yIEVuZ2luZSB2Mi4zLjlcbiAqIGh0dHBzOi8vc2l6emxlanMuY29tL1xuICpcbiAqIENvcHlyaWdodCBKUyBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnNcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICogaHR0cHM6Ly9qcy5mb3VuZGF0aW9uL1xuICpcbiAqIERhdGU6IDIwMjItMTItMTlcbiAqL1xuKCBmdW5jdGlvbiggd2luZG93ICkge1xudmFyIGksXG5cdHN1cHBvcnQsXG5cdEV4cHIsXG5cdGdldFRleHQsXG5cdGlzWE1MLFxuXHR0b2tlbml6ZSxcblx0Y29tcGlsZSxcblx0c2VsZWN0LFxuXHRvdXRlcm1vc3RDb250ZXh0LFxuXHRzb3J0SW5wdXQsXG5cdGhhc0R1cGxpY2F0ZSxcblxuXHQvLyBMb2NhbCBkb2N1bWVudCB2YXJzXG5cdHNldERvY3VtZW50LFxuXHRkb2N1bWVudCxcblx0ZG9jRWxlbSxcblx0ZG9jdW1lbnRJc0hUTUwsXG5cdHJidWdneVFTQSxcblx0cmJ1Z2d5TWF0Y2hlcyxcblx0bWF0Y2hlcyxcblx0Y29udGFpbnMsXG5cblx0Ly8gSW5zdGFuY2Utc3BlY2lmaWMgZGF0YVxuXHRleHBhbmRvID0gXCJzaXp6bGVcIiArIDEgKiBuZXcgRGF0ZSgpLFxuXHRwcmVmZXJyZWREb2MgPSB3aW5kb3cuZG9jdW1lbnQsXG5cdGRpcnJ1bnMgPSAwLFxuXHRkb25lID0gMCxcblx0Y2xhc3NDYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdHRva2VuQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHRjb21waWxlckNhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0bm9ubmF0aXZlU2VsZWN0b3JDYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdHNvcnRPcmRlciA9IGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdGlmICggYSA9PT0gYiApIHtcblx0XHRcdGhhc0R1cGxpY2F0ZSA9IHRydWU7XG5cdFx0fVxuXHRcdHJldHVybiAwO1xuXHR9LFxuXG5cdC8vIEluc3RhbmNlIG1ldGhvZHNcblx0aGFzT3duID0gKCB7fSApLmhhc093blByb3BlcnR5LFxuXHRhcnIgPSBbXSxcblx0cG9wID0gYXJyLnBvcCxcblx0cHVzaE5hdGl2ZSA9IGFyci5wdXNoLFxuXHRwdXNoID0gYXJyLnB1c2gsXG5cdHNsaWNlID0gYXJyLnNsaWNlLFxuXG5cdC8vIFVzZSBhIHN0cmlwcGVkLWRvd24gaW5kZXhPZiBhcyBpdCdzIGZhc3RlciB0aGFuIG5hdGl2ZVxuXHQvLyBodHRwczovL2pzcGVyZi5jb20vdGhvci1pbmRleG9mLXZzLWZvci81XG5cdGluZGV4T2YgPSBmdW5jdGlvbiggbGlzdCwgZWxlbSApIHtcblx0XHR2YXIgaSA9IDAsXG5cdFx0XHRsZW4gPSBsaXN0Lmxlbmd0aDtcblx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdGlmICggbGlzdFsgaSBdID09PSBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gaTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIC0xO1xuXHR9LFxuXG5cdGJvb2xlYW5zID0gXCJjaGVja2VkfHNlbGVjdGVkfGFzeW5jfGF1dG9mb2N1c3xhdXRvcGxheXxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58XCIgK1xuXHRcdFwiaXNtYXB8bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZFwiLFxuXG5cdC8vIFJlZ3VsYXIgZXhwcmVzc2lvbnNcblxuXHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLXNlbGVjdG9ycy8jd2hpdGVzcGFjZVxuXHR3aGl0ZXNwYWNlID0gXCJbXFxcXHgyMFxcXFx0XFxcXHJcXFxcblxcXFxmXVwiLFxuXG5cdC8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9jc3Mtc3ludGF4LTMvI2lkZW50LXRva2VuLWRpYWdyYW1cblx0aWRlbnRpZmllciA9IFwiKD86XFxcXFxcXFxbXFxcXGRhLWZBLUZdezEsNn1cIiArIHdoaXRlc3BhY2UgK1xuXHRcdFwiP3xcXFxcXFxcXFteXFxcXHJcXFxcblxcXFxmXXxbXFxcXHctXXxbXlxcMC1cXFxceDdmXSkrXCIsXG5cblx0Ly8gQXR0cmlidXRlIHNlbGVjdG9yczogaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNhdHRyaWJ1dGUtc2VsZWN0b3JzXG5cdGF0dHJpYnV0ZXMgPSBcIlxcXFxbXCIgKyB3aGl0ZXNwYWNlICsgXCIqKFwiICsgaWRlbnRpZmllciArIFwiKSg/OlwiICsgd2hpdGVzcGFjZSArXG5cblx0XHQvLyBPcGVyYXRvciAoY2FwdHVyZSAyKVxuXHRcdFwiKihbKl4kfCF+XT89KVwiICsgd2hpdGVzcGFjZSArXG5cblx0XHQvLyBcIkF0dHJpYnV0ZSB2YWx1ZXMgbXVzdCBiZSBDU1MgaWRlbnRpZmllcnMgW2NhcHR1cmUgNV1cblx0XHQvLyBvciBzdHJpbmdzIFtjYXB0dXJlIDMgb3IgY2FwdHVyZSA0XVwiXG5cdFx0XCIqKD86JygoPzpcXFxcXFxcXC58W15cXFxcXFxcXCddKSopJ3xcXFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXFxcIl0pKilcXFwifChcIiArIGlkZW50aWZpZXIgKyBcIikpfClcIiArXG5cdFx0d2hpdGVzcGFjZSArIFwiKlxcXFxdXCIsXG5cblx0cHNldWRvcyA9IFwiOihcIiArIGlkZW50aWZpZXIgKyBcIikoPzpcXFxcKChcIiArXG5cblx0XHQvLyBUbyByZWR1Y2UgdGhlIG51bWJlciBvZiBzZWxlY3RvcnMgbmVlZGluZyB0b2tlbml6ZSBpbiB0aGUgcHJlRmlsdGVyLCBwcmVmZXIgYXJndW1lbnRzOlxuXHRcdC8vIDEuIHF1b3RlZCAoY2FwdHVyZSAzOyBjYXB0dXJlIDQgb3IgY2FwdHVyZSA1KVxuXHRcdFwiKCcoKD86XFxcXFxcXFwufFteXFxcXFxcXFwnXSkqKSd8XFxcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXFxcXCJdKSopXFxcIil8XCIgK1xuXG5cdFx0Ly8gMi4gc2ltcGxlIChjYXB0dXJlIDYpXG5cdFx0XCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKVtcXFxcXV18XCIgKyBhdHRyaWJ1dGVzICsgXCIpKil8XCIgK1xuXG5cdFx0Ly8gMy4gYW55dGhpbmcgZWxzZSAoY2FwdHVyZSAyKVxuXHRcdFwiLipcIiArXG5cdFx0XCIpXFxcXCl8KVwiLFxuXG5cdC8vIExlYWRpbmcgYW5kIG5vbi1lc2NhcGVkIHRyYWlsaW5nIHdoaXRlc3BhY2UsIGNhcHR1cmluZyBzb21lIG5vbi13aGl0ZXNwYWNlIGNoYXJhY3RlcnMgcHJlY2VkaW5nIHRoZSBsYXR0ZXJcblx0cndoaXRlc3BhY2UgPSBuZXcgUmVnRXhwKCB3aGl0ZXNwYWNlICsgXCIrXCIsIFwiZ1wiICksXG5cdHJ0cmltID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIrfCgoPzpefFteXFxcXFxcXFxdKSg/OlxcXFxcXFxcLikqKVwiICtcblx0XHR3aGl0ZXNwYWNlICsgXCIrJFwiLCBcImdcIiApLFxuXG5cdHJjb21tYSA9IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiKixcIiArIHdoaXRlc3BhY2UgKyBcIipcIiApLFxuXHRyY29tYmluYXRvcnMgPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIiooWz4rfl18XCIgKyB3aGl0ZXNwYWNlICsgXCIpXCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcIipcIiApLFxuXHRyZGVzY2VuZCA9IG5ldyBSZWdFeHAoIHdoaXRlc3BhY2UgKyBcInw+XCIgKSxcblxuXHRycHNldWRvID0gbmV3IFJlZ0V4cCggcHNldWRvcyApLFxuXHRyaWRlbnRpZmllciA9IG5ldyBSZWdFeHAoIFwiXlwiICsgaWRlbnRpZmllciArIFwiJFwiICksXG5cblx0bWF0Y2hFeHByID0ge1xuXHRcdFwiSURcIjogbmV3IFJlZ0V4cCggXCJeIyhcIiArIGlkZW50aWZpZXIgKyBcIilcIiApLFxuXHRcdFwiQ0xBU1NcIjogbmV3IFJlZ0V4cCggXCJeXFxcXC4oXCIgKyBpZGVudGlmaWVyICsgXCIpXCIgKSxcblx0XHRcIlRBR1wiOiBuZXcgUmVnRXhwKCBcIl4oXCIgKyBpZGVudGlmaWVyICsgXCJ8WypdKVwiICksXG5cdFx0XCJBVFRSXCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgYXR0cmlidXRlcyApLFxuXHRcdFwiUFNFVURPXCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgcHNldWRvcyApLFxuXHRcdFwiQ0hJTERcIjogbmV3IFJlZ0V4cCggXCJeOihvbmx5fGZpcnN0fGxhc3R8bnRofG50aC1sYXN0KS0oY2hpbGR8b2YtdHlwZSkoPzpcXFxcKFwiICtcblx0XHRcdHdoaXRlc3BhY2UgKyBcIiooZXZlbnxvZGR8KChbKy1dfCkoXFxcXGQqKW58KVwiICsgd2hpdGVzcGFjZSArIFwiKig/OihbKy1dfClcIiArXG5cdFx0XHR3aGl0ZXNwYWNlICsgXCIqKFxcXFxkKyl8KSlcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcKXwpXCIsIFwiaVwiICksXG5cdFx0XCJib29sXCI6IG5ldyBSZWdFeHAoIFwiXig/OlwiICsgYm9vbGVhbnMgKyBcIikkXCIsIFwiaVwiICksXG5cblx0XHQvLyBGb3IgdXNlIGluIGxpYnJhcmllcyBpbXBsZW1lbnRpbmcgLmlzKClcblx0XHQvLyBXZSB1c2UgdGhpcyBmb3IgUE9TIG1hdGNoaW5nIGluIGBzZWxlY3RgXG5cdFx0XCJuZWVkc0NvbnRleHRcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcdFwiKls+K35dfDooZXZlbnxvZGR8ZXF8Z3R8bHR8bnRofGZpcnN0fGxhc3QpKD86XFxcXChcIiArIHdoaXRlc3BhY2UgK1xuXHRcdFx0XCIqKCg/Oi1cXFxcZCk/XFxcXGQqKVwiICsgd2hpdGVzcGFjZSArIFwiKlxcXFwpfCkoPz1bXi1dfCQpXCIsIFwiaVwiIClcblx0fSxcblxuXHRyaHRtbCA9IC9IVE1MJC9pLFxuXHRyaW5wdXRzID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSxcblx0cmhlYWRlciA9IC9eaFxcZCQvaSxcblxuXHRybmF0aXZlID0gL15bXntdK1xce1xccypcXFtuYXRpdmUgXFx3LyxcblxuXHQvLyBFYXNpbHktcGFyc2VhYmxlL3JldHJpZXZhYmxlIElEIG9yIFRBRyBvciBDTEFTUyBzZWxlY3RvcnNcblx0cnF1aWNrRXhwciA9IC9eKD86IyhbXFx3LV0rKXwoXFx3Kyl8XFwuKFtcXHctXSspKSQvLFxuXG5cdHJzaWJsaW5nID0gL1srfl0vLFxuXG5cdC8vIENTUyBlc2NhcGVzXG5cdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3N5bmRhdGEuaHRtbCNlc2NhcGVkLWNoYXJhY3RlcnNcblx0cnVuZXNjYXBlID0gbmV3IFJlZ0V4cCggXCJcXFxcXFxcXFtcXFxcZGEtZkEtRl17MSw2fVwiICsgd2hpdGVzcGFjZSArIFwiP3xcXFxcXFxcXChbXlxcXFxyXFxcXG5cXFxcZl0pXCIsIFwiZ1wiICksXG5cdGZ1bmVzY2FwZSA9IGZ1bmN0aW9uKCBlc2NhcGUsIG5vbkhleCApIHtcblx0XHR2YXIgaGlnaCA9IFwiMHhcIiArIGVzY2FwZS5zbGljZSggMSApIC0gMHgxMDAwMDtcblxuXHRcdHJldHVybiBub25IZXggP1xuXG5cdFx0XHQvLyBTdHJpcCB0aGUgYmFja3NsYXNoIHByZWZpeCBmcm9tIGEgbm9uLWhleCBlc2NhcGUgc2VxdWVuY2Vcblx0XHRcdG5vbkhleCA6XG5cblx0XHRcdC8vIFJlcGxhY2UgYSBoZXhhZGVjaW1hbCBlc2NhcGUgc2VxdWVuY2Ugd2l0aCB0aGUgZW5jb2RlZCBVbmljb2RlIGNvZGUgcG9pbnRcblx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9MTErXG5cdFx0XHQvLyBGb3IgdmFsdWVzIG91dHNpZGUgdGhlIEJhc2ljIE11bHRpbGluZ3VhbCBQbGFuZSAoQk1QKSwgbWFudWFsbHkgY29uc3RydWN0IGFcblx0XHRcdC8vIHN1cnJvZ2F0ZSBwYWlyXG5cdFx0XHRoaWdoIDwgMCA/XG5cdFx0XHRcdFN0cmluZy5mcm9tQ2hhckNvZGUoIGhpZ2ggKyAweDEwMDAwICkgOlxuXHRcdFx0XHRTdHJpbmcuZnJvbUNoYXJDb2RlKCBoaWdoID4+IDEwIHwgMHhEODAwLCBoaWdoICYgMHgzRkYgfCAweERDMDAgKTtcblx0fSxcblxuXHQvLyBDU1Mgc3RyaW5nL2lkZW50aWZpZXIgc2VyaWFsaXphdGlvblxuXHQvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3Nzb20vI2NvbW1vbi1zZXJpYWxpemluZy1pZGlvbXNcblx0cmNzc2VzY2FwZSA9IC8oW1xcMC1cXHgxZlxceDdmXXxeLT9cXGQpfF4tJHxbXlxcMC1cXHgxZlxceDdmLVxcdUZGRkZcXHctXS9nLFxuXHRmY3NzZXNjYXBlID0gZnVuY3Rpb24oIGNoLCBhc0NvZGVQb2ludCApIHtcblx0XHRpZiAoIGFzQ29kZVBvaW50ICkge1xuXG5cdFx0XHQvLyBVKzAwMDAgTlVMTCBiZWNvbWVzIFUrRkZGRCBSRVBMQUNFTUVOVCBDSEFSQUNURVJcblx0XHRcdGlmICggY2ggPT09IFwiXFwwXCIgKSB7XG5cdFx0XHRcdHJldHVybiBcIlxcdUZGRkRcIjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29udHJvbCBjaGFyYWN0ZXJzIGFuZCAoZGVwZW5kZW50IHVwb24gcG9zaXRpb24pIG51bWJlcnMgZ2V0IGVzY2FwZWQgYXMgY29kZSBwb2ludHNcblx0XHRcdHJldHVybiBjaC5zbGljZSggMCwgLTEgKSArIFwiXFxcXFwiICtcblx0XHRcdFx0Y2guY2hhckNvZGVBdCggY2gubGVuZ3RoIC0gMSApLnRvU3RyaW5nKCAxNiApICsgXCIgXCI7XG5cdFx0fVxuXG5cdFx0Ly8gT3RoZXIgcG90ZW50aWFsbHktc3BlY2lhbCBBU0NJSSBjaGFyYWN0ZXJzIGdldCBiYWNrc2xhc2gtZXNjYXBlZFxuXHRcdHJldHVybiBcIlxcXFxcIiArIGNoO1xuXHR9LFxuXG5cdC8vIFVzZWQgZm9yIGlmcmFtZXNcblx0Ly8gU2VlIHNldERvY3VtZW50KClcblx0Ly8gUmVtb3ZpbmcgdGhlIGZ1bmN0aW9uIHdyYXBwZXIgY2F1c2VzIGEgXCJQZXJtaXNzaW9uIERlbmllZFwiXG5cdC8vIGVycm9yIGluIElFXG5cdHVubG9hZEhhbmRsZXIgPSBmdW5jdGlvbigpIHtcblx0XHRzZXREb2N1bWVudCgpO1xuXHR9LFxuXG5cdGluRGlzYWJsZWRGaWVsZHNldCA9IGFkZENvbWJpbmF0b3IoXG5cdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gdHJ1ZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwiZmllbGRzZXRcIjtcblx0XHR9LFxuXHRcdHsgZGlyOiBcInBhcmVudE5vZGVcIiwgbmV4dDogXCJsZWdlbmRcIiB9XG5cdCk7XG5cbi8vIE9wdGltaXplIGZvciBwdXNoLmFwcGx5KCBfLCBOb2RlTGlzdCApXG50cnkge1xuXHRwdXNoLmFwcGx5KFxuXHRcdCggYXJyID0gc2xpY2UuY2FsbCggcHJlZmVycmVkRG9jLmNoaWxkTm9kZXMgKSApLFxuXHRcdHByZWZlcnJlZERvYy5jaGlsZE5vZGVzXG5cdCk7XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZDw0LjBcblx0Ly8gRGV0ZWN0IHNpbGVudGx5IGZhaWxpbmcgcHVzaC5hcHBseVxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLWV4cHJlc3Npb25zXG5cdGFyclsgcHJlZmVycmVkRG9jLmNoaWxkTm9kZXMubGVuZ3RoIF0ubm9kZVR5cGU7XG59IGNhdGNoICggZSApIHtcblx0cHVzaCA9IHsgYXBwbHk6IGFyci5sZW5ndGggP1xuXG5cdFx0Ly8gTGV2ZXJhZ2Ugc2xpY2UgaWYgcG9zc2libGVcblx0XHRmdW5jdGlvbiggdGFyZ2V0LCBlbHMgKSB7XG5cdFx0XHRwdXNoTmF0aXZlLmFwcGx5KCB0YXJnZXQsIHNsaWNlLmNhbGwoIGVscyApICk7XG5cdFx0fSA6XG5cblx0XHQvLyBTdXBwb3J0OiBJRTw5XG5cdFx0Ly8gT3RoZXJ3aXNlIGFwcGVuZCBkaXJlY3RseVxuXHRcdGZ1bmN0aW9uKCB0YXJnZXQsIGVscyApIHtcblx0XHRcdHZhciBqID0gdGFyZ2V0Lmxlbmd0aCxcblx0XHRcdFx0aSA9IDA7XG5cblx0XHRcdC8vIENhbid0IHRydXN0IE5vZGVMaXN0Lmxlbmd0aFxuXHRcdFx0d2hpbGUgKCAoIHRhcmdldFsgaisrIF0gPSBlbHNbIGkrKyBdICkgKSB7fVxuXHRcdFx0dGFyZ2V0Lmxlbmd0aCA9IGogLSAxO1xuXHRcdH1cblx0fTtcbn1cblxuZnVuY3Rpb24gU2l6emxlKCBzZWxlY3RvciwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApIHtcblx0dmFyIG0sIGksIGVsZW0sIG5pZCwgbWF0Y2gsIGdyb3VwcywgbmV3U2VsZWN0b3IsXG5cdFx0bmV3Q29udGV4dCA9IGNvbnRleHQgJiYgY29udGV4dC5vd25lckRvY3VtZW50LFxuXG5cdFx0Ly8gbm9kZVR5cGUgZGVmYXVsdHMgdG8gOSwgc2luY2UgY29udGV4dCBkZWZhdWx0cyB0byBkb2N1bWVudFxuXHRcdG5vZGVUeXBlID0gY29udGV4dCA/IGNvbnRleHQubm9kZVR5cGUgOiA5O1xuXG5cdHJlc3VsdHMgPSByZXN1bHRzIHx8IFtdO1xuXG5cdC8vIFJldHVybiBlYXJseSBmcm9tIGNhbGxzIHdpdGggaW52YWxpZCBzZWxlY3RvciBvciBjb250ZXh0XG5cdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiIHx8ICFzZWxlY3RvciB8fFxuXHRcdG5vZGVUeXBlICE9PSAxICYmIG5vZGVUeXBlICE9PSA5ICYmIG5vZGVUeXBlICE9PSAxMSApIHtcblxuXHRcdHJldHVybiByZXN1bHRzO1xuXHR9XG5cblx0Ly8gVHJ5IHRvIHNob3J0Y3V0IGZpbmQgb3BlcmF0aW9ucyAoYXMgb3Bwb3NlZCB0byBmaWx0ZXJzKSBpbiBIVE1MIGRvY3VtZW50c1xuXHRpZiAoICFzZWVkICkge1xuXHRcdHNldERvY3VtZW50KCBjb250ZXh0ICk7XG5cdFx0Y29udGV4dCA9IGNvbnRleHQgfHwgZG9jdW1lbnQ7XG5cblx0XHRpZiAoIGRvY3VtZW50SXNIVE1MICkge1xuXG5cdFx0XHQvLyBJZiB0aGUgc2VsZWN0b3IgaXMgc3VmZmljaWVudGx5IHNpbXBsZSwgdHJ5IHVzaW5nIGEgXCJnZXQqQnkqXCIgRE9NIG1ldGhvZFxuXHRcdFx0Ly8gKGV4Y2VwdGluZyBEb2N1bWVudEZyYWdtZW50IGNvbnRleHQsIHdoZXJlIHRoZSBtZXRob2RzIGRvbid0IGV4aXN0KVxuXHRcdFx0aWYgKCBub2RlVHlwZSAhPT0gMTEgJiYgKCBtYXRjaCA9IHJxdWlja0V4cHIuZXhlYyggc2VsZWN0b3IgKSApICkge1xuXG5cdFx0XHRcdC8vIElEIHNlbGVjdG9yXG5cdFx0XHRcdGlmICggKCBtID0gbWF0Y2hbIDEgXSApICkge1xuXG5cdFx0XHRcdFx0Ly8gRG9jdW1lbnQgY29udGV4dFxuXHRcdFx0XHRcdGlmICggbm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0XHRpZiAoICggZWxlbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIG0gKSApICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFLCBPcGVyYSwgV2Via2l0XG5cdFx0XHRcdFx0XHRcdC8vIFRPRE86IGlkZW50aWZ5IHZlcnNpb25zXG5cdFx0XHRcdFx0XHRcdC8vIGdldEVsZW1lbnRCeUlkIGNhbiBtYXRjaCBlbGVtZW50cyBieSBuYW1lIGluc3RlYWQgb2YgSURcblx0XHRcdFx0XHRcdFx0aWYgKCBlbGVtLmlkID09PSBtICkge1xuXHRcdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIEVsZW1lbnQgY29udGV4dFxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFLCBPcGVyYSwgV2Via2l0XG5cdFx0XHRcdFx0XHQvLyBUT0RPOiBpZGVudGlmeSB2ZXJzaW9uc1xuXHRcdFx0XHRcdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgY2FuIG1hdGNoIGVsZW1lbnRzIGJ5IG5hbWUgaW5zdGVhZCBvZiBJRFxuXHRcdFx0XHRcdFx0aWYgKCBuZXdDb250ZXh0ICYmICggZWxlbSA9IG5ld0NvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIG0gKSApICYmXG5cdFx0XHRcdFx0XHRcdGNvbnRhaW5zKCBjb250ZXh0LCBlbGVtICkgJiZcblx0XHRcdFx0XHRcdFx0ZWxlbS5pZCA9PT0gbSApIHtcblxuXHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFR5cGUgc2VsZWN0b3Jcblx0XHRcdFx0fSBlbHNlIGlmICggbWF0Y2hbIDIgXSApIHtcblx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCBzZWxlY3RvciApICk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cblx0XHRcdFx0Ly8gQ2xhc3Mgc2VsZWN0b3Jcblx0XHRcdFx0fSBlbHNlIGlmICggKCBtID0gbWF0Y2hbIDMgXSApICYmIHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJlxuXHRcdFx0XHRcdGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApIHtcblxuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSggbSApICk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gVGFrZSBhZHZhbnRhZ2Ugb2YgcXVlcnlTZWxlY3RvckFsbFxuXHRcdFx0aWYgKCBzdXBwb3J0LnFzYSAmJlxuXHRcdFx0XHQhbm9ubmF0aXZlU2VsZWN0b3JDYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdICYmXG5cdFx0XHRcdCggIXJidWdneVFTQSB8fCAhcmJ1Z2d5UVNBLnRlc3QoIHNlbGVjdG9yICkgKSAmJlxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDggb25seVxuXHRcdFx0XHQvLyBFeGNsdWRlIG9iamVjdCBlbGVtZW50c1xuXHRcdFx0XHQoIG5vZGVUeXBlICE9PSAxIHx8IGNvbnRleHQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSAhPT0gXCJvYmplY3RcIiApICkge1xuXG5cdFx0XHRcdG5ld1NlbGVjdG9yID0gc2VsZWN0b3I7XG5cdFx0XHRcdG5ld0NvbnRleHQgPSBjb250ZXh0O1xuXG5cdFx0XHRcdC8vIHFTQSBjb25zaWRlcnMgZWxlbWVudHMgb3V0c2lkZSBhIHNjb3Bpbmcgcm9vdCB3aGVuIGV2YWx1YXRpbmcgY2hpbGQgb3Jcblx0XHRcdFx0Ly8gZGVzY2VuZGFudCBjb21iaW5hdG9ycywgd2hpY2ggaXMgbm90IHdoYXQgd2Ugd2FudC5cblx0XHRcdFx0Ly8gSW4gc3VjaCBjYXNlcywgd2Ugd29yayBhcm91bmQgdGhlIGJlaGF2aW9yIGJ5IHByZWZpeGluZyBldmVyeSBzZWxlY3RvciBpbiB0aGVcblx0XHRcdFx0Ly8gbGlzdCB3aXRoIGFuIElEIHNlbGVjdG9yIHJlZmVyZW5jaW5nIHRoZSBzY29wZSBjb250ZXh0LlxuXHRcdFx0XHQvLyBUaGUgdGVjaG5pcXVlIGhhcyB0byBiZSB1c2VkIGFzIHdlbGwgd2hlbiBhIGxlYWRpbmcgY29tYmluYXRvciBpcyB1c2VkXG5cdFx0XHRcdC8vIGFzIHN1Y2ggc2VsZWN0b3JzIGFyZSBub3QgcmVjb2duaXplZCBieSBxdWVyeVNlbGVjdG9yQWxsLlxuXHRcdFx0XHQvLyBUaGFua3MgdG8gQW5kcmV3IER1cG9udCBmb3IgdGhpcyB0ZWNobmlxdWUuXG5cdFx0XHRcdGlmICggbm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0XHQoIHJkZXNjZW5kLnRlc3QoIHNlbGVjdG9yICkgfHwgcmNvbWJpbmF0b3JzLnRlc3QoIHNlbGVjdG9yICkgKSApIHtcblxuXHRcdFx0XHRcdC8vIEV4cGFuZCBjb250ZXh0IGZvciBzaWJsaW5nIHNlbGVjdG9yc1xuXHRcdFx0XHRcdG5ld0NvbnRleHQgPSByc2libGluZy50ZXN0KCBzZWxlY3RvciApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fFxuXHRcdFx0XHRcdFx0Y29udGV4dDtcblxuXHRcdFx0XHRcdC8vIFdlIGNhbiB1c2UgOnNjb3BlIGluc3RlYWQgb2YgdGhlIElEIGhhY2sgaWYgdGhlIGJyb3dzZXJcblx0XHRcdFx0XHQvLyBzdXBwb3J0cyBpdCAmIGlmIHdlJ3JlIG5vdCBjaGFuZ2luZyB0aGUgY29udGV4dC5cblx0XHRcdFx0XHRpZiAoIG5ld0NvbnRleHQgIT09IGNvbnRleHQgfHwgIXN1cHBvcnQuc2NvcGUgKSB7XG5cblx0XHRcdFx0XHRcdC8vIENhcHR1cmUgdGhlIGNvbnRleHQgSUQsIHNldHRpbmcgaXQgZmlyc3QgaWYgbmVjZXNzYXJ5XG5cdFx0XHRcdFx0XHRpZiAoICggbmlkID0gY29udGV4dC5nZXRBdHRyaWJ1dGUoIFwiaWRcIiApICkgKSB7XG5cdFx0XHRcdFx0XHRcdG5pZCA9IG5pZC5yZXBsYWNlKCByY3NzZXNjYXBlLCBmY3NzZXNjYXBlICk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRjb250ZXh0LnNldEF0dHJpYnV0ZSggXCJpZFwiLCAoIG5pZCA9IGV4cGFuZG8gKSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIFByZWZpeCBldmVyeSBzZWxlY3RvciBpbiB0aGUgbGlzdFxuXHRcdFx0XHRcdGdyb3VwcyA9IHRva2VuaXplKCBzZWxlY3RvciApO1xuXHRcdFx0XHRcdGkgPSBncm91cHMubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0Z3JvdXBzWyBpIF0gPSAoIG5pZCA/IFwiI1wiICsgbmlkIDogXCI6c2NvcGVcIiApICsgXCIgXCIgK1xuXHRcdFx0XHRcdFx0XHR0b1NlbGVjdG9yKCBncm91cHNbIGkgXSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRuZXdTZWxlY3RvciA9IGdyb3Vwcy5qb2luKCBcIixcIiApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dHJ5IHtcblxuXHRcdFx0XHRcdC8vIGBxU0FgIG1heSBub3QgdGhyb3cgZm9yIHVucmVjb2duaXplZCBwYXJ0cyB1c2luZyBmb3JnaXZpbmcgcGFyc2luZzpcblx0XHRcdFx0XHQvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvc2VsZWN0b3JzLyNmb3JnaXZpbmctc2VsZWN0b3Jcblx0XHRcdFx0XHQvLyBsaWtlIHRoZSBgOmhhcygpYCBwc2V1ZG8tY2xhc3M6XG5cdFx0XHRcdFx0Ly8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL3NlbGVjdG9ycy8jcmVsYXRpb25hbFxuXHRcdFx0XHRcdC8vIGBDU1Muc3VwcG9ydHNgIGlzIHN0aWxsIGV4cGVjdGVkIHRvIHJldHVybiBgZmFsc2VgIHRoZW46XG5cdFx0XHRcdFx0Ly8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy1jb25kaXRpb25hbC00LyN0eXBlZGVmLXN1cHBvcnRzLXNlbGVjdG9yLWZuXG5cdFx0XHRcdFx0Ly8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy1jb25kaXRpb25hbC00LyNkZm4tc3VwcG9ydC1zZWxlY3RvclxuXHRcdFx0XHRcdGlmICggc3VwcG9ydC5jc3NTdXBwb3J0c1NlbGVjdG9yICYmXG5cblx0XHRcdFx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuXHRcdFx0XHRcdFx0IUNTUy5zdXBwb3J0cyggXCJzZWxlY3Rvcig6aXMoXCIgKyBuZXdTZWxlY3RvciArIFwiKSlcIiApICkge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSAxMStcblx0XHRcdFx0XHRcdC8vIFRocm93IHRvIGdldCB0byB0aGUgc2FtZSBjb2RlIHBhdGggYXMgYW4gZXJyb3IgZGlyZWN0bHkgaW4gcVNBLlxuXHRcdFx0XHRcdFx0Ly8gTm90ZTogb25jZSB3ZSBvbmx5IHN1cHBvcnQgYnJvd3NlciBzdXBwb3J0aW5nXG5cdFx0XHRcdFx0XHQvLyBgQ1NTLnN1cHBvcnRzKCdzZWxlY3RvciguLi4pJylgLCB3ZSBjYW4gbW9zdCBsaWtlbHkgZHJvcFxuXHRcdFx0XHRcdFx0Ly8gdGhlIGB0cnktY2F0Y2hgLiBJRSBkb2Vzbid0IGltcGxlbWVudCB0aGUgQVBJLlxuXHRcdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cyxcblx0XHRcdFx0XHRcdG5ld0NvbnRleHQucXVlcnlTZWxlY3RvckFsbCggbmV3U2VsZWN0b3IgKVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdH0gY2F0Y2ggKCBxc2FFcnJvciApIHtcblx0XHRcdFx0XHRub25uYXRpdmVTZWxlY3RvckNhY2hlKCBzZWxlY3RvciwgdHJ1ZSApO1xuXHRcdFx0XHR9IGZpbmFsbHkge1xuXHRcdFx0XHRcdGlmICggbmlkID09PSBleHBhbmRvICkge1xuXHRcdFx0XHRcdFx0Y29udGV4dC5yZW1vdmVBdHRyaWJ1dGUoIFwiaWRcIiApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIEFsbCBvdGhlcnNcblx0cmV0dXJuIHNlbGVjdCggc2VsZWN0b3IucmVwbGFjZSggcnRyaW0sIFwiJDFcIiApLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICk7XG59XG5cbi8qKlxuICogQ3JlYXRlIGtleS12YWx1ZSBjYWNoZXMgb2YgbGltaXRlZCBzaXplXG4gKiBAcmV0dXJucyB7ZnVuY3Rpb24oc3RyaW5nLCBvYmplY3QpfSBSZXR1cm5zIHRoZSBPYmplY3QgZGF0YSBhZnRlciBzdG9yaW5nIGl0IG9uIGl0c2VsZiB3aXRoXG4gKlx0cHJvcGVydHkgbmFtZSB0aGUgKHNwYWNlLXN1ZmZpeGVkKSBzdHJpbmcgYW5kIChpZiB0aGUgY2FjaGUgaXMgbGFyZ2VyIHRoYW4gRXhwci5jYWNoZUxlbmd0aClcbiAqXHRkZWxldGluZyB0aGUgb2xkZXN0IGVudHJ5XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUNhY2hlKCkge1xuXHR2YXIga2V5cyA9IFtdO1xuXG5cdGZ1bmN0aW9uIGNhY2hlKCBrZXksIHZhbHVlICkge1xuXG5cdFx0Ly8gVXNlIChrZXkgKyBcIiBcIikgdG8gYXZvaWQgY29sbGlzaW9uIHdpdGggbmF0aXZlIHByb3RvdHlwZSBwcm9wZXJ0aWVzIChzZWUgSXNzdWUgIzE1Nylcblx0XHRpZiAoIGtleXMucHVzaCgga2V5ICsgXCIgXCIgKSA+IEV4cHIuY2FjaGVMZW5ndGggKSB7XG5cblx0XHRcdC8vIE9ubHkga2VlcCB0aGUgbW9zdCByZWNlbnQgZW50cmllc1xuXHRcdFx0ZGVsZXRlIGNhY2hlWyBrZXlzLnNoaWZ0KCkgXTtcblx0XHR9XG5cdFx0cmV0dXJuICggY2FjaGVbIGtleSArIFwiIFwiIF0gPSB2YWx1ZSApO1xuXHR9XG5cdHJldHVybiBjYWNoZTtcbn1cblxuLyoqXG4gKiBNYXJrIGEgZnVuY3Rpb24gZm9yIHNwZWNpYWwgdXNlIGJ5IFNpenpsZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIG1hcmtcbiAqL1xuZnVuY3Rpb24gbWFya0Z1bmN0aW9uKCBmbiApIHtcblx0Zm5bIGV4cGFuZG8gXSA9IHRydWU7XG5cdHJldHVybiBmbjtcbn1cblxuLyoqXG4gKiBTdXBwb3J0IHRlc3RpbmcgdXNpbmcgYW4gZWxlbWVudFxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gUGFzc2VkIHRoZSBjcmVhdGVkIGVsZW1lbnQgYW5kIHJldHVybnMgYSBib29sZWFuIHJlc3VsdFxuICovXG5mdW5jdGlvbiBhc3NlcnQoIGZuICkge1xuXHR2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImZpZWxkc2V0XCIgKTtcblxuXHR0cnkge1xuXHRcdHJldHVybiAhIWZuKCBlbCApO1xuXHR9IGNhdGNoICggZSApIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH0gZmluYWxseSB7XG5cblx0XHQvLyBSZW1vdmUgZnJvbSBpdHMgcGFyZW50IGJ5IGRlZmF1bHRcblx0XHRpZiAoIGVsLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBlbCApO1xuXHRcdH1cblxuXHRcdC8vIHJlbGVhc2UgbWVtb3J5IGluIElFXG5cdFx0ZWwgPSBudWxsO1xuXHR9XG59XG5cbi8qKlxuICogQWRkcyB0aGUgc2FtZSBoYW5kbGVyIGZvciBhbGwgb2YgdGhlIHNwZWNpZmllZCBhdHRyc1xuICogQHBhcmFtIHtTdHJpbmd9IGF0dHJzIFBpcGUtc2VwYXJhdGVkIGxpc3Qgb2YgYXR0cmlidXRlc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlciBUaGUgbWV0aG9kIHRoYXQgd2lsbCBiZSBhcHBsaWVkXG4gKi9cbmZ1bmN0aW9uIGFkZEhhbmRsZSggYXR0cnMsIGhhbmRsZXIgKSB7XG5cdHZhciBhcnIgPSBhdHRycy5zcGxpdCggXCJ8XCIgKSxcblx0XHRpID0gYXJyLmxlbmd0aDtcblxuXHR3aGlsZSAoIGktLSApIHtcblx0XHRFeHByLmF0dHJIYW5kbGVbIGFyclsgaSBdIF0gPSBoYW5kbGVyO1xuXHR9XG59XG5cbi8qKlxuICogQ2hlY2tzIGRvY3VtZW50IG9yZGVyIG9mIHR3byBzaWJsaW5nc1xuICogQHBhcmFtIHtFbGVtZW50fSBhXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGJcbiAqIEByZXR1cm5zIHtOdW1iZXJ9IFJldHVybnMgbGVzcyB0aGFuIDAgaWYgYSBwcmVjZWRlcyBiLCBncmVhdGVyIHRoYW4gMCBpZiBhIGZvbGxvd3MgYlxuICovXG5mdW5jdGlvbiBzaWJsaW5nQ2hlY2soIGEsIGIgKSB7XG5cdHZhciBjdXIgPSBiICYmIGEsXG5cdFx0ZGlmZiA9IGN1ciAmJiBhLm5vZGVUeXBlID09PSAxICYmIGIubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdGEuc291cmNlSW5kZXggLSBiLnNvdXJjZUluZGV4O1xuXG5cdC8vIFVzZSBJRSBzb3VyY2VJbmRleCBpZiBhdmFpbGFibGUgb24gYm90aCBub2Rlc1xuXHRpZiAoIGRpZmYgKSB7XG5cdFx0cmV0dXJuIGRpZmY7XG5cdH1cblxuXHQvLyBDaGVjayBpZiBiIGZvbGxvd3MgYVxuXHRpZiAoIGN1ciApIHtcblx0XHR3aGlsZSAoICggY3VyID0gY3VyLm5leHRTaWJsaW5nICkgKSB7XG5cdFx0XHRpZiAoIGN1ciA9PT0gYiApIHtcblx0XHRcdFx0cmV0dXJuIC0xO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBhID8gMSA6IC0xO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgaW5wdXQgdHlwZXNcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUlucHV0UHNldWRvKCB0eXBlICkge1xuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0cmV0dXJuIG5hbWUgPT09IFwiaW5wdXRcIiAmJiBlbGVtLnR5cGUgPT09IHR5cGU7XG5cdH07XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBidXR0b25zXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICovXG5mdW5jdGlvbiBjcmVhdGVCdXR0b25Qc2V1ZG8oIHR5cGUgKSB7XG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRyZXR1cm4gKCBuYW1lID09PSBcImlucHV0XCIgfHwgbmFtZSA9PT0gXCJidXR0b25cIiApICYmIGVsZW0udHlwZSA9PT0gdHlwZTtcblx0fTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIDplbmFibGVkLzpkaXNhYmxlZFxuICogQHBhcmFtIHtCb29sZWFufSBkaXNhYmxlZCB0cnVlIGZvciA6ZGlzYWJsZWQ7IGZhbHNlIGZvciA6ZW5hYmxlZFxuICovXG5mdW5jdGlvbiBjcmVhdGVEaXNhYmxlZFBzZXVkbyggZGlzYWJsZWQgKSB7XG5cblx0Ly8gS25vd24gOmRpc2FibGVkIGZhbHNlIHBvc2l0aXZlczogZmllbGRzZXRbZGlzYWJsZWRdID4gbGVnZW5kOm50aC1vZi10eXBlKG4rMikgOmNhbi1kaXNhYmxlXG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdC8vIE9ubHkgY2VydGFpbiBlbGVtZW50cyBjYW4gbWF0Y2ggOmVuYWJsZWQgb3IgOmRpc2FibGVkXG5cdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc2NyaXB0aW5nLmh0bWwjc2VsZWN0b3ItZW5hYmxlZFxuXHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NjcmlwdGluZy5odG1sI3NlbGVjdG9yLWRpc2FibGVkXG5cdFx0aWYgKCBcImZvcm1cIiBpbiBlbGVtICkge1xuXG5cdFx0XHQvLyBDaGVjayBmb3IgaW5oZXJpdGVkIGRpc2FibGVkbmVzcyBvbiByZWxldmFudCBub24tZGlzYWJsZWQgZWxlbWVudHM6XG5cdFx0XHQvLyAqIGxpc3RlZCBmb3JtLWFzc29jaWF0ZWQgZWxlbWVudHMgaW4gYSBkaXNhYmxlZCBmaWVsZHNldFxuXHRcdFx0Ly8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NhdGVnb3J5LWxpc3RlZFxuXHRcdFx0Ly8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NvbmNlcHQtZmUtZGlzYWJsZWRcblx0XHRcdC8vICogb3B0aW9uIGVsZW1lbnRzIGluIGEgZGlzYWJsZWQgb3B0Z3JvdXBcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjb25jZXB0LW9wdGlvbi1kaXNhYmxlZFxuXHRcdFx0Ly8gQWxsIHN1Y2ggZWxlbWVudHMgaGF2ZSBhIFwiZm9ybVwiIHByb3BlcnR5LlxuXHRcdFx0aWYgKCBlbGVtLnBhcmVudE5vZGUgJiYgZWxlbS5kaXNhYmxlZCA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0Ly8gT3B0aW9uIGVsZW1lbnRzIGRlZmVyIHRvIGEgcGFyZW50IG9wdGdyb3VwIGlmIHByZXNlbnRcblx0XHRcdFx0aWYgKCBcImxhYmVsXCIgaW4gZWxlbSApIHtcblx0XHRcdFx0XHRpZiAoIFwibGFiZWxcIiBpbiBlbGVtLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbS5wYXJlbnROb2RlLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDYgLSAxMVxuXHRcdFx0XHQvLyBVc2UgdGhlIGlzRGlzYWJsZWQgc2hvcnRjdXQgcHJvcGVydHkgdG8gY2hlY2sgZm9yIGRpc2FibGVkIGZpZWxkc2V0IGFuY2VzdG9yc1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5pc0Rpc2FibGVkID09PSBkaXNhYmxlZCB8fFxuXG5cdFx0XHRcdFx0Ly8gV2hlcmUgdGhlcmUgaXMgbm8gaXNEaXNhYmxlZCwgY2hlY2sgbWFudWFsbHlcblx0XHRcdFx0XHQvKiBqc2hpbnQgLVcwMTggKi9cblx0XHRcdFx0XHRlbGVtLmlzRGlzYWJsZWQgIT09ICFkaXNhYmxlZCAmJlxuXHRcdFx0XHRcdGluRGlzYWJsZWRGaWVsZHNldCggZWxlbSApID09PSBkaXNhYmxlZDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXG5cdFx0Ly8gVHJ5IHRvIHdpbm5vdyBvdXQgZWxlbWVudHMgdGhhdCBjYW4ndCBiZSBkaXNhYmxlZCBiZWZvcmUgdHJ1c3RpbmcgdGhlIGRpc2FibGVkIHByb3BlcnR5LlxuXHRcdC8vIFNvbWUgdmljdGltcyBnZXQgY2F1Z2h0IGluIG91ciBuZXQgKGxhYmVsLCBsZWdlbmQsIG1lbnUsIHRyYWNrKSwgYnV0IGl0IHNob3VsZG4ndFxuXHRcdC8vIGV2ZW4gZXhpc3Qgb24gdGhlbSwgbGV0IGFsb25lIGhhdmUgYSBib29sZWFuIHZhbHVlLlxuXHRcdH0gZWxzZSBpZiAoIFwibGFiZWxcIiBpbiBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXHRcdH1cblxuXHRcdC8vIFJlbWFpbmluZyBlbGVtZW50cyBhcmUgbmVpdGhlciA6ZW5hYmxlZCBub3IgOmRpc2FibGVkXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgcG9zaXRpb25hbHNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZuICkge1xuXHRyZXR1cm4gbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggYXJndW1lbnQgKSB7XG5cdFx0YXJndW1lbnQgPSArYXJndW1lbnQ7XG5cdFx0cmV0dXJuIG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlZWQsIG1hdGNoZXMgKSB7XG5cdFx0XHR2YXIgaixcblx0XHRcdFx0bWF0Y2hJbmRleGVzID0gZm4oIFtdLCBzZWVkLmxlbmd0aCwgYXJndW1lbnQgKSxcblx0XHRcdFx0aSA9IG1hdGNoSW5kZXhlcy5sZW5ndGg7XG5cblx0XHRcdC8vIE1hdGNoIGVsZW1lbnRzIGZvdW5kIGF0IHRoZSBzcGVjaWZpZWQgaW5kZXhlc1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggc2VlZFsgKCBqID0gbWF0Y2hJbmRleGVzWyBpIF0gKSBdICkge1xuXHRcdFx0XHRcdHNlZWRbIGogXSA9ICEoIG1hdGNoZXNbIGogXSA9IHNlZWRbIGogXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9ICk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGEgbm9kZSBmb3IgdmFsaWRpdHkgYXMgYSBTaXp6bGUgY29udGV4dFxuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdD19IGNvbnRleHRcbiAqIEByZXR1cm5zIHtFbGVtZW50fE9iamVjdHxCb29sZWFufSBUaGUgaW5wdXQgbm9kZSBpZiBhY2NlcHRhYmxlLCBvdGhlcndpc2UgYSBmYWxzeSB2YWx1ZVxuICovXG5mdW5jdGlvbiB0ZXN0Q29udGV4dCggY29udGV4dCApIHtcblx0cmV0dXJuIGNvbnRleHQgJiYgdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgIT09IFwidW5kZWZpbmVkXCIgJiYgY29udGV4dDtcbn1cblxuLy8gRXhwb3NlIHN1cHBvcnQgdmFycyBmb3IgY29udmVuaWVuY2VcbnN1cHBvcnQgPSBTaXp6bGUuc3VwcG9ydCA9IHt9O1xuXG4vKipcbiAqIERldGVjdHMgWE1MIG5vZGVzXG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0fSBlbGVtIEFuIGVsZW1lbnQgb3IgYSBkb2N1bWVudFxuICogQHJldHVybnMge0Jvb2xlYW59IFRydWUgaWZmIGVsZW0gaXMgYSBub24tSFRNTCBYTUwgbm9kZVxuICovXG5pc1hNTCA9IFNpenpsZS5pc1hNTCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHR2YXIgbmFtZXNwYWNlID0gZWxlbSAmJiBlbGVtLm5hbWVzcGFjZVVSSSxcblx0XHRkb2NFbGVtID0gZWxlbSAmJiAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtICkuZG9jdW1lbnRFbGVtZW50O1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OFxuXHQvLyBBc3N1bWUgSFRNTCB3aGVuIGRvY3VtZW50RWxlbWVudCBkb2Vzbid0IHlldCBleGlzdCwgc3VjaCBhcyBpbnNpZGUgbG9hZGluZyBpZnJhbWVzXG5cdC8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC80ODMzXG5cdHJldHVybiAhcmh0bWwudGVzdCggbmFtZXNwYWNlIHx8IGRvY0VsZW0gJiYgZG9jRWxlbS5ub2RlTmFtZSB8fCBcIkhUTUxcIiApO1xufTtcblxuLyoqXG4gKiBTZXRzIGRvY3VtZW50LXJlbGF0ZWQgdmFyaWFibGVzIG9uY2UgYmFzZWQgb24gdGhlIGN1cnJlbnQgZG9jdW1lbnRcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3R9IFtkb2NdIEFuIGVsZW1lbnQgb3IgZG9jdW1lbnQgb2JqZWN0IHRvIHVzZSB0byBzZXQgdGhlIGRvY3VtZW50XG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjdXJyZW50IGRvY3VtZW50XG4gKi9cbnNldERvY3VtZW50ID0gU2l6emxlLnNldERvY3VtZW50ID0gZnVuY3Rpb24oIG5vZGUgKSB7XG5cdHZhciBoYXNDb21wYXJlLCBzdWJXaW5kb3csXG5cdFx0ZG9jID0gbm9kZSA/IG5vZGUub3duZXJEb2N1bWVudCB8fCBub2RlIDogcHJlZmVycmVkRG9jO1xuXG5cdC8vIFJldHVybiBlYXJseSBpZiBkb2MgaXMgaW52YWxpZCBvciBhbHJlYWR5IHNlbGVjdGVkXG5cdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdGlmICggZG9jID09IGRvY3VtZW50IHx8IGRvYy5ub2RlVHlwZSAhPT0gOSB8fCAhZG9jLmRvY3VtZW50RWxlbWVudCApIHtcblx0XHRyZXR1cm4gZG9jdW1lbnQ7XG5cdH1cblxuXHQvLyBVcGRhdGUgZ2xvYmFsIHZhcmlhYmxlc1xuXHRkb2N1bWVudCA9IGRvYztcblx0ZG9jRWxlbSA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcblx0ZG9jdW1lbnRJc0hUTUwgPSAhaXNYTUwoIGRvY3VtZW50ICk7XG5cblx0Ly8gU3VwcG9ydDogSUUgOSAtIDExKywgRWRnZSAxMiAtIDE4K1xuXHQvLyBBY2Nlc3NpbmcgaWZyYW1lIGRvY3VtZW50cyBhZnRlciB1bmxvYWQgdGhyb3dzIFwicGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvcnMgKGpRdWVyeSAjMTM5MzYpXG5cdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdGlmICggcHJlZmVycmVkRG9jICE9IGRvY3VtZW50ICYmXG5cdFx0KCBzdWJXaW5kb3cgPSBkb2N1bWVudC5kZWZhdWx0VmlldyApICYmIHN1YldpbmRvdy50b3AgIT09IHN1YldpbmRvdyApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDExLCBFZGdlXG5cdFx0aWYgKCBzdWJXaW5kb3cuYWRkRXZlbnRMaXN0ZW5lciApIHtcblx0XHRcdHN1YldpbmRvdy5hZGRFdmVudExpc3RlbmVyKCBcInVubG9hZFwiLCB1bmxvYWRIYW5kbGVyLCBmYWxzZSApO1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDEwIG9ubHlcblx0XHR9IGVsc2UgaWYgKCBzdWJXaW5kb3cuYXR0YWNoRXZlbnQgKSB7XG5cdFx0XHRzdWJXaW5kb3cuYXR0YWNoRXZlbnQoIFwib251bmxvYWRcIiwgdW5sb2FkSGFuZGxlciApO1xuXHRcdH1cblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDggLSAxMSssIEVkZ2UgMTIgLSAxOCssIENocm9tZSA8PTE2IC0gMjUgb25seSwgRmlyZWZveCA8PTMuNiAtIDMxIG9ubHksXG5cdC8vIFNhZmFyaSA0IC0gNSBvbmx5LCBPcGVyYSA8PTExLjYgLSAxMi54IG9ubHlcblx0Ly8gSUUvRWRnZSAmIG9sZGVyIGJyb3dzZXJzIGRvbid0IHN1cHBvcnQgdGhlIDpzY29wZSBwc2V1ZG8tY2xhc3MuXG5cdC8vIFN1cHBvcnQ6IFNhZmFyaSA2LjAgb25seVxuXHQvLyBTYWZhcmkgNi4wIHN1cHBvcnRzIDpzY29wZSBidXQgaXQncyBhbiBhbGlhcyBvZiA6cm9vdCB0aGVyZS5cblx0c3VwcG9ydC5zY29wZSA9IGFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRcdGRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSApO1xuXHRcdHJldHVybiB0eXBlb2YgZWwucXVlcnlTZWxlY3RvckFsbCAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuXHRcdFx0IWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiOnNjb3BlIGZpZWxkc2V0IGRpdlwiICkubGVuZ3RoO1xuXHR9ICk7XG5cblx0Ly8gU3VwcG9ydDogQ2hyb21lIDEwNSssIEZpcmVmb3ggMTA0KywgU2FmYXJpIDE1LjQrXG5cdC8vIE1ha2Ugc3VyZSBmb3JnaXZpbmcgbW9kZSBpcyBub3QgdXNlZCBpbiBgQ1NTLnN1cHBvcnRzKCBcInNlbGVjdG9yKC4uLilcIiApYC5cblx0Ly9cblx0Ly8gYDppcygpYCB1c2VzIGEgZm9yZ2l2aW5nIHNlbGVjdG9yIGxpc3QgYXMgYW4gYXJndW1lbnQgYW5kIGlzIHdpZGVseVxuXHQvLyBpbXBsZW1lbnRlZCwgc28gaXQncyBhIGdvb2Qgb25lIHRvIHRlc3QgYWdhaW5zdC5cblx0c3VwcG9ydC5jc3NTdXBwb3J0c1NlbGVjdG9yID0gYXNzZXJ0KCBmdW5jdGlvbigpIHtcblx0XHQvKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiAqL1xuXG5cdFx0cmV0dXJuIENTUy5zdXBwb3J0cyggXCJzZWxlY3RvcigqKVwiICkgJiZcblxuXHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA3OC04MSBvbmx5XG5cdFx0XHQvLyBJbiBvbGQgRmlyZWZveCwgYDppcygpYCBkaWRuJ3QgdXNlIGZvcmdpdmluZyBwYXJzaW5nLiBJbiB0aGF0IGNhc2UsXG5cdFx0XHQvLyBmYWlsIHRoaXMgdGVzdCBhcyB0aGVyZSdzIG5vIHNlbGVjdG9yIHRvIHRlc3QgYWdhaW5zdCB0aGF0LlxuXHRcdFx0Ly8gYENTUy5zdXBwb3J0c2AgdXNlcyB1bmZvcmdpdmluZyBwYXJzaW5nXG5cdFx0XHRkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCBcIjppcyg6anFmYWtlKVwiICkgJiZcblxuXHRcdFx0Ly8gYCpgIGlzIG5lZWRlZCBhcyBTYWZhcmkgJiBuZXdlciBDaHJvbWUgaW1wbGVtZW50ZWQgc29tZXRoaW5nIGluIGJldHdlZW5cblx0XHRcdC8vIGZvciBgOmhhcygpYCAtIGl0IHRocm93cyBpbiBgcVNBYCBpZiBpdCBvbmx5IGNvbnRhaW5zIGFuIHVuc3VwcG9ydGVkXG5cdFx0XHQvLyBhcmd1bWVudCBidXQgbXVsdGlwbGUgb25lcywgb25lIG9mIHdoaWNoIGlzIHN1cHBvcnRlZCwgYXJlIGZpbmUuXG5cdFx0XHQvLyBXZSB3YW50IHRvIHBsYXkgc2FmZSBpbiBjYXNlIGA6aXMoKWAgZ2V0cyB0aGUgc2FtZSB0cmVhdG1lbnQuXG5cdFx0XHQhQ1NTLnN1cHBvcnRzKCBcInNlbGVjdG9yKDppcygqLDpqcWZha2UpKVwiICk7XG5cblx0XHQvKiBlc2xpbnQtZW5hYmxlICovXG5cdH0gKTtcblxuXHQvKiBBdHRyaWJ1dGVzXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBTdXBwb3J0OiBJRTw4XG5cdC8vIFZlcmlmeSB0aGF0IGdldEF0dHJpYnV0ZSByZWFsbHkgcmV0dXJucyBhdHRyaWJ1dGVzIGFuZCBub3QgcHJvcGVydGllc1xuXHQvLyAoZXhjZXB0aW5nIElFOCBib29sZWFucylcblx0c3VwcG9ydC5hdHRyaWJ1dGVzID0gYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZWwuY2xhc3NOYW1lID0gXCJpXCI7XG5cdFx0cmV0dXJuICFlbC5nZXRBdHRyaWJ1dGUoIFwiY2xhc3NOYW1lXCIgKTtcblx0fSApO1xuXG5cdC8qIGdldEVsZW1lbnQocylCeSpcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIENoZWNrIGlmIGdldEVsZW1lbnRzQnlUYWdOYW1lKFwiKlwiKSByZXR1cm5zIG9ubHkgZWxlbWVudHNcblx0c3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA9IGFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRcdGVsLmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVDb21tZW50KCBcIlwiICkgKTtcblx0XHRyZXR1cm4gIWVsLmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcIipcIiApLmxlbmd0aDtcblx0fSApO1xuXG5cdC8vIFN1cHBvcnQ6IElFPDlcblx0c3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lID0gcm5hdGl2ZS50ZXN0KCBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICk7XG5cblx0Ly8gU3VwcG9ydDogSUU8MTBcblx0Ly8gQ2hlY2sgaWYgZ2V0RWxlbWVudEJ5SWQgcmV0dXJucyBlbGVtZW50cyBieSBuYW1lXG5cdC8vIFRoZSBicm9rZW4gZ2V0RWxlbWVudEJ5SWQgbWV0aG9kcyBkb24ndCBwaWNrIHVwIHByb2dyYW1tYXRpY2FsbHktc2V0IG5hbWVzLFxuXHQvLyBzbyB1c2UgYSByb3VuZGFib3V0IGdldEVsZW1lbnRzQnlOYW1lIHRlc3Rcblx0c3VwcG9ydC5nZXRCeUlkID0gYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5pZCA9IGV4cGFuZG87XG5cdFx0cmV0dXJuICFkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSB8fCAhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoIGV4cGFuZG8gKS5sZW5ndGg7XG5cdH0gKTtcblxuXHQvLyBJRCBmaWx0ZXIgYW5kIGZpbmRcblx0aWYgKCBzdXBwb3J0LmdldEJ5SWQgKSB7XG5cdFx0RXhwci5maWx0ZXJbIFwiSURcIiBdID0gZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSggXCJpZFwiICkgPT09IGF0dHJJZDtcblx0XHRcdH07XG5cdFx0fTtcblx0XHRFeHByLmZpbmRbIFwiSURcIiBdID0gZnVuY3Rpb24oIGlkLCBjb250ZXh0ICkge1xuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50QnlJZCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdFx0dmFyIGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBpZCApO1xuXHRcdFx0XHRyZXR1cm4gZWxlbSA/IFsgZWxlbSBdIDogW107XG5cdFx0XHR9XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRFeHByLmZpbHRlclsgXCJJRFwiIF0gPSAgZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciBub2RlID0gdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlTm9kZSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuXHRcdFx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggXCJpZFwiICk7XG5cdFx0XHRcdHJldHVybiBub2RlICYmIG5vZGUudmFsdWUgPT09IGF0dHJJZDtcblx0XHRcdH07XG5cdFx0fTtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDYgLSA3IG9ubHlcblx0XHQvLyBnZXRFbGVtZW50QnlJZCBpcyBub3QgcmVsaWFibGUgYXMgYSBmaW5kIHNob3J0Y3V0XG5cdFx0RXhwci5maW5kWyBcIklEXCIgXSA9IGZ1bmN0aW9uKCBpZCwgY29udGV4dCApIHtcblx0XHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XG5cdFx0XHRcdHZhciBub2RlLCBpLCBlbGVtcyxcblx0XHRcdFx0XHRlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggaWQgKTtcblxuXHRcdFx0XHRpZiAoIGVsZW0gKSB7XG5cblx0XHRcdFx0XHQvLyBWZXJpZnkgdGhlIGlkIGF0dHJpYnV0ZVxuXHRcdFx0XHRcdG5vZGUgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIFwiaWRcIiApO1xuXHRcdFx0XHRcdGlmICggbm9kZSAmJiBub2RlLnZhbHVlID09PSBpZCApIHtcblx0XHRcdFx0XHRcdHJldHVybiBbIGVsZW0gXTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBGYWxsIGJhY2sgb24gZ2V0RWxlbWVudHNCeU5hbWVcblx0XHRcdFx0XHRlbGVtcyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeU5hbWUoIGlkICk7XG5cdFx0XHRcdFx0aSA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIFwiaWRcIiApO1xuXHRcdFx0XHRcdFx0aWYgKCBub2RlICYmIG5vZGUudmFsdWUgPT09IGlkICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gWyBlbGVtIF07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIFtdO1xuXHRcdFx0fVxuXHRcdH07XG5cdH1cblxuXHQvLyBUYWdcblx0RXhwci5maW5kWyBcIlRBR1wiIF0gPSBzdXBwb3J0LmdldEVsZW1lbnRzQnlUYWdOYW1lID9cblx0XHRmdW5jdGlvbiggdGFnLCBjb250ZXh0ICkge1xuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyApO1xuXG5cdFx0XHQvLyBEb2N1bWVudEZyYWdtZW50IG5vZGVzIGRvbid0IGhhdmUgZ0VCVE5cblx0XHRcdH0gZWxzZSBpZiAoIHN1cHBvcnQucXNhICkge1xuXHRcdFx0XHRyZXR1cm4gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgKTtcblx0XHRcdH1cblx0XHR9IDpcblxuXHRcdGZ1bmN0aW9uKCB0YWcsIGNvbnRleHQgKSB7XG5cdFx0XHR2YXIgZWxlbSxcblx0XHRcdFx0dG1wID0gW10sXG5cdFx0XHRcdGkgPSAwLFxuXG5cdFx0XHRcdC8vIEJ5IGhhcHB5IGNvaW5jaWRlbmNlLCBhIChicm9rZW4pIGdFQlROIGFwcGVhcnMgb24gRG9jdW1lbnRGcmFnbWVudCBub2RlcyB0b29cblx0XHRcdFx0cmVzdWx0cyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyApO1xuXG5cdFx0XHQvLyBGaWx0ZXIgb3V0IHBvc3NpYmxlIGNvbW1lbnRzXG5cdFx0XHRpZiAoIHRhZyA9PT0gXCIqXCIgKSB7XG5cdFx0XHRcdHdoaWxlICggKCBlbGVtID0gcmVzdWx0c1sgaSsrIF0gKSApIHtcblx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRcdFx0XHR0bXAucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB0bXA7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHR9O1xuXG5cdC8vIENsYXNzXG5cdEV4cHIuZmluZFsgXCJDTEFTU1wiIF0gPSBzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgJiYgZnVuY3Rpb24oIGNsYXNzTmFtZSwgY29udGV4dCApIHtcblx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XG5cdFx0XHRyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCBjbGFzc05hbWUgKTtcblx0XHR9XG5cdH07XG5cblx0LyogUVNBL21hdGNoZXNTZWxlY3RvclxuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Ly8gUVNBIGFuZCBtYXRjaGVzU2VsZWN0b3Igc3VwcG9ydFxuXG5cdC8vIG1hdGNoZXNTZWxlY3Rvcig6YWN0aXZlKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoSUU5L09wZXJhIDExLjUpXG5cdHJidWdneU1hdGNoZXMgPSBbXTtcblxuXHQvLyBxU2EoOmZvY3VzKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoQ2hyb21lIDIxKVxuXHQvLyBXZSBhbGxvdyB0aGlzIGJlY2F1c2Ugb2YgYSBidWcgaW4gSUU4LzkgdGhhdCB0aHJvd3MgYW4gZXJyb3Jcblx0Ly8gd2hlbmV2ZXIgYGRvY3VtZW50LmFjdGl2ZUVsZW1lbnRgIGlzIGFjY2Vzc2VkIG9uIGFuIGlmcmFtZVxuXHQvLyBTbywgd2UgYWxsb3cgOmZvY3VzIHRvIHBhc3MgdGhyb3VnaCBRU0EgYWxsIHRoZSB0aW1lIHRvIGF2b2lkIHRoZSBJRSBlcnJvclxuXHQvLyBTZWUgaHR0cHM6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzEzMzc4XG5cdHJidWdneVFTQSA9IFtdO1xuXG5cdGlmICggKCBzdXBwb3J0LnFzYSA9IHJuYXRpdmUudGVzdCggZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCApICkgKSB7XG5cblx0XHQvLyBCdWlsZCBRU0EgcmVnZXhcblx0XHQvLyBSZWdleCBzdHJhdGVneSBhZG9wdGVkIGZyb20gRGllZ28gUGVyaW5pXG5cdFx0YXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cblx0XHRcdHZhciBpbnB1dDtcblxuXHRcdFx0Ly8gU2VsZWN0IGlzIHNldCB0byBlbXB0eSBzdHJpbmcgb24gcHVycG9zZVxuXHRcdFx0Ly8gVGhpcyBpcyB0byB0ZXN0IElFJ3MgdHJlYXRtZW50IG9mIG5vdCBleHBsaWNpdGx5XG5cdFx0XHQvLyBzZXR0aW5nIGEgYm9vbGVhbiBjb250ZW50IGF0dHJpYnV0ZSxcblx0XHRcdC8vIHNpbmNlIGl0cyBwcmVzZW5jZSBzaG91bGQgYmUgZW5vdWdoXG5cdFx0XHQvLyBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTIzNTlcblx0XHRcdGRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuaW5uZXJIVE1MID0gXCI8YSBpZD0nXCIgKyBleHBhbmRvICsgXCInPjwvYT5cIiArXG5cdFx0XHRcdFwiPHNlbGVjdCBpZD0nXCIgKyBleHBhbmRvICsgXCItXFxyXFxcXCcgbXNhbGxvd2NhcHR1cmU9Jyc+XCIgK1xuXHRcdFx0XHRcIjxvcHRpb24gc2VsZWN0ZWQ9Jyc+PC9vcHRpb24+PC9zZWxlY3Q+XCI7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOCwgT3BlcmEgMTEtMTIuMTZcblx0XHRcdC8vIE5vdGhpbmcgc2hvdWxkIGJlIHNlbGVjdGVkIHdoZW4gZW1wdHkgc3RyaW5ncyBmb2xsb3cgXj0gb3IgJD0gb3IgKj1cblx0XHRcdC8vIFRoZSB0ZXN0IGF0dHJpYnV0ZSBtdXN0IGJlIHVua25vd24gaW4gT3BlcmEgYnV0IFwic2FmZVwiIGZvciBXaW5SVFxuXHRcdFx0Ly8gaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9pZS9oaDQ2NTM4OC5hc3B4I2F0dHJpYnV0ZV9zZWN0aW9uXG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiW21zYWxsb3djYXB0dXJlXj0nJ11cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiWypeJF09XCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86Jyd8XFxcIlxcXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4XG5cdFx0XHQvLyBCb29sZWFuIGF0dHJpYnV0ZXMgYW5kIFwidmFsdWVcIiBhcmUgbm90IHRyZWF0ZWQgY29ycmVjdGx5XG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIltzZWxlY3RlZF1cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooPzp2YWx1ZXxcIiArIGJvb2xlYW5zICsgXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lPDI5LCBBbmRyb2lkPDQuNCwgU2FmYXJpPDcuMCssIGlPUzw3LjArLCBQaGFudG9tSlM8MS45LjgrXG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIltpZH49XCIgKyBleHBhbmRvICsgXCItXVwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJ+PVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNSAtIDE4K1xuXHRcdFx0Ly8gSUUgMTEvRWRnZSBkb24ndCBmaW5kIGVsZW1lbnRzIG9uIGEgYFtuYW1lPScnXWAgcXVlcnkgaW4gc29tZSBjYXNlcy5cblx0XHRcdC8vIEFkZGluZyBhIHRlbXBvcmFyeSBhdHRyaWJ1dGUgdG8gdGhlIGRvY3VtZW50IGJlZm9yZSB0aGUgc2VsZWN0aW9uIHdvcmtzXG5cdFx0XHQvLyBhcm91bmQgdGhlIGlzc3VlLlxuXHRcdFx0Ly8gSW50ZXJlc3RpbmdseSwgSUUgMTAgJiBvbGRlciBkb24ndCBzZWVtIHRvIGhhdmUgdGhlIGlzc3VlLlxuXHRcdFx0aW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblx0XHRcdGlucHV0LnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwiXCIgKTtcblx0XHRcdGVsLmFwcGVuZENoaWxkKCBpbnB1dCApO1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCJbbmFtZT0nJ11cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIipuYW1lXCIgKyB3aGl0ZXNwYWNlICsgXCIqPVwiICtcblx0XHRcdFx0XHR3aGl0ZXNwYWNlICsgXCIqKD86Jyd8XFxcIlxcXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gV2Via2l0L09wZXJhIC0gOmNoZWNrZWQgc2hvdWxkIHJldHVybiBzZWxlY3RlZCBvcHRpb24gZWxlbWVudHNcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMTEvUkVDLWNzczMtc2VsZWN0b3JzLTIwMTEwOTI5LyNjaGVja2VkXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCI6Y2hlY2tlZFwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6Y2hlY2tlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA4KywgaU9TIDgrXG5cdFx0XHQvLyBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTM2ODUxXG5cdFx0XHQvLyBJbi1wYWdlIGBzZWxlY3RvciNpZCBzaWJsaW5nLWNvbWJpbmF0b3Igc2VsZWN0b3JgIGZhaWxzXG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcImEjXCIgKyBleHBhbmRvICsgXCIrKlwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCIuIy4rWyt+XVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD0zLjYgLSA1IG9ubHlcblx0XHRcdC8vIE9sZCBGaXJlZm94IGRvZXNuJ3QgdGhyb3cgb24gYSBiYWRseS1lc2NhcGVkIGlkZW50aWZpZXIuXG5cdFx0XHRlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIlxcXFxcXGZcIiApO1xuXHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiW1xcXFxyXFxcXG5cXFxcZl1cIiApO1xuXHRcdH0gKTtcblxuXHRcdGFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRcdFx0ZWwuaW5uZXJIVE1MID0gXCI8YSBocmVmPScnIGRpc2FibGVkPSdkaXNhYmxlZCc+PC9hPlwiICtcblx0XHRcdFx0XCI8c2VsZWN0IGRpc2FibGVkPSdkaXNhYmxlZCc+PG9wdGlvbi8+PC9zZWxlY3Q+XCI7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IFdpbmRvd3MgOCBOYXRpdmUgQXBwc1xuXHRcdFx0Ly8gVGhlIHR5cGUgYW5kIG5hbWUgYXR0cmlidXRlcyBhcmUgcmVzdHJpY3RlZCBkdXJpbmcgLmlubmVySFRNTCBhc3NpZ25tZW50XG5cdFx0XHR2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblx0XHRcdGlucHV0LnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIFwiaGlkZGVuXCIgKTtcblx0XHRcdGVsLmFwcGVuZENoaWxkKCBpbnB1dCApLnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwiRFwiICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOFxuXHRcdFx0Ly8gRW5mb3JjZSBjYXNlLXNlbnNpdGl2aXR5IG9mIG5hbWUgYXR0cmlidXRlXG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiW25hbWU9ZF1cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwibmFtZVwiICsgd2hpdGVzcGFjZSArIFwiKlsqXiR8IX5dPz1cIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBGRiAzLjUgLSA6ZW5hYmxlZC86ZGlzYWJsZWQgYW5kIGhpZGRlbiBlbGVtZW50cyAoaGlkZGVuIGVsZW1lbnRzIGFyZSBzdGlsbCBlbmFibGVkKVxuXHRcdFx0Ly8gSUU4IHRocm93cyBlcnJvciBoZXJlIGFuZCB3aWxsIG5vdCBzZWUgbGF0ZXIgdGVzdHNcblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbCggXCI6ZW5hYmxlZFwiICkubGVuZ3RoICE9PSAyICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6ZW5hYmxlZFwiLCBcIjpkaXNhYmxlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOS0xMStcblx0XHRcdC8vIElFJ3MgOmRpc2FibGVkIHNlbGVjdG9yIGRvZXMgbm90IHBpY2sgdXAgdGhlIGNoaWxkcmVuIG9mIGRpc2FibGVkIGZpZWxkc2V0c1xuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5kaXNhYmxlZCA9IHRydWU7XG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiOmRpc2FibGVkXCIgKS5sZW5ndGggIT09IDIgKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIjplbmFibGVkXCIsIFwiOmRpc2FibGVkXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogT3BlcmEgMTAgLSAxMSBvbmx5XG5cdFx0XHQvLyBPcGVyYSAxMC0xMSBkb2VzIG5vdCB0aHJvdyBvbiBwb3N0LWNvbW1hIGludmFsaWQgcHNldWRvc1xuXHRcdFx0ZWwucXVlcnlTZWxlY3RvckFsbCggXCIqLDp4XCIgKTtcblx0XHRcdHJidWdneVFTQS5wdXNoKCBcIiwuKjpcIiApO1xuXHRcdH0gKTtcblx0fVxuXG5cdGlmICggKCBzdXBwb3J0Lm1hdGNoZXNTZWxlY3RvciA9IHJuYXRpdmUudGVzdCggKCBtYXRjaGVzID0gZG9jRWxlbS5tYXRjaGVzIHx8XG5cdFx0ZG9jRWxlbS53ZWJraXRNYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm1vek1hdGNoZXNTZWxlY3RvciB8fFxuXHRcdGRvY0VsZW0ub01hdGNoZXNTZWxlY3RvciB8fFxuXHRcdGRvY0VsZW0ubXNNYXRjaGVzU2VsZWN0b3IgKSApICkgKSB7XG5cblx0XHRhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblxuXHRcdFx0Ly8gQ2hlY2sgdG8gc2VlIGlmIGl0J3MgcG9zc2libGUgdG8gZG8gbWF0Y2hlc1NlbGVjdG9yXG5cdFx0XHQvLyBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlIChJRSA5KVxuXHRcdFx0c3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCA9IG1hdGNoZXMuY2FsbCggZWwsIFwiKlwiICk7XG5cblx0XHRcdC8vIFRoaXMgc2hvdWxkIGZhaWwgd2l0aCBhbiBleGNlcHRpb25cblx0XHRcdC8vIEdlY2tvIGRvZXMgbm90IGVycm9yLCByZXR1cm5zIGZhbHNlIGluc3RlYWRcblx0XHRcdG1hdGNoZXMuY2FsbCggZWwsIFwiW3MhPScnXTp4XCIgKTtcblx0XHRcdHJidWdneU1hdGNoZXMucHVzaCggXCIhPVwiLCBwc2V1ZG9zICk7XG5cdFx0fSApO1xuXHR9XG5cblx0aWYgKCAhc3VwcG9ydC5jc3NTdXBwb3J0c1NlbGVjdG9yICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDEwNSssIFNhZmFyaSAxNS40K1xuXHRcdC8vIGA6aGFzKClgIHVzZXMgYSBmb3JnaXZpbmcgc2VsZWN0b3IgbGlzdCBhcyBhbiBhcmd1bWVudCBzbyBvdXIgcmVndWxhclxuXHRcdC8vIGB0cnktY2F0Y2hgIG1lY2hhbmlzbSBmYWlscyB0byBjYXRjaCBgOmhhcygpYCB3aXRoIGFyZ3VtZW50cyBub3Qgc3VwcG9ydGVkXG5cdFx0Ly8gbmF0aXZlbHkgbGlrZSBgOmhhcyg6Y29udGFpbnMoXCJGb29cIikpYC4gV2hlcmUgc3VwcG9ydGVkICYgc3BlYy1jb21wbGlhbnQsXG5cdFx0Ly8gd2Ugbm93IHVzZSBgQ1NTLnN1cHBvcnRzKFwic2VsZWN0b3IoOmlzKFNFTEVDVE9SX1RPX0JFX1RFU1RFRCkpXCIpYCwgYnV0XG5cdFx0Ly8gb3V0c2lkZSB0aGF0IHdlIG1hcmsgYDpoYXNgIGFzIGJ1Z2d5LlxuXHRcdHJidWdneVFTQS5wdXNoKCBcIjpoYXNcIiApO1xuXHR9XG5cblx0cmJ1Z2d5UVNBID0gcmJ1Z2d5UVNBLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lRU0Euam9pbiggXCJ8XCIgKSApO1xuXHRyYnVnZ3lNYXRjaGVzID0gcmJ1Z2d5TWF0Y2hlcy5sZW5ndGggJiYgbmV3IFJlZ0V4cCggcmJ1Z2d5TWF0Y2hlcy5qb2luKCBcInxcIiApICk7XG5cblx0LyogQ29udGFpbnNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXHRoYXNDb21wYXJlID0gcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICk7XG5cblx0Ly8gRWxlbWVudCBjb250YWlucyBhbm90aGVyXG5cdC8vIFB1cnBvc2VmdWxseSBzZWxmLWV4Y2x1c2l2ZVxuXHQvLyBBcyBpbiwgYW4gZWxlbWVudCBkb2VzIG5vdCBjb250YWluIGl0c2VsZlxuXHRjb250YWlucyA9IGhhc0NvbXBhcmUgfHwgcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbnRhaW5zICkgP1xuXHRcdGZ1bmN0aW9uKCBhLCBiICkge1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHQvLyBJRSBkb2Vzbid0IGhhdmUgYGNvbnRhaW5zYCBvbiBgZG9jdW1lbnRgIHNvIHdlIG5lZWQgdG8gY2hlY2sgZm9yXG5cdFx0XHQvLyBgZG9jdW1lbnRFbGVtZW50YCBwcmVzZW5jZS5cblx0XHRcdC8vIFdlIG5lZWQgdG8gZmFsbCBiYWNrIHRvIGBhYCB3aGVuIGBkb2N1bWVudEVsZW1lbnRgIGlzIG1pc3Npbmdcblx0XHRcdC8vIGFzIGBvd25lckRvY3VtZW50YCBvZiBlbGVtZW50cyB3aXRoaW4gYDx0ZW1wbGF0ZS8+YCBtYXkgaGF2ZVxuXHRcdFx0Ly8gYSBudWxsIG9uZSAtIGEgZGVmYXVsdCBiZWhhdmlvciBvZiBhbGwgbW9kZXJuIGJyb3dzZXJzLlxuXHRcdFx0dmFyIGFkb3duID0gYS5ub2RlVHlwZSA9PT0gOSAmJiBhLmRvY3VtZW50RWxlbWVudCB8fCBhLFxuXHRcdFx0XHRidXAgPSBiICYmIGIucGFyZW50Tm9kZTtcblx0XHRcdHJldHVybiBhID09PSBidXAgfHwgISEoIGJ1cCAmJiBidXAubm9kZVR5cGUgPT09IDEgJiYgKFxuXHRcdFx0XHRhZG93bi5jb250YWlucyA/XG5cdFx0XHRcdFx0YWRvd24uY29udGFpbnMoIGJ1cCApIDpcblx0XHRcdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICYmIGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGJ1cCApICYgMTZcblx0XHRcdCkgKTtcblx0XHR9IDpcblx0XHRmdW5jdGlvbiggYSwgYiApIHtcblx0XHRcdGlmICggYiApIHtcblx0XHRcdFx0d2hpbGUgKCAoIGIgPSBiLnBhcmVudE5vZGUgKSApIHtcblx0XHRcdFx0XHRpZiAoIGIgPT09IGEgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xuXG5cdC8qIFNvcnRpbmdcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIERvY3VtZW50IG9yZGVyIHNvcnRpbmdcblx0c29ydE9yZGVyID0gaGFzQ29tcGFyZSA/XG5cdGZ1bmN0aW9uKCBhLCBiICkge1xuXG5cdFx0Ly8gRmxhZyBmb3IgZHVwbGljYXRlIHJlbW92YWxcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0Ly8gU29ydCBvbiBtZXRob2QgZXhpc3RlbmNlIGlmIG9ubHkgb25lIGlucHV0IGhhcyBjb21wYXJlRG9jdW1lbnRQb3NpdGlvblxuXHRcdHZhciBjb21wYXJlID0gIWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24gLSAhYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbjtcblx0XHRpZiAoIGNvbXBhcmUgKSB7XG5cdFx0XHRyZXR1cm4gY29tcGFyZTtcblx0XHR9XG5cblx0XHQvLyBDYWxjdWxhdGUgcG9zaXRpb24gaWYgYm90aCBpbnB1dHMgYmVsb25nIHRvIHRoZSBzYW1lIGRvY3VtZW50XG5cdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0XHRjb21wYXJlID0gKCBhLm93bmVyRG9jdW1lbnQgfHwgYSApID09ICggYi5vd25lckRvY3VtZW50IHx8IGIgKSA/XG5cdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBiICkgOlxuXG5cdFx0XHQvLyBPdGhlcndpc2Ugd2Uga25vdyB0aGV5IGFyZSBkaXNjb25uZWN0ZWRcblx0XHRcdDE7XG5cblx0XHQvLyBEaXNjb25uZWN0ZWQgbm9kZXNcblx0XHRpZiAoIGNvbXBhcmUgJiAxIHx8XG5cdFx0XHQoICFzdXBwb3J0LnNvcnREZXRhY2hlZCAmJiBiLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBhICkgPT09IGNvbXBhcmUgKSApIHtcblxuXHRcdFx0Ly8gQ2hvb3NlIHRoZSBmaXJzdCBlbGVtZW50IHRoYXQgaXMgcmVsYXRlZCB0byBvdXIgcHJlZmVycmVkIGRvY3VtZW50XG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRcdFx0aWYgKCBhID09IGRvY3VtZW50IHx8IGEub3duZXJEb2N1bWVudCA9PSBwcmVmZXJyZWREb2MgJiZcblx0XHRcdFx0Y29udGFpbnMoIHByZWZlcnJlZERvYywgYSApICkge1xuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHRcdFx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdFx0XHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdFx0XHRpZiAoIGIgPT0gZG9jdW1lbnQgfHwgYi5vd25lckRvY3VtZW50ID09IHByZWZlcnJlZERvYyAmJlxuXHRcdFx0XHRjb250YWlucyggcHJlZmVycmVkRG9jLCBiICkgKSB7XG5cdFx0XHRcdHJldHVybiAxO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYWludGFpbiBvcmlnaW5hbCBvcmRlclxuXHRcdFx0cmV0dXJuIHNvcnRJbnB1dCA/XG5cdFx0XHRcdCggaW5kZXhPZiggc29ydElucHV0LCBhICkgLSBpbmRleE9mKCBzb3J0SW5wdXQsIGIgKSApIDpcblx0XHRcdFx0MDtcblx0XHR9XG5cblx0XHRyZXR1cm4gY29tcGFyZSAmIDQgPyAtMSA6IDE7XG5cdH0gOlxuXHRmdW5jdGlvbiggYSwgYiApIHtcblxuXHRcdC8vIEV4aXQgZWFybHkgaWYgdGhlIG5vZGVzIGFyZSBpZGVudGljYWxcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0dmFyIGN1cixcblx0XHRcdGkgPSAwLFxuXHRcdFx0YXVwID0gYS5wYXJlbnROb2RlLFxuXHRcdFx0YnVwID0gYi5wYXJlbnROb2RlLFxuXHRcdFx0YXAgPSBbIGEgXSxcblx0XHRcdGJwID0gWyBiIF07XG5cblx0XHQvLyBQYXJlbnRsZXNzIG5vZGVzIGFyZSBlaXRoZXIgZG9jdW1lbnRzIG9yIGRpc2Nvbm5lY3RlZFxuXHRcdGlmICggIWF1cCB8fCAhYnVwICkge1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdFx0LyogZXNsaW50LWRpc2FibGUgZXFlcWVxICovXG5cdFx0XHRyZXR1cm4gYSA9PSBkb2N1bWVudCA/IC0xIDpcblx0XHRcdFx0YiA9PSBkb2N1bWVudCA/IDEgOlxuXHRcdFx0XHQvKiBlc2xpbnQtZW5hYmxlIGVxZXFlcSAqL1xuXHRcdFx0XHRhdXAgPyAtMSA6XG5cdFx0XHRcdGJ1cCA/IDEgOlxuXHRcdFx0XHRzb3J0SW5wdXQgP1xuXHRcdFx0XHQoIGluZGV4T2YoIHNvcnRJbnB1dCwgYSApIC0gaW5kZXhPZiggc29ydElucHV0LCBiICkgKSA6XG5cdFx0XHRcdDA7XG5cblx0XHQvLyBJZiB0aGUgbm9kZXMgYXJlIHNpYmxpbmdzLCB3ZSBjYW4gZG8gYSBxdWljayBjaGVja1xuXHRcdH0gZWxzZSBpZiAoIGF1cCA9PT0gYnVwICkge1xuXHRcdFx0cmV0dXJuIHNpYmxpbmdDaGVjayggYSwgYiApO1xuXHRcdH1cblxuXHRcdC8vIE90aGVyd2lzZSB3ZSBuZWVkIGZ1bGwgbGlzdHMgb2YgdGhlaXIgYW5jZXN0b3JzIGZvciBjb21wYXJpc29uXG5cdFx0Y3VyID0gYTtcblx0XHR3aGlsZSAoICggY3VyID0gY3VyLnBhcmVudE5vZGUgKSApIHtcblx0XHRcdGFwLnVuc2hpZnQoIGN1ciApO1xuXHRcdH1cblx0XHRjdXIgPSBiO1xuXHRcdHdoaWxlICggKCBjdXIgPSBjdXIucGFyZW50Tm9kZSApICkge1xuXHRcdFx0YnAudW5zaGlmdCggY3VyICk7XG5cdFx0fVxuXG5cdFx0Ly8gV2FsayBkb3duIHRoZSB0cmVlIGxvb2tpbmcgZm9yIGEgZGlzY3JlcGFuY3lcblx0XHR3aGlsZSAoIGFwWyBpIF0gPT09IGJwWyBpIF0gKSB7XG5cdFx0XHRpKys7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGkgP1xuXG5cdFx0XHQvLyBEbyBhIHNpYmxpbmcgY2hlY2sgaWYgdGhlIG5vZGVzIGhhdmUgYSBjb21tb24gYW5jZXN0b3Jcblx0XHRcdHNpYmxpbmdDaGVjayggYXBbIGkgXSwgYnBbIGkgXSApIDpcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIG5vZGVzIGluIG91ciBkb2N1bWVudCBzb3J0IGZpcnN0XG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdFx0LyogZXNsaW50LWRpc2FibGUgZXFlcWVxICovXG5cdFx0XHRhcFsgaSBdID09IHByZWZlcnJlZERvYyA/IC0xIDpcblx0XHRcdGJwWyBpIF0gPT0gcHJlZmVycmVkRG9jID8gMSA6XG5cdFx0XHQvKiBlc2xpbnQtZW5hYmxlIGVxZXFlcSAqL1xuXHRcdFx0MDtcblx0fTtcblxuXHRyZXR1cm4gZG9jdW1lbnQ7XG59O1xuXG5TaXp6bGUubWF0Y2hlcyA9IGZ1bmN0aW9uKCBleHByLCBlbGVtZW50cyApIHtcblx0cmV0dXJuIFNpenpsZSggZXhwciwgbnVsbCwgbnVsbCwgZWxlbWVudHMgKTtcbn07XG5cblNpenpsZS5tYXRjaGVzU2VsZWN0b3IgPSBmdW5jdGlvbiggZWxlbSwgZXhwciApIHtcblx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcblxuXHRpZiAoIHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yICYmIGRvY3VtZW50SXNIVE1MICYmXG5cdFx0IW5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGVbIGV4cHIgKyBcIiBcIiBdICYmXG5cdFx0KCAhcmJ1Z2d5TWF0Y2hlcyB8fCAhcmJ1Z2d5TWF0Y2hlcy50ZXN0KCBleHByICkgKSAmJlxuXHRcdCggIXJidWdneVFTQSAgICAgfHwgIXJidWdneVFTQS50ZXN0KCBleHByICkgKSApIHtcblxuXHRcdHRyeSB7XG5cdFx0XHR2YXIgcmV0ID0gbWF0Y2hlcy5jYWxsKCBlbGVtLCBleHByICk7XG5cblx0XHRcdC8vIElFIDkncyBtYXRjaGVzU2VsZWN0b3IgcmV0dXJucyBmYWxzZSBvbiBkaXNjb25uZWN0ZWQgbm9kZXNcblx0XHRcdGlmICggcmV0IHx8IHN1cHBvcnQuZGlzY29ubmVjdGVkTWF0Y2ggfHxcblxuXHRcdFx0XHQvLyBBcyB3ZWxsLCBkaXNjb25uZWN0ZWQgbm9kZXMgYXJlIHNhaWQgdG8gYmUgaW4gYSBkb2N1bWVudFxuXHRcdFx0XHQvLyBmcmFnbWVudCBpbiBJRSA5XG5cdFx0XHRcdGVsZW0uZG9jdW1lbnQgJiYgZWxlbS5kb2N1bWVudC5ub2RlVHlwZSAhPT0gMTEgKSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cdFx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0XHRub25uYXRpdmVTZWxlY3RvckNhY2hlKCBleHByLCB0cnVlICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIFNpenpsZSggZXhwciwgZG9jdW1lbnQsIG51bGwsIFsgZWxlbSBdICkubGVuZ3RoID4gMDtcbn07XG5cblNpenpsZS5jb250YWlucyA9IGZ1bmN0aW9uKCBjb250ZXh0LCBlbGVtICkge1xuXG5cdC8vIFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZFxuXHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRpZiAoICggY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgKSAhPSBkb2N1bWVudCApIHtcblx0XHRzZXREb2N1bWVudCggY29udGV4dCApO1xuXHR9XG5cdHJldHVybiBjb250YWlucyggY29udGV4dCwgZWxlbSApO1xufTtcblxuU2l6emxlLmF0dHIgPSBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblxuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0aWYgKCAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtICkgIT0gZG9jdW1lbnQgKSB7XG5cdFx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcblx0fVxuXG5cdHZhciBmbiA9IEV4cHIuYXR0ckhhbmRsZVsgbmFtZS50b0xvd2VyQ2FzZSgpIF0sXG5cblx0XHQvLyBEb24ndCBnZXQgZm9vbGVkIGJ5IE9iamVjdC5wcm90b3R5cGUgcHJvcGVydGllcyAoalF1ZXJ5ICMxMzgwNylcblx0XHR2YWwgPSBmbiAmJiBoYXNPd24uY2FsbCggRXhwci5hdHRySGFuZGxlLCBuYW1lLnRvTG93ZXJDYXNlKCkgKSA/XG5cdFx0XHRmbiggZWxlbSwgbmFtZSwgIWRvY3VtZW50SXNIVE1MICkgOlxuXHRcdFx0dW5kZWZpbmVkO1xuXG5cdHJldHVybiB2YWwgIT09IHVuZGVmaW5lZCA/XG5cdFx0dmFsIDpcblx0XHRzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWRvY3VtZW50SXNIVE1MID9cblx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICkgOlxuXHRcdFx0KCB2YWwgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIG5hbWUgKSApICYmIHZhbC5zcGVjaWZpZWQgP1xuXHRcdFx0XHR2YWwudmFsdWUgOlxuXHRcdFx0XHRudWxsO1xufTtcblxuU2l6emxlLmVzY2FwZSA9IGZ1bmN0aW9uKCBzZWwgKSB7XG5cdHJldHVybiAoIHNlbCArIFwiXCIgKS5yZXBsYWNlKCByY3NzZXNjYXBlLCBmY3NzZXNjYXBlICk7XG59O1xuXG5TaXp6bGUuZXJyb3IgPSBmdW5jdGlvbiggbXNnICkge1xuXHR0aHJvdyBuZXcgRXJyb3IoIFwiU3ludGF4IGVycm9yLCB1bnJlY29nbml6ZWQgZXhwcmVzc2lvbjogXCIgKyBtc2cgKTtcbn07XG5cbi8qKlxuICogRG9jdW1lbnQgc29ydGluZyBhbmQgcmVtb3ZpbmcgZHVwbGljYXRlc1xuICogQHBhcmFtIHtBcnJheUxpa2V9IHJlc3VsdHNcbiAqL1xuU2l6emxlLnVuaXF1ZVNvcnQgPSBmdW5jdGlvbiggcmVzdWx0cyApIHtcblx0dmFyIGVsZW0sXG5cdFx0ZHVwbGljYXRlcyA9IFtdLFxuXHRcdGogPSAwLFxuXHRcdGkgPSAwO1xuXG5cdC8vIFVubGVzcyB3ZSAqa25vdyogd2UgY2FuIGRldGVjdCBkdXBsaWNhdGVzLCBhc3N1bWUgdGhlaXIgcHJlc2VuY2Vcblx0aGFzRHVwbGljYXRlID0gIXN1cHBvcnQuZGV0ZWN0RHVwbGljYXRlcztcblx0c29ydElucHV0ID0gIXN1cHBvcnQuc29ydFN0YWJsZSAmJiByZXN1bHRzLnNsaWNlKCAwICk7XG5cdHJlc3VsdHMuc29ydCggc29ydE9yZGVyICk7XG5cblx0aWYgKCBoYXNEdXBsaWNhdGUgKSB7XG5cdFx0d2hpbGUgKCAoIGVsZW0gPSByZXN1bHRzWyBpKysgXSApICkge1xuXHRcdFx0aWYgKCBlbGVtID09PSByZXN1bHRzWyBpIF0gKSB7XG5cdFx0XHRcdGogPSBkdXBsaWNhdGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0d2hpbGUgKCBqLS0gKSB7XG5cdFx0XHRyZXN1bHRzLnNwbGljZSggZHVwbGljYXRlc1sgaiBdLCAxICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ2xlYXIgaW5wdXQgYWZ0ZXIgc29ydGluZyB0byByZWxlYXNlIG9iamVjdHNcblx0Ly8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvc2l6emxlL3B1bGwvMjI1XG5cdHNvcnRJbnB1dCA9IG51bGw7XG5cblx0cmV0dXJuIHJlc3VsdHM7XG59O1xuXG4vKipcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJldHJpZXZpbmcgdGhlIHRleHQgdmFsdWUgb2YgYW4gYXJyYXkgb2YgRE9NIG5vZGVzXG4gKiBAcGFyYW0ge0FycmF5fEVsZW1lbnR9IGVsZW1cbiAqL1xuZ2V0VGV4dCA9IFNpenpsZS5nZXRUZXh0ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHZhciBub2RlLFxuXHRcdHJldCA9IFwiXCIsXG5cdFx0aSA9IDAsXG5cdFx0bm9kZVR5cGUgPSBlbGVtLm5vZGVUeXBlO1xuXG5cdGlmICggIW5vZGVUeXBlICkge1xuXG5cdFx0Ly8gSWYgbm8gbm9kZVR5cGUsIHRoaXMgaXMgZXhwZWN0ZWQgdG8gYmUgYW4gYXJyYXlcblx0XHR3aGlsZSAoICggbm9kZSA9IGVsZW1bIGkrKyBdICkgKSB7XG5cblx0XHRcdC8vIERvIG5vdCB0cmF2ZXJzZSBjb21tZW50IG5vZGVzXG5cdFx0XHRyZXQgKz0gZ2V0VGV4dCggbm9kZSApO1xuXHRcdH1cblx0fSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDEgfHwgbm9kZVR5cGUgPT09IDkgfHwgbm9kZVR5cGUgPT09IDExICkge1xuXG5cdFx0Ly8gVXNlIHRleHRDb250ZW50IGZvciBlbGVtZW50c1xuXHRcdC8vIGlubmVyVGV4dCB1c2FnZSByZW1vdmVkIGZvciBjb25zaXN0ZW5jeSBvZiBuZXcgbGluZXMgKGpRdWVyeSAjMTExNTMpXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS50ZXh0Q29udGVudCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiBlbGVtLnRleHRDb250ZW50O1xuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIFRyYXZlcnNlIGl0cyBjaGlsZHJlblxuXHRcdFx0Zm9yICggZWxlbSA9IGVsZW0uZmlyc3RDaGlsZDsgZWxlbTsgZWxlbSA9IGVsZW0ubmV4dFNpYmxpbmcgKSB7XG5cdFx0XHRcdHJldCArPSBnZXRUZXh0KCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9IGVsc2UgaWYgKCBub2RlVHlwZSA9PT0gMyB8fCBub2RlVHlwZSA9PT0gNCApIHtcblx0XHRyZXR1cm4gZWxlbS5ub2RlVmFsdWU7XG5cdH1cblxuXHQvLyBEbyBub3QgaW5jbHVkZSBjb21tZW50IG9yIHByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb24gbm9kZXNcblxuXHRyZXR1cm4gcmV0O1xufTtcblxuRXhwciA9IFNpenpsZS5zZWxlY3RvcnMgPSB7XG5cblx0Ly8gQ2FuIGJlIGFkanVzdGVkIGJ5IHRoZSB1c2VyXG5cdGNhY2hlTGVuZ3RoOiA1MCxcblxuXHRjcmVhdGVQc2V1ZG86IG1hcmtGdW5jdGlvbixcblxuXHRtYXRjaDogbWF0Y2hFeHByLFxuXG5cdGF0dHJIYW5kbGU6IHt9LFxuXG5cdGZpbmQ6IHt9LFxuXG5cdHJlbGF0aXZlOiB7XG5cdFx0XCI+XCI6IHsgZGlyOiBcInBhcmVudE5vZGVcIiwgZmlyc3Q6IHRydWUgfSxcblx0XHRcIiBcIjogeyBkaXI6IFwicGFyZW50Tm9kZVwiIH0sXG5cdFx0XCIrXCI6IHsgZGlyOiBcInByZXZpb3VzU2libGluZ1wiLCBmaXJzdDogdHJ1ZSB9LFxuXHRcdFwiflwiOiB7IGRpcjogXCJwcmV2aW91c1NpYmxpbmdcIiB9XG5cdH0sXG5cblx0cHJlRmlsdGVyOiB7XG5cdFx0XCJBVFRSXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblx0XHRcdG1hdGNoWyAxIF0gPSBtYXRjaFsgMSBdLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cblx0XHRcdC8vIE1vdmUgdGhlIGdpdmVuIHZhbHVlIHRvIG1hdGNoWzNdIHdoZXRoZXIgcXVvdGVkIG9yIHVucXVvdGVkXG5cdFx0XHRtYXRjaFsgMyBdID0gKCBtYXRjaFsgMyBdIHx8IG1hdGNoWyA0IF0gfHxcblx0XHRcdFx0bWF0Y2hbIDUgXSB8fCBcIlwiICkucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblxuXHRcdFx0aWYgKCBtYXRjaFsgMiBdID09PSBcIn49XCIgKSB7XG5cdFx0XHRcdG1hdGNoWyAzIF0gPSBcIiBcIiArIG1hdGNoWyAzIF0gKyBcIiBcIjtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG1hdGNoLnNsaWNlKCAwLCA0ICk7XG5cdFx0fSxcblxuXHRcdFwiQ0hJTERcIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXG5cdFx0XHQvKiBtYXRjaGVzIGZyb20gbWF0Y2hFeHByW1wiQ0hJTERcIl1cblx0XHRcdFx0MSB0eXBlIChvbmx5fG50aHwuLi4pXG5cdFx0XHRcdDIgd2hhdCAoY2hpbGR8b2YtdHlwZSlcblx0XHRcdFx0MyBhcmd1bWVudCAoZXZlbnxvZGR8XFxkKnxcXGQqbihbKy1dXFxkKyk/fC4uLilcblx0XHRcdFx0NCB4bi1jb21wb25lbnQgb2YgeG4reSBhcmd1bWVudCAoWystXT9cXGQqbnwpXG5cdFx0XHRcdDUgc2lnbiBvZiB4bi1jb21wb25lbnRcblx0XHRcdFx0NiB4IG9mIHhuLWNvbXBvbmVudFxuXHRcdFx0XHQ3IHNpZ24gb2YgeS1jb21wb25lbnRcblx0XHRcdFx0OCB5IG9mIHktY29tcG9uZW50XG5cdFx0XHQqL1xuXHRcdFx0bWF0Y2hbIDEgXSA9IG1hdGNoWyAxIF0udG9Mb3dlckNhc2UoKTtcblxuXHRcdFx0aWYgKCBtYXRjaFsgMSBdLnNsaWNlKCAwLCAzICkgPT09IFwibnRoXCIgKSB7XG5cblx0XHRcdFx0Ly8gbnRoLSogcmVxdWlyZXMgYXJndW1lbnRcblx0XHRcdFx0aWYgKCAhbWF0Y2hbIDMgXSApIHtcblx0XHRcdFx0XHRTaXp6bGUuZXJyb3IoIG1hdGNoWyAwIF0gKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIG51bWVyaWMgeCBhbmQgeSBwYXJhbWV0ZXJzIGZvciBFeHByLmZpbHRlci5DSElMRFxuXHRcdFx0XHQvLyByZW1lbWJlciB0aGF0IGZhbHNlL3RydWUgY2FzdCByZXNwZWN0aXZlbHkgdG8gMC8xXG5cdFx0XHRcdG1hdGNoWyA0IF0gPSArKCBtYXRjaFsgNCBdID9cblx0XHRcdFx0XHRtYXRjaFsgNSBdICsgKCBtYXRjaFsgNiBdIHx8IDEgKSA6XG5cdFx0XHRcdFx0MiAqICggbWF0Y2hbIDMgXSA9PT0gXCJldmVuXCIgfHwgbWF0Y2hbIDMgXSA9PT0gXCJvZGRcIiApICk7XG5cdFx0XHRcdG1hdGNoWyA1IF0gPSArKCAoIG1hdGNoWyA3IF0gKyBtYXRjaFsgOCBdICkgfHwgbWF0Y2hbIDMgXSA9PT0gXCJvZGRcIiApO1xuXG5cdFx0XHRcdC8vIG90aGVyIHR5cGVzIHByb2hpYml0IGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggbWF0Y2hbIDMgXSApIHtcblx0XHRcdFx0U2l6emxlLmVycm9yKCBtYXRjaFsgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBtYXRjaDtcblx0XHR9LFxuXG5cdFx0XCJQU0VVRE9cIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXHRcdFx0dmFyIGV4Y2Vzcyxcblx0XHRcdFx0dW5xdW90ZWQgPSAhbWF0Y2hbIDYgXSAmJiBtYXRjaFsgMiBdO1xuXG5cdFx0XHRpZiAoIG1hdGNoRXhwclsgXCJDSElMRFwiIF0udGVzdCggbWF0Y2hbIDAgXSApICkge1xuXHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWNjZXB0IHF1b3RlZCBhcmd1bWVudHMgYXMtaXNcblx0XHRcdGlmICggbWF0Y2hbIDMgXSApIHtcblx0XHRcdFx0bWF0Y2hbIDIgXSA9IG1hdGNoWyA0IF0gfHwgbWF0Y2hbIDUgXSB8fCBcIlwiO1xuXG5cdFx0XHQvLyBTdHJpcCBleGNlc3MgY2hhcmFjdGVycyBmcm9tIHVucXVvdGVkIGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggdW5xdW90ZWQgJiYgcnBzZXVkby50ZXN0KCB1bnF1b3RlZCApICYmXG5cblx0XHRcdFx0Ly8gR2V0IGV4Y2VzcyBmcm9tIHRva2VuaXplIChyZWN1cnNpdmVseSlcblx0XHRcdFx0KCBleGNlc3MgPSB0b2tlbml6ZSggdW5xdW90ZWQsIHRydWUgKSApICYmXG5cblx0XHRcdFx0Ly8gYWR2YW5jZSB0byB0aGUgbmV4dCBjbG9zaW5nIHBhcmVudGhlc2lzXG5cdFx0XHRcdCggZXhjZXNzID0gdW5xdW90ZWQuaW5kZXhPZiggXCIpXCIsIHVucXVvdGVkLmxlbmd0aCAtIGV4Y2VzcyApIC0gdW5xdW90ZWQubGVuZ3RoICkgKSB7XG5cblx0XHRcdFx0Ly8gZXhjZXNzIGlzIGEgbmVnYXRpdmUgaW5kZXhcblx0XHRcdFx0bWF0Y2hbIDAgXSA9IG1hdGNoWyAwIF0uc2xpY2UoIDAsIGV4Y2VzcyApO1xuXHRcdFx0XHRtYXRjaFsgMiBdID0gdW5xdW90ZWQuc2xpY2UoIDAsIGV4Y2VzcyApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBSZXR1cm4gb25seSBjYXB0dXJlcyBuZWVkZWQgYnkgdGhlIHBzZXVkbyBmaWx0ZXIgbWV0aG9kICh0eXBlIGFuZCBhcmd1bWVudClcblx0XHRcdHJldHVybiBtYXRjaC5zbGljZSggMCwgMyApO1xuXHRcdH1cblx0fSxcblxuXHRmaWx0ZXI6IHtcblxuXHRcdFwiVEFHXCI6IGZ1bmN0aW9uKCBub2RlTmFtZVNlbGVjdG9yICkge1xuXHRcdFx0dmFyIG5vZGVOYW1lID0gbm9kZU5hbWVTZWxlY3Rvci5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gbm9kZU5hbWVTZWxlY3RvciA9PT0gXCIqXCIgP1xuXHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbm9kZU5hbWU7XG5cdFx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiQ0xBU1NcIjogZnVuY3Rpb24oIGNsYXNzTmFtZSApIHtcblx0XHRcdHZhciBwYXR0ZXJuID0gY2xhc3NDYWNoZVsgY2xhc3NOYW1lICsgXCIgXCIgXTtcblxuXHRcdFx0cmV0dXJuIHBhdHRlcm4gfHxcblx0XHRcdFx0KCBwYXR0ZXJuID0gbmV3IFJlZ0V4cCggXCIoXnxcIiArIHdoaXRlc3BhY2UgK1xuXHRcdFx0XHRcdFwiKVwiICsgY2xhc3NOYW1lICsgXCIoXCIgKyB3aGl0ZXNwYWNlICsgXCJ8JClcIiApICkgJiYgY2xhc3NDYWNoZShcblx0XHRcdFx0XHRcdGNsYXNzTmFtZSwgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBwYXR0ZXJuLnRlc3QoXG5cdFx0XHRcdFx0XHRcdFx0dHlwZW9mIGVsZW0uY2xhc3NOYW1lID09PSBcInN0cmluZ1wiICYmIGVsZW0uY2xhc3NOYW1lIHx8XG5cdFx0XHRcdFx0XHRcdFx0dHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlICE9PSBcInVuZGVmaW5lZFwiICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZSggXCJjbGFzc1wiICkgfHxcblx0XHRcdFx0XHRcdFx0XHRcIlwiXG5cdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdH0gKTtcblx0XHR9LFxuXG5cdFx0XCJBVFRSXCI6IGZ1bmN0aW9uKCBuYW1lLCBvcGVyYXRvciwgY2hlY2sgKSB7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciByZXN1bHQgPSBTaXp6bGUuYXR0ciggZWxlbSwgbmFtZSApO1xuXG5cdFx0XHRcdGlmICggcmVzdWx0ID09IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG9wZXJhdG9yID09PSBcIiE9XCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCAhb3BlcmF0b3IgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXN1bHQgKz0gXCJcIjtcblxuXHRcdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGVuICovXG5cblx0XHRcdFx0cmV0dXJuIG9wZXJhdG9yID09PSBcIj1cIiA/IHJlc3VsdCA9PT0gY2hlY2sgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIiE9XCIgPyByZXN1bHQgIT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJePVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPT09IDAgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIio9XCIgPyBjaGVjayAmJiByZXN1bHQuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIkPVwiID8gY2hlY2sgJiYgcmVzdWx0LnNsaWNlKCAtY2hlY2subGVuZ3RoICkgPT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ+PVwiID8gKCBcIiBcIiArIHJlc3VsdC5yZXBsYWNlKCByd2hpdGVzcGFjZSwgXCIgXCIgKSArIFwiIFwiICkuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ8PVwiID8gcmVzdWx0ID09PSBjaGVjayB8fCByZXN1bHQuc2xpY2UoIDAsIGNoZWNrLmxlbmd0aCArIDEgKSA9PT0gY2hlY2sgKyBcIi1cIiA6XG5cdFx0XHRcdFx0ZmFsc2U7XG5cdFx0XHRcdC8qIGVzbGludC1lbmFibGUgbWF4LWxlbiAqL1xuXG5cdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIkNISUxEXCI6IGZ1bmN0aW9uKCB0eXBlLCB3aGF0LCBfYXJndW1lbnQsIGZpcnN0LCBsYXN0ICkge1xuXHRcdFx0dmFyIHNpbXBsZSA9IHR5cGUuc2xpY2UoIDAsIDMgKSAhPT0gXCJudGhcIixcblx0XHRcdFx0Zm9yd2FyZCA9IHR5cGUuc2xpY2UoIC00ICkgIT09IFwibGFzdFwiLFxuXHRcdFx0XHRvZlR5cGUgPSB3aGF0ID09PSBcIm9mLXR5cGVcIjtcblxuXHRcdFx0cmV0dXJuIGZpcnN0ID09PSAxICYmIGxhc3QgPT09IDAgP1xuXG5cdFx0XHRcdC8vIFNob3J0Y3V0IGZvciA6bnRoLSoobilcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuICEhZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0XHR9IDpcblxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSwgX2NvbnRleHQsIHhtbCApIHtcblx0XHRcdFx0XHR2YXIgY2FjaGUsIHVuaXF1ZUNhY2hlLCBvdXRlckNhY2hlLCBub2RlLCBub2RlSW5kZXgsIHN0YXJ0LFxuXHRcdFx0XHRcdFx0ZGlyID0gc2ltcGxlICE9PSBmb3J3YXJkID8gXCJuZXh0U2libGluZ1wiIDogXCJwcmV2aW91c1NpYmxpbmdcIixcblx0XHRcdFx0XHRcdHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZSxcblx0XHRcdFx0XHRcdG5hbWUgPSBvZlR5cGUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLFxuXHRcdFx0XHRcdFx0dXNlQ2FjaGUgPSAheG1sICYmICFvZlR5cGUsXG5cdFx0XHRcdFx0XHRkaWZmID0gZmFsc2U7XG5cblx0XHRcdFx0XHRpZiAoIHBhcmVudCApIHtcblxuXHRcdFx0XHRcdFx0Ly8gOihmaXJzdHxsYXN0fG9ubHkpLShjaGlsZHxvZi10eXBlKVxuXHRcdFx0XHRcdFx0aWYgKCBzaW1wbGUgKSB7XG5cdFx0XHRcdFx0XHRcdHdoaWxlICggZGlyICkge1xuXHRcdFx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtO1xuXHRcdFx0XHRcdFx0XHRcdHdoaWxlICggKCBub2RlID0gbm9kZVsgZGlyIF0gKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggb2ZUeXBlID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gUmV2ZXJzZSBkaXJlY3Rpb24gZm9yIDpvbmx5LSogKGlmIHdlIGhhdmVuJ3QgeWV0IGRvbmUgc28pXG5cdFx0XHRcdFx0XHRcdFx0c3RhcnQgPSBkaXIgPSB0eXBlID09PSBcIm9ubHlcIiAmJiAhc3RhcnQgJiYgXCJuZXh0U2libGluZ1wiO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRzdGFydCA9IFsgZm9yd2FyZCA/IHBhcmVudC5maXJzdENoaWxkIDogcGFyZW50Lmxhc3RDaGlsZCBdO1xuXG5cdFx0XHRcdFx0XHQvLyBub24teG1sIDpudGgtY2hpbGQoLi4uKSBzdG9yZXMgY2FjaGUgZGF0YSBvbiBgcGFyZW50YFxuXHRcdFx0XHRcdFx0aWYgKCBmb3J3YXJkICYmIHVzZUNhY2hlICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFNlZWsgYGVsZW1gIGZyb20gYSBwcmV2aW91c2x5LWNhY2hlZCBpbmRleFxuXG5cdFx0XHRcdFx0XHRcdC8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXlcblx0XHRcdFx0XHRcdFx0bm9kZSA9IHBhcmVudDtcblx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IG5vZGVbIGV4cGFuZG8gXSB8fCAoIG5vZGVbIGV4cGFuZG8gXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxuXHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHxcblx0XHRcdFx0XHRcdFx0XHQoIG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdFx0Y2FjaGUgPSB1bmlxdWVDYWNoZVsgdHlwZSBdIHx8IFtdO1xuXHRcdFx0XHRcdFx0XHRub2RlSW5kZXggPSBjYWNoZVsgMCBdID09PSBkaXJydW5zICYmIGNhY2hlWyAxIF07XG5cdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXggJiYgY2FjaGVbIDIgXTtcblx0XHRcdFx0XHRcdFx0bm9kZSA9IG5vZGVJbmRleCAmJiBwYXJlbnQuY2hpbGROb2Rlc1sgbm9kZUluZGV4IF07XG5cblx0XHRcdFx0XHRcdFx0d2hpbGUgKCAoIG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBGYWxsYmFjayB0byBzZWVraW5nIGBlbGVtYCBmcm9tIHRoZSBzdGFydFxuXHRcdFx0XHRcdFx0XHRcdCggZGlmZiA9IG5vZGVJbmRleCA9IDAgKSB8fCBzdGFydC5wb3AoKSApICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gV2hlbiBmb3VuZCwgY2FjaGUgaW5kZXhlcyBvbiBgcGFyZW50YCBhbmQgYnJlYWtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIG5vZGUubm9kZVR5cGUgPT09IDEgJiYgKytkaWZmICYmIG5vZGUgPT09IGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZVsgdHlwZSBdID0gWyBkaXJydW5zLCBub2RlSW5kZXgsIGRpZmYgXTtcblx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFVzZSBwcmV2aW91c2x5LWNhY2hlZCBlbGVtZW50IGluZGV4IGlmIGF2YWlsYWJsZVxuXHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gLi4uaW4gYSBnemlwLWZyaWVuZGx5IHdheVxuXHRcdFx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtO1xuXHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKCBub2RlWyBleHBhbmRvIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxuXHRcdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHQoIG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdFx0XHRjYWNoZSA9IHVuaXF1ZUNhY2hlWyB0eXBlIF0gfHwgW107XG5cdFx0XHRcdFx0XHRcdFx0bm9kZUluZGV4ID0gY2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBjYWNoZVsgMSBdO1xuXHRcdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXg7XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHQvLyB4bWwgOm50aC1jaGlsZCguLi4pXG5cdFx0XHRcdFx0XHRcdC8vIG9yIDpudGgtbGFzdC1jaGlsZCguLi4pIG9yIDpudGgoLWxhc3QpPy1vZi10eXBlKC4uLilcblx0XHRcdFx0XHRcdFx0aWYgKCBkaWZmID09PSBmYWxzZSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFVzZSB0aGUgc2FtZSBsb29wIGFzIGFib3ZlIHRvIHNlZWsgYGVsZW1gIGZyb20gdGhlIHN0YXJ0XG5cdFx0XHRcdFx0XHRcdFx0d2hpbGUgKCAoIG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHQoIGRpZmYgPSBub2RlSW5kZXggPSAwICkgfHwgc3RhcnQucG9wKCkgKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCAoIG9mVHlwZSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZSA6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZVR5cGUgPT09IDEgKSAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQrK2RpZmYgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gQ2FjaGUgdGhlIGluZGV4IG9mIGVhY2ggZW5jb3VudGVyZWQgZWxlbWVudFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCggbm9kZVsgZXhwYW5kbyBdID0ge30gKTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0KCBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVucywgZGlmZiBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBub2RlID09PSBlbGVtICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIEluY29ycG9yYXRlIHRoZSBvZmZzZXQsIHRoZW4gY2hlY2sgYWdhaW5zdCBjeWNsZSBzaXplXG5cdFx0XHRcdFx0XHRkaWZmIC09IGxhc3Q7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZGlmZiA9PT0gZmlyc3QgfHwgKCBkaWZmICUgZmlyc3QgPT09IDAgJiYgZGlmZiAvIGZpcnN0ID49IDAgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiUFNFVURPXCI6IGZ1bmN0aW9uKCBwc2V1ZG8sIGFyZ3VtZW50ICkge1xuXG5cdFx0XHQvLyBwc2V1ZG8tY2xhc3MgbmFtZXMgYXJlIGNhc2UtaW5zZW5zaXRpdmVcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jcHNldWRvLWNsYXNzZXNcblx0XHRcdC8vIFByaW9yaXRpemUgYnkgY2FzZSBzZW5zaXRpdml0eSBpbiBjYXNlIGN1c3RvbSBwc2V1ZG9zIGFyZSBhZGRlZCB3aXRoIHVwcGVyY2FzZSBsZXR0ZXJzXG5cdFx0XHQvLyBSZW1lbWJlciB0aGF0IHNldEZpbHRlcnMgaW5oZXJpdHMgZnJvbSBwc2V1ZG9zXG5cdFx0XHR2YXIgYXJncyxcblx0XHRcdFx0Zm4gPSBFeHByLnBzZXVkb3NbIHBzZXVkbyBdIHx8IEV4cHIuc2V0RmlsdGVyc1sgcHNldWRvLnRvTG93ZXJDYXNlKCkgXSB8fFxuXHRcdFx0XHRcdFNpenpsZS5lcnJvciggXCJ1bnN1cHBvcnRlZCBwc2V1ZG86IFwiICsgcHNldWRvICk7XG5cblx0XHRcdC8vIFRoZSB1c2VyIG1heSB1c2UgY3JlYXRlUHNldWRvIHRvIGluZGljYXRlIHRoYXRcblx0XHRcdC8vIGFyZ3VtZW50cyBhcmUgbmVlZGVkIHRvIGNyZWF0ZSB0aGUgZmlsdGVyIGZ1bmN0aW9uXG5cdFx0XHQvLyBqdXN0IGFzIFNpenpsZSBkb2VzXG5cdFx0XHRpZiAoIGZuWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdHJldHVybiBmbiggYXJndW1lbnQgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQnV0IG1haW50YWluIHN1cHBvcnQgZm9yIG9sZCBzaWduYXR1cmVzXG5cdFx0XHRpZiAoIGZuLmxlbmd0aCA+IDEgKSB7XG5cdFx0XHRcdGFyZ3MgPSBbIHBzZXVkbywgcHNldWRvLCBcIlwiLCBhcmd1bWVudCBdO1xuXHRcdFx0XHRyZXR1cm4gRXhwci5zZXRGaWx0ZXJzLmhhc093blByb3BlcnR5KCBwc2V1ZG8udG9Mb3dlckNhc2UoKSApID9cblx0XHRcdFx0XHRtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0XHRcdFx0dmFyIGlkeCxcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZCA9IGZuKCBzZWVkLCBhcmd1bWVudCApLFxuXHRcdFx0XHRcdFx0XHRpID0gbWF0Y2hlZC5sZW5ndGg7XG5cdFx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdFx0aWR4ID0gaW5kZXhPZiggc2VlZCwgbWF0Y2hlZFsgaSBdICk7XG5cdFx0XHRcdFx0XHRcdHNlZWRbIGlkeCBdID0gISggbWF0Y2hlc1sgaWR4IF0gPSBtYXRjaGVkWyBpIF0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9ICkgOlxuXHRcdFx0XHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZuKCBlbGVtLCAwLCBhcmdzICk7XG5cdFx0XHRcdFx0fTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGZuO1xuXHRcdH1cblx0fSxcblxuXHRwc2V1ZG9zOiB7XG5cblx0XHQvLyBQb3RlbnRpYWxseSBjb21wbGV4IHBzZXVkb3Ncblx0XHRcIm5vdFwiOiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblxuXHRcdFx0Ly8gVHJpbSB0aGUgc2VsZWN0b3IgcGFzc2VkIHRvIGNvbXBpbGVcblx0XHRcdC8vIHRvIGF2b2lkIHRyZWF0aW5nIGxlYWRpbmcgYW5kIHRyYWlsaW5nXG5cdFx0XHQvLyBzcGFjZXMgYXMgY29tYmluYXRvcnNcblx0XHRcdHZhciBpbnB1dCA9IFtdLFxuXHRcdFx0XHRyZXN1bHRzID0gW10sXG5cdFx0XHRcdG1hdGNoZXIgPSBjb21waWxlKCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICkgKTtcblxuXHRcdFx0cmV0dXJuIG1hdGNoZXJbIGV4cGFuZG8gXSA/XG5cdFx0XHRcdG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlZWQsIG1hdGNoZXMsIF9jb250ZXh0LCB4bWwgKSB7XG5cdFx0XHRcdFx0dmFyIGVsZW0sXG5cdFx0XHRcdFx0XHR1bm1hdGNoZWQgPSBtYXRjaGVyKCBzZWVkLCBudWxsLCB4bWwsIFtdICksXG5cdFx0XHRcdFx0XHRpID0gc2VlZC5sZW5ndGg7XG5cblx0XHRcdFx0XHQvLyBNYXRjaCBlbGVtZW50cyB1bm1hdGNoZWQgYnkgYG1hdGNoZXJgXG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRpZiAoICggZWxlbSA9IHVubWF0Y2hlZFsgaSBdICkgKSB7XG5cdFx0XHRcdFx0XHRcdHNlZWRbIGkgXSA9ICEoIG1hdGNoZXNbIGkgXSA9IGVsZW0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gKSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtLCBfY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdGlucHV0WyAwIF0gPSBlbGVtO1xuXHRcdFx0XHRcdG1hdGNoZXIoIGlucHV0LCBudWxsLCB4bWwsIHJlc3VsdHMgKTtcblxuXHRcdFx0XHRcdC8vIERvbid0IGtlZXAgdGhlIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRcdFx0aW5wdXRbIDAgXSA9IG51bGw7XG5cdFx0XHRcdFx0cmV0dXJuICFyZXN1bHRzLnBvcCgpO1xuXHRcdFx0XHR9O1xuXHRcdH0gKSxcblxuXHRcdFwiaGFzXCI6IG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gU2l6emxlKCBzZWxlY3RvciwgZWxlbSApLmxlbmd0aCA+IDA7XG5cdFx0XHR9O1xuXHRcdH0gKSxcblxuXHRcdFwiY29udGFpbnNcIjogbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggdGV4dCApIHtcblx0XHRcdHRleHQgPSB0ZXh0LnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0udGV4dENvbnRlbnQgfHwgZ2V0VGV4dCggZWxlbSApICkuaW5kZXhPZiggdGV4dCApID4gLTE7XG5cdFx0XHR9O1xuXHRcdH0gKSxcblxuXHRcdC8vIFwiV2hldGhlciBhbiBlbGVtZW50IGlzIHJlcHJlc2VudGVkIGJ5IGEgOmxhbmcoKSBzZWxlY3RvclxuXHRcdC8vIGlzIGJhc2VkIHNvbGVseSBvbiB0aGUgZWxlbWVudCdzIGxhbmd1YWdlIHZhbHVlXG5cdFx0Ly8gYmVpbmcgZXF1YWwgdG8gdGhlIGlkZW50aWZpZXIgQyxcblx0XHQvLyBvciBiZWdpbm5pbmcgd2l0aCB0aGUgaWRlbnRpZmllciBDIGltbWVkaWF0ZWx5IGZvbGxvd2VkIGJ5IFwiLVwiLlxuXHRcdC8vIFRoZSBtYXRjaGluZyBvZiBDIGFnYWluc3QgdGhlIGVsZW1lbnQncyBsYW5ndWFnZSB2YWx1ZSBpcyBwZXJmb3JtZWQgY2FzZS1pbnNlbnNpdGl2ZWx5LlxuXHRcdC8vIFRoZSBpZGVudGlmaWVyIEMgZG9lcyBub3QgaGF2ZSB0byBiZSBhIHZhbGlkIGxhbmd1YWdlIG5hbWUuXCJcblx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2xhbmctcHNldWRvXG5cdFx0XCJsYW5nXCI6IG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIGxhbmcgKSB7XG5cblx0XHRcdC8vIGxhbmcgdmFsdWUgbXVzdCBiZSBhIHZhbGlkIGlkZW50aWZpZXJcblx0XHRcdGlmICggIXJpZGVudGlmaWVyLnRlc3QoIGxhbmcgfHwgXCJcIiApICkge1xuXHRcdFx0XHRTaXp6bGUuZXJyb3IoIFwidW5zdXBwb3J0ZWQgbGFuZzogXCIgKyBsYW5nICk7XG5cdFx0XHR9XG5cdFx0XHRsYW5nID0gbGFuZy5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciBlbGVtTGFuZztcblx0XHRcdFx0ZG8ge1xuXHRcdFx0XHRcdGlmICggKCBlbGVtTGFuZyA9IGRvY3VtZW50SXNIVE1MID9cblx0XHRcdFx0XHRcdGVsZW0ubGFuZyA6XG5cdFx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZSggXCJ4bWw6bGFuZ1wiICkgfHwgZWxlbS5nZXRBdHRyaWJ1dGUoIFwibGFuZ1wiICkgKSApIHtcblxuXHRcdFx0XHRcdFx0ZWxlbUxhbmcgPSBlbGVtTGFuZy50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW1MYW5nID09PSBsYW5nIHx8IGVsZW1MYW5nLmluZGV4T2YoIGxhbmcgKyBcIi1cIiApID09PSAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSB3aGlsZSAoICggZWxlbSA9IGVsZW0ucGFyZW50Tm9kZSApICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKTtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fTtcblx0XHR9ICksXG5cblx0XHQvLyBNaXNjZWxsYW5lb3VzXG5cdFx0XCJ0YXJnZXRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbiAmJiB3aW5kb3cubG9jYXRpb24uaGFzaDtcblx0XHRcdHJldHVybiBoYXNoICYmIGhhc2guc2xpY2UoIDEgKSA9PT0gZWxlbS5pZDtcblx0XHR9LFxuXG5cdFx0XCJyb290XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGRvY0VsZW07XG5cdFx0fSxcblxuXHRcdFwiZm9jdXNcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbSA9PT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJlxuXHRcdFx0XHQoICFkb2N1bWVudC5oYXNGb2N1cyB8fCBkb2N1bWVudC5oYXNGb2N1cygpICkgJiZcblx0XHRcdFx0ISEoIGVsZW0udHlwZSB8fCBlbGVtLmhyZWYgfHwgfmVsZW0udGFiSW5kZXggKTtcblx0XHR9LFxuXG5cdFx0Ly8gQm9vbGVhbiBwcm9wZXJ0aWVzXG5cdFx0XCJlbmFibGVkXCI6IGNyZWF0ZURpc2FibGVkUHNldWRvKCBmYWxzZSApLFxuXHRcdFwiZGlzYWJsZWRcIjogY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIHRydWUgKSxcblxuXHRcdFwiY2hlY2tlZFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0Ly8gSW4gQ1NTMywgOmNoZWNrZWQgc2hvdWxkIHJldHVybiBib3RoIGNoZWNrZWQgYW5kIHNlbGVjdGVkIGVsZW1lbnRzXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDExL1JFQy1jc3MzLXNlbGVjdG9ycy0yMDExMDkyOS8jY2hlY2tlZFxuXHRcdFx0dmFyIG5vZGVOYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuICggbm9kZU5hbWUgPT09IFwiaW5wdXRcIiAmJiAhIWVsZW0uY2hlY2tlZCApIHx8XG5cdFx0XHRcdCggbm9kZU5hbWUgPT09IFwib3B0aW9uXCIgJiYgISFlbGVtLnNlbGVjdGVkICk7XG5cdFx0fSxcblxuXHRcdFwic2VsZWN0ZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdC8vIEFjY2Vzc2luZyB0aGlzIHByb3BlcnR5IG1ha2VzIHNlbGVjdGVkLWJ5LWRlZmF1bHRcblx0XHRcdC8vIG9wdGlvbnMgaW4gU2FmYXJpIHdvcmsgcHJvcGVybHlcblx0XHRcdGlmICggZWxlbS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLWV4cHJlc3Npb25zXG5cdFx0XHRcdGVsZW0ucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZWxlbS5zZWxlY3RlZCA9PT0gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0Ly8gQ29udGVudHNcblx0XHRcImVtcHR5XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2VtcHR5LXBzZXVkb1xuXHRcdFx0Ly8gOmVtcHR5IGlzIG5lZ2F0ZWQgYnkgZWxlbWVudCAoMSkgb3IgY29udGVudCBub2RlcyAodGV4dDogMzsgY2RhdGE6IDQ7IGVudGl0eSByZWY6IDUpLFxuXHRcdFx0Ly8gICBidXQgbm90IGJ5IG90aGVycyAoY29tbWVudDogODsgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbjogNzsgZXRjLilcblx0XHRcdC8vIG5vZGVUeXBlIDwgNiB3b3JrcyBiZWNhdXNlIGF0dHJpYnV0ZXMgKDIpIGRvIG5vdCBhcHBlYXIgYXMgY2hpbGRyZW5cblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPCA2ICkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSxcblxuXHRcdFwicGFyZW50XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICFFeHByLnBzZXVkb3NbIFwiZW1wdHlcIiBdKCBlbGVtICk7XG5cdFx0fSxcblxuXHRcdC8vIEVsZW1lbnQvaW5wdXQgdHlwZXNcblx0XHRcImhlYWRlclwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiByaGVhZGVyLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTtcblx0XHR9LFxuXG5cdFx0XCJpbnB1dFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiByaW5wdXRzLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTtcblx0XHR9LFxuXG5cdFx0XCJidXR0b25cIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiBuYW1lID09PSBcImlucHV0XCIgJiYgZWxlbS50eXBlID09PSBcImJ1dHRvblwiIHx8IG5hbWUgPT09IFwiYnV0dG9uXCI7XG5cdFx0fSxcblxuXHRcdFwidGV4dFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBhdHRyO1xuXHRcdFx0cmV0dXJuIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJpbnB1dFwiICYmXG5cdFx0XHRcdGVsZW0udHlwZSA9PT0gXCJ0ZXh0XCIgJiZcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8MTAgb25seVxuXHRcdFx0XHQvLyBOZXcgSFRNTDUgYXR0cmlidXRlIHZhbHVlcyAoZS5nLiwgXCJzZWFyY2hcIikgYXBwZWFyIHdpdGggZWxlbS50eXBlID09PSBcInRleHRcIlxuXHRcdFx0XHQoICggYXR0ciA9IGVsZW0uZ2V0QXR0cmlidXRlKCBcInR5cGVcIiApICkgPT0gbnVsbCB8fFxuXHRcdFx0XHRcdGF0dHIudG9Mb3dlckNhc2UoKSA9PT0gXCJ0ZXh0XCIgKTtcblx0XHR9LFxuXG5cdFx0Ly8gUG9zaXRpb24taW4tY29sbGVjdGlvblxuXHRcdFwiZmlyc3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gWyAwIF07XG5cdFx0fSApLFxuXG5cdFx0XCJsYXN0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBfbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4gWyBsZW5ndGggLSAxIF07XG5cdFx0fSApLFxuXG5cdFx0XCJlcVwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbiggX21hdGNoSW5kZXhlcywgbGVuZ3RoLCBhcmd1bWVudCApIHtcblx0XHRcdHJldHVybiBbIGFyZ3VtZW50IDwgMCA/IGFyZ3VtZW50ICsgbGVuZ3RoIDogYXJndW1lbnQgXTtcblx0XHR9ICksXG5cblx0XHRcImV2ZW5cIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0dmFyIGkgPSAwO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0gKSxcblxuXHRcdFwib2RkXCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHZhciBpID0gMTtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSArPSAyICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9ICksXG5cblx0XHRcImx0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XG5cdFx0XHR2YXIgaSA9IGFyZ3VtZW50IDwgMCA/XG5cdFx0XHRcdGFyZ3VtZW50ICsgbGVuZ3RoIDpcblx0XHRcdFx0YXJndW1lbnQgPiBsZW5ndGggP1xuXHRcdFx0XHRcdGxlbmd0aCA6XG5cdFx0XHRcdFx0YXJndW1lbnQ7XG5cdFx0XHRmb3IgKCA7IC0taSA+PSAwOyApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSApLFxuXG5cdFx0XCJndFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0dmFyIGkgPSBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50O1xuXHRcdFx0Zm9yICggOyArK2kgPCBsZW5ndGg7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9IClcblx0fVxufTtcblxuRXhwci5wc2V1ZG9zWyBcIm50aFwiIF0gPSBFeHByLnBzZXVkb3NbIFwiZXFcIiBdO1xuXG4vLyBBZGQgYnV0dG9uL2lucHV0IHR5cGUgcHNldWRvc1xuZm9yICggaSBpbiB7IHJhZGlvOiB0cnVlLCBjaGVja2JveDogdHJ1ZSwgZmlsZTogdHJ1ZSwgcGFzc3dvcmQ6IHRydWUsIGltYWdlOiB0cnVlIH0gKSB7XG5cdEV4cHIucHNldWRvc1sgaSBdID0gY3JlYXRlSW5wdXRQc2V1ZG8oIGkgKTtcbn1cbmZvciAoIGkgaW4geyBzdWJtaXQ6IHRydWUsIHJlc2V0OiB0cnVlIH0gKSB7XG5cdEV4cHIucHNldWRvc1sgaSBdID0gY3JlYXRlQnV0dG9uUHNldWRvKCBpICk7XG59XG5cbi8vIEVhc3kgQVBJIGZvciBjcmVhdGluZyBuZXcgc2V0RmlsdGVyc1xuZnVuY3Rpb24gc2V0RmlsdGVycygpIHt9XG5zZXRGaWx0ZXJzLnByb3RvdHlwZSA9IEV4cHIuZmlsdGVycyA9IEV4cHIucHNldWRvcztcbkV4cHIuc2V0RmlsdGVycyA9IG5ldyBzZXRGaWx0ZXJzKCk7XG5cbnRva2VuaXplID0gU2l6emxlLnRva2VuaXplID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBwYXJzZU9ubHkgKSB7XG5cdHZhciBtYXRjaGVkLCBtYXRjaCwgdG9rZW5zLCB0eXBlLFxuXHRcdHNvRmFyLCBncm91cHMsIHByZUZpbHRlcnMsXG5cdFx0Y2FjaGVkID0gdG9rZW5DYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdO1xuXG5cdGlmICggY2FjaGVkICkge1xuXHRcdHJldHVybiBwYXJzZU9ubHkgPyAwIDogY2FjaGVkLnNsaWNlKCAwICk7XG5cdH1cblxuXHRzb0ZhciA9IHNlbGVjdG9yO1xuXHRncm91cHMgPSBbXTtcblx0cHJlRmlsdGVycyA9IEV4cHIucHJlRmlsdGVyO1xuXG5cdHdoaWxlICggc29GYXIgKSB7XG5cblx0XHQvLyBDb21tYSBhbmQgZmlyc3QgcnVuXG5cdFx0aWYgKCAhbWF0Y2hlZCB8fCAoIG1hdGNoID0gcmNvbW1hLmV4ZWMoIHNvRmFyICkgKSApIHtcblx0XHRcdGlmICggbWF0Y2ggKSB7XG5cblx0XHRcdFx0Ly8gRG9uJ3QgY29uc3VtZSB0cmFpbGluZyBjb21tYXMgYXMgdmFsaWRcblx0XHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hbIDAgXS5sZW5ndGggKSB8fCBzb0Zhcjtcblx0XHRcdH1cblx0XHRcdGdyb3Vwcy5wdXNoKCAoIHRva2VucyA9IFtdICkgKTtcblx0XHR9XG5cblx0XHRtYXRjaGVkID0gZmFsc2U7XG5cblx0XHQvLyBDb21iaW5hdG9yc1xuXHRcdGlmICggKCBtYXRjaCA9IHJjb21iaW5hdG9ycy5leGVjKCBzb0ZhciApICkgKSB7XG5cdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcblx0XHRcdHRva2Vucy5wdXNoKCB7XG5cdFx0XHRcdHZhbHVlOiBtYXRjaGVkLFxuXG5cdFx0XHRcdC8vIENhc3QgZGVzY2VuZGFudCBjb21iaW5hdG9ycyB0byBzcGFjZVxuXHRcdFx0XHR0eXBlOiBtYXRjaFsgMCBdLnJlcGxhY2UoIHJ0cmltLCBcIiBcIiApXG5cdFx0XHR9ICk7XG5cdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdC8vIEZpbHRlcnNcblx0XHRmb3IgKCB0eXBlIGluIEV4cHIuZmlsdGVyICkge1xuXHRcdFx0aWYgKCAoIG1hdGNoID0gbWF0Y2hFeHByWyB0eXBlIF0uZXhlYyggc29GYXIgKSApICYmICggIXByZUZpbHRlcnNbIHR5cGUgXSB8fFxuXHRcdFx0XHQoIG1hdGNoID0gcHJlRmlsdGVyc1sgdHlwZSBdKCBtYXRjaCApICkgKSApIHtcblx0XHRcdFx0bWF0Y2hlZCA9IG1hdGNoLnNoaWZ0KCk7XG5cdFx0XHRcdHRva2Vucy5wdXNoKCB7XG5cdFx0XHRcdFx0dmFsdWU6IG1hdGNoZWQsXG5cdFx0XHRcdFx0dHlwZTogdHlwZSxcblx0XHRcdFx0XHRtYXRjaGVzOiBtYXRjaFxuXHRcdFx0XHR9ICk7XG5cdFx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoZWQubGVuZ3RoICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCAhbWF0Y2hlZCApIHtcblx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgbGVuZ3RoIG9mIHRoZSBpbnZhbGlkIGV4Y2Vzc1xuXHQvLyBpZiB3ZSdyZSBqdXN0IHBhcnNpbmdcblx0Ly8gT3RoZXJ3aXNlLCB0aHJvdyBhbiBlcnJvciBvciByZXR1cm4gdG9rZW5zXG5cdHJldHVybiBwYXJzZU9ubHkgP1xuXHRcdHNvRmFyLmxlbmd0aCA6XG5cdFx0c29GYXIgP1xuXHRcdFx0U2l6emxlLmVycm9yKCBzZWxlY3RvciApIDpcblxuXHRcdFx0Ly8gQ2FjaGUgdGhlIHRva2Vuc1xuXHRcdFx0dG9rZW5DYWNoZSggc2VsZWN0b3IsIGdyb3VwcyApLnNsaWNlKCAwICk7XG59O1xuXG5mdW5jdGlvbiB0b1NlbGVjdG9yKCB0b2tlbnMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSB0b2tlbnMubGVuZ3RoLFxuXHRcdHNlbGVjdG9yID0gXCJcIjtcblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0c2VsZWN0b3IgKz0gdG9rZW5zWyBpIF0udmFsdWU7XG5cdH1cblx0cmV0dXJuIHNlbGVjdG9yO1xufVxuXG5mdW5jdGlvbiBhZGRDb21iaW5hdG9yKCBtYXRjaGVyLCBjb21iaW5hdG9yLCBiYXNlICkge1xuXHR2YXIgZGlyID0gY29tYmluYXRvci5kaXIsXG5cdFx0c2tpcCA9IGNvbWJpbmF0b3IubmV4dCxcblx0XHRrZXkgPSBza2lwIHx8IGRpcixcblx0XHRjaGVja05vbkVsZW1lbnRzID0gYmFzZSAmJiBrZXkgPT09IFwicGFyZW50Tm9kZVwiLFxuXHRcdGRvbmVOYW1lID0gZG9uZSsrO1xuXG5cdHJldHVybiBjb21iaW5hdG9yLmZpcnN0ID9cblxuXHRcdC8vIENoZWNrIGFnYWluc3QgY2xvc2VzdCBhbmNlc3Rvci9wcmVjZWRpbmcgZWxlbWVudFxuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IGVsZW1bIGRpciBdICkgKSB7XG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBjaGVja05vbkVsZW1lbnRzICkge1xuXHRcdFx0XHRcdHJldHVybiBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0gOlxuXG5cdFx0Ly8gQ2hlY2sgYWdhaW5zdCBhbGwgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnRzXG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciBvbGRDYWNoZSwgdW5pcXVlQ2FjaGUsIG91dGVyQ2FjaGUsXG5cdFx0XHRcdG5ld0NhY2hlID0gWyBkaXJydW5zLCBkb25lTmFtZSBdO1xuXG5cdFx0XHQvLyBXZSBjYW4ndCBzZXQgYXJiaXRyYXJ5IGRhdGEgb24gWE1MIG5vZGVzLCBzbyB0aGV5IGRvbid0IGJlbmVmaXQgZnJvbSBjb21iaW5hdG9yIGNhY2hpbmdcblx0XHRcdGlmICggeG1sICkge1xuXHRcdFx0XHR3aGlsZSAoICggZWxlbSA9IGVsZW1bIGRpciBdICkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHdoaWxlICggKCBlbGVtID0gZWxlbVsgZGlyIF0gKSApIHtcblx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVtZW50cyApIHtcblx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBlbGVtWyBleHBhbmRvIF0gfHwgKCBlbGVtWyBleHBhbmRvIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgZWxlbS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdCggb3V0ZXJDYWNoZVsgZWxlbS51bmlxdWVJRCBdID0ge30gKTtcblxuXHRcdFx0XHRcdFx0aWYgKCBza2lwICYmIHNraXAgPT09IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSApIHtcblx0XHRcdFx0XHRcdFx0ZWxlbSA9IGVsZW1bIGRpciBdIHx8IGVsZW07XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCAoIG9sZENhY2hlID0gdW5pcXVlQ2FjaGVbIGtleSBdICkgJiZcblx0XHRcdFx0XHRcdFx0b2xkQ2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBvbGRDYWNoZVsgMSBdID09PSBkb25lTmFtZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBBc3NpZ24gdG8gbmV3Q2FjaGUgc28gcmVzdWx0cyBiYWNrLXByb3BhZ2F0ZSB0byBwcmV2aW91cyBlbGVtZW50c1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gKCBuZXdDYWNoZVsgMiBdID0gb2xkQ2FjaGVbIDIgXSApO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBSZXVzZSBuZXdjYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyBrZXkgXSA9IG5ld0NhY2hlO1xuXG5cdFx0XHRcdFx0XHRcdC8vIEEgbWF0Y2ggbWVhbnMgd2UncmUgZG9uZTsgYSBmYWlsIG1lYW5zIHdlIGhhdmUgdG8ga2VlcCBjaGVja2luZ1xuXHRcdFx0XHRcdFx0XHRpZiAoICggbmV3Q2FjaGVbIDIgXSA9IG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xufVxuXG5mdW5jdGlvbiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSB7XG5cdHJldHVybiBtYXRjaGVycy5sZW5ndGggPiAxID9cblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIGkgPSBtYXRjaGVycy5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0aWYgKCAhbWF0Y2hlcnNbIGkgXSggZWxlbSwgY29udGV4dCwgeG1sICkgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9IDpcblx0XHRtYXRjaGVyc1sgMCBdO1xufVxuXG5mdW5jdGlvbiBtdWx0aXBsZUNvbnRleHRzKCBzZWxlY3RvciwgY29udGV4dHMsIHJlc3VsdHMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSBjb250ZXh0cy5sZW5ndGg7XG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHRzWyBpIF0sIHJlc3VsdHMgKTtcblx0fVxuXHRyZXR1cm4gcmVzdWx0cztcbn1cblxuZnVuY3Rpb24gY29uZGVuc2UoIHVubWF0Y2hlZCwgbWFwLCBmaWx0ZXIsIGNvbnRleHQsIHhtbCApIHtcblx0dmFyIGVsZW0sXG5cdFx0bmV3VW5tYXRjaGVkID0gW10sXG5cdFx0aSA9IDAsXG5cdFx0bGVuID0gdW5tYXRjaGVkLmxlbmd0aCxcblx0XHRtYXBwZWQgPSBtYXAgIT0gbnVsbDtcblxuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRpZiAoICggZWxlbSA9IHVubWF0Y2hlZFsgaSBdICkgKSB7XG5cdFx0XHRpZiAoICFmaWx0ZXIgfHwgZmlsdGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0bmV3VW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0aWYgKCBtYXBwZWQgKSB7XG5cdFx0XHRcdFx0bWFwLnB1c2goIGkgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBuZXdVbm1hdGNoZWQ7XG59XG5cbmZ1bmN0aW9uIHNldE1hdGNoZXIoIHByZUZpbHRlciwgc2VsZWN0b3IsIG1hdGNoZXIsIHBvc3RGaWx0ZXIsIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciApIHtcblx0aWYgKCBwb3N0RmlsdGVyICYmICFwb3N0RmlsdGVyWyBleHBhbmRvIF0gKSB7XG5cdFx0cG9zdEZpbHRlciA9IHNldE1hdGNoZXIoIHBvc3RGaWx0ZXIgKTtcblx0fVxuXHRpZiAoIHBvc3RGaW5kZXIgJiYgIXBvc3RGaW5kZXJbIGV4cGFuZG8gXSApIHtcblx0XHRwb3N0RmluZGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICk7XG5cdH1cblx0cmV0dXJuIG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlZWQsIHJlc3VsdHMsIGNvbnRleHQsIHhtbCApIHtcblx0XHR2YXIgdGVtcCwgaSwgZWxlbSxcblx0XHRcdHByZU1hcCA9IFtdLFxuXHRcdFx0cG9zdE1hcCA9IFtdLFxuXHRcdFx0cHJlZXhpc3RpbmcgPSByZXN1bHRzLmxlbmd0aCxcblxuXHRcdFx0Ly8gR2V0IGluaXRpYWwgZWxlbWVudHMgZnJvbSBzZWVkIG9yIGNvbnRleHRcblx0XHRcdGVsZW1zID0gc2VlZCB8fCBtdWx0aXBsZUNvbnRleHRzKFxuXHRcdFx0XHRzZWxlY3RvciB8fCBcIipcIixcblx0XHRcdFx0Y29udGV4dC5ub2RlVHlwZSA/IFsgY29udGV4dCBdIDogY29udGV4dCxcblx0XHRcdFx0W11cblx0XHRcdCksXG5cblx0XHRcdC8vIFByZWZpbHRlciB0byBnZXQgbWF0Y2hlciBpbnB1dCwgcHJlc2VydmluZyBhIG1hcCBmb3Igc2VlZC1yZXN1bHRzIHN5bmNocm9uaXphdGlvblxuXHRcdFx0bWF0Y2hlckluID0gcHJlRmlsdGVyICYmICggc2VlZCB8fCAhc2VsZWN0b3IgKSA/XG5cdFx0XHRcdGNvbmRlbnNlKCBlbGVtcywgcHJlTWFwLCBwcmVGaWx0ZXIsIGNvbnRleHQsIHhtbCApIDpcblx0XHRcdFx0ZWxlbXMsXG5cblx0XHRcdG1hdGNoZXJPdXQgPSBtYXRjaGVyID9cblxuXHRcdFx0XHQvLyBJZiB3ZSBoYXZlIGEgcG9zdEZpbmRlciwgb3IgZmlsdGVyZWQgc2VlZCwgb3Igbm9uLXNlZWQgcG9zdEZpbHRlciBvciBwcmVleGlzdGluZyByZXN1bHRzLFxuXHRcdFx0XHRwb3N0RmluZGVyIHx8ICggc2VlZCA/IHByZUZpbHRlciA6IHByZWV4aXN0aW5nIHx8IHBvc3RGaWx0ZXIgKSA/XG5cblx0XHRcdFx0XHQvLyAuLi5pbnRlcm1lZGlhdGUgcHJvY2Vzc2luZyBpcyBuZWNlc3Nhcnlcblx0XHRcdFx0XHRbXSA6XG5cblx0XHRcdFx0XHQvLyAuLi5vdGhlcndpc2UgdXNlIHJlc3VsdHMgZGlyZWN0bHlcblx0XHRcdFx0XHRyZXN1bHRzIDpcblx0XHRcdFx0bWF0Y2hlckluO1xuXG5cdFx0Ly8gRmluZCBwcmltYXJ5IG1hdGNoZXNcblx0XHRpZiAoIG1hdGNoZXIgKSB7XG5cdFx0XHRtYXRjaGVyKCBtYXRjaGVySW4sIG1hdGNoZXJPdXQsIGNvbnRleHQsIHhtbCApO1xuXHRcdH1cblxuXHRcdC8vIEFwcGx5IHBvc3RGaWx0ZXJcblx0XHRpZiAoIHBvc3RGaWx0ZXIgKSB7XG5cdFx0XHR0ZW1wID0gY29uZGVuc2UoIG1hdGNoZXJPdXQsIHBvc3RNYXAgKTtcblx0XHRcdHBvc3RGaWx0ZXIoIHRlbXAsIFtdLCBjb250ZXh0LCB4bWwgKTtcblxuXHRcdFx0Ly8gVW4tbWF0Y2ggZmFpbGluZyBlbGVtZW50cyBieSBtb3ZpbmcgdGhlbSBiYWNrIHRvIG1hdGNoZXJJblxuXHRcdFx0aSA9IHRlbXAubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggKCBlbGVtID0gdGVtcFsgaSBdICkgKSB7XG5cdFx0XHRcdFx0bWF0Y2hlck91dFsgcG9zdE1hcFsgaSBdIF0gPSAhKCBtYXRjaGVySW5bIHBvc3RNYXBbIGkgXSBdID0gZWxlbSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0aWYgKCBwb3N0RmluZGVyIHx8IHByZUZpbHRlciApIHtcblx0XHRcdFx0aWYgKCBwb3N0RmluZGVyICkge1xuXG5cdFx0XHRcdFx0Ly8gR2V0IHRoZSBmaW5hbCBtYXRjaGVyT3V0IGJ5IGNvbmRlbnNpbmcgdGhpcyBpbnRlcm1lZGlhdGUgaW50byBwb3N0RmluZGVyIGNvbnRleHRzXG5cdFx0XHRcdFx0dGVtcCA9IFtdO1xuXHRcdFx0XHRcdGkgPSBtYXRjaGVyT3V0Lmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdGlmICggKCBlbGVtID0gbWF0Y2hlck91dFsgaSBdICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gUmVzdG9yZSBtYXRjaGVySW4gc2luY2UgZWxlbSBpcyBub3QgeWV0IGEgZmluYWwgbWF0Y2hcblx0XHRcdFx0XHRcdFx0dGVtcC5wdXNoKCAoIG1hdGNoZXJJblsgaSBdID0gZWxlbSApICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsICggbWF0Y2hlck91dCA9IFtdICksIHRlbXAsIHhtbCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gTW92ZSBtYXRjaGVkIGVsZW1lbnRzIGZyb20gc2VlZCB0byByZXN1bHRzIHRvIGtlZXAgdGhlbSBzeW5jaHJvbml6ZWRcblx0XHRcdFx0aSA9IG1hdGNoZXJPdXQubGVuZ3RoO1xuXHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRpZiAoICggZWxlbSA9IG1hdGNoZXJPdXRbIGkgXSApICYmXG5cdFx0XHRcdFx0XHQoIHRlbXAgPSBwb3N0RmluZGVyID8gaW5kZXhPZiggc2VlZCwgZWxlbSApIDogcHJlTWFwWyBpIF0gKSA+IC0xICkge1xuXG5cdFx0XHRcdFx0XHRzZWVkWyB0ZW1wIF0gPSAhKCByZXN1bHRzWyB0ZW1wIF0gPSBlbGVtICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBBZGQgZWxlbWVudHMgdG8gcmVzdWx0cywgdGhyb3VnaCBwb3N0RmluZGVyIGlmIGRlZmluZWRcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWF0Y2hlck91dCA9IGNvbmRlbnNlKFxuXHRcdFx0XHRtYXRjaGVyT3V0ID09PSByZXN1bHRzID9cblx0XHRcdFx0XHRtYXRjaGVyT3V0LnNwbGljZSggcHJlZXhpc3RpbmcsIG1hdGNoZXJPdXQubGVuZ3RoICkgOlxuXHRcdFx0XHRcdG1hdGNoZXJPdXRcblx0XHRcdCk7XG5cdFx0XHRpZiAoIHBvc3RGaW5kZXIgKSB7XG5cdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsIHJlc3VsdHMsIG1hdGNoZXJPdXQsIHhtbCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgbWF0Y2hlck91dCApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSApO1xufVxuXG5mdW5jdGlvbiBtYXRjaGVyRnJvbVRva2VucyggdG9rZW5zICkge1xuXHR2YXIgY2hlY2tDb250ZXh0LCBtYXRjaGVyLCBqLFxuXHRcdGxlbiA9IHRva2Vucy5sZW5ndGgsXG5cdFx0bGVhZGluZ1JlbGF0aXZlID0gRXhwci5yZWxhdGl2ZVsgdG9rZW5zWyAwIF0udHlwZSBdLFxuXHRcdGltcGxpY2l0UmVsYXRpdmUgPSBsZWFkaW5nUmVsYXRpdmUgfHwgRXhwci5yZWxhdGl2ZVsgXCIgXCIgXSxcblx0XHRpID0gbGVhZGluZ1JlbGF0aXZlID8gMSA6IDAsXG5cblx0XHQvLyBUaGUgZm91bmRhdGlvbmFsIG1hdGNoZXIgZW5zdXJlcyB0aGF0IGVsZW1lbnRzIGFyZSByZWFjaGFibGUgZnJvbSB0b3AtbGV2ZWwgY29udGV4dChzKVxuXHRcdG1hdGNoQ29udGV4dCA9IGFkZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGNoZWNrQ29udGV4dDtcblx0XHR9LCBpbXBsaWNpdFJlbGF0aXZlLCB0cnVlICksXG5cdFx0bWF0Y2hBbnlDb250ZXh0ID0gYWRkQ29tYmluYXRvciggZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gaW5kZXhPZiggY2hlY2tDb250ZXh0LCBlbGVtICkgPiAtMTtcblx0XHR9LCBpbXBsaWNpdFJlbGF0aXZlLCB0cnVlICksXG5cdFx0bWF0Y2hlcnMgPSBbIGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHR2YXIgcmV0ID0gKCAhbGVhZGluZ1JlbGF0aXZlICYmICggeG1sIHx8IGNvbnRleHQgIT09IG91dGVybW9zdENvbnRleHQgKSApIHx8IChcblx0XHRcdFx0KCBjaGVja0NvbnRleHQgPSBjb250ZXh0ICkubm9kZVR5cGUgP1xuXHRcdFx0XHRcdG1hdGNoQ29udGV4dCggZWxlbSwgY29udGV4dCwgeG1sICkgOlxuXHRcdFx0XHRcdG1hdGNoQW55Q29udGV4dCggZWxlbSwgY29udGV4dCwgeG1sICkgKTtcblxuXHRcdFx0Ly8gQXZvaWQgaGFuZ2luZyBvbnRvIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRjaGVja0NvbnRleHQgPSBudWxsO1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9IF07XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAoIG1hdGNoZXIgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbIGkgXS50eXBlIF0gKSApIHtcblx0XHRcdG1hdGNoZXJzID0gWyBhZGRDb21iaW5hdG9yKCBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSwgbWF0Y2hlciApIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1hdGNoZXIgPSBFeHByLmZpbHRlclsgdG9rZW5zWyBpIF0udHlwZSBdLmFwcGx5KCBudWxsLCB0b2tlbnNbIGkgXS5tYXRjaGVzICk7XG5cblx0XHRcdC8vIFJldHVybiBzcGVjaWFsIHVwb24gc2VlaW5nIGEgcG9zaXRpb25hbCBtYXRjaGVyXG5cdFx0XHRpZiAoIG1hdGNoZXJbIGV4cGFuZG8gXSApIHtcblxuXHRcdFx0XHQvLyBGaW5kIHRoZSBuZXh0IHJlbGF0aXZlIG9wZXJhdG9yIChpZiBhbnkpIGZvciBwcm9wZXIgaGFuZGxpbmdcblx0XHRcdFx0aiA9ICsraTtcblx0XHRcdFx0Zm9yICggOyBqIDwgbGVuOyBqKysgKSB7XG5cdFx0XHRcdFx0aWYgKCBFeHByLnJlbGF0aXZlWyB0b2tlbnNbIGogXS50eXBlIF0gKSB7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHNldE1hdGNoZXIoXG5cdFx0XHRcdFx0aSA+IDEgJiYgZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICksXG5cdFx0XHRcdFx0aSA+IDEgJiYgdG9TZWxlY3RvcihcblxuXHRcdFx0XHRcdC8vIElmIHRoZSBwcmVjZWRpbmcgdG9rZW4gd2FzIGEgZGVzY2VuZGFudCBjb21iaW5hdG9yLCBpbnNlcnQgYW4gaW1wbGljaXQgYW55LWVsZW1lbnQgYCpgXG5cdFx0XHRcdFx0dG9rZW5zXG5cdFx0XHRcdFx0XHQuc2xpY2UoIDAsIGkgLSAxIClcblx0XHRcdFx0XHRcdC5jb25jYXQoIHsgdmFsdWU6IHRva2Vuc1sgaSAtIDIgXS50eXBlID09PSBcIiBcIiA/IFwiKlwiIDogXCJcIiB9IClcblx0XHRcdFx0XHQpLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSxcblx0XHRcdFx0XHRtYXRjaGVyLFxuXHRcdFx0XHRcdGkgPCBqICYmIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMuc2xpY2UoIGksIGogKSApLFxuXHRcdFx0XHRcdGogPCBsZW4gJiYgbWF0Y2hlckZyb21Ub2tlbnMoICggdG9rZW5zID0gdG9rZW5zLnNsaWNlKCBqICkgKSApLFxuXHRcdFx0XHRcdGogPCBsZW4gJiYgdG9TZWxlY3RvciggdG9rZW5zIClcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHRcdG1hdGNoZXJzLnB1c2goIG1hdGNoZXIgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyggZWxlbWVudE1hdGNoZXJzLCBzZXRNYXRjaGVycyApIHtcblx0dmFyIGJ5U2V0ID0gc2V0TWF0Y2hlcnMubGVuZ3RoID4gMCxcblx0XHRieUVsZW1lbnQgPSBlbGVtZW50TWF0Y2hlcnMubGVuZ3RoID4gMCxcblx0XHRzdXBlck1hdGNoZXIgPSBmdW5jdGlvbiggc2VlZCwgY29udGV4dCwgeG1sLCByZXN1bHRzLCBvdXRlcm1vc3QgKSB7XG5cdFx0XHR2YXIgZWxlbSwgaiwgbWF0Y2hlcixcblx0XHRcdFx0bWF0Y2hlZENvdW50ID0gMCxcblx0XHRcdFx0aSA9IFwiMFwiLFxuXHRcdFx0XHR1bm1hdGNoZWQgPSBzZWVkICYmIFtdLFxuXHRcdFx0XHRzZXRNYXRjaGVkID0gW10sXG5cdFx0XHRcdGNvbnRleHRCYWNrdXAgPSBvdXRlcm1vc3RDb250ZXh0LFxuXG5cdFx0XHRcdC8vIFdlIG11c3QgYWx3YXlzIGhhdmUgZWl0aGVyIHNlZWQgZWxlbWVudHMgb3Igb3V0ZXJtb3N0IGNvbnRleHRcblx0XHRcdFx0ZWxlbXMgPSBzZWVkIHx8IGJ5RWxlbWVudCAmJiBFeHByLmZpbmRbIFwiVEFHXCIgXSggXCIqXCIsIG91dGVybW9zdCApLFxuXG5cdFx0XHRcdC8vIFVzZSBpbnRlZ2VyIGRpcnJ1bnMgaWZmIHRoaXMgaXMgdGhlIG91dGVybW9zdCBtYXRjaGVyXG5cdFx0XHRcdGRpcnJ1bnNVbmlxdWUgPSAoIGRpcnJ1bnMgKz0gY29udGV4dEJhY2t1cCA9PSBudWxsID8gMSA6IE1hdGgucmFuZG9tKCkgfHwgMC4xICksXG5cdFx0XHRcdGxlbiA9IGVsZW1zLmxlbmd0aDtcblxuXHRcdFx0aWYgKCBvdXRlcm1vc3QgKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0XHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdFx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0XHRcdFx0b3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHQgPT0gZG9jdW1lbnQgfHwgY29udGV4dCB8fCBvdXRlcm1vc3Q7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCBlbGVtZW50cyBwYXNzaW5nIGVsZW1lbnRNYXRjaGVycyBkaXJlY3RseSB0byByZXN1bHRzXG5cdFx0XHQvLyBTdXBwb3J0OiBJRTw5LCBTYWZhcmlcblx0XHRcdC8vIFRvbGVyYXRlIE5vZGVMaXN0IHByb3BlcnRpZXMgKElFOiBcImxlbmd0aFwiOyBTYWZhcmk6IDxudW1iZXI+KSBtYXRjaGluZyBlbGVtZW50cyBieSBpZFxuXHRcdFx0Zm9yICggOyBpICE9PSBsZW4gJiYgKCBlbGVtID0gZWxlbXNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBieUVsZW1lbnQgJiYgZWxlbSApIHtcblx0XHRcdFx0XHRqID0gMDtcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHRcdFx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0XHRcdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0XHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdFx0XHRcdFx0aWYgKCAhY29udGV4dCAmJiBlbGVtLm93bmVyRG9jdW1lbnQgIT0gZG9jdW1lbnQgKSB7XG5cdFx0XHRcdFx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHRcdFx0XHRcdFx0eG1sID0gIWRvY3VtZW50SXNIVE1MO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR3aGlsZSAoICggbWF0Y2hlciA9IGVsZW1lbnRNYXRjaGVyc1sgaisrIF0gKSApIHtcblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlciggZWxlbSwgY29udGV4dCB8fCBkb2N1bWVudCwgeG1sICkgKSB7XG5cdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBvdXRlcm1vc3QgKSB7XG5cdFx0XHRcdFx0XHRkaXJydW5zID0gZGlycnVuc1VuaXF1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBUcmFjayB1bm1hdGNoZWQgZWxlbWVudHMgZm9yIHNldCBmaWx0ZXJzXG5cdFx0XHRcdGlmICggYnlTZXQgKSB7XG5cblx0XHRcdFx0XHQvLyBUaGV5IHdpbGwgaGF2ZSBnb25lIHRocm91Z2ggYWxsIHBvc3NpYmxlIG1hdGNoZXJzXG5cdFx0XHRcdFx0aWYgKCAoIGVsZW0gPSAhbWF0Y2hlciAmJiBlbGVtICkgKSB7XG5cdFx0XHRcdFx0XHRtYXRjaGVkQ291bnQtLTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBMZW5ndGhlbiB0aGUgYXJyYXkgZm9yIGV2ZXJ5IGVsZW1lbnQsIG1hdGNoZWQgb3Igbm90XG5cdFx0XHRcdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0XHRcdFx0dW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gYGlgIGlzIG5vdyB0aGUgY291bnQgb2YgZWxlbWVudHMgdmlzaXRlZCBhYm92ZSwgYW5kIGFkZGluZyBpdCB0byBgbWF0Y2hlZENvdW50YFxuXHRcdFx0Ly8gbWFrZXMgdGhlIGxhdHRlciBub25uZWdhdGl2ZS5cblx0XHRcdG1hdGNoZWRDb3VudCArPSBpO1xuXG5cdFx0XHQvLyBBcHBseSBzZXQgZmlsdGVycyB0byB1bm1hdGNoZWQgZWxlbWVudHNcblx0XHRcdC8vIE5PVEU6IFRoaXMgY2FuIGJlIHNraXBwZWQgaWYgdGhlcmUgYXJlIG5vIHVubWF0Y2hlZCBlbGVtZW50cyAoaS5lLiwgYG1hdGNoZWRDb3VudGBcblx0XHRcdC8vIGVxdWFscyBgaWApLCB1bmxlc3Mgd2UgZGlkbid0IHZpc2l0IF9hbnlfIGVsZW1lbnRzIGluIHRoZSBhYm92ZSBsb29wIGJlY2F1c2Ugd2UgaGF2ZVxuXHRcdFx0Ly8gbm8gZWxlbWVudCBtYXRjaGVycyBhbmQgbm8gc2VlZC5cblx0XHRcdC8vIEluY3JlbWVudGluZyBhbiBpbml0aWFsbHktc3RyaW5nIFwiMFwiIGBpYCBhbGxvd3MgYGlgIHRvIHJlbWFpbiBhIHN0cmluZyBvbmx5IGluIHRoYXRcblx0XHRcdC8vIGNhc2UsIHdoaWNoIHdpbGwgcmVzdWx0IGluIGEgXCIwMFwiIGBtYXRjaGVkQ291bnRgIHRoYXQgZGlmZmVycyBmcm9tIGBpYCBidXQgaXMgYWxzb1xuXHRcdFx0Ly8gbnVtZXJpY2FsbHkgemVyby5cblx0XHRcdGlmICggYnlTZXQgJiYgaSAhPT0gbWF0Y2hlZENvdW50ICkge1xuXHRcdFx0XHRqID0gMDtcblx0XHRcdFx0d2hpbGUgKCAoIG1hdGNoZXIgPSBzZXRNYXRjaGVyc1sgaisrIF0gKSApIHtcblx0XHRcdFx0XHRtYXRjaGVyKCB1bm1hdGNoZWQsIHNldE1hdGNoZWQsIGNvbnRleHQsIHhtbCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKCBzZWVkICkge1xuXG5cdFx0XHRcdFx0Ly8gUmVpbnRlZ3JhdGUgZWxlbWVudCBtYXRjaGVzIHRvIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3Igc29ydGluZ1xuXHRcdFx0XHRcdGlmICggbWF0Y2hlZENvdW50ID4gMCApIHtcblx0XHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoICEoIHVubWF0Y2hlZFsgaSBdIHx8IHNldE1hdGNoZWRbIGkgXSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHNldE1hdGNoZWRbIGkgXSA9IHBvcC5jYWxsKCByZXN1bHRzICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBEaXNjYXJkIGluZGV4IHBsYWNlaG9sZGVyIHZhbHVlcyB0byBnZXQgb25seSBhY3R1YWwgbWF0Y2hlc1xuXHRcdFx0XHRcdHNldE1hdGNoZWQgPSBjb25kZW5zZSggc2V0TWF0Y2hlZCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQWRkIG1hdGNoZXMgdG8gcmVzdWx0c1xuXHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBzZXRNYXRjaGVkICk7XG5cblx0XHRcdFx0Ly8gU2VlZGxlc3Mgc2V0IG1hdGNoZXMgc3VjY2VlZGluZyBtdWx0aXBsZSBzdWNjZXNzZnVsIG1hdGNoZXJzIHN0aXB1bGF0ZSBzb3J0aW5nXG5cdFx0XHRcdGlmICggb3V0ZXJtb3N0ICYmICFzZWVkICYmIHNldE1hdGNoZWQubGVuZ3RoID4gMCAmJlxuXHRcdFx0XHRcdCggbWF0Y2hlZENvdW50ICsgc2V0TWF0Y2hlcnMubGVuZ3RoICkgPiAxICkge1xuXG5cdFx0XHRcdFx0U2l6emxlLnVuaXF1ZVNvcnQoIHJlc3VsdHMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBPdmVycmlkZSBtYW5pcHVsYXRpb24gb2YgZ2xvYmFscyBieSBuZXN0ZWQgbWF0Y2hlcnNcblx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xuXHRcdFx0XHRkaXJydW5zID0gZGlycnVuc1VuaXF1ZTtcblx0XHRcdFx0b3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHRCYWNrdXA7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB1bm1hdGNoZWQ7XG5cdFx0fTtcblxuXHRyZXR1cm4gYnlTZXQgP1xuXHRcdG1hcmtGdW5jdGlvbiggc3VwZXJNYXRjaGVyICkgOlxuXHRcdHN1cGVyTWF0Y2hlcjtcbn1cblxuY29tcGlsZSA9IFNpenpsZS5jb21waWxlID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBtYXRjaCAvKiBJbnRlcm5hbCBVc2UgT25seSAqLyApIHtcblx0dmFyIGksXG5cdFx0c2V0TWF0Y2hlcnMgPSBbXSxcblx0XHRlbGVtZW50TWF0Y2hlcnMgPSBbXSxcblx0XHRjYWNoZWQgPSBjb21waWxlckNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF07XG5cblx0aWYgKCAhY2FjaGVkICkge1xuXG5cdFx0Ly8gR2VuZXJhdGUgYSBmdW5jdGlvbiBvZiByZWN1cnNpdmUgZnVuY3Rpb25zIHRoYXQgY2FuIGJlIHVzZWQgdG8gY2hlY2sgZWFjaCBlbGVtZW50XG5cdFx0aWYgKCAhbWF0Y2ggKSB7XG5cdFx0XHRtYXRjaCA9IHRva2VuaXplKCBzZWxlY3RvciApO1xuXHRcdH1cblx0XHRpID0gbWF0Y2gubGVuZ3RoO1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0Y2FjaGVkID0gbWF0Y2hlckZyb21Ub2tlbnMoIG1hdGNoWyBpIF0gKTtcblx0XHRcdGlmICggY2FjaGVkWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdHNldE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbWVudE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhY2hlIHRoZSBjb21waWxlZCBmdW5jdGlvblxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGUoXG5cdFx0XHRzZWxlY3Rvcixcblx0XHRcdG1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyggZWxlbWVudE1hdGNoZXJzLCBzZXRNYXRjaGVycyApXG5cdFx0KTtcblxuXHRcdC8vIFNhdmUgc2VsZWN0b3IgYW5kIHRva2VuaXphdGlvblxuXHRcdGNhY2hlZC5zZWxlY3RvciA9IHNlbGVjdG9yO1xuXHR9XG5cdHJldHVybiBjYWNoZWQ7XG59O1xuXG4vKipcbiAqIEEgbG93LWxldmVsIHNlbGVjdGlvbiBmdW5jdGlvbiB0aGF0IHdvcmtzIHdpdGggU2l6emxlJ3MgY29tcGlsZWRcbiAqICBzZWxlY3RvciBmdW5jdGlvbnNcbiAqIEBwYXJhbSB7U3RyaW5nfEZ1bmN0aW9ufSBzZWxlY3RvciBBIHNlbGVjdG9yIG9yIGEgcHJlLWNvbXBpbGVkXG4gKiAgc2VsZWN0b3IgZnVuY3Rpb24gYnVpbHQgd2l0aCBTaXp6bGUuY29tcGlsZVxuICogQHBhcmFtIHtFbGVtZW50fSBjb250ZXh0XG4gKiBAcGFyYW0ge0FycmF5fSBbcmVzdWx0c11cbiAqIEBwYXJhbSB7QXJyYXl9IFtzZWVkXSBBIHNldCBvZiBlbGVtZW50cyB0byBtYXRjaCBhZ2FpbnN0XG4gKi9cbnNlbGVjdCA9IFNpenpsZS5zZWxlY3QgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKSB7XG5cdHZhciBpLCB0b2tlbnMsIHRva2VuLCB0eXBlLCBmaW5kLFxuXHRcdGNvbXBpbGVkID0gdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgc2VsZWN0b3IsXG5cdFx0bWF0Y2ggPSAhc2VlZCAmJiB0b2tlbml6ZSggKCBzZWxlY3RvciA9IGNvbXBpbGVkLnNlbGVjdG9yIHx8IHNlbGVjdG9yICkgKTtcblxuXHRyZXN1bHRzID0gcmVzdWx0cyB8fCBbXTtcblxuXHQvLyBUcnkgdG8gbWluaW1pemUgb3BlcmF0aW9ucyBpZiB0aGVyZSBpcyBvbmx5IG9uZSBzZWxlY3RvciBpbiB0aGUgbGlzdCBhbmQgbm8gc2VlZFxuXHQvLyAodGhlIGxhdHRlciBvZiB3aGljaCBndWFyYW50ZWVzIHVzIGNvbnRleHQpXG5cdGlmICggbWF0Y2gubGVuZ3RoID09PSAxICkge1xuXG5cdFx0Ly8gUmVkdWNlIGNvbnRleHQgaWYgdGhlIGxlYWRpbmcgY29tcG91bmQgc2VsZWN0b3IgaXMgYW4gSURcblx0XHR0b2tlbnMgPSBtYXRjaFsgMCBdID0gbWF0Y2hbIDAgXS5zbGljZSggMCApO1xuXHRcdGlmICggdG9rZW5zLmxlbmd0aCA+IDIgJiYgKCB0b2tlbiA9IHRva2Vuc1sgMCBdICkudHlwZSA9PT0gXCJJRFwiICYmXG5cdFx0XHRjb250ZXh0Lm5vZGVUeXBlID09PSA5ICYmIGRvY3VtZW50SXNIVE1MICYmIEV4cHIucmVsYXRpdmVbIHRva2Vuc1sgMSBdLnR5cGUgXSApIHtcblxuXHRcdFx0Y29udGV4dCA9ICggRXhwci5maW5kWyBcIklEXCIgXSggdG9rZW4ubWF0Y2hlc1sgMCBdXG5cdFx0XHRcdC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLCBjb250ZXh0ICkgfHwgW10gKVsgMCBdO1xuXHRcdFx0aWYgKCAhY29udGV4dCApIHtcblx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cblx0XHRcdC8vIFByZWNvbXBpbGVkIG1hdGNoZXJzIHdpbGwgc3RpbGwgdmVyaWZ5IGFuY2VzdHJ5LCBzbyBzdGVwIHVwIGEgbGV2ZWxcblx0XHRcdH0gZWxzZSBpZiAoIGNvbXBpbGVkICkge1xuXHRcdFx0XHRjb250ZXh0ID0gY29udGV4dC5wYXJlbnROb2RlO1xuXHRcdFx0fVxuXG5cdFx0XHRzZWxlY3RvciA9IHNlbGVjdG9yLnNsaWNlKCB0b2tlbnMuc2hpZnQoKS52YWx1ZS5sZW5ndGggKTtcblx0XHR9XG5cblx0XHQvLyBGZXRjaCBhIHNlZWQgc2V0IGZvciByaWdodC10by1sZWZ0IG1hdGNoaW5nXG5cdFx0aSA9IG1hdGNoRXhwclsgXCJuZWVkc0NvbnRleHRcIiBdLnRlc3QoIHNlbGVjdG9yICkgPyAwIDogdG9rZW5zLmxlbmd0aDtcblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdHRva2VuID0gdG9rZW5zWyBpIF07XG5cblx0XHRcdC8vIEFib3J0IGlmIHdlIGhpdCBhIGNvbWJpbmF0b3Jcblx0XHRcdGlmICggRXhwci5yZWxhdGl2ZVsgKCB0eXBlID0gdG9rZW4udHlwZSApIF0gKSB7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCAoIGZpbmQgPSBFeHByLmZpbmRbIHR5cGUgXSApICkge1xuXG5cdFx0XHRcdC8vIFNlYXJjaCwgZXhwYW5kaW5nIGNvbnRleHQgZm9yIGxlYWRpbmcgc2libGluZyBjb21iaW5hdG9yc1xuXHRcdFx0XHRpZiAoICggc2VlZCA9IGZpbmQoXG5cdFx0XHRcdFx0dG9rZW4ubWF0Y2hlc1sgMCBdLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICksXG5cdFx0XHRcdFx0cnNpYmxpbmcudGVzdCggdG9rZW5zWyAwIF0udHlwZSApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fFxuXHRcdFx0XHRcdFx0Y29udGV4dFxuXHRcdFx0XHQpICkgKSB7XG5cblx0XHRcdFx0XHQvLyBJZiBzZWVkIGlzIGVtcHR5IG9yIG5vIHRva2VucyByZW1haW4sIHdlIGNhbiByZXR1cm4gZWFybHlcblx0XHRcdFx0XHR0b2tlbnMuc3BsaWNlKCBpLCAxICk7XG5cdFx0XHRcdFx0c2VsZWN0b3IgPSBzZWVkLmxlbmd0aCAmJiB0b1NlbGVjdG9yKCB0b2tlbnMgKTtcblx0XHRcdFx0XHRpZiAoICFzZWxlY3RvciApIHtcblx0XHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIHNlZWQgKTtcblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ29tcGlsZSBhbmQgZXhlY3V0ZSBhIGZpbHRlcmluZyBmdW5jdGlvbiBpZiBvbmUgaXMgbm90IHByb3ZpZGVkXG5cdC8vIFByb3ZpZGUgYG1hdGNoYCB0byBhdm9pZCByZXRva2VuaXphdGlvbiBpZiB3ZSBtb2RpZmllZCB0aGUgc2VsZWN0b3IgYWJvdmVcblx0KCBjb21waWxlZCB8fCBjb21waWxlKCBzZWxlY3RvciwgbWF0Y2ggKSApKFxuXHRcdHNlZWQsXG5cdFx0Y29udGV4dCxcblx0XHQhZG9jdW1lbnRJc0hUTUwsXG5cdFx0cmVzdWx0cyxcblx0XHQhY29udGV4dCB8fCByc2libGluZy50ZXN0KCBzZWxlY3RvciApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fCBjb250ZXh0XG5cdCk7XG5cdHJldHVybiByZXN1bHRzO1xufTtcblxuLy8gT25lLXRpbWUgYXNzaWdubWVudHNcblxuLy8gU29ydCBzdGFiaWxpdHlcbnN1cHBvcnQuc29ydFN0YWJsZSA9IGV4cGFuZG8uc3BsaXQoIFwiXCIgKS5zb3J0KCBzb3J0T3JkZXIgKS5qb2luKCBcIlwiICkgPT09IGV4cGFuZG87XG5cbi8vIFN1cHBvcnQ6IENocm9tZSAxNC0zNStcbi8vIEFsd2F5cyBhc3N1bWUgZHVwbGljYXRlcyBpZiB0aGV5IGFyZW4ndCBwYXNzZWQgdG8gdGhlIGNvbXBhcmlzb24gZnVuY3Rpb25cbnN1cHBvcnQuZGV0ZWN0RHVwbGljYXRlcyA9ICEhaGFzRHVwbGljYXRlO1xuXG4vLyBJbml0aWFsaXplIGFnYWluc3QgdGhlIGRlZmF1bHQgZG9jdW1lbnRcbnNldERvY3VtZW50KCk7XG5cbi8vIFN1cHBvcnQ6IFdlYmtpdDw1MzcuMzIgLSBTYWZhcmkgNi4wLjMvQ2hyb21lIDI1IChmaXhlZCBpbiBDaHJvbWUgMjcpXG4vLyBEZXRhY2hlZCBub2RlcyBjb25mb3VuZGluZ2x5IGZvbGxvdyAqZWFjaCBvdGhlcipcbnN1cHBvcnQuc29ydERldGFjaGVkID0gYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cblx0Ly8gU2hvdWxkIHJldHVybiAxLCBidXQgcmV0dXJucyA0IChmb2xsb3dpbmcpXG5cdHJldHVybiBlbC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJmaWVsZHNldFwiICkgKSAmIDE7XG59ICk7XG5cbi8vIFN1cHBvcnQ6IElFPDhcbi8vIFByZXZlbnQgYXR0cmlidXRlL3Byb3BlcnR5IFwiaW50ZXJwb2xhdGlvblwiXG4vLyBodHRwczovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L21zNTM2NDI5JTI4VlMuODUlMjkuYXNweFxuaWYgKCAhYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdGVsLmlubmVySFRNTCA9IFwiPGEgaHJlZj0nIyc+PC9hPlwiO1xuXHRyZXR1cm4gZWwuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoIFwiaHJlZlwiICkgPT09IFwiI1wiO1xufSApICkge1xuXHRhZGRIYW5kbGUoIFwidHlwZXxocmVmfGhlaWdodHx3aWR0aFwiLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0aWYgKCAhaXNYTUwgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUsIG5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJ0eXBlXCIgPyAxIDogMiApO1xuXHRcdH1cblx0fSApO1xufVxuXG4vLyBTdXBwb3J0OiBJRTw5XG4vLyBVc2UgZGVmYXVsdFZhbHVlIGluIHBsYWNlIG9mIGdldEF0dHJpYnV0ZShcInZhbHVlXCIpXG5pZiAoICFzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRlbC5pbm5lckhUTUwgPSBcIjxpbnB1dC8+XCI7XG5cdGVsLmZpcnN0Q2hpbGQuc2V0QXR0cmlidXRlKCBcInZhbHVlXCIsIFwiXCIgKTtcblx0cmV0dXJuIGVsLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKCBcInZhbHVlXCIgKSA9PT0gXCJcIjtcbn0gKSApIHtcblx0YWRkSGFuZGxlKCBcInZhbHVlXCIsIGZ1bmN0aW9uKCBlbGVtLCBfbmFtZSwgaXNYTUwgKSB7XG5cdFx0aWYgKCAhaXNYTUwgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImlucHV0XCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kZWZhdWx0VmFsdWU7XG5cdFx0fVxuXHR9ICk7XG59XG5cbi8vIFN1cHBvcnQ6IElFPDlcbi8vIFVzZSBnZXRBdHRyaWJ1dGVOb2RlIHRvIGZldGNoIGJvb2xlYW5zIHdoZW4gZ2V0QXR0cmlidXRlIGxpZXNcbmlmICggIWFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRyZXR1cm4gZWwuZ2V0QXR0cmlidXRlKCBcImRpc2FibGVkXCIgKSA9PSBudWxsO1xufSApICkge1xuXHRhZGRIYW5kbGUoIGJvb2xlYW5zLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0dmFyIHZhbDtcblx0XHRpZiAoICFpc1hNTCApIHtcblx0XHRcdHJldHVybiBlbGVtWyBuYW1lIF0gPT09IHRydWUgPyBuYW1lLnRvTG93ZXJDYXNlKCkgOlxuXHRcdFx0XHQoIHZhbCA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggbmFtZSApICkgJiYgdmFsLnNwZWNpZmllZCA/XG5cdFx0XHRcdFx0dmFsLnZhbHVlIDpcblx0XHRcdFx0XHRudWxsO1xuXHRcdH1cblx0fSApO1xufVxuXG5yZXR1cm4gU2l6emxlO1xuXG59ICkoIHdpbmRvdyApO1xuXG5cblxualF1ZXJ5LmZpbmQgPSBTaXp6bGU7XG5qUXVlcnkuZXhwciA9IFNpenpsZS5zZWxlY3RvcnM7XG5cbi8vIERlcHJlY2F0ZWRcbmpRdWVyeS5leHByWyBcIjpcIiBdID0galF1ZXJ5LmV4cHIucHNldWRvcztcbmpRdWVyeS51bmlxdWVTb3J0ID0galF1ZXJ5LnVuaXF1ZSA9IFNpenpsZS51bmlxdWVTb3J0O1xualF1ZXJ5LnRleHQgPSBTaXp6bGUuZ2V0VGV4dDtcbmpRdWVyeS5pc1hNTERvYyA9IFNpenpsZS5pc1hNTDtcbmpRdWVyeS5jb250YWlucyA9IFNpenpsZS5jb250YWlucztcbmpRdWVyeS5lc2NhcGVTZWxlY3RvciA9IFNpenpsZS5lc2NhcGU7XG5cblxuXG5cbnZhciBkaXIgPSBmdW5jdGlvbiggZWxlbSwgZGlyLCB1bnRpbCApIHtcblx0dmFyIG1hdGNoZWQgPSBbXSxcblx0XHR0cnVuY2F0ZSA9IHVudGlsICE9PSB1bmRlZmluZWQ7XG5cblx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICYmIGVsZW0ubm9kZVR5cGUgIT09IDkgKSB7XG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0aWYgKCB0cnVuY2F0ZSAmJiBqUXVlcnkoIGVsZW0gKS5pcyggdW50aWwgKSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIG1hdGNoZWQ7XG59O1xuXG5cbnZhciBzaWJsaW5ncyA9IGZ1bmN0aW9uKCBuLCBlbGVtICkge1xuXHR2YXIgbWF0Y2hlZCA9IFtdO1xuXG5cdGZvciAoIDsgbjsgbiA9IG4ubmV4dFNpYmxpbmcgKSB7XG5cdFx0aWYgKCBuLm5vZGVUeXBlID09PSAxICYmIG4gIT09IGVsZW0gKSB7XG5cdFx0XHRtYXRjaGVkLnB1c2goIG4gKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gbWF0Y2hlZDtcbn07XG5cblxudmFyIHJuZWVkc0NvbnRleHQgPSBqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQ7XG5cblxuXG5mdW5jdGlvbiBub2RlTmFtZSggZWxlbSwgbmFtZSApIHtcblxuXHRyZXR1cm4gZWxlbS5ub2RlTmFtZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUudG9Mb3dlckNhc2UoKTtcblxufVxudmFyIHJzaW5nbGVUYWcgPSAoIC9ePChbYS16XVteXFwvXFwwPjpcXHgyMFxcdFxcclxcblxcZl0qKVtcXHgyMFxcdFxcclxcblxcZl0qXFwvPz4oPzo8XFwvXFwxPnwpJC9pICk7XG5cblxuXG4vLyBJbXBsZW1lbnQgdGhlIGlkZW50aWNhbCBmdW5jdGlvbmFsaXR5IGZvciBmaWx0ZXIgYW5kIG5vdFxuZnVuY3Rpb24gd2lubm93KCBlbGVtZW50cywgcXVhbGlmaWVyLCBub3QgKSB7XG5cdGlmICggaXNGdW5jdGlvbiggcXVhbGlmaWVyICkgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7XG5cdFx0XHRyZXR1cm4gISFxdWFsaWZpZXIuY2FsbCggZWxlbSwgaSwgZWxlbSApICE9PSBub3Q7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gU2luZ2xlIGVsZW1lbnRcblx0aWYgKCBxdWFsaWZpZXIubm9kZVR5cGUgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gKCBlbGVtID09PSBxdWFsaWZpZXIgKSAhPT0gbm90O1xuXHRcdH0gKTtcblx0fVxuXG5cdC8vIEFycmF5bGlrZSBvZiBlbGVtZW50cyAoalF1ZXJ5LCBhcmd1bWVudHMsIEFycmF5KVxuXHRpZiAoIHR5cGVvZiBxdWFsaWZpZXIgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gKCBpbmRleE9mLmNhbGwoIHF1YWxpZmllciwgZWxlbSApID4gLTEgKSAhPT0gbm90O1xuXHRcdH0gKTtcblx0fVxuXG5cdC8vIEZpbHRlcmVkIGRpcmVjdGx5IGZvciBib3RoIHNpbXBsZSBhbmQgY29tcGxleCBzZWxlY3RvcnNcblx0cmV0dXJuIGpRdWVyeS5maWx0ZXIoIHF1YWxpZmllciwgZWxlbWVudHMsIG5vdCApO1xufVxuXG5qUXVlcnkuZmlsdGVyID0gZnVuY3Rpb24oIGV4cHIsIGVsZW1zLCBub3QgKSB7XG5cdHZhciBlbGVtID0gZWxlbXNbIDAgXTtcblxuXHRpZiAoIG5vdCApIHtcblx0XHRleHByID0gXCI6bm90KFwiICsgZXhwciArIFwiKVwiO1xuXHR9XG5cblx0aWYgKCBlbGVtcy5sZW5ndGggPT09IDEgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKCBlbGVtLCBleHByICkgPyBbIGVsZW0gXSA6IFtdO1xuXHR9XG5cblx0cmV0dXJuIGpRdWVyeS5maW5kLm1hdGNoZXMoIGV4cHIsIGpRdWVyeS5ncmVwKCBlbGVtcywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGVsZW0ubm9kZVR5cGUgPT09IDE7XG5cdH0gKSApO1xufTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRmaW5kOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dmFyIGksIHJldCxcblx0XHRcdGxlbiA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0c2VsZiA9IHRoaXM7XG5cblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5KCBzZWxlY3RvciApLmZpbHRlciggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdFx0aWYgKCBqUXVlcnkuY29udGFpbnMoIHNlbGZbIGkgXSwgdGhpcyApICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9ICkgKTtcblx0XHR9XG5cblx0XHRyZXQgPSB0aGlzLnB1c2hTdGFjayggW10gKTtcblxuXHRcdGZvciAoIGkgPSAwOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRqUXVlcnkuZmluZCggc2VsZWN0b3IsIHNlbGZbIGkgXSwgcmV0ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGxlbiA+IDEgPyBqUXVlcnkudW5pcXVlU29ydCggcmV0ICkgOiByZXQ7XG5cdH0sXG5cdGZpbHRlcjogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KCB0aGlzLCBzZWxlY3RvciB8fCBbXSwgZmFsc2UgKSApO1xuXHR9LFxuXHRub3Q6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHdpbm5vdyggdGhpcywgc2VsZWN0b3IgfHwgW10sIHRydWUgKSApO1xuXHR9LFxuXHRpczogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiAhIXdpbm5vdyhcblx0XHRcdHRoaXMsXG5cblx0XHRcdC8vIElmIHRoaXMgaXMgYSBwb3NpdGlvbmFsL3JlbGF0aXZlIHNlbGVjdG9yLCBjaGVjayBtZW1iZXJzaGlwIGluIHRoZSByZXR1cm5lZCBzZXRcblx0XHRcdC8vIHNvICQoXCJwOmZpcnN0XCIpLmlzKFwicDpsYXN0XCIpIHdvbid0IHJldHVybiB0cnVlIGZvciBhIGRvYyB3aXRoIHR3byBcInBcIi5cblx0XHRcdHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiAmJiBybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICkgP1xuXHRcdFx0XHRqUXVlcnkoIHNlbGVjdG9yICkgOlxuXHRcdFx0XHRzZWxlY3RvciB8fCBbXSxcblx0XHRcdGZhbHNlXG5cdFx0KS5sZW5ndGg7XG5cdH1cbn0gKTtcblxuXG4vLyBJbml0aWFsaXplIGEgalF1ZXJ5IG9iamVjdFxuXG5cbi8vIEEgY2VudHJhbCByZWZlcmVuY2UgdG8gdGhlIHJvb3QgalF1ZXJ5KGRvY3VtZW50KVxudmFyIHJvb3RqUXVlcnksXG5cblx0Ly8gQSBzaW1wbGUgd2F5IHRvIGNoZWNrIGZvciBIVE1MIHN0cmluZ3Ncblx0Ly8gUHJpb3JpdGl6ZSAjaWQgb3ZlciA8dGFnPiB0byBhdm9pZCBYU1MgdmlhIGxvY2F0aW9uLmhhc2ggKHRyYWMtOTUyMSlcblx0Ly8gU3RyaWN0IEhUTUwgcmVjb2duaXRpb24gKHRyYWMtMTEyOTA6IG11c3Qgc3RhcnQgd2l0aCA8KVxuXHQvLyBTaG9ydGN1dCBzaW1wbGUgI2lkIGNhc2UgZm9yIHNwZWVkXG5cdHJxdWlja0V4cHIgPSAvXig/OlxccyooPFtcXHdcXFddKz4pW14+XSp8IyhbXFx3LV0rKSkkLyxcblxuXHRpbml0ID0galF1ZXJ5LmZuLmluaXQgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJvb3QgKSB7XG5cdFx0dmFyIG1hdGNoLCBlbGVtO1xuXG5cdFx0Ly8gSEFORExFOiAkKFwiXCIpLCAkKG51bGwpLCAkKHVuZGVmaW5lZCksICQoZmFsc2UpXG5cdFx0aWYgKCAhc2VsZWN0b3IgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cblx0XHQvLyBNZXRob2QgaW5pdCgpIGFjY2VwdHMgYW4gYWx0ZXJuYXRlIHJvb3RqUXVlcnlcblx0XHQvLyBzbyBtaWdyYXRlIGNhbiBzdXBwb3J0IGpRdWVyeS5zdWIgKGdoLTIxMDEpXG5cdFx0cm9vdCA9IHJvb3QgfHwgcm9vdGpRdWVyeTtcblxuXHRcdC8vIEhhbmRsZSBIVE1MIHN0cmluZ3Ncblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGlmICggc2VsZWN0b3JbIDAgXSA9PT0gXCI8XCIgJiZcblx0XHRcdFx0c2VsZWN0b3JbIHNlbGVjdG9yLmxlbmd0aCAtIDEgXSA9PT0gXCI+XCIgJiZcblx0XHRcdFx0c2VsZWN0b3IubGVuZ3RoID49IDMgKSB7XG5cblx0XHRcdFx0Ly8gQXNzdW1lIHRoYXQgc3RyaW5ncyB0aGF0IHN0YXJ0IGFuZCBlbmQgd2l0aCA8PiBhcmUgSFRNTCBhbmQgc2tpcCB0aGUgcmVnZXggY2hlY2tcblx0XHRcdFx0bWF0Y2ggPSBbIG51bGwsIHNlbGVjdG9yLCBudWxsIF07XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG1hdGNoID0gcnF1aWNrRXhwci5leGVjKCBzZWxlY3RvciApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYXRjaCBodG1sIG9yIG1ha2Ugc3VyZSBubyBjb250ZXh0IGlzIHNwZWNpZmllZCBmb3IgI2lkXG5cdFx0XHRpZiAoIG1hdGNoICYmICggbWF0Y2hbIDEgXSB8fCAhY29udGV4dCApICkge1xuXG5cdFx0XHRcdC8vIEhBTkRMRTogJChodG1sKSAtPiAkKGFycmF5KVxuXHRcdFx0XHRpZiAoIG1hdGNoWyAxIF0gKSB7XG5cdFx0XHRcdFx0Y29udGV4dCA9IGNvbnRleHQgaW5zdGFuY2VvZiBqUXVlcnkgPyBjb250ZXh0WyAwIF0gOiBjb250ZXh0O1xuXG5cdFx0XHRcdFx0Ly8gT3B0aW9uIHRvIHJ1biBzY3JpcHRzIGlzIHRydWUgZm9yIGJhY2stY29tcGF0XG5cdFx0XHRcdFx0Ly8gSW50ZW50aW9uYWxseSBsZXQgdGhlIGVycm9yIGJlIHRocm93biBpZiBwYXJzZUhUTUwgaXMgbm90IHByZXNlbnRcblx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHRoaXMsIGpRdWVyeS5wYXJzZUhUTUwoXG5cdFx0XHRcdFx0XHRtYXRjaFsgMSBdLFxuXHRcdFx0XHRcdFx0Y29udGV4dCAmJiBjb250ZXh0Lm5vZGVUeXBlID8gY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgOiBkb2N1bWVudCxcblx0XHRcdFx0XHRcdHRydWVcblx0XHRcdFx0XHQpICk7XG5cblx0XHRcdFx0XHQvLyBIQU5ETEU6ICQoaHRtbCwgcHJvcHMpXG5cdFx0XHRcdFx0aWYgKCByc2luZ2xlVGFnLnRlc3QoIG1hdGNoWyAxIF0gKSAmJiBqUXVlcnkuaXNQbGFpbk9iamVjdCggY29udGV4dCApICkge1xuXHRcdFx0XHRcdFx0Zm9yICggbWF0Y2ggaW4gY29udGV4dCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBQcm9wZXJ0aWVzIG9mIGNvbnRleHQgYXJlIGNhbGxlZCBhcyBtZXRob2RzIGlmIHBvc3NpYmxlXG5cdFx0XHRcdFx0XHRcdGlmICggaXNGdW5jdGlvbiggdGhpc1sgbWF0Y2ggXSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHRoaXNbIG1hdGNoIF0oIGNvbnRleHRbIG1hdGNoIF0gKTtcblxuXHRcdFx0XHRcdFx0XHQvLyAuLi5hbmQgb3RoZXJ3aXNlIHNldCBhcyBhdHRyaWJ1dGVzXG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhpcy5hdHRyKCBtYXRjaCwgY29udGV4dFsgbWF0Y2ggXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cblx0XHRcdFx0Ly8gSEFORExFOiAkKCNpZClcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIG1hdGNoWyAyIF0gKTtcblxuXHRcdFx0XHRcdGlmICggZWxlbSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSW5qZWN0IHRoZSBlbGVtZW50IGRpcmVjdGx5IGludG8gdGhlIGpRdWVyeSBvYmplY3Rcblx0XHRcdFx0XHRcdHRoaXNbIDAgXSA9IGVsZW07XG5cdFx0XHRcdFx0XHR0aGlzLmxlbmd0aCA9IDE7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cblx0XHRcdC8vIEhBTkRMRTogJChleHByLCAkKC4uLikpXG5cdFx0XHR9IGVsc2UgaWYgKCAhY29udGV4dCB8fCBjb250ZXh0LmpxdWVyeSApIHtcblx0XHRcdFx0cmV0dXJuICggY29udGV4dCB8fCByb290ICkuZmluZCggc2VsZWN0b3IgKTtcblxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsIGNvbnRleHQpXG5cdFx0XHQvLyAod2hpY2ggaXMganVzdCBlcXVpdmFsZW50IHRvOiAkKGNvbnRleHQpLmZpbmQoZXhwcilcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLmNvbnN0cnVjdG9yKCBjb250ZXh0ICkuZmluZCggc2VsZWN0b3IgKTtcblx0XHRcdH1cblxuXHRcdC8vIEhBTkRMRTogJChET01FbGVtZW50KVxuXHRcdH0gZWxzZSBpZiAoIHNlbGVjdG9yLm5vZGVUeXBlICkge1xuXHRcdFx0dGhpc1sgMCBdID0gc2VsZWN0b3I7XG5cdFx0XHR0aGlzLmxlbmd0aCA9IDE7XG5cdFx0XHRyZXR1cm4gdGhpcztcblxuXHRcdC8vIEhBTkRMRTogJChmdW5jdGlvbilcblx0XHQvLyBTaG9ydGN1dCBmb3IgZG9jdW1lbnQgcmVhZHlcblx0XHR9IGVsc2UgaWYgKCBpc0Z1bmN0aW9uKCBzZWxlY3RvciApICkge1xuXHRcdFx0cmV0dXJuIHJvb3QucmVhZHkgIT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdHJvb3QucmVhZHkoIHNlbGVjdG9yICkgOlxuXG5cdFx0XHRcdC8vIEV4ZWN1dGUgaW1tZWRpYXRlbHkgaWYgcmVhZHkgaXMgbm90IHByZXNlbnRcblx0XHRcdFx0c2VsZWN0b3IoIGpRdWVyeSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBqUXVlcnkubWFrZUFycmF5KCBzZWxlY3RvciwgdGhpcyApO1xuXHR9O1xuXG4vLyBHaXZlIHRoZSBpbml0IGZ1bmN0aW9uIHRoZSBqUXVlcnkgcHJvdG90eXBlIGZvciBsYXRlciBpbnN0YW50aWF0aW9uXG5pbml0LnByb3RvdHlwZSA9IGpRdWVyeS5mbjtcblxuLy8gSW5pdGlhbGl6ZSBjZW50cmFsIHJlZmVyZW5jZVxucm9vdGpRdWVyeSA9IGpRdWVyeSggZG9jdW1lbnQgKTtcblxuXG52YXIgcnBhcmVudHNwcmV2ID0gL14oPzpwYXJlbnRzfHByZXYoPzpVbnRpbHxBbGwpKS8sXG5cblx0Ly8gTWV0aG9kcyBndWFyYW50ZWVkIHRvIHByb2R1Y2UgYSB1bmlxdWUgc2V0IHdoZW4gc3RhcnRpbmcgZnJvbSBhIHVuaXF1ZSBzZXRcblx0Z3VhcmFudGVlZFVuaXF1ZSA9IHtcblx0XHRjaGlsZHJlbjogdHJ1ZSxcblx0XHRjb250ZW50czogdHJ1ZSxcblx0XHRuZXh0OiB0cnVlLFxuXHRcdHByZXY6IHRydWVcblx0fTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRoYXM6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7XG5cdFx0dmFyIHRhcmdldHMgPSBqUXVlcnkoIHRhcmdldCwgdGhpcyApLFxuXHRcdFx0bCA9IHRhcmdldHMubGVuZ3RoO1xuXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBpID0gMDtcblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBqUXVlcnkuY29udGFpbnMoIHRoaXMsIHRhcmdldHNbIGkgXSApICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGNsb3Nlc3Q6IGZ1bmN0aW9uKCBzZWxlY3RvcnMsIGNvbnRleHQgKSB7XG5cdFx0dmFyIGN1cixcblx0XHRcdGkgPSAwLFxuXHRcdFx0bCA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0bWF0Y2hlZCA9IFtdLFxuXHRcdFx0dGFyZ2V0cyA9IHR5cGVvZiBzZWxlY3RvcnMgIT09IFwic3RyaW5nXCIgJiYgalF1ZXJ5KCBzZWxlY3RvcnMgKTtcblxuXHRcdC8vIFBvc2l0aW9uYWwgc2VsZWN0b3JzIG5ldmVyIG1hdGNoLCBzaW5jZSB0aGVyZSdzIG5vIF9zZWxlY3Rpb25fIGNvbnRleHRcblx0XHRpZiAoICFybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9ycyApICkge1xuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRmb3IgKCBjdXIgPSB0aGlzWyBpIF07IGN1ciAmJiBjdXIgIT09IGNvbnRleHQ7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkge1xuXG5cdFx0XHRcdFx0Ly8gQWx3YXlzIHNraXAgZG9jdW1lbnQgZnJhZ21lbnRzXG5cdFx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPCAxMSAmJiAoIHRhcmdldHMgP1xuXHRcdFx0XHRcdFx0dGFyZ2V0cy5pbmRleCggY3VyICkgPiAtMSA6XG5cblx0XHRcdFx0XHRcdC8vIERvbid0IHBhc3Mgbm9uLWVsZW1lbnRzIHRvIFNpenpsZVxuXHRcdFx0XHRcdFx0Y3VyLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdFx0XHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggY3VyLCBzZWxlY3RvcnMgKSApICkge1xuXG5cdFx0XHRcdFx0XHRtYXRjaGVkLnB1c2goIGN1ciApO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkLmxlbmd0aCA+IDEgPyBqUXVlcnkudW5pcXVlU29ydCggbWF0Y2hlZCApIDogbWF0Y2hlZCApO1xuXHR9LFxuXG5cdC8vIERldGVybWluZSB0aGUgcG9zaXRpb24gb2YgYW4gZWxlbWVudCB3aXRoaW4gdGhlIHNldFxuXHRpbmRleDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBObyBhcmd1bWVudCwgcmV0dXJuIGluZGV4IGluIHBhcmVudFxuXHRcdGlmICggIWVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gKCB0aGlzWyAwIF0gJiYgdGhpc1sgMCBdLnBhcmVudE5vZGUgKSA/IHRoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoIDogLTE7XG5cdFx0fVxuXG5cdFx0Ly8gSW5kZXggaW4gc2VsZWN0b3Jcblx0XHRpZiAoIHR5cGVvZiBlbGVtID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggalF1ZXJ5KCBlbGVtICksIHRoaXNbIDAgXSApO1xuXHRcdH1cblxuXHRcdC8vIExvY2F0ZSB0aGUgcG9zaXRpb24gb2YgdGhlIGRlc2lyZWQgZWxlbWVudFxuXHRcdHJldHVybiBpbmRleE9mLmNhbGwoIHRoaXMsXG5cblx0XHRcdC8vIElmIGl0IHJlY2VpdmVzIGEgalF1ZXJ5IG9iamVjdCwgdGhlIGZpcnN0IGVsZW1lbnQgaXMgdXNlZFxuXHRcdFx0ZWxlbS5qcXVlcnkgPyBlbGVtWyAwIF0gOiBlbGVtXG5cdFx0KTtcblx0fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soXG5cdFx0XHRqUXVlcnkudW5pcXVlU29ydChcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCB0aGlzLmdldCgpLCBqUXVlcnkoIHNlbGVjdG9yLCBjb250ZXh0ICkgKVxuXHRcdFx0KVxuXHRcdCk7XG5cdH0sXG5cblx0YWRkQmFjazogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLmFkZCggc2VsZWN0b3IgPT0gbnVsbCA/XG5cdFx0XHR0aGlzLnByZXZPYmplY3QgOiB0aGlzLnByZXZPYmplY3QuZmlsdGVyKCBzZWxlY3RvciApXG5cdFx0KTtcblx0fVxufSApO1xuXG5mdW5jdGlvbiBzaWJsaW5nKCBjdXIsIGRpciApIHtcblx0d2hpbGUgKCAoIGN1ciA9IGN1clsgZGlyIF0gKSAmJiBjdXIubm9kZVR5cGUgIT09IDEgKSB7fVxuXHRyZXR1cm4gY3VyO1xufVxuXG5qUXVlcnkuZWFjaCgge1xuXHRwYXJlbnQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0cmV0dXJuIHBhcmVudCAmJiBwYXJlbnQubm9kZVR5cGUgIT09IDExID8gcGFyZW50IDogbnVsbDtcblx0fSxcblx0cGFyZW50czogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwYXJlbnROb2RlXCIgKTtcblx0fSxcblx0cGFyZW50c1VudGlsOiBmdW5jdGlvbiggZWxlbSwgX2ksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicGFyZW50Tm9kZVwiLCB1bnRpbCApO1xuXHR9LFxuXHRuZXh0OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZyggZWxlbSwgXCJuZXh0U2libGluZ1wiICk7XG5cdH0sXG5cdHByZXY6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5nKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XG5cdH0sXG5cdG5leHRBbGw6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiApO1xuXHR9LFxuXHRwcmV2QWxsOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XG5cdH0sXG5cdG5leHRVbnRpbDogZnVuY3Rpb24oIGVsZW0sIF9pLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIsIHVudGlsICk7XG5cdH0sXG5cdHByZXZVbnRpbDogZnVuY3Rpb24oIGVsZW0sIF9pLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiLCB1bnRpbCApO1xuXHR9LFxuXHRzaWJsaW5nczogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmdzKCAoIGVsZW0ucGFyZW50Tm9kZSB8fCB7fSApLmZpcnN0Q2hpbGQsIGVsZW0gKTtcblx0fSxcblx0Y2hpbGRyZW46IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5ncyggZWxlbS5maXJzdENoaWxkICk7XG5cdH0sXG5cdGNvbnRlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRpZiAoIGVsZW0uY29udGVudERvY3VtZW50ICE9IG51bGwgJiZcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErXG5cdFx0XHQvLyA8b2JqZWN0PiBlbGVtZW50cyB3aXRoIG5vIGBkYXRhYCBhdHRyaWJ1dGUgaGFzIGFuIG9iamVjdFxuXHRcdFx0Ly8gYGNvbnRlbnREb2N1bWVudGAgd2l0aCBhIGBudWxsYCBwcm90b3R5cGUuXG5cdFx0XHRnZXRQcm90byggZWxlbS5jb250ZW50RG9jdW1lbnQgKSApIHtcblxuXHRcdFx0cmV0dXJuIGVsZW0uY29udGVudERvY3VtZW50O1xuXHRcdH1cblxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5LCBpT1MgNyBvbmx5LCBBbmRyb2lkIEJyb3dzZXIgPD00LjMgb25seVxuXHRcdC8vIFRyZWF0IHRoZSB0ZW1wbGF0ZSBlbGVtZW50IGFzIGEgcmVndWxhciBvbmUgaW4gYnJvd3NlcnMgdGhhdFxuXHRcdC8vIGRvbid0IHN1cHBvcnQgaXQuXG5cdFx0aWYgKCBub2RlTmFtZSggZWxlbSwgXCJ0ZW1wbGF0ZVwiICkgKSB7XG5cdFx0XHRlbGVtID0gZWxlbS5jb250ZW50IHx8IGVsZW07XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGpRdWVyeS5tZXJnZSggW10sIGVsZW0uY2hpbGROb2RlcyApO1xuXHR9XG59LCBmdW5jdGlvbiggbmFtZSwgZm4gKSB7XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHVudGlsLCBzZWxlY3RvciApIHtcblx0XHR2YXIgbWF0Y2hlZCA9IGpRdWVyeS5tYXAoIHRoaXMsIGZuLCB1bnRpbCApO1xuXG5cdFx0aWYgKCBuYW1lLnNsaWNlKCAtNSApICE9PSBcIlVudGlsXCIgKSB7XG5cdFx0XHRzZWxlY3RvciA9IHVudGlsO1xuXHRcdH1cblxuXHRcdGlmICggc2VsZWN0b3IgJiYgdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0bWF0Y2hlZCA9IGpRdWVyeS5maWx0ZXIoIHNlbGVjdG9yLCBtYXRjaGVkICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLmxlbmd0aCA+IDEgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBkdXBsaWNhdGVzXG5cdFx0XHRpZiAoICFndWFyYW50ZWVkVW5pcXVlWyBuYW1lIF0gKSB7XG5cdFx0XHRcdGpRdWVyeS51bmlxdWVTb3J0KCBtYXRjaGVkICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJldmVyc2Ugb3JkZXIgZm9yIHBhcmVudHMqIGFuZCBwcmV2LWRlcml2YXRpdmVzXG5cdFx0XHRpZiAoIHJwYXJlbnRzcHJldi50ZXN0KCBuYW1lICkgKSB7XG5cdFx0XHRcdG1hdGNoZWQucmV2ZXJzZSgpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggbWF0Y2hlZCApO1xuXHR9O1xufSApO1xudmFyIHJub3RodG1sd2hpdGUgPSAoIC9bXlxceDIwXFx0XFxyXFxuXFxmXSsvZyApO1xuXG5cblxuLy8gQ29udmVydCBTdHJpbmctZm9ybWF0dGVkIG9wdGlvbnMgaW50byBPYmplY3QtZm9ybWF0dGVkIG9uZXNcbmZ1bmN0aW9uIGNyZWF0ZU9wdGlvbnMoIG9wdGlvbnMgKSB7XG5cdHZhciBvYmplY3QgPSB7fTtcblx0alF1ZXJ5LmVhY2goIG9wdGlvbnMubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXSwgZnVuY3Rpb24oIF8sIGZsYWcgKSB7XG5cdFx0b2JqZWN0WyBmbGFnIF0gPSB0cnVlO1xuXHR9ICk7XG5cdHJldHVybiBvYmplY3Q7XG59XG5cbi8qXG4gKiBDcmVhdGUgYSBjYWxsYmFjayBsaXN0IHVzaW5nIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyczpcbiAqXG4gKlx0b3B0aW9uczogYW4gb3B0aW9uYWwgbGlzdCBvZiBzcGFjZS1zZXBhcmF0ZWQgb3B0aW9ucyB0aGF0IHdpbGwgY2hhbmdlIGhvd1xuICpcdFx0XHR0aGUgY2FsbGJhY2sgbGlzdCBiZWhhdmVzIG9yIGEgbW9yZSB0cmFkaXRpb25hbCBvcHRpb24gb2JqZWN0XG4gKlxuICogQnkgZGVmYXVsdCBhIGNhbGxiYWNrIGxpc3Qgd2lsbCBhY3QgbGlrZSBhbiBldmVudCBjYWxsYmFjayBsaXN0IGFuZCBjYW4gYmVcbiAqIFwiZmlyZWRcIiBtdWx0aXBsZSB0aW1lcy5cbiAqXG4gKiBQb3NzaWJsZSBvcHRpb25zOlxuICpcbiAqXHRvbmNlOlx0XHRcdHdpbGwgZW5zdXJlIHRoZSBjYWxsYmFjayBsaXN0IGNhbiBvbmx5IGJlIGZpcmVkIG9uY2UgKGxpa2UgYSBEZWZlcnJlZClcbiAqXG4gKlx0bWVtb3J5Olx0XHRcdHdpbGwga2VlcCB0cmFjayBvZiBwcmV2aW91cyB2YWx1ZXMgYW5kIHdpbGwgY2FsbCBhbnkgY2FsbGJhY2sgYWRkZWRcbiAqXHRcdFx0XHRcdGFmdGVyIHRoZSBsaXN0IGhhcyBiZWVuIGZpcmVkIHJpZ2h0IGF3YXkgd2l0aCB0aGUgbGF0ZXN0IFwibWVtb3JpemVkXCJcbiAqXHRcdFx0XHRcdHZhbHVlcyAobGlrZSBhIERlZmVycmVkKVxuICpcbiAqXHR1bmlxdWU6XHRcdFx0d2lsbCBlbnN1cmUgYSBjYWxsYmFjayBjYW4gb25seSBiZSBhZGRlZCBvbmNlIChubyBkdXBsaWNhdGUgaW4gdGhlIGxpc3QpXG4gKlxuICpcdHN0b3BPbkZhbHNlOlx0aW50ZXJydXB0IGNhbGxpbmdzIHdoZW4gYSBjYWxsYmFjayByZXR1cm5zIGZhbHNlXG4gKlxuICovXG5qUXVlcnkuQ2FsbGJhY2tzID0gZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cblx0Ly8gQ29udmVydCBvcHRpb25zIGZyb20gU3RyaW5nLWZvcm1hdHRlZCB0byBPYmplY3QtZm9ybWF0dGVkIGlmIG5lZWRlZFxuXHQvLyAod2UgY2hlY2sgaW4gY2FjaGUgZmlyc3QpXG5cdG9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0Y3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIDpcblx0XHRqUXVlcnkuZXh0ZW5kKCB7fSwgb3B0aW9ucyApO1xuXG5cdHZhciAvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCBpcyBjdXJyZW50bHkgZmlyaW5nXG5cdFx0ZmlyaW5nLFxuXG5cdFx0Ly8gTGFzdCBmaXJlIHZhbHVlIGZvciBub24tZm9yZ2V0dGFibGUgbGlzdHNcblx0XHRtZW1vcnksXG5cblx0XHQvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCB3YXMgYWxyZWFkeSBmaXJlZFxuXHRcdGZpcmVkLFxuXG5cdFx0Ly8gRmxhZyB0byBwcmV2ZW50IGZpcmluZ1xuXHRcdGxvY2tlZCxcblxuXHRcdC8vIEFjdHVhbCBjYWxsYmFjayBsaXN0XG5cdFx0bGlzdCA9IFtdLFxuXG5cdFx0Ly8gUXVldWUgb2YgZXhlY3V0aW9uIGRhdGEgZm9yIHJlcGVhdGFibGUgbGlzdHNcblx0XHRxdWV1ZSA9IFtdLFxuXG5cdFx0Ly8gSW5kZXggb2YgY3VycmVudGx5IGZpcmluZyBjYWxsYmFjayAobW9kaWZpZWQgYnkgYWRkL3JlbW92ZSBhcyBuZWVkZWQpXG5cdFx0ZmlyaW5nSW5kZXggPSAtMSxcblxuXHRcdC8vIEZpcmUgY2FsbGJhY2tzXG5cdFx0ZmlyZSA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBFbmZvcmNlIHNpbmdsZS1maXJpbmdcblx0XHRcdGxvY2tlZCA9IGxvY2tlZCB8fCBvcHRpb25zLm9uY2U7XG5cblx0XHRcdC8vIEV4ZWN1dGUgY2FsbGJhY2tzIGZvciBhbGwgcGVuZGluZyBleGVjdXRpb25zLFxuXHRcdFx0Ly8gcmVzcGVjdGluZyBmaXJpbmdJbmRleCBvdmVycmlkZXMgYW5kIHJ1bnRpbWUgY2hhbmdlc1xuXHRcdFx0ZmlyZWQgPSBmaXJpbmcgPSB0cnVlO1xuXHRcdFx0Zm9yICggOyBxdWV1ZS5sZW5ndGg7IGZpcmluZ0luZGV4ID0gLTEgKSB7XG5cdFx0XHRcdG1lbW9yeSA9IHF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRcdHdoaWxlICggKytmaXJpbmdJbmRleCA8IGxpc3QubGVuZ3RoICkge1xuXG5cdFx0XHRcdFx0Ly8gUnVuIGNhbGxiYWNrIGFuZCBjaGVjayBmb3IgZWFybHkgdGVybWluYXRpb25cblx0XHRcdFx0XHRpZiAoIGxpc3RbIGZpcmluZ0luZGV4IF0uYXBwbHkoIG1lbW9yeVsgMCBdLCBtZW1vcnlbIDEgXSApID09PSBmYWxzZSAmJlxuXHRcdFx0XHRcdFx0b3B0aW9ucy5zdG9wT25GYWxzZSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSnVtcCB0byBlbmQgYW5kIGZvcmdldCB0aGUgZGF0YSBzbyAuYWRkIGRvZXNuJ3QgcmUtZmlyZVxuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aDtcblx0XHRcdFx0XHRcdG1lbW9yeSA9IGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3JnZXQgdGhlIGRhdGEgaWYgd2UncmUgZG9uZSB3aXRoIGl0XG5cdFx0XHRpZiAoICFvcHRpb25zLm1lbW9yeSApIHtcblx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdGZpcmluZyA9IGZhbHNlO1xuXG5cdFx0XHQvLyBDbGVhbiB1cCBpZiB3ZSdyZSBkb25lIGZpcmluZyBmb3IgZ29vZFxuXHRcdFx0aWYgKCBsb2NrZWQgKSB7XG5cblx0XHRcdFx0Ly8gS2VlcCBhbiBlbXB0eSBsaXN0IGlmIHdlIGhhdmUgZGF0YSBmb3IgZnV0dXJlIGFkZCBjYWxsc1xuXHRcdFx0XHRpZiAoIG1lbW9yeSApIHtcblx0XHRcdFx0XHRsaXN0ID0gW107XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCB0aGlzIG9iamVjdCBpcyBzcGVudFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGxpc3QgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIEFjdHVhbCBDYWxsYmFja3Mgb2JqZWN0XG5cdFx0c2VsZiA9IHtcblxuXHRcdFx0Ly8gQWRkIGEgY2FsbGJhY2sgb3IgYSBjb2xsZWN0aW9uIG9mIGNhbGxiYWNrcyB0byB0aGUgbGlzdFxuXHRcdFx0YWRkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXG5cdFx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBtZW1vcnkgZnJvbSBhIHBhc3QgcnVuLCB3ZSBzaG91bGQgZmlyZSBhZnRlciBhZGRpbmdcblx0XHRcdFx0XHRpZiAoIG1lbW9yeSAmJiAhZmlyaW5nICkge1xuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aCAtIDE7XG5cdFx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBtZW1vcnkgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQoIGZ1bmN0aW9uIGFkZCggYXJncyApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCBhcmdzLCBmdW5jdGlvbiggXywgYXJnICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIGlzRnVuY3Rpb24oIGFyZyApICkge1xuXHRcdFx0XHRcdFx0XHRcdGlmICggIW9wdGlvbnMudW5pcXVlIHx8ICFzZWxmLmhhcyggYXJnICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRsaXN0LnB1c2goIGFyZyApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggYXJnICYmIGFyZy5sZW5ndGggJiYgdG9UeXBlKCBhcmcgKSAhPT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIEluc3BlY3QgcmVjdXJzaXZlbHlcblx0XHRcdFx0XHRcdFx0XHRhZGQoIGFyZyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0fSApKCBhcmd1bWVudHMgKTtcblxuXHRcdFx0XHRcdGlmICggbWVtb3J5ICYmICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUmVtb3ZlIGEgY2FsbGJhY2sgZnJvbSB0aGUgbGlzdFxuXHRcdFx0cmVtb3ZlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmVhY2goIGFyZ3VtZW50cywgZnVuY3Rpb24oIF8sIGFyZyApIHtcblx0XHRcdFx0XHR2YXIgaW5kZXg7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGluZGV4ID0galF1ZXJ5LmluQXJyYXkoIGFyZywgbGlzdCwgaW5kZXggKSApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRsaXN0LnNwbGljZSggaW5kZXgsIDEgKTtcblxuXHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGZpcmluZyBpbmRleGVzXG5cdFx0XHRcdFx0XHRpZiAoIGluZGV4IDw9IGZpcmluZ0luZGV4ICkge1xuXHRcdFx0XHRcdFx0XHRmaXJpbmdJbmRleC0tO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIENoZWNrIGlmIGEgZ2l2ZW4gY2FsbGJhY2sgaXMgaW4gdGhlIGxpc3QuXG5cdFx0XHQvLyBJZiBubyBhcmd1bWVudCBpcyBnaXZlbiwgcmV0dXJuIHdoZXRoZXIgb3Igbm90IGxpc3QgaGFzIGNhbGxiYWNrcyBhdHRhY2hlZC5cblx0XHRcdGhhczogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRyZXR1cm4gZm4gP1xuXHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBmbiwgbGlzdCApID4gLTEgOlxuXHRcdFx0XHRcdGxpc3QubGVuZ3RoID4gMDtcblx0XHRcdH0sXG5cblx0XHRcdC8vIFJlbW92ZSBhbGwgY2FsbGJhY2tzIGZyb20gdGhlIGxpc3Rcblx0XHRcdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXHRcdFx0XHRcdGxpc3QgPSBbXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIERpc2FibGUgLmZpcmUgYW5kIC5hZGRcblx0XHRcdC8vIEFib3J0IGFueSBjdXJyZW50L3BlbmRpbmcgZXhlY3V0aW9uc1xuXHRcdFx0Ly8gQ2xlYXIgYWxsIGNhbGxiYWNrcyBhbmQgdmFsdWVzXG5cdFx0XHRkaXNhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0bG9ja2VkID0gcXVldWUgPSBbXTtcblx0XHRcdFx0bGlzdCA9IG1lbW9yeSA9IFwiXCI7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdGRpc2FibGVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICFsaXN0O1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZVxuXHRcdFx0Ly8gQWxzbyBkaXNhYmxlIC5hZGQgdW5sZXNzIHdlIGhhdmUgbWVtb3J5IChzaW5jZSBpdCB3b3VsZCBoYXZlIG5vIGVmZmVjdClcblx0XHRcdC8vIEFib3J0IGFueSBwZW5kaW5nIGV4ZWN1dGlvbnNcblx0XHRcdGxvY2s6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsb2NrZWQgPSBxdWV1ZSA9IFtdO1xuXHRcdFx0XHRpZiAoICFtZW1vcnkgJiYgIWZpcmluZyApIHtcblx0XHRcdFx0XHRsaXN0ID0gbWVtb3J5ID0gXCJcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cdFx0XHRsb2NrZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gISFsb2NrZWQ7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBDYWxsIGFsbCBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgYXJndW1lbnRzXG5cdFx0XHRmaXJlV2l0aDogZnVuY3Rpb24oIGNvbnRleHQsIGFyZ3MgKSB7XG5cdFx0XHRcdGlmICggIWxvY2tlZCApIHtcblx0XHRcdFx0XHRhcmdzID0gYXJncyB8fCBbXTtcblx0XHRcdFx0XHRhcmdzID0gWyBjb250ZXh0LCBhcmdzLnNsaWNlID8gYXJncy5zbGljZSgpIDogYXJncyBdO1xuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGFyZ3MgKTtcblx0XHRcdFx0XHRpZiAoICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2FsbCBhbGwgdGhlIGNhbGxiYWNrcyB3aXRoIHRoZSBnaXZlbiBhcmd1bWVudHNcblx0XHRcdGZpcmU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzZWxmLmZpcmVXaXRoKCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBUbyBrbm93IGlmIHRoZSBjYWxsYmFja3MgaGF2ZSBhbHJlYWR5IGJlZW4gY2FsbGVkIGF0IGxlYXN0IG9uY2Vcblx0XHRcdGZpcmVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICEhZmlyZWQ7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRyZXR1cm4gc2VsZjtcbn07XG5cblxuZnVuY3Rpb24gSWRlbnRpdHkoIHYgKSB7XG5cdHJldHVybiB2O1xufVxuZnVuY3Rpb24gVGhyb3dlciggZXggKSB7XG5cdHRocm93IGV4O1xufVxuXG5mdW5jdGlvbiBhZG9wdFZhbHVlKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0LCBub1ZhbHVlICkge1xuXHR2YXIgbWV0aG9kO1xuXG5cdHRyeSB7XG5cblx0XHQvLyBDaGVjayBmb3IgcHJvbWlzZSBhc3BlY3QgZmlyc3QgdG8gcHJpdmlsZWdlIHN5bmNocm9ub3VzIGJlaGF2aW9yXG5cdFx0aWYgKCB2YWx1ZSAmJiBpc0Z1bmN0aW9uKCAoIG1ldGhvZCA9IHZhbHVlLnByb21pc2UgKSApICkge1xuXHRcdFx0bWV0aG9kLmNhbGwoIHZhbHVlICkuZG9uZSggcmVzb2x2ZSApLmZhaWwoIHJlamVjdCApO1xuXG5cdFx0Ly8gT3RoZXIgdGhlbmFibGVzXG5cdFx0fSBlbHNlIGlmICggdmFsdWUgJiYgaXNGdW5jdGlvbiggKCBtZXRob2QgPSB2YWx1ZS50aGVuICkgKSApIHtcblx0XHRcdG1ldGhvZC5jYWxsKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0ICk7XG5cblx0XHQvLyBPdGhlciBub24tdGhlbmFibGVzXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gQ29udHJvbCBgcmVzb2x2ZWAgYXJndW1lbnRzIGJ5IGxldHRpbmcgQXJyYXkjc2xpY2UgY2FzdCBib29sZWFuIGBub1ZhbHVlYCB0byBpbnRlZ2VyOlxuXHRcdFx0Ly8gKiBmYWxzZTogWyB2YWx1ZSBdLnNsaWNlKCAwICkgPT4gcmVzb2x2ZSggdmFsdWUgKVxuXHRcdFx0Ly8gKiB0cnVlOiBbIHZhbHVlIF0uc2xpY2UoIDEgKSA9PiByZXNvbHZlKClcblx0XHRcdHJlc29sdmUuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdLnNsaWNlKCBub1ZhbHVlICkgKTtcblx0XHR9XG5cblx0Ly8gRm9yIFByb21pc2VzL0ErLCBjb252ZXJ0IGV4Y2VwdGlvbnMgaW50byByZWplY3Rpb25zXG5cdC8vIFNpbmNlIGpRdWVyeS53aGVuIGRvZXNuJ3QgdW53cmFwIHRoZW5hYmxlcywgd2UgY2FuIHNraXAgdGhlIGV4dHJhIGNoZWNrcyBhcHBlYXJpbmcgaW5cblx0Ly8gRGVmZXJyZWQjdGhlbiB0byBjb25kaXRpb25hbGx5IHN1cHByZXNzIHJlamVjdGlvbi5cblx0fSBjYXRjaCAoIHZhbHVlICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgb25seVxuXHRcdC8vIFN0cmljdCBtb2RlIGZ1bmN0aW9ucyBpbnZva2VkIHdpdGhvdXQgLmNhbGwvLmFwcGx5IGdldCBnbG9iYWwtb2JqZWN0IGNvbnRleHRcblx0XHRyZWplY3QuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdICk7XG5cdH1cbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdERlZmVycmVkOiBmdW5jdGlvbiggZnVuYyApIHtcblx0XHR2YXIgdHVwbGVzID0gW1xuXG5cdFx0XHRcdC8vIGFjdGlvbiwgYWRkIGxpc3RlbmVyLCBjYWxsYmFja3MsXG5cdFx0XHRcdC8vIC4uLiAudGhlbiBoYW5kbGVycywgYXJndW1lbnQgaW5kZXgsIFtmaW5hbCBzdGF0ZV1cblx0XHRcdFx0WyBcIm5vdGlmeVwiLCBcInByb2dyZXNzXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwibWVtb3J5XCIgKSxcblx0XHRcdFx0XHRqUXVlcnkuQ2FsbGJhY2tzKCBcIm1lbW9yeVwiICksIDIgXSxcblx0XHRcdFx0WyBcInJlc29sdmVcIiwgXCJkb25lXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLFxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLCAwLCBcInJlc29sdmVkXCIgXSxcblx0XHRcdFx0WyBcInJlamVjdFwiLCBcImZhaWxcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cdFx0XHRcdFx0alF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksIDEsIFwicmVqZWN0ZWRcIiBdXG5cdFx0XHRdLFxuXHRcdFx0c3RhdGUgPSBcInBlbmRpbmdcIixcblx0XHRcdHByb21pc2UgPSB7XG5cdFx0XHRcdHN0YXRlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gc3RhdGU7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGFsd2F5czogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQuZG9uZSggYXJndW1lbnRzICkuZmFpbCggYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdFwiY2F0Y2hcIjogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRcdHJldHVybiBwcm9taXNlLnRoZW4oIG51bGwsIGZuICk7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gS2VlcCBwaXBlIGZvciBiYWNrLWNvbXBhdFxuXHRcdFx0XHRwaXBlOiBmdW5jdGlvbiggLyogZm5Eb25lLCBmbkZhaWwsIGZuUHJvZ3Jlc3MgKi8gKSB7XG5cdFx0XHRcdFx0dmFyIGZucyA9IGFyZ3VtZW50cztcblxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBfaSwgdHVwbGUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gTWFwIHR1cGxlcyAocHJvZ3Jlc3MsIGRvbmUsIGZhaWwpIHRvIGFyZ3VtZW50cyAoZG9uZSwgZmFpbCwgcHJvZ3Jlc3MpXG5cdFx0XHRcdFx0XHRcdHZhciBmbiA9IGlzRnVuY3Rpb24oIGZuc1sgdHVwbGVbIDQgXSBdICkgJiYgZm5zWyB0dXBsZVsgNCBdIF07XG5cblx0XHRcdFx0XHRcdFx0Ly8gZGVmZXJyZWQucHJvZ3Jlc3MoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIubm90aWZ5IH0pXG5cdFx0XHRcdFx0XHRcdC8vIGRlZmVycmVkLmRvbmUoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIucmVzb2x2ZSB9KVxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5mYWlsKGZ1bmN0aW9uKCkgeyBiaW5kIHRvIG5ld0RlZmVyIG9yIG5ld0RlZmVyLnJlamVjdCB9KVxuXHRcdFx0XHRcdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDEgXSBdKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHR2YXIgcmV0dXJuZWQgPSBmbiAmJiBmbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKCByZXR1cm5lZCAmJiBpc0Z1bmN0aW9uKCByZXR1cm5lZC5wcm9taXNlICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZC5wcm9taXNlKClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LnByb2dyZXNzKCBuZXdEZWZlci5ub3RpZnkgKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQuZG9uZSggbmV3RGVmZXIucmVzb2x2ZSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5mYWlsKCBuZXdEZWZlci5yZWplY3QgKTtcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXJbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR0aGlzLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRmbiA/IFsgcmV0dXJuZWQgXSA6IGFyZ3VtZW50c1xuXHRcdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdGZucyA9IG51bGw7XG5cdFx0XHRcdFx0fSApLnByb21pc2UoKTtcblx0XHRcdFx0fSxcblx0XHRcdFx0dGhlbjogZnVuY3Rpb24oIG9uRnVsZmlsbGVkLCBvblJlamVjdGVkLCBvblByb2dyZXNzICkge1xuXHRcdFx0XHRcdHZhciBtYXhEZXB0aCA9IDA7XG5cdFx0XHRcdFx0ZnVuY3Rpb24gcmVzb2x2ZSggZGVwdGgsIGRlZmVycmVkLCBoYW5kbGVyLCBzcGVjaWFsICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHR2YXIgdGhhdCA9IHRoaXMsXG5cdFx0XHRcdFx0XHRcdFx0YXJncyA9IGFyZ3VtZW50cyxcblx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93ID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR2YXIgcmV0dXJuZWQsIHRoZW47XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy4zXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01OVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSWdub3JlIGRvdWJsZS1yZXNvbHV0aW9uIGF0dGVtcHRzXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGRlcHRoIDwgbWF4RGVwdGggKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQgPSBoYW5kbGVyLmFwcGx5KCB0aGF0LCBhcmdzICk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjFcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTQ4XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHJldHVybmVkID09PSBkZWZlcnJlZC5wcm9taXNlKCkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoIFwiVGhlbmFibGUgc2VsZi1yZXNvbHV0aW9uXCIgKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbnMgMi4zLjMuMSwgMy41XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01NFxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNzVcblx0XHRcdFx0XHRcdFx0XHRcdC8vIFJldHJpZXZlIGB0aGVuYCBvbmx5IG9uY2Vcblx0XHRcdFx0XHRcdFx0XHRcdHRoZW4gPSByZXR1cm5lZCAmJlxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNjRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBjaGVjayBvYmplY3RzIGFuZCBmdW5jdGlvbnMgZm9yIHRoZW5hYmlsaXR5XG5cdFx0XHRcdFx0XHRcdFx0XHRcdCggdHlwZW9mIHJldHVybmVkID09PSBcIm9iamVjdFwiIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZW9mIHJldHVybmVkID09PSBcImZ1bmN0aW9uXCIgKSAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZC50aGVuO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBIYW5kbGUgYSByZXR1cm5lZCB0aGVuYWJsZVxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCB0aGVuICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3BlY2lhbCBwcm9jZXNzb3JzIChub3RpZnkpIGp1c3Qgd2FpdCBmb3IgcmVzb2x1dGlvblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHNwZWNpYWwgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhlbi5jYWxsKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIFRocm93ZXIsIHNwZWNpYWwgKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gTm9ybWFsIHByb2Nlc3NvcnMgKHJlc29sdmUpIGFsc28gaG9vayBpbnRvIHByb2dyZXNzXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyAuLi5hbmQgZGlzcmVnYXJkIG9sZGVyIHJlc29sdXRpb24gdmFsdWVzXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bWF4RGVwdGgrKztcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoZW4uY2FsbChcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBJZGVudGl0eSwgc3BlY2lhbCApLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBUaHJvd2VyLCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIEhhbmRsZSBhbGwgb3RoZXIgcmV0dXJuZWQgdmFsdWVzXG5cdFx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIE9ubHkgc3Vic3RpdHV0ZSBoYW5kbGVycyBwYXNzIG9uIGNvbnRleHRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggaGFuZGxlciAhPT0gSWRlbnRpdHkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhhdCA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRhcmdzID0gWyByZXR1cm5lZCBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gUHJvY2VzcyB0aGUgdmFsdWUocylcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gRGVmYXVsdCBwcm9jZXNzIGlzIHJlc29sdmVcblx0XHRcdFx0XHRcdFx0XHRcdFx0KCBzcGVjaWFsIHx8IGRlZmVycmVkLnJlc29sdmVXaXRoICkoIHRoYXQsIGFyZ3MgKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9LFxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBub3JtYWwgcHJvY2Vzc29ycyAocmVzb2x2ZSkgY2F0Y2ggYW5kIHJlamVjdCBleGNlcHRpb25zXG5cdFx0XHRcdFx0XHRcdFx0cHJvY2VzcyA9IHNwZWNpYWwgP1xuXHRcdFx0XHRcdFx0XHRcdFx0bWlnaHRUaHJvdyA6XG5cdFx0XHRcdFx0XHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93KCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rKCBlLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzLnN0YWNrVHJhY2UgKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuNC4xXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNjFcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBJZ25vcmUgcG9zdC1yZXNvbHV0aW9uIGV4Y2VwdGlvbnNcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGRlcHRoICsgMSA+PSBtYXhEZXB0aCApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBzdWJzdGl0dXRlIGhhbmRsZXJzIHBhc3Mgb24gY29udGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGhhbmRsZXIgIT09IFRocm93ZXIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoYXQgPSB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGFyZ3MgPSBbIGUgXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0V2l0aCggdGhhdCwgYXJncyApO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0fTtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuMVxuXHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01N1xuXHRcdFx0XHRcdFx0XHQvLyBSZS1yZXNvbHZlIHByb21pc2VzIGltbWVkaWF0ZWx5IHRvIGRvZGdlIGZhbHNlIHJlamVjdGlvbiBmcm9tXG5cdFx0XHRcdFx0XHRcdC8vIHN1YnNlcXVlbnQgZXJyb3JzXG5cdFx0XHRcdFx0XHRcdGlmICggZGVwdGggKSB7XG5cdFx0XHRcdFx0XHRcdFx0cHJvY2VzcygpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gQ2FsbCBhbiBvcHRpb25hbCBob29rIHRvIHJlY29yZCB0aGUgc3RhY2ssIGluIGNhc2Ugb2YgZXhjZXB0aW9uXG5cdFx0XHRcdFx0XHRcdFx0Ly8gc2luY2UgaXQncyBvdGhlcndpc2UgbG9zdCB3aGVuIGV4ZWN1dGlvbiBnb2VzIGFzeW5jXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuRGVmZXJyZWQuZ2V0U3RhY2tIb29rICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0cHJvY2Vzcy5zdGFja1RyYWNlID0galF1ZXJ5LkRlZmVycmVkLmdldFN0YWNrSG9vaygpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dCggcHJvY2VzcyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcblxuXHRcdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfaGFuZGxlcnMuYWRkKCAuLi4gKVxuXHRcdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDMgXS5hZGQoXG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoXG5cdFx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlcixcblx0XHRcdFx0XHRcdFx0XHRpc0Z1bmN0aW9uKCBvblByb2dyZXNzICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25Qcm9ncmVzcyA6XG5cdFx0XHRcdFx0XHRcdFx0XHRJZGVudGl0eSxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlci5ub3RpZnlXaXRoXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCk7XG5cblx0XHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDEgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uRnVsZmlsbGVkICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25GdWxmaWxsZWQgOlxuXHRcdFx0XHRcdFx0XHRcdFx0SWRlbnRpdHlcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuYWRkKCAuLi4gKVxuXHRcdFx0XHRcdFx0dHVwbGVzWyAyIF1bIDMgXS5hZGQoXG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoXG5cdFx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlcixcblx0XHRcdFx0XHRcdFx0XHRpc0Z1bmN0aW9uKCBvblJlamVjdGVkICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25SZWplY3RlZCA6XG5cdFx0XHRcdFx0XHRcdFx0XHRUaHJvd2VyXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fSApLnByb21pc2UoKTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBHZXQgYSBwcm9taXNlIGZvciB0aGlzIGRlZmVycmVkXG5cdFx0XHRcdC8vIElmIG9iaiBpcyBwcm92aWRlZCwgdGhlIHByb21pc2UgYXNwZWN0IGlzIGFkZGVkIHRvIHRoZSBvYmplY3Rcblx0XHRcdFx0cHJvbWlzZTogZnVuY3Rpb24oIG9iaiApIHtcblx0XHRcdFx0XHRyZXR1cm4gb2JqICE9IG51bGwgPyBqUXVlcnkuZXh0ZW5kKCBvYmosIHByb21pc2UgKSA6IHByb21pc2U7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWZlcnJlZCA9IHt9O1xuXG5cdFx0Ly8gQWRkIGxpc3Qtc3BlY2lmaWMgbWV0aG9kc1xuXHRcdGpRdWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBpLCB0dXBsZSApIHtcblx0XHRcdHZhciBsaXN0ID0gdHVwbGVbIDIgXSxcblx0XHRcdFx0c3RhdGVTdHJpbmcgPSB0dXBsZVsgNSBdO1xuXG5cdFx0XHQvLyBwcm9taXNlLnByb2dyZXNzID0gbGlzdC5hZGRcblx0XHRcdC8vIHByb21pc2UuZG9uZSA9IGxpc3QuYWRkXG5cdFx0XHQvLyBwcm9taXNlLmZhaWwgPSBsaXN0LmFkZFxuXHRcdFx0cHJvbWlzZVsgdHVwbGVbIDEgXSBdID0gbGlzdC5hZGQ7XG5cblx0XHRcdC8vIEhhbmRsZSBzdGF0ZVxuXHRcdFx0aWYgKCBzdGF0ZVN0cmluZyApIHtcblx0XHRcdFx0bGlzdC5hZGQoXG5cdFx0XHRcdFx0ZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0XHRcdC8vIHN0YXRlID0gXCJyZXNvbHZlZFwiIChpLmUuLCBmdWxmaWxsZWQpXG5cdFx0XHRcdFx0XHQvLyBzdGF0ZSA9IFwicmVqZWN0ZWRcIlxuXHRcdFx0XHRcdFx0c3RhdGUgPSBzdGF0ZVN0cmluZztcblx0XHRcdFx0XHR9LFxuXG5cdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfY2FsbGJhY2tzLmRpc2FibGVcblx0XHRcdFx0XHQvLyBmdWxmaWxsZWRfY2FsbGJhY2tzLmRpc2FibGVcblx0XHRcdFx0XHR0dXBsZXNbIDMgLSBpIF1bIDIgXS5kaXNhYmxlLFxuXG5cdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuZGlzYWJsZVxuXHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5kaXNhYmxlXG5cdFx0XHRcdFx0dHVwbGVzWyAzIC0gaSBdWyAzIF0uZGlzYWJsZSxcblxuXHRcdFx0XHRcdC8vIHByb2dyZXNzX2NhbGxiYWNrcy5sb2NrXG5cdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDIgXS5sb2NrLFxuXG5cdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfaGFuZGxlcnMubG9ja1xuXHRcdFx0XHRcdHR1cGxlc1sgMCBdWyAzIF0ubG9ja1xuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5maXJlXG5cdFx0XHQvLyBmdWxmaWxsZWRfaGFuZGxlcnMuZmlyZVxuXHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuZmlyZVxuXHRcdFx0bGlzdC5hZGQoIHR1cGxlWyAzIF0uZmlyZSApO1xuXG5cdFx0XHQvLyBkZWZlcnJlZC5ub3RpZnkgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQubm90aWZ5V2l0aCguLi4pIH1cblx0XHRcdC8vIGRlZmVycmVkLnJlc29sdmUgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQucmVzb2x2ZVdpdGgoLi4uKSB9XG5cdFx0XHQvLyBkZWZlcnJlZC5yZWplY3QgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQucmVqZWN0V2l0aCguLi4pIH1cblx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdIF0gPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdKCB0aGlzID09PSBkZWZlcnJlZCA/IHVuZGVmaW5lZCA6IHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH07XG5cblx0XHRcdC8vIGRlZmVycmVkLm5vdGlmeVdpdGggPSBsaXN0LmZpcmVXaXRoXG5cdFx0XHQvLyBkZWZlcnJlZC5yZXNvbHZlV2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdC8vIGRlZmVycmVkLnJlamVjdFdpdGggPSBsaXN0LmZpcmVXaXRoXG5cdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0gPSBsaXN0LmZpcmVXaXRoO1xuXHRcdH0gKTtcblxuXHRcdC8vIE1ha2UgdGhlIGRlZmVycmVkIGEgcHJvbWlzZVxuXHRcdHByb21pc2UucHJvbWlzZSggZGVmZXJyZWQgKTtcblxuXHRcdC8vIENhbGwgZ2l2ZW4gZnVuYyBpZiBhbnlcblx0XHRpZiAoIGZ1bmMgKSB7XG5cdFx0XHRmdW5jLmNhbGwoIGRlZmVycmVkLCBkZWZlcnJlZCApO1xuXHRcdH1cblxuXHRcdC8vIEFsbCBkb25lIVxuXHRcdHJldHVybiBkZWZlcnJlZDtcblx0fSxcblxuXHQvLyBEZWZlcnJlZCBoZWxwZXJcblx0d2hlbjogZnVuY3Rpb24oIHNpbmdsZVZhbHVlICkge1xuXHRcdHZhclxuXG5cdFx0XHQvLyBjb3VudCBvZiB1bmNvbXBsZXRlZCBzdWJvcmRpbmF0ZXNcblx0XHRcdHJlbWFpbmluZyA9IGFyZ3VtZW50cy5sZW5ndGgsXG5cblx0XHRcdC8vIGNvdW50IG9mIHVucHJvY2Vzc2VkIGFyZ3VtZW50c1xuXHRcdFx0aSA9IHJlbWFpbmluZyxcblxuXHRcdFx0Ly8gc3Vib3JkaW5hdGUgZnVsZmlsbG1lbnQgZGF0YVxuXHRcdFx0cmVzb2x2ZUNvbnRleHRzID0gQXJyYXkoIGkgKSxcblx0XHRcdHJlc29sdmVWYWx1ZXMgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSxcblxuXHRcdFx0Ly8gdGhlIHByaW1hcnkgRGVmZXJyZWRcblx0XHRcdHByaW1hcnkgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblxuXHRcdFx0Ly8gc3Vib3JkaW5hdGUgY2FsbGJhY2sgZmFjdG9yeVxuXHRcdFx0dXBkYXRlRnVuYyA9IGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJlc29sdmVDb250ZXh0c1sgaSBdID0gdGhpcztcblx0XHRcdFx0XHRyZXNvbHZlVmFsdWVzWyBpIF0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApIDogdmFsdWU7XG5cdFx0XHRcdFx0aWYgKCAhKCAtLXJlbWFpbmluZyApICkge1xuXHRcdFx0XHRcdFx0cHJpbWFyeS5yZXNvbHZlV2l0aCggcmVzb2x2ZUNvbnRleHRzLCByZXNvbHZlVmFsdWVzICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdFx0fTtcblxuXHRcdC8vIFNpbmdsZS0gYW5kIGVtcHR5IGFyZ3VtZW50cyBhcmUgYWRvcHRlZCBsaWtlIFByb21pc2UucmVzb2x2ZVxuXHRcdGlmICggcmVtYWluaW5nIDw9IDEgKSB7XG5cdFx0XHRhZG9wdFZhbHVlKCBzaW5nbGVWYWx1ZSwgcHJpbWFyeS5kb25lKCB1cGRhdGVGdW5jKCBpICkgKS5yZXNvbHZlLCBwcmltYXJ5LnJlamVjdCxcblx0XHRcdFx0IXJlbWFpbmluZyApO1xuXG5cdFx0XHQvLyBVc2UgLnRoZW4oKSB0byB1bndyYXAgc2Vjb25kYXJ5IHRoZW5hYmxlcyAoY2YuIGdoLTMwMDApXG5cdFx0XHRpZiAoIHByaW1hcnkuc3RhdGUoKSA9PT0gXCJwZW5kaW5nXCIgfHxcblx0XHRcdFx0aXNGdW5jdGlvbiggcmVzb2x2ZVZhbHVlc1sgaSBdICYmIHJlc29sdmVWYWx1ZXNbIGkgXS50aGVuICkgKSB7XG5cblx0XHRcdFx0cmV0dXJuIHByaW1hcnkudGhlbigpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIE11bHRpcGxlIGFyZ3VtZW50cyBhcmUgYWdncmVnYXRlZCBsaWtlIFByb21pc2UuYWxsIGFycmF5IGVsZW1lbnRzXG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRhZG9wdFZhbHVlKCByZXNvbHZlVmFsdWVzWyBpIF0sIHVwZGF0ZUZ1bmMoIGkgKSwgcHJpbWFyeS5yZWplY3QgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gcHJpbWFyeS5wcm9taXNlKCk7XG5cdH1cbn0gKTtcblxuXG4vLyBUaGVzZSB1c3VhbGx5IGluZGljYXRlIGEgcHJvZ3JhbW1lciBtaXN0YWtlIGR1cmluZyBkZXZlbG9wbWVudCxcbi8vIHdhcm4gYWJvdXQgdGhlbSBBU0FQIHJhdGhlciB0aGFuIHN3YWxsb3dpbmcgdGhlbSBieSBkZWZhdWx0LlxudmFyIHJlcnJvck5hbWVzID0gL14oRXZhbHxJbnRlcm5hbHxSYW5nZXxSZWZlcmVuY2V8U3ludGF4fFR5cGV8VVJJKUVycm9yJC87XG5cbmpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rID0gZnVuY3Rpb24oIGVycm9yLCBzdGFjayApIHtcblxuXHQvLyBTdXBwb3J0OiBJRSA4IC0gOSBvbmx5XG5cdC8vIENvbnNvbGUgZXhpc3RzIHdoZW4gZGV2IHRvb2xzIGFyZSBvcGVuLCB3aGljaCBjYW4gaGFwcGVuIGF0IGFueSB0aW1lXG5cdGlmICggd2luZG93LmNvbnNvbGUgJiYgd2luZG93LmNvbnNvbGUud2FybiAmJiBlcnJvciAmJiByZXJyb3JOYW1lcy50ZXN0KCBlcnJvci5uYW1lICkgKSB7XG5cdFx0d2luZG93LmNvbnNvbGUud2FybiggXCJqUXVlcnkuRGVmZXJyZWQgZXhjZXB0aW9uOiBcIiArIGVycm9yLm1lc3NhZ2UsIGVycm9yLnN0YWNrLCBzdGFjayApO1xuXHR9XG59O1xuXG5cblxuXG5qUXVlcnkucmVhZHlFeGNlcHRpb24gPSBmdW5jdGlvbiggZXJyb3IgKSB7XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHR0aHJvdyBlcnJvcjtcblx0fSApO1xufTtcblxuXG5cblxuLy8gVGhlIGRlZmVycmVkIHVzZWQgb24gRE9NIHJlYWR5XG52YXIgcmVhZHlMaXN0ID0galF1ZXJ5LkRlZmVycmVkKCk7XG5cbmpRdWVyeS5mbi5yZWFkeSA9IGZ1bmN0aW9uKCBmbiApIHtcblxuXHRyZWFkeUxpc3Rcblx0XHQudGhlbiggZm4gKVxuXG5cdFx0Ly8gV3JhcCBqUXVlcnkucmVhZHlFeGNlcHRpb24gaW4gYSBmdW5jdGlvbiBzbyB0aGF0IHRoZSBsb29rdXBcblx0XHQvLyBoYXBwZW5zIGF0IHRoZSB0aW1lIG9mIGVycm9yIGhhbmRsaW5nIGluc3RlYWQgb2YgY2FsbGJhY2tcblx0XHQvLyByZWdpc3RyYXRpb24uXG5cdFx0LmNhdGNoKCBmdW5jdGlvbiggZXJyb3IgKSB7XG5cdFx0XHRqUXVlcnkucmVhZHlFeGNlcHRpb24oIGVycm9yICk7XG5cdFx0fSApO1xuXG5cdHJldHVybiB0aGlzO1xufTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIElzIHRoZSBET00gcmVhZHkgdG8gYmUgdXNlZD8gU2V0IHRvIHRydWUgb25jZSBpdCBvY2N1cnMuXG5cdGlzUmVhZHk6IGZhbHNlLFxuXG5cdC8vIEEgY291bnRlciB0byB0cmFjayBob3cgbWFueSBpdGVtcyB0byB3YWl0IGZvciBiZWZvcmVcblx0Ly8gdGhlIHJlYWR5IGV2ZW50IGZpcmVzLiBTZWUgdHJhYy02NzgxXG5cdHJlYWR5V2FpdDogMSxcblxuXHQvLyBIYW5kbGUgd2hlbiB0aGUgRE9NIGlzIHJlYWR5XG5cdHJlYWR5OiBmdW5jdGlvbiggd2FpdCApIHtcblxuXHRcdC8vIEFib3J0IGlmIHRoZXJlIGFyZSBwZW5kaW5nIGhvbGRzIG9yIHdlJ3JlIGFscmVhZHkgcmVhZHlcblx0XHRpZiAoIHdhaXQgPT09IHRydWUgPyAtLWpRdWVyeS5yZWFkeVdhaXQgOiBqUXVlcnkuaXNSZWFkeSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBSZW1lbWJlciB0aGF0IHRoZSBET00gaXMgcmVhZHlcblx0XHRqUXVlcnkuaXNSZWFkeSA9IHRydWU7XG5cblx0XHQvLyBJZiBhIG5vcm1hbCBET00gUmVhZHkgZXZlbnQgZmlyZWQsIGRlY3JlbWVudCwgYW5kIHdhaXQgaWYgbmVlZCBiZVxuXHRcdGlmICggd2FpdCAhPT0gdHJ1ZSAmJiAtLWpRdWVyeS5yZWFkeVdhaXQgPiAwICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIElmIHRoZXJlIGFyZSBmdW5jdGlvbnMgYm91bmQsIHRvIGV4ZWN1dGVcblx0XHRyZWFkeUxpc3QucmVzb2x2ZVdpdGgoIGRvY3VtZW50LCBbIGpRdWVyeSBdICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LnJlYWR5LnRoZW4gPSByZWFkeUxpc3QudGhlbjtcblxuLy8gVGhlIHJlYWR5IGV2ZW50IGhhbmRsZXIgYW5kIHNlbGYgY2xlYW51cCBtZXRob2RcbmZ1bmN0aW9uIGNvbXBsZXRlZCgpIHtcblx0ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciggXCJET01Db250ZW50TG9hZGVkXCIsIGNvbXBsZXRlZCApO1xuXHR3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lciggXCJsb2FkXCIsIGNvbXBsZXRlZCApO1xuXHRqUXVlcnkucmVhZHkoKTtcbn1cblxuLy8gQ2F0Y2ggY2FzZXMgd2hlcmUgJChkb2N1bWVudCkucmVhZHkoKSBpcyBjYWxsZWRcbi8vIGFmdGVyIHRoZSBicm93c2VyIGV2ZW50IGhhcyBhbHJlYWR5IG9jY3VycmVkLlxuLy8gU3VwcG9ydDogSUUgPD05IC0gMTAgb25seVxuLy8gT2xkZXIgSUUgc29tZXRpbWVzIHNpZ25hbHMgXCJpbnRlcmFjdGl2ZVwiIHRvbyBzb29uXG5pZiAoIGRvY3VtZW50LnJlYWR5U3RhdGUgPT09IFwiY29tcGxldGVcIiB8fFxuXHQoIGRvY3VtZW50LnJlYWR5U3RhdGUgIT09IFwibG9hZGluZ1wiICYmICFkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZG9TY3JvbGwgKSApIHtcblxuXHQvLyBIYW5kbGUgaXQgYXN5bmNocm9ub3VzbHkgdG8gYWxsb3cgc2NyaXB0cyB0aGUgb3Bwb3J0dW5pdHkgdG8gZGVsYXkgcmVhZHlcblx0d2luZG93LnNldFRpbWVvdXQoIGpRdWVyeS5yZWFkeSApO1xuXG59IGVsc2Uge1xuXG5cdC8vIFVzZSB0aGUgaGFuZHkgZXZlbnQgY2FsbGJhY2tcblx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lciggXCJET01Db250ZW50TG9hZGVkXCIsIGNvbXBsZXRlZCApO1xuXG5cdC8vIEEgZmFsbGJhY2sgdG8gd2luZG93Lm9ubG9hZCwgdGhhdCB3aWxsIGFsd2F5cyB3b3JrXG5cdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCBcImxvYWRcIiwgY29tcGxldGVkICk7XG59XG5cblxuXG5cbi8vIE11bHRpZnVuY3Rpb25hbCBtZXRob2QgdG8gZ2V0IGFuZCBzZXQgdmFsdWVzIG9mIGEgY29sbGVjdGlvblxuLy8gVGhlIHZhbHVlL3MgY2FuIG9wdGlvbmFsbHkgYmUgZXhlY3V0ZWQgaWYgaXQncyBhIGZ1bmN0aW9uXG52YXIgYWNjZXNzID0gZnVuY3Rpb24oIGVsZW1zLCBmbiwga2V5LCB2YWx1ZSwgY2hhaW5hYmxlLCBlbXB0eUdldCwgcmF3ICkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bGVuID0gZWxlbXMubGVuZ3RoLFxuXHRcdGJ1bGsgPSBrZXkgPT0gbnVsbDtcblxuXHQvLyBTZXRzIG1hbnkgdmFsdWVzXG5cdGlmICggdG9UeXBlKCBrZXkgKSA9PT0gXCJvYmplY3RcIiApIHtcblx0XHRjaGFpbmFibGUgPSB0cnVlO1xuXHRcdGZvciAoIGkgaW4ga2V5ICkge1xuXHRcdFx0YWNjZXNzKCBlbGVtcywgZm4sIGksIGtleVsgaSBdLCB0cnVlLCBlbXB0eUdldCwgcmF3ICk7XG5cdFx0fVxuXG5cdC8vIFNldHMgb25lIHZhbHVlXG5cdH0gZWxzZSBpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0Y2hhaW5hYmxlID0gdHJ1ZTtcblxuXHRcdGlmICggIWlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyYXcgPSB0cnVlO1xuXHRcdH1cblxuXHRcdGlmICggYnVsayApIHtcblxuXHRcdFx0Ly8gQnVsayBvcGVyYXRpb25zIHJ1biBhZ2FpbnN0IHRoZSBlbnRpcmUgc2V0XG5cdFx0XHRpZiAoIHJhdyApIHtcblx0XHRcdFx0Zm4uY2FsbCggZWxlbXMsIHZhbHVlICk7XG5cdFx0XHRcdGZuID0gbnVsbDtcblxuXHRcdFx0Ly8gLi4uZXhjZXB0IHdoZW4gZXhlY3V0aW5nIGZ1bmN0aW9uIHZhbHVlc1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0YnVsayA9IGZuO1xuXHRcdFx0XHRmbiA9IGZ1bmN0aW9uKCBlbGVtLCBfa2V5LCB2YWx1ZSApIHtcblx0XHRcdFx0XHRyZXR1cm4gYnVsay5jYWxsKCBqUXVlcnkoIGVsZW0gKSwgdmFsdWUgKTtcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoIGZuICkge1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdGZuKFxuXHRcdFx0XHRcdGVsZW1zWyBpIF0sIGtleSwgcmF3ID9cblx0XHRcdFx0XHRcdHZhbHVlIDpcblx0XHRcdFx0XHRcdHZhbHVlLmNhbGwoIGVsZW1zWyBpIF0sIGksIGZuKCBlbGVtc1sgaSBdLCBrZXkgKSApXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0aWYgKCBjaGFpbmFibGUgKSB7XG5cdFx0cmV0dXJuIGVsZW1zO1xuXHR9XG5cblx0Ly8gR2V0c1xuXHRpZiAoIGJ1bGsgKSB7XG5cdFx0cmV0dXJuIGZuLmNhbGwoIGVsZW1zICk7XG5cdH1cblxuXHRyZXR1cm4gbGVuID8gZm4oIGVsZW1zWyAwIF0sIGtleSApIDogZW1wdHlHZXQ7XG59O1xuXG5cbi8vIE1hdGNoZXMgZGFzaGVkIHN0cmluZyBmb3IgY2FtZWxpemluZ1xudmFyIHJtc1ByZWZpeCA9IC9eLW1zLS8sXG5cdHJkYXNoQWxwaGEgPSAvLShbYS16XSkvZztcblxuLy8gVXNlZCBieSBjYW1lbENhc2UgYXMgY2FsbGJhY2sgdG8gcmVwbGFjZSgpXG5mdW5jdGlvbiBmY2FtZWxDYXNlKCBfYWxsLCBsZXR0ZXIgKSB7XG5cdHJldHVybiBsZXR0ZXIudG9VcHBlckNhc2UoKTtcbn1cblxuLy8gQ29udmVydCBkYXNoZWQgdG8gY2FtZWxDYXNlOyB1c2VkIGJ5IHRoZSBjc3MgYW5kIGRhdGEgbW9kdWxlc1xuLy8gU3VwcG9ydDogSUUgPD05IC0gMTEsIEVkZ2UgMTIgLSAxNVxuLy8gTWljcm9zb2Z0IGZvcmdvdCB0byBodW1wIHRoZWlyIHZlbmRvciBwcmVmaXggKHRyYWMtOTU3MilcbmZ1bmN0aW9uIGNhbWVsQ2FzZSggc3RyaW5nICkge1xuXHRyZXR1cm4gc3RyaW5nLnJlcGxhY2UoIHJtc1ByZWZpeCwgXCJtcy1cIiApLnJlcGxhY2UoIHJkYXNoQWxwaGEsIGZjYW1lbENhc2UgKTtcbn1cbnZhciBhY2NlcHREYXRhID0gZnVuY3Rpb24oIG93bmVyICkge1xuXG5cdC8vIEFjY2VwdHMgb25seTpcblx0Ly8gIC0gTm9kZVxuXHQvLyAgICAtIE5vZGUuRUxFTUVOVF9OT0RFXG5cdC8vICAgIC0gTm9kZS5ET0NVTUVOVF9OT0RFXG5cdC8vICAtIE9iamVjdFxuXHQvLyAgICAtIEFueVxuXHRyZXR1cm4gb3duZXIubm9kZVR5cGUgPT09IDEgfHwgb3duZXIubm9kZVR5cGUgPT09IDkgfHwgISggK293bmVyLm5vZGVUeXBlICk7XG59O1xuXG5cblxuXG5mdW5jdGlvbiBEYXRhKCkge1xuXHR0aGlzLmV4cGFuZG8gPSBqUXVlcnkuZXhwYW5kbyArIERhdGEudWlkKys7XG59XG5cbkRhdGEudWlkID0gMTtcblxuRGF0YS5wcm90b3R5cGUgPSB7XG5cblx0Y2FjaGU6IGZ1bmN0aW9uKCBvd25lciApIHtcblxuXHRcdC8vIENoZWNrIGlmIHRoZSBvd25lciBvYmplY3QgYWxyZWFkeSBoYXMgYSBjYWNoZVxuXHRcdHZhciB2YWx1ZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblxuXHRcdC8vIElmIG5vdCwgY3JlYXRlIG9uZVxuXHRcdGlmICggIXZhbHVlICkge1xuXHRcdFx0dmFsdWUgPSB7fTtcblxuXHRcdFx0Ly8gV2UgY2FuIGFjY2VwdCBkYXRhIGZvciBub24tZWxlbWVudCBub2RlcyBpbiBtb2Rlcm4gYnJvd3NlcnMsXG5cdFx0XHQvLyBidXQgd2Ugc2hvdWxkIG5vdCwgc2VlIHRyYWMtODMzNS5cblx0XHRcdC8vIEFsd2F5cyByZXR1cm4gYW4gZW1wdHkgb2JqZWN0LlxuXHRcdFx0aWYgKCBhY2NlcHREYXRhKCBvd25lciApICkge1xuXG5cdFx0XHRcdC8vIElmIGl0IGlzIGEgbm9kZSB1bmxpa2VseSB0byBiZSBzdHJpbmdpZnktZWQgb3IgbG9vcGVkIG92ZXJcblx0XHRcdFx0Ly8gdXNlIHBsYWluIGFzc2lnbm1lbnRcblx0XHRcdFx0aWYgKCBvd25lci5ub2RlVHlwZSApIHtcblx0XHRcdFx0XHRvd25lclsgdGhpcy5leHBhbmRvIF0gPSB2YWx1ZTtcblxuXHRcdFx0XHQvLyBPdGhlcndpc2Ugc2VjdXJlIGl0IGluIGEgbm9uLWVudW1lcmFibGUgcHJvcGVydHlcblx0XHRcdFx0Ly8gY29uZmlndXJhYmxlIG11c3QgYmUgdHJ1ZSB0byBhbGxvdyB0aGUgcHJvcGVydHkgdG8gYmVcblx0XHRcdFx0Ly8gZGVsZXRlZCB3aGVuIGRhdGEgaXMgcmVtb3ZlZFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggb3duZXIsIHRoaXMuZXhwYW5kbywge1xuXHRcdFx0XHRcdFx0dmFsdWU6IHZhbHVlLFxuXHRcdFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlXG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZhbHVlO1xuXHR9LFxuXHRzZXQ6IGZ1bmN0aW9uKCBvd25lciwgZGF0YSwgdmFsdWUgKSB7XG5cdFx0dmFyIHByb3AsXG5cdFx0XHRjYWNoZSA9IHRoaXMuY2FjaGUoIG93bmVyICk7XG5cblx0XHQvLyBIYW5kbGU6IFsgb3duZXIsIGtleSwgdmFsdWUgXSBhcmdzXG5cdFx0Ly8gQWx3YXlzIHVzZSBjYW1lbENhc2Uga2V5IChnaC0yMjU3KVxuXHRcdGlmICggdHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRjYWNoZVsgY2FtZWxDYXNlKCBkYXRhICkgXSA9IHZhbHVlO1xuXG5cdFx0Ly8gSGFuZGxlOiBbIG93bmVyLCB7IHByb3BlcnRpZXMgfSBdIGFyZ3Ncblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBDb3B5IHRoZSBwcm9wZXJ0aWVzIG9uZS1ieS1vbmUgdG8gdGhlIGNhY2hlIG9iamVjdFxuXHRcdFx0Zm9yICggcHJvcCBpbiBkYXRhICkge1xuXHRcdFx0XHRjYWNoZVsgY2FtZWxDYXNlKCBwcm9wICkgXSA9IGRhdGFbIHByb3AgXTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIGNhY2hlO1xuXHR9LFxuXHRnZXQ6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkge1xuXHRcdHJldHVybiBrZXkgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHR0aGlzLmNhY2hlKCBvd25lciApIDpcblxuXHRcdFx0Ly8gQWx3YXlzIHVzZSBjYW1lbENhc2Uga2V5IChnaC0yMjU3KVxuXHRcdFx0b3duZXJbIHRoaXMuZXhwYW5kbyBdICYmIG93bmVyWyB0aGlzLmV4cGFuZG8gXVsgY2FtZWxDYXNlKCBrZXkgKSBdO1xuXHR9LFxuXHRhY2Nlc3M6IGZ1bmN0aW9uKCBvd25lciwga2V5LCB2YWx1ZSApIHtcblxuXHRcdC8vIEluIGNhc2VzIHdoZXJlIGVpdGhlcjpcblx0XHQvL1xuXHRcdC8vICAgMS4gTm8ga2V5IHdhcyBzcGVjaWZpZWRcblx0XHQvLyAgIDIuIEEgc3RyaW5nIGtleSB3YXMgc3BlY2lmaWVkLCBidXQgbm8gdmFsdWUgcHJvdmlkZWRcblx0XHQvL1xuXHRcdC8vIFRha2UgdGhlIFwicmVhZFwiIHBhdGggYW5kIGFsbG93IHRoZSBnZXQgbWV0aG9kIHRvIGRldGVybWluZVxuXHRcdC8vIHdoaWNoIHZhbHVlIHRvIHJldHVybiwgcmVzcGVjdGl2ZWx5IGVpdGhlcjpcblx0XHQvL1xuXHRcdC8vICAgMS4gVGhlIGVudGlyZSBjYWNoZSBvYmplY3Rcblx0XHQvLyAgIDIuIFRoZSBkYXRhIHN0b3JlZCBhdCB0aGUga2V5XG5cdFx0Ly9cblx0XHRpZiAoIGtleSA9PT0gdW5kZWZpbmVkIHx8XG5cdFx0XHRcdCggKCBrZXkgJiYgdHlwZW9mIGtleSA9PT0gXCJzdHJpbmdcIiApICYmIHZhbHVlID09PSB1bmRlZmluZWQgKSApIHtcblxuXHRcdFx0cmV0dXJuIHRoaXMuZ2V0KCBvd25lciwga2V5ICk7XG5cdFx0fVxuXG5cdFx0Ly8gV2hlbiB0aGUga2V5IGlzIG5vdCBhIHN0cmluZywgb3IgYm90aCBhIGtleSBhbmQgdmFsdWVcblx0XHQvLyBhcmUgc3BlY2lmaWVkLCBzZXQgb3IgZXh0ZW5kIChleGlzdGluZyBvYmplY3RzKSB3aXRoIGVpdGhlcjpcblx0XHQvL1xuXHRcdC8vICAgMS4gQW4gb2JqZWN0IG9mIHByb3BlcnRpZXNcblx0XHQvLyAgIDIuIEEga2V5IGFuZCB2YWx1ZVxuXHRcdC8vXG5cdFx0dGhpcy5zZXQoIG93bmVyLCBrZXksIHZhbHVlICk7XG5cblx0XHQvLyBTaW5jZSB0aGUgXCJzZXRcIiBwYXRoIGNhbiBoYXZlIHR3byBwb3NzaWJsZSBlbnRyeSBwb2ludHNcblx0XHQvLyByZXR1cm4gdGhlIGV4cGVjdGVkIGRhdGEgYmFzZWQgb24gd2hpY2ggcGF0aCB3YXMgdGFrZW5bKl1cblx0XHRyZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCA/IHZhbHVlIDoga2V5O1xuXHR9LFxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkge1xuXHRcdHZhciBpLFxuXHRcdFx0Y2FjaGUgPSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cblx0XHRpZiAoIGNhY2hlID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCBrZXkgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0Ly8gU3VwcG9ydCBhcnJheSBvciBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nIG9mIGtleXNcblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSgga2V5ICkgKSB7XG5cblx0XHRcdFx0Ly8gSWYga2V5IGlzIGFuIGFycmF5IG9mIGtleXMuLi5cblx0XHRcdFx0Ly8gV2UgYWx3YXlzIHNldCBjYW1lbENhc2Uga2V5cywgc28gcmVtb3ZlIHRoYXQuXG5cdFx0XHRcdGtleSA9IGtleS5tYXAoIGNhbWVsQ2FzZSApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0a2V5ID0gY2FtZWxDYXNlKCBrZXkgKTtcblxuXHRcdFx0XHQvLyBJZiBhIGtleSB3aXRoIHRoZSBzcGFjZXMgZXhpc3RzLCB1c2UgaXQuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSwgY3JlYXRlIGFuIGFycmF5IGJ5IG1hdGNoaW5nIG5vbi13aGl0ZXNwYWNlXG5cdFx0XHRcdGtleSA9IGtleSBpbiBjYWNoZSA/XG5cdFx0XHRcdFx0WyBrZXkgXSA6XG5cdFx0XHRcdFx0KCBrZXkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRpID0ga2V5Lmxlbmd0aDtcblxuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGRlbGV0ZSBjYWNoZVsga2V5WyBpIF0gXTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBSZW1vdmUgdGhlIGV4cGFuZG8gaWYgdGhlcmUncyBubyBtb3JlIGRhdGFcblx0XHRpZiAoIGtleSA9PT0gdW5kZWZpbmVkIHx8IGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBjYWNoZSApICkge1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1XG5cdFx0XHQvLyBXZWJraXQgJiBCbGluayBwZXJmb3JtYW5jZSBzdWZmZXJzIHdoZW4gZGVsZXRpbmcgcHJvcGVydGllc1xuXHRcdFx0Ly8gZnJvbSBET00gbm9kZXMsIHNvIHNldCB0byB1bmRlZmluZWQgaW5zdGVhZFxuXHRcdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9Mzc4NjA3IChidWcgcmVzdHJpY3RlZClcblx0XHRcdGlmICggb3duZXIubm9kZVR5cGUgKSB7XG5cdFx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSA9IHVuZGVmaW5lZDtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlbGV0ZSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXHRoYXNEYXRhOiBmdW5jdGlvbiggb3duZXIgKSB7XG5cdFx0dmFyIGNhY2hlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXHRcdHJldHVybiBjYWNoZSAhPT0gdW5kZWZpbmVkICYmICFqUXVlcnkuaXNFbXB0eU9iamVjdCggY2FjaGUgKTtcblx0fVxufTtcbnZhciBkYXRhUHJpdiA9IG5ldyBEYXRhKCk7XG5cbnZhciBkYXRhVXNlciA9IG5ldyBEYXRhKCk7XG5cblxuXG4vL1x0SW1wbGVtZW50YXRpb24gU3VtbWFyeVxuLy9cbi8vXHQxLiBFbmZvcmNlIEFQSSBzdXJmYWNlIGFuZCBzZW1hbnRpYyBjb21wYXRpYmlsaXR5IHdpdGggMS45LnggYnJhbmNoXG4vL1x0Mi4gSW1wcm92ZSB0aGUgbW9kdWxlJ3MgbWFpbnRhaW5hYmlsaXR5IGJ5IHJlZHVjaW5nIHRoZSBzdG9yYWdlXG4vL1x0XHRwYXRocyB0byBhIHNpbmdsZSBtZWNoYW5pc20uXG4vL1x0My4gVXNlIHRoZSBzYW1lIHNpbmdsZSBtZWNoYW5pc20gdG8gc3VwcG9ydCBcInByaXZhdGVcIiBhbmQgXCJ1c2VyXCIgZGF0YS5cbi8vXHQ0LiBfTmV2ZXJfIGV4cG9zZSBcInByaXZhdGVcIiBkYXRhIHRvIHVzZXIgY29kZSAoVE9ETzogRHJvcCBfZGF0YSwgX3JlbW92ZURhdGEpXG4vL1x0NS4gQXZvaWQgZXhwb3NpbmcgaW1wbGVtZW50YXRpb24gZGV0YWlscyBvbiB1c2VyIG9iamVjdHMgKGVnLiBleHBhbmRvIHByb3BlcnRpZXMpXG4vL1x0Ni4gUHJvdmlkZSBhIGNsZWFyIHBhdGggZm9yIGltcGxlbWVudGF0aW9uIHVwZ3JhZGUgdG8gV2Vha01hcCBpbiAyMDE0XG5cbnZhciByYnJhY2UgPSAvXig/Olxce1tcXHdcXFddKlxcfXxcXFtbXFx3XFxXXSpcXF0pJC8sXG5cdHJtdWx0aURhc2ggPSAvW0EtWl0vZztcblxuZnVuY3Rpb24gZ2V0RGF0YSggZGF0YSApIHtcblx0aWYgKCBkYXRhID09PSBcInRydWVcIiApIHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdGlmICggZGF0YSA9PT0gXCJmYWxzZVwiICkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdGlmICggZGF0YSA9PT0gXCJudWxsXCIgKSB7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHQvLyBPbmx5IGNvbnZlcnQgdG8gYSBudW1iZXIgaWYgaXQgZG9lc24ndCBjaGFuZ2UgdGhlIHN0cmluZ1xuXHRpZiAoIGRhdGEgPT09ICtkYXRhICsgXCJcIiApIHtcblx0XHRyZXR1cm4gK2RhdGE7XG5cdH1cblxuXHRpZiAoIHJicmFjZS50ZXN0KCBkYXRhICkgKSB7XG5cdFx0cmV0dXJuIEpTT04ucGFyc2UoIGRhdGEgKTtcblx0fVxuXG5cdHJldHVybiBkYXRhO1xufVxuXG5mdW5jdGlvbiBkYXRhQXR0ciggZWxlbSwga2V5LCBkYXRhICkge1xuXHR2YXIgbmFtZTtcblxuXHQvLyBJZiBub3RoaW5nIHdhcyBmb3VuZCBpbnRlcm5hbGx5LCB0cnkgdG8gZmV0Y2ggYW55XG5cdC8vIGRhdGEgZnJvbSB0aGUgSFRNTDUgZGF0YS0qIGF0dHJpYnV0ZVxuXHRpZiAoIGRhdGEgPT09IHVuZGVmaW5lZCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdG5hbWUgPSBcImRhdGEtXCIgKyBrZXkucmVwbGFjZSggcm11bHRpRGFzaCwgXCItJCZcIiApLnRvTG93ZXJDYXNlKCk7XG5cdFx0ZGF0YSA9IGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICk7XG5cblx0XHRpZiAoIHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0ZGF0YSA9IGdldERhdGEoIGRhdGEgKTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge31cblxuXHRcdFx0Ly8gTWFrZSBzdXJlIHdlIHNldCB0aGUgZGF0YSBzbyBpdCBpc24ndCBjaGFuZ2VkIGxhdGVyXG5cdFx0XHRkYXRhVXNlci5zZXQoIGVsZW0sIGtleSwgZGF0YSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gZGF0YTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRoYXNEYXRhOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGF0YVVzZXIuaGFzRGF0YSggZWxlbSApIHx8IGRhdGFQcml2Lmhhc0RhdGEoIGVsZW0gKTtcblx0fSxcblxuXHRkYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSApIHtcblx0XHRyZXR1cm4gZGF0YVVzZXIuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRhICk7XG5cdH0sXG5cblx0cmVtb3ZlRGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cdFx0ZGF0YVVzZXIucmVtb3ZlKCBlbGVtLCBuYW1lICk7XG5cdH0sXG5cblx0Ly8gVE9ETzogTm93IHRoYXQgYWxsIGNhbGxzIHRvIF9kYXRhIGFuZCBfcmVtb3ZlRGF0YSBoYXZlIGJlZW4gcmVwbGFjZWRcblx0Ly8gd2l0aCBkaXJlY3QgY2FsbHMgdG8gZGF0YVByaXYgbWV0aG9kcywgdGhlc2UgY2FuIGJlIGRlcHJlY2F0ZWQuXG5cdF9kYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSApIHtcblx0XHRyZXR1cm4gZGF0YVByaXYuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRhICk7XG5cdH0sXG5cblx0X3JlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgbmFtZSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZGF0YTogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7XG5cdFx0dmFyIGksIG5hbWUsIGRhdGEsXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdLFxuXHRcdFx0YXR0cnMgPSBlbGVtICYmIGVsZW0uYXR0cmlidXRlcztcblxuXHRcdC8vIEdldHMgYWxsIHZhbHVlc1xuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRpZiAoIHRoaXMubGVuZ3RoICkge1xuXHRcdFx0XHRkYXRhID0gZGF0YVVzZXIuZ2V0KCBlbGVtICk7XG5cblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmICFkYXRhUHJpdi5nZXQoIGVsZW0sIFwiaGFzRGF0YUF0dHJzXCIgKSApIHtcblx0XHRcdFx0XHRpID0gYXR0cnMubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSBvbmx5XG5cdFx0XHRcdFx0XHQvLyBUaGUgYXR0cnMgZWxlbWVudHMgY2FuIGJlIG51bGwgKHRyYWMtMTQ4OTQpXG5cdFx0XHRcdFx0XHRpZiAoIGF0dHJzWyBpIF0gKSB7XG5cdFx0XHRcdFx0XHRcdG5hbWUgPSBhdHRyc1sgaSBdLm5hbWU7XG5cdFx0XHRcdFx0XHRcdGlmICggbmFtZS5pbmRleE9mKCBcImRhdGEtXCIgKSA9PT0gMCApIHtcblx0XHRcdFx0XHRcdFx0XHRuYW1lID0gY2FtZWxDYXNlKCBuYW1lLnNsaWNlKCA1ICkgKTtcblx0XHRcdFx0XHRcdFx0XHRkYXRhQXR0ciggZWxlbSwgbmFtZSwgZGF0YVsgbmFtZSBdICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZGF0YVByaXYuc2V0KCBlbGVtLCBcImhhc0RhdGFBdHRyc1wiLCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGRhdGE7XG5cdFx0fVxuXG5cdFx0Ly8gU2V0cyBtdWx0aXBsZSB2YWx1ZXNcblx0XHRpZiAoIHR5cGVvZiBrZXkgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGF0YVVzZXIuc2V0KCB0aGlzLCBrZXkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgZGF0YTtcblxuXHRcdFx0Ly8gVGhlIGNhbGxpbmcgalF1ZXJ5IG9iamVjdCAoZWxlbWVudCBtYXRjaGVzKSBpcyBub3QgZW1wdHlcblx0XHRcdC8vIChhbmQgdGhlcmVmb3JlIGhhcyBhbiBlbGVtZW50IGFwcGVhcnMgYXQgdGhpc1sgMCBdKSBhbmQgdGhlXG5cdFx0XHQvLyBgdmFsdWVgIHBhcmFtZXRlciB3YXMgbm90IHVuZGVmaW5lZC4gQW4gZW1wdHkgalF1ZXJ5IG9iamVjdFxuXHRcdFx0Ly8gd2lsbCByZXN1bHQgaW4gYHVuZGVmaW5lZGAgZm9yIGVsZW0gPSB0aGlzWyAwIF0gd2hpY2ggd2lsbFxuXHRcdFx0Ly8gdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFuIGF0dGVtcHQgdG8gcmVhZCBhIGRhdGEgY2FjaGUgaXMgbWFkZS5cblx0XHRcdGlmICggZWxlbSAmJiB2YWx1ZSA9PT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHRcdC8vIEF0dGVtcHQgdG8gZ2V0IGRhdGEgZnJvbSB0aGUgY2FjaGVcblx0XHRcdFx0Ly8gVGhlIGtleSB3aWxsIGFsd2F5cyBiZSBjYW1lbENhc2VkIGluIERhdGFcblx0XHRcdFx0ZGF0YSA9IGRhdGFVc2VyLmdldCggZWxlbSwga2V5ICk7XG5cdFx0XHRcdGlmICggZGF0YSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHJldHVybiBkYXRhO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQXR0ZW1wdCB0byBcImRpc2NvdmVyXCIgdGhlIGRhdGEgaW5cblx0XHRcdFx0Ly8gSFRNTDUgY3VzdG9tIGRhdGEtKiBhdHRyc1xuXHRcdFx0XHRkYXRhID0gZGF0YUF0dHIoIGVsZW0sIGtleSApO1xuXHRcdFx0XHRpZiAoIGRhdGEgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gZGF0YTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFdlIHRyaWVkIHJlYWxseSBoYXJkLCBidXQgdGhlIGRhdGEgZG9lc24ndCBleGlzdC5cblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTZXQgdGhlIGRhdGEuLi5cblx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0Ly8gV2UgYWx3YXlzIHN0b3JlIHRoZSBjYW1lbENhc2VkIGtleVxuXHRcdFx0XHRkYXRhVXNlci5zZXQoIHRoaXMsIGtleSwgdmFsdWUgKTtcblx0XHRcdH0gKTtcblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEsIG51bGwsIHRydWUgKTtcblx0fSxcblxuXHRyZW1vdmVEYXRhOiBmdW5jdGlvbigga2V5ICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0ZGF0YVVzZXIucmVtb3ZlKCB0aGlzLCBrZXkgKTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdHF1ZXVlOiBmdW5jdGlvbiggZWxlbSwgdHlwZSwgZGF0YSApIHtcblx0XHR2YXIgcXVldWU7XG5cblx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHR0eXBlID0gKCB0eXBlIHx8IFwiZnhcIiApICsgXCJxdWV1ZVwiO1xuXHRcdFx0cXVldWUgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIHR5cGUgKTtcblxuXHRcdFx0Ly8gU3BlZWQgdXAgZGVxdWV1ZSBieSBnZXR0aW5nIG91dCBxdWlja2x5IGlmIHRoaXMgaXMganVzdCBhIGxvb2t1cFxuXHRcdFx0aWYgKCBkYXRhICkge1xuXHRcdFx0XHRpZiAoICFxdWV1ZSB8fCBBcnJheS5pc0FycmF5KCBkYXRhICkgKSB7XG5cdFx0XHRcdFx0cXVldWUgPSBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIHR5cGUsIGpRdWVyeS5tYWtlQXJyYXkoIGRhdGEgKSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGRhdGEgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHF1ZXVlIHx8IFtdO1xuXHRcdH1cblx0fSxcblxuXHRkZXF1ZXVlOiBmdW5jdGlvbiggZWxlbSwgdHlwZSApIHtcblx0XHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0XHR2YXIgcXVldWUgPSBqUXVlcnkucXVldWUoIGVsZW0sIHR5cGUgKSxcblx0XHRcdHN0YXJ0TGVuZ3RoID0gcXVldWUubGVuZ3RoLFxuXHRcdFx0Zm4gPSBxdWV1ZS5zaGlmdCgpLFxuXHRcdFx0aG9va3MgPSBqUXVlcnkuX3F1ZXVlSG9va3MoIGVsZW0sIHR5cGUgKSxcblx0XHRcdG5leHQgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIGVsZW0sIHR5cGUgKTtcblx0XHRcdH07XG5cblx0XHQvLyBJZiB0aGUgZnggcXVldWUgaXMgZGVxdWV1ZWQsIGFsd2F5cyByZW1vdmUgdGhlIHByb2dyZXNzIHNlbnRpbmVsXG5cdFx0aWYgKCBmbiA9PT0gXCJpbnByb2dyZXNzXCIgKSB7XG5cdFx0XHRmbiA9IHF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRzdGFydExlbmd0aC0tO1xuXHRcdH1cblxuXHRcdGlmICggZm4gKSB7XG5cblx0XHRcdC8vIEFkZCBhIHByb2dyZXNzIHNlbnRpbmVsIHRvIHByZXZlbnQgdGhlIGZ4IHF1ZXVlIGZyb20gYmVpbmdcblx0XHRcdC8vIGF1dG9tYXRpY2FsbHkgZGVxdWV1ZWRcblx0XHRcdGlmICggdHlwZSA9PT0gXCJmeFwiICkge1xuXHRcdFx0XHRxdWV1ZS51bnNoaWZ0KCBcImlucHJvZ3Jlc3NcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDbGVhciB1cCB0aGUgbGFzdCBxdWV1ZSBzdG9wIGZ1bmN0aW9uXG5cdFx0XHRkZWxldGUgaG9va3Muc3RvcDtcblx0XHRcdGZuLmNhbGwoIGVsZW0sIG5leHQsIGhvb2tzICk7XG5cdFx0fVxuXG5cdFx0aWYgKCAhc3RhcnRMZW5ndGggJiYgaG9va3MgKSB7XG5cdFx0XHRob29rcy5lbXB0eS5maXJlKCk7XG5cdFx0fVxuXHR9LFxuXG5cdC8vIE5vdCBwdWJsaWMgLSBnZW5lcmF0ZSBhIHF1ZXVlSG9va3Mgb2JqZWN0LCBvciByZXR1cm4gdGhlIGN1cnJlbnQgb25lXG5cdF9xdWV1ZUhvb2tzOiBmdW5jdGlvbiggZWxlbSwgdHlwZSApIHtcblx0XHR2YXIga2V5ID0gdHlwZSArIFwicXVldWVIb29rc1wiO1xuXHRcdHJldHVybiBkYXRhUHJpdi5nZXQoIGVsZW0sIGtleSApIHx8IGRhdGFQcml2LmFjY2VzcyggZWxlbSwga2V5LCB7XG5cdFx0XHRlbXB0eTogalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICkuYWRkKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBbIHR5cGUgKyBcInF1ZXVlXCIsIGtleSBdICk7XG5cdFx0XHR9IClcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRxdWV1ZTogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIHNldHRlciA9IDI7XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0ZGF0YSA9IHR5cGU7XG5cdFx0XHR0eXBlID0gXCJmeFwiO1xuXHRcdFx0c2V0dGVyLS07XG5cdFx0fVxuXG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoIDwgc2V0dGVyICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5xdWV1ZSggdGhpc1sgMCBdLCB0eXBlICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGRhdGEgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHR0aGlzIDpcblx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgZGF0YSApO1xuXG5cdFx0XHRcdC8vIEVuc3VyZSBhIGhvb2tzIGZvciB0aGlzIHF1ZXVlXG5cdFx0XHRcdGpRdWVyeS5fcXVldWVIb29rcyggdGhpcywgdHlwZSApO1xuXG5cdFx0XHRcdGlmICggdHlwZSA9PT0gXCJmeFwiICYmIHF1ZXVlWyAwIF0gIT09IFwiaW5wcm9ncmVzc1wiICkge1xuXHRcdFx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0fSxcblx0ZGVxdWV1ZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xuXHRcdH0gKTtcblx0fSxcblx0Y2xlYXJRdWV1ZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0cmV0dXJuIHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xuXHR9LFxuXG5cdC8vIEdldCBhIHByb21pc2UgcmVzb2x2ZWQgd2hlbiBxdWV1ZXMgb2YgYSBjZXJ0YWluIHR5cGVcblx0Ly8gYXJlIGVtcHRpZWQgKGZ4IGlzIHRoZSB0eXBlIGJ5IGRlZmF1bHQpXG5cdHByb21pc2U6IGZ1bmN0aW9uKCB0eXBlLCBvYmogKSB7XG5cdFx0dmFyIHRtcCxcblx0XHRcdGNvdW50ID0gMSxcblx0XHRcdGRlZmVyID0galF1ZXJ5LkRlZmVycmVkKCksXG5cdFx0XHRlbGVtZW50cyA9IHRoaXMsXG5cdFx0XHRpID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRyZXNvbHZlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggISggLS1jb3VudCApICkge1xuXHRcdFx0XHRcdGRlZmVyLnJlc29sdmVXaXRoKCBlbGVtZW50cywgWyBlbGVtZW50cyBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0b2JqID0gdHlwZTtcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0dG1wID0gZGF0YVByaXYuZ2V0KCBlbGVtZW50c1sgaSBdLCB0eXBlICsgXCJxdWV1ZUhvb2tzXCIgKTtcblx0XHRcdGlmICggdG1wICYmIHRtcC5lbXB0eSApIHtcblx0XHRcdFx0Y291bnQrKztcblx0XHRcdFx0dG1wLmVtcHR5LmFkZCggcmVzb2x2ZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXNvbHZlKCk7XG5cdFx0cmV0dXJuIGRlZmVyLnByb21pc2UoIG9iaiApO1xuXHR9XG59ICk7XG52YXIgcG51bSA9ICggL1srLV0/KD86XFxkKlxcLnwpXFxkKyg/OltlRV1bKy1dP1xcZCt8KS8gKS5zb3VyY2U7XG5cbnZhciByY3NzTnVtID0gbmV3IFJlZ0V4cCggXCJeKD86KFsrLV0pPXwpKFwiICsgcG51bSArIFwiKShbYS16JV0qKSRcIiwgXCJpXCIgKTtcblxuXG52YXIgY3NzRXhwYW5kID0gWyBcIlRvcFwiLCBcIlJpZ2h0XCIsIFwiQm90dG9tXCIsIFwiTGVmdFwiIF07XG5cbnZhciBkb2N1bWVudEVsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cblxuXG5cdHZhciBpc0F0dGFjaGVkID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKTtcblx0XHR9LFxuXHRcdGNvbXBvc2VkID0geyBjb21wb3NlZDogdHJ1ZSB9O1xuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSssIEVkZ2UgMTIgLSAxOCssIGlPUyAxMC4wIC0gMTAuMiBvbmx5XG5cdC8vIENoZWNrIGF0dGFjaG1lbnQgYWNyb3NzIHNoYWRvdyBET00gYm91bmRhcmllcyB3aGVuIHBvc3NpYmxlIChnaC0zNTA0KVxuXHQvLyBTdXBwb3J0OiBpT1MgMTAuMC0xMC4yIG9ubHlcblx0Ly8gRWFybHkgaU9TIDEwIHZlcnNpb25zIHN1cHBvcnQgYGF0dGFjaFNoYWRvd2AgYnV0IG5vdCBgZ2V0Um9vdE5vZGVgLFxuXHQvLyBsZWFkaW5nIHRvIGVycm9ycy4gV2UgbmVlZCB0byBjaGVjayBmb3IgYGdldFJvb3ROb2RlYC5cblx0aWYgKCBkb2N1bWVudEVsZW1lbnQuZ2V0Um9vdE5vZGUgKSB7XG5cdFx0aXNBdHRhY2hlZCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICkgfHxcblx0XHRcdFx0ZWxlbS5nZXRSb290Tm9kZSggY29tcG9zZWQgKSA9PT0gZWxlbS5vd25lckRvY3VtZW50O1xuXHRcdH07XG5cdH1cbnZhciBpc0hpZGRlbldpdGhpblRyZWUgPSBmdW5jdGlvbiggZWxlbSwgZWwgKSB7XG5cblx0XHQvLyBpc0hpZGRlbldpdGhpblRyZWUgbWlnaHQgYmUgY2FsbGVkIGZyb20galF1ZXJ5I2ZpbHRlciBmdW5jdGlvbjtcblx0XHQvLyBpbiB0aGF0IGNhc2UsIGVsZW1lbnQgd2lsbCBiZSBzZWNvbmQgYXJndW1lbnRcblx0XHRlbGVtID0gZWwgfHwgZWxlbTtcblxuXHRcdC8vIElubGluZSBzdHlsZSB0cnVtcHMgYWxsXG5cdFx0cmV0dXJuIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJub25lXCIgfHxcblx0XHRcdGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiAmJlxuXG5cdFx0XHQvLyBPdGhlcndpc2UsIGNoZWNrIGNvbXB1dGVkIHN0eWxlXG5cdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NDMgLSA0NVxuXHRcdFx0Ly8gRGlzY29ubmVjdGVkIGVsZW1lbnRzIGNhbiBoYXZlIGNvbXB1dGVkIGRpc3BsYXk6IG5vbmUsIHNvIGZpcnN0IGNvbmZpcm0gdGhhdCBlbGVtIGlzXG5cdFx0XHQvLyBpbiB0aGUgZG9jdW1lbnQuXG5cdFx0XHRpc0F0dGFjaGVkKCBlbGVtICkgJiZcblxuXHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKSA9PT0gXCJub25lXCI7XG5cdH07XG5cblxuXG5mdW5jdGlvbiBhZGp1c3RDU1MoIGVsZW0sIHByb3AsIHZhbHVlUGFydHMsIHR3ZWVuICkge1xuXHR2YXIgYWRqdXN0ZWQsIHNjYWxlLFxuXHRcdG1heEl0ZXJhdGlvbnMgPSAyMCxcblx0XHRjdXJyZW50VmFsdWUgPSB0d2VlbiA/XG5cdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuLmN1cigpO1xuXHRcdFx0fSA6XG5cdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIGpRdWVyeS5jc3MoIGVsZW0sIHByb3AsIFwiXCIgKTtcblx0XHRcdH0sXG5cdFx0aW5pdGlhbCA9IGN1cnJlbnRWYWx1ZSgpLFxuXHRcdHVuaXQgPSB2YWx1ZVBhcnRzICYmIHZhbHVlUGFydHNbIDMgXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSA/IFwiXCIgOiBcInB4XCIgKSxcblxuXHRcdC8vIFN0YXJ0aW5nIHZhbHVlIGNvbXB1dGF0aW9uIGlzIHJlcXVpcmVkIGZvciBwb3RlbnRpYWwgdW5pdCBtaXNtYXRjaGVzXG5cdFx0aW5pdGlhbEluVW5pdCA9IGVsZW0ubm9kZVR5cGUgJiZcblx0XHRcdCggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdIHx8IHVuaXQgIT09IFwicHhcIiAmJiAraW5pdGlhbCApICYmXG5cdFx0XHRyY3NzTnVtLmV4ZWMoIGpRdWVyeS5jc3MoIGVsZW0sIHByb3AgKSApO1xuXG5cdGlmICggaW5pdGlhbEluVW5pdCAmJiBpbml0aWFsSW5Vbml0WyAzIF0gIT09IHVuaXQgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NTRcblx0XHQvLyBIYWx2ZSB0aGUgaXRlcmF0aW9uIHRhcmdldCB2YWx1ZSB0byBwcmV2ZW50IGludGVyZmVyZW5jZSBmcm9tIENTUyB1cHBlciBib3VuZHMgKGdoLTIxNDQpXG5cdFx0aW5pdGlhbCA9IGluaXRpYWwgLyAyO1xuXG5cdFx0Ly8gVHJ1c3QgdW5pdHMgcmVwb3J0ZWQgYnkgalF1ZXJ5LmNzc1xuXHRcdHVuaXQgPSB1bml0IHx8IGluaXRpYWxJblVuaXRbIDMgXTtcblxuXHRcdC8vIEl0ZXJhdGl2ZWx5IGFwcHJveGltYXRlIGZyb20gYSBub256ZXJvIHN0YXJ0aW5nIHBvaW50XG5cdFx0aW5pdGlhbEluVW5pdCA9ICtpbml0aWFsIHx8IDE7XG5cblx0XHR3aGlsZSAoIG1heEl0ZXJhdGlvbnMtLSApIHtcblxuXHRcdFx0Ly8gRXZhbHVhdGUgYW5kIHVwZGF0ZSBvdXIgYmVzdCBndWVzcyAoZG91YmxpbmcgZ3Vlc3NlcyB0aGF0IHplcm8gb3V0KS5cblx0XHRcdC8vIEZpbmlzaCBpZiB0aGUgc2NhbGUgZXF1YWxzIG9yIGNyb3NzZXMgMSAobWFraW5nIHRoZSBvbGQqbmV3IHByb2R1Y3Qgbm9uLXBvc2l0aXZlKS5cblx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgaW5pdGlhbEluVW5pdCArIHVuaXQgKTtcblx0XHRcdGlmICggKCAxIC0gc2NhbGUgKSAqICggMSAtICggc2NhbGUgPSBjdXJyZW50VmFsdWUoKSAvIGluaXRpYWwgfHwgMC41ICkgKSA8PSAwICkge1xuXHRcdFx0XHRtYXhJdGVyYXRpb25zID0gMDtcblx0XHRcdH1cblx0XHRcdGluaXRpYWxJblVuaXQgPSBpbml0aWFsSW5Vbml0IC8gc2NhbGU7XG5cblx0XHR9XG5cblx0XHRpbml0aWFsSW5Vbml0ID0gaW5pdGlhbEluVW5pdCAqIDI7XG5cdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBpbml0aWFsSW5Vbml0ICsgdW5pdCApO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHdlIHVwZGF0ZSB0aGUgdHdlZW4gcHJvcGVydGllcyBsYXRlciBvblxuXHRcdHZhbHVlUGFydHMgPSB2YWx1ZVBhcnRzIHx8IFtdO1xuXHR9XG5cblx0aWYgKCB2YWx1ZVBhcnRzICkge1xuXHRcdGluaXRpYWxJblVuaXQgPSAraW5pdGlhbEluVW5pdCB8fCAraW5pdGlhbCB8fCAwO1xuXG5cdFx0Ly8gQXBwbHkgcmVsYXRpdmUgb2Zmc2V0ICgrPS8tPSkgaWYgc3BlY2lmaWVkXG5cdFx0YWRqdXN0ZWQgPSB2YWx1ZVBhcnRzWyAxIF0gP1xuXHRcdFx0aW5pdGlhbEluVW5pdCArICggdmFsdWVQYXJ0c1sgMSBdICsgMSApICogdmFsdWVQYXJ0c1sgMiBdIDpcblx0XHRcdCt2YWx1ZVBhcnRzWyAyIF07XG5cdFx0aWYgKCB0d2VlbiApIHtcblx0XHRcdHR3ZWVuLnVuaXQgPSB1bml0O1xuXHRcdFx0dHdlZW4uc3RhcnQgPSBpbml0aWFsSW5Vbml0O1xuXHRcdFx0dHdlZW4uZW5kID0gYWRqdXN0ZWQ7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBhZGp1c3RlZDtcbn1cblxuXG52YXIgZGVmYXVsdERpc3BsYXlNYXAgPSB7fTtcblxuZnVuY3Rpb24gZ2V0RGVmYXVsdERpc3BsYXkoIGVsZW0gKSB7XG5cdHZhciB0ZW1wLFxuXHRcdGRvYyA9IGVsZW0ub3duZXJEb2N1bWVudCxcblx0XHRub2RlTmFtZSA9IGVsZW0ubm9kZU5hbWUsXG5cdFx0ZGlzcGxheSA9IGRlZmF1bHREaXNwbGF5TWFwWyBub2RlTmFtZSBdO1xuXG5cdGlmICggZGlzcGxheSApIHtcblx0XHRyZXR1cm4gZGlzcGxheTtcblx0fVxuXG5cdHRlbXAgPSBkb2MuYm9keS5hcHBlbmRDaGlsZCggZG9jLmNyZWF0ZUVsZW1lbnQoIG5vZGVOYW1lICkgKTtcblx0ZGlzcGxheSA9IGpRdWVyeS5jc3MoIHRlbXAsIFwiZGlzcGxheVwiICk7XG5cblx0dGVtcC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCB0ZW1wICk7XG5cblx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcblx0XHRkaXNwbGF5ID0gXCJibG9ja1wiO1xuXHR9XG5cdGRlZmF1bHREaXNwbGF5TWFwWyBub2RlTmFtZSBdID0gZGlzcGxheTtcblxuXHRyZXR1cm4gZGlzcGxheTtcbn1cblxuZnVuY3Rpb24gc2hvd0hpZGUoIGVsZW1lbnRzLCBzaG93ICkge1xuXHR2YXIgZGlzcGxheSwgZWxlbSxcblx0XHR2YWx1ZXMgPSBbXSxcblx0XHRpbmRleCA9IDAsXG5cdFx0bGVuZ3RoID0gZWxlbWVudHMubGVuZ3RoO1xuXG5cdC8vIERldGVybWluZSBuZXcgZGlzcGxheSB2YWx1ZSBmb3IgZWxlbWVudHMgdGhhdCBuZWVkIHRvIGNoYW5nZVxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGVsZW0gPSBlbGVtZW50c1sgaW5kZXggXTtcblx0XHRpZiAoICFlbGVtLnN0eWxlICkge1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0ZGlzcGxheSA9IGVsZW0uc3R5bGUuZGlzcGxheTtcblx0XHRpZiAoIHNob3cgKSB7XG5cblx0XHRcdC8vIFNpbmNlIHdlIGZvcmNlIHZpc2liaWxpdHkgdXBvbiBjYXNjYWRlLWhpZGRlbiBlbGVtZW50cywgYW4gaW1tZWRpYXRlIChhbmQgc2xvdylcblx0XHRcdC8vIGNoZWNrIGlzIHJlcXVpcmVkIGluIHRoaXMgZmlyc3QgbG9vcCB1bmxlc3Mgd2UgaGF2ZSBhIG5vbmVtcHR5IGRpc3BsYXkgdmFsdWUgKGVpdGhlclxuXHRcdFx0Ly8gaW5saW5lIG9yIGFib3V0LXRvLWJlLXJlc3RvcmVkKVxuXHRcdFx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcblx0XHRcdFx0dmFsdWVzWyBpbmRleCBdID0gZGF0YVByaXYuZ2V0KCBlbGVtLCBcImRpc3BsYXlcIiApIHx8IG51bGw7XG5cdFx0XHRcdGlmICggIXZhbHVlc1sgaW5kZXggXSApIHtcblx0XHRcdFx0XHRlbGVtLnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiAmJiBpc0hpZGRlbldpdGhpblRyZWUoIGVsZW0gKSApIHtcblx0XHRcdFx0dmFsdWVzWyBpbmRleCBdID0gZ2V0RGVmYXVsdERpc3BsYXkoIGVsZW0gKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0aWYgKCBkaXNwbGF5ICE9PSBcIm5vbmVcIiApIHtcblx0XHRcdFx0dmFsdWVzWyBpbmRleCBdID0gXCJub25lXCI7XG5cblx0XHRcdFx0Ly8gUmVtZW1iZXIgd2hhdCB3ZSdyZSBvdmVyd3JpdGluZ1xuXHRcdFx0XHRkYXRhUHJpdi5zZXQoIGVsZW0sIFwiZGlzcGxheVwiLCBkaXNwbGF5ICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gU2V0IHRoZSBkaXNwbGF5IG9mIHRoZSBlbGVtZW50cyBpbiBhIHNlY29uZCBsb29wIHRvIGF2b2lkIGNvbnN0YW50IHJlZmxvd1xuXHRmb3IgKCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGlmICggdmFsdWVzWyBpbmRleCBdICE9IG51bGwgKSB7XG5cdFx0XHRlbGVtZW50c1sgaW5kZXggXS5zdHlsZS5kaXNwbGF5ID0gdmFsdWVzWyBpbmRleCBdO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBlbGVtZW50cztcbn1cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRzaG93OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc2hvd0hpZGUoIHRoaXMsIHRydWUgKTtcblx0fSxcblx0aGlkZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHNob3dIaWRlKCB0aGlzICk7XG5cdH0sXG5cdHRvZ2dsZTogZnVuY3Rpb24oIHN0YXRlICkge1xuXHRcdGlmICggdHlwZW9mIHN0YXRlID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRcdHJldHVybiBzdGF0ZSA/IHRoaXMuc2hvdygpIDogdGhpcy5oaWRlKCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIGlzSGlkZGVuV2l0aGluVHJlZSggdGhpcyApICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5zaG93KCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5oaWRlKCk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9XG59ICk7XG52YXIgcmNoZWNrYWJsZVR5cGUgPSAoIC9eKD86Y2hlY2tib3h8cmFkaW8pJC9pICk7XG5cbnZhciBydGFnTmFtZSA9ICggLzwoW2Etel1bXlxcL1xcMD5cXHgyMFxcdFxcclxcblxcZl0qKS9pICk7XG5cbnZhciByc2NyaXB0VHlwZSA9ICggL14kfF5tb2R1bGUkfFxcLyg/OmphdmF8ZWNtYSlzY3JpcHQvaSApO1xuXG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuXHRcdGRpdiA9IGZyYWdtZW50LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKSxcblx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHlcblx0Ly8gQ2hlY2sgc3RhdGUgbG9zdCBpZiB0aGUgbmFtZSBpcyBzZXQgKHRyYWMtMTEyMTcpXG5cdC8vIFN1cHBvcnQ6IFdpbmRvd3MgV2ViIEFwcHMgKFdXQSlcblx0Ly8gYG5hbWVgIGFuZCBgdHlwZWAgbXVzdCB1c2UgLnNldEF0dHJpYnV0ZSBmb3IgV1dBICh0cmFjLTE0OTAxKVxuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwidHlwZVwiLCBcInJhZGlvXCIgKTtcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcImNoZWNrZWRcIiwgXCJjaGVja2VkXCIgKTtcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcIm5hbWVcIiwgXCJ0XCIgKTtcblxuXHRkaXYuYXBwZW5kQ2hpbGQoIGlucHV0ICk7XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMSBvbmx5XG5cdC8vIE9sZGVyIFdlYktpdCBkb2Vzbid0IGNsb25lIGNoZWNrZWQgc3RhdGUgY29ycmVjdGx5IGluIGZyYWdtZW50c1xuXHRzdXBwb3J0LmNoZWNrQ2xvbmUgPSBkaXYuY2xvbmVOb2RlKCB0cnVlICkuY2xvbmVOb2RlKCB0cnVlICkubGFzdENoaWxkLmNoZWNrZWQ7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdC8vIE1ha2Ugc3VyZSB0ZXh0YXJlYSAoYW5kIGNoZWNrYm94KSBkZWZhdWx0VmFsdWUgaXMgcHJvcGVybHkgY2xvbmVkXG5cdGRpdi5pbm5lckhUTUwgPSBcIjx0ZXh0YXJlYT54PC90ZXh0YXJlYT5cIjtcblx0c3VwcG9ydC5ub0Nsb25lQ2hlY2tlZCA9ICEhZGl2LmNsb25lTm9kZSggdHJ1ZSApLmxhc3RDaGlsZC5kZWZhdWx0VmFsdWU7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0Ly8gSUUgPD05IHJlcGxhY2VzIDxvcHRpb24+IHRhZ3Mgd2l0aCB0aGVpciBjb250ZW50cyB3aGVuIGluc2VydGVkIG91dHNpZGUgb2Zcblx0Ly8gdGhlIHNlbGVjdCBlbGVtZW50LlxuXHRkaXYuaW5uZXJIVE1MID0gXCI8b3B0aW9uPjwvb3B0aW9uPlwiO1xuXHRzdXBwb3J0Lm9wdGlvbiA9ICEhZGl2Lmxhc3RDaGlsZDtcbn0gKSgpO1xuXG5cbi8vIFdlIGhhdmUgdG8gY2xvc2UgdGhlc2UgdGFncyB0byBzdXBwb3J0IFhIVE1MICh0cmFjLTEzMjAwKVxudmFyIHdyYXBNYXAgPSB7XG5cblx0Ly8gWEhUTUwgcGFyc2VycyBkbyBub3QgbWFnaWNhbGx5IGluc2VydCBlbGVtZW50cyBpbiB0aGVcblx0Ly8gc2FtZSB3YXkgdGhhdCB0YWcgc291cCBwYXJzZXJzIGRvLiBTbyB3ZSBjYW5ub3Qgc2hvcnRlblxuXHQvLyB0aGlzIGJ5IG9taXR0aW5nIDx0Ym9keT4gb3Igb3RoZXIgcmVxdWlyZWQgZWxlbWVudHMuXG5cdHRoZWFkOiBbIDEsIFwiPHRhYmxlPlwiLCBcIjwvdGFibGU+XCIgXSxcblx0Y29sOiBbIDIsIFwiPHRhYmxlPjxjb2xncm91cD5cIiwgXCI8L2NvbGdyb3VwPjwvdGFibGU+XCIgXSxcblx0dHI6IFsgMiwgXCI8dGFibGU+PHRib2R5PlwiLCBcIjwvdGJvZHk+PC90YWJsZT5cIiBdLFxuXHR0ZDogWyAzLCBcIjx0YWJsZT48dGJvZHk+PHRyPlwiLCBcIjwvdHI+PC90Ym9keT48L3RhYmxlPlwiIF0sXG5cblx0X2RlZmF1bHQ6IFsgMCwgXCJcIiwgXCJcIiBdXG59O1xuXG53cmFwTWFwLnRib2R5ID0gd3JhcE1hcC50Zm9vdCA9IHdyYXBNYXAuY29sZ3JvdXAgPSB3cmFwTWFwLmNhcHRpb24gPSB3cmFwTWFwLnRoZWFkO1xud3JhcE1hcC50aCA9IHdyYXBNYXAudGQ7XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5pZiAoICFzdXBwb3J0Lm9wdGlvbiApIHtcblx0d3JhcE1hcC5vcHRncm91cCA9IHdyYXBNYXAub3B0aW9uID0gWyAxLCBcIjxzZWxlY3QgbXVsdGlwbGU9J211bHRpcGxlJz5cIiwgXCI8L3NlbGVjdD5cIiBdO1xufVxuXG5cbmZ1bmN0aW9uIGdldEFsbCggY29udGV4dCwgdGFnICkge1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0Ly8gVXNlIHR5cGVvZiB0byBhdm9pZCB6ZXJvLWFyZ3VtZW50IG1ldGhvZCBpbnZvY2F0aW9uIG9uIGhvc3Qgb2JqZWN0cyAodHJhYy0xNTE1MSlcblx0dmFyIHJldDtcblxuXHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdHJldCA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyB8fCBcIipcIiApO1xuXG5cdH0gZWxzZSBpZiAoIHR5cGVvZiBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0cmV0ID0gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgfHwgXCIqXCIgKTtcblxuXHR9IGVsc2Uge1xuXHRcdHJldCA9IFtdO1xuXHR9XG5cblx0aWYgKCB0YWcgPT09IHVuZGVmaW5lZCB8fCB0YWcgJiYgbm9kZU5hbWUoIGNvbnRleHQsIHRhZyApICkge1xuXHRcdHJldHVybiBqUXVlcnkubWVyZ2UoIFsgY29udGV4dCBdLCByZXQgKTtcblx0fVxuXG5cdHJldHVybiByZXQ7XG59XG5cblxuLy8gTWFyayBzY3JpcHRzIGFzIGhhdmluZyBhbHJlYWR5IGJlZW4gZXZhbHVhdGVkXG5mdW5jdGlvbiBzZXRHbG9iYWxFdmFsKCBlbGVtcywgcmVmRWxlbWVudHMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsID0gZWxlbXMubGVuZ3RoO1xuXG5cdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRkYXRhUHJpdi5zZXQoXG5cdFx0XHRlbGVtc1sgaSBdLFxuXHRcdFx0XCJnbG9iYWxFdmFsXCIsXG5cdFx0XHQhcmVmRWxlbWVudHMgfHwgZGF0YVByaXYuZ2V0KCByZWZFbGVtZW50c1sgaSBdLCBcImdsb2JhbEV2YWxcIiApXG5cdFx0KTtcblx0fVxufVxuXG5cbnZhciByaHRtbCA9IC88fCYjP1xcdys7LztcblxuZnVuY3Rpb24gYnVpbGRGcmFnbWVudCggZWxlbXMsIGNvbnRleHQsIHNjcmlwdHMsIHNlbGVjdGlvbiwgaWdub3JlZCApIHtcblx0dmFyIGVsZW0sIHRtcCwgdGFnLCB3cmFwLCBhdHRhY2hlZCwgaixcblx0XHRmcmFnbWVudCA9IGNvbnRleHQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuXHRcdG5vZGVzID0gW10sXG5cdFx0aSA9IDAsXG5cdFx0bCA9IGVsZW1zLmxlbmd0aDtcblxuXHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0ZWxlbSA9IGVsZW1zWyBpIF07XG5cblx0XHRpZiAoIGVsZW0gfHwgZWxlbSA9PT0gMCApIHtcblxuXHRcdFx0Ly8gQWRkIG5vZGVzIGRpcmVjdGx5XG5cdFx0XHRpZiAoIHRvVHlwZSggZWxlbSApID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggbm9kZXMsIGVsZW0ubm9kZVR5cGUgPyBbIGVsZW0gXSA6IGVsZW0gKTtcblxuXHRcdFx0Ly8gQ29udmVydCBub24taHRtbCBpbnRvIGEgdGV4dCBub2RlXG5cdFx0XHR9IGVsc2UgaWYgKCAhcmh0bWwudGVzdCggZWxlbSApICkge1xuXHRcdFx0XHRub2Rlcy5wdXNoKCBjb250ZXh0LmNyZWF0ZVRleHROb2RlKCBlbGVtICkgKTtcblxuXHRcdFx0Ly8gQ29udmVydCBodG1sIGludG8gRE9NIG5vZGVzXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0bXAgPSB0bXAgfHwgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGNvbnRleHQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICk7XG5cblx0XHRcdFx0Ly8gRGVzZXJpYWxpemUgYSBzdGFuZGFyZCByZXByZXNlbnRhdGlvblxuXHRcdFx0XHR0YWcgPSAoIHJ0YWdOYW1lLmV4ZWMoIGVsZW0gKSB8fCBbIFwiXCIsIFwiXCIgXSApWyAxIF0udG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0d3JhcCA9IHdyYXBNYXBbIHRhZyBdIHx8IHdyYXBNYXAuX2RlZmF1bHQ7XG5cdFx0XHRcdHRtcC5pbm5lckhUTUwgPSB3cmFwWyAxIF0gKyBqUXVlcnkuaHRtbFByZWZpbHRlciggZWxlbSApICsgd3JhcFsgMiBdO1xuXG5cdFx0XHRcdC8vIERlc2NlbmQgdGhyb3VnaCB3cmFwcGVycyB0byB0aGUgcmlnaHQgY29udGVudFxuXHRcdFx0XHRqID0gd3JhcFsgMCBdO1xuXHRcdFx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdFx0XHR0bXAgPSB0bXAubGFzdENoaWxkO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBub2RlcywgdG1wLmNoaWxkTm9kZXMgKTtcblxuXHRcdFx0XHQvLyBSZW1lbWJlciB0aGUgdG9wLWxldmVsIGNvbnRhaW5lclxuXHRcdFx0XHR0bXAgPSBmcmFnbWVudC5maXJzdENoaWxkO1xuXG5cdFx0XHRcdC8vIEVuc3VyZSB0aGUgY3JlYXRlZCBub2RlcyBhcmUgb3JwaGFuZWQgKHRyYWMtMTIzOTIpXG5cdFx0XHRcdHRtcC50ZXh0Q29udGVudCA9IFwiXCI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmVtb3ZlIHdyYXBwZXIgZnJvbSBmcmFnbWVudFxuXHRmcmFnbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG5cblx0aSA9IDA7XG5cdHdoaWxlICggKCBlbGVtID0gbm9kZXNbIGkrKyBdICkgKSB7XG5cblx0XHQvLyBTa2lwIGVsZW1lbnRzIGFscmVhZHkgaW4gdGhlIGNvbnRleHQgY29sbGVjdGlvbiAodHJhYy00MDg3KVxuXHRcdGlmICggc2VsZWN0aW9uICYmIGpRdWVyeS5pbkFycmF5KCBlbGVtLCBzZWxlY3Rpb24gKSA+IC0xICkge1xuXHRcdFx0aWYgKCBpZ25vcmVkICkge1xuXHRcdFx0XHRpZ25vcmVkLnB1c2goIGVsZW0gKTtcblx0XHRcdH1cblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGF0dGFjaGVkID0gaXNBdHRhY2hlZCggZWxlbSApO1xuXG5cdFx0Ly8gQXBwZW5kIHRvIGZyYWdtZW50XG5cdFx0dG1wID0gZ2V0QWxsKCBmcmFnbWVudC5hcHBlbmRDaGlsZCggZWxlbSApLCBcInNjcmlwdFwiICk7XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0aWYgKCBhdHRhY2hlZCApIHtcblx0XHRcdHNldEdsb2JhbEV2YWwoIHRtcCApO1xuXHRcdH1cblxuXHRcdC8vIENhcHR1cmUgZXhlY3V0YWJsZXNcblx0XHRpZiAoIHNjcmlwdHMgKSB7XG5cdFx0XHRqID0gMDtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdG1wWyBqKysgXSApICkge1xuXHRcdFx0XHRpZiAoIHJzY3JpcHRUeXBlLnRlc3QoIGVsZW0udHlwZSB8fCBcIlwiICkgKSB7XG5cdFx0XHRcdFx0c2NyaXB0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZnJhZ21lbnQ7XG59XG5cblxudmFyIHJ0eXBlbmFtZXNwYWNlID0gL14oW14uXSopKD86XFwuKC4rKXwpLztcblxuZnVuY3Rpb24gcmV0dXJuVHJ1ZSgpIHtcblx0cmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIHJldHVybkZhbHNlKCkge1xuXHRyZXR1cm4gZmFsc2U7XG59XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDExK1xuLy8gZm9jdXMoKSBhbmQgYmx1cigpIGFyZSBhc3luY2hyb25vdXMsIGV4Y2VwdCB3aGVuIHRoZXkgYXJlIG5vLW9wLlxuLy8gU28gZXhwZWN0IGZvY3VzIHRvIGJlIHN5bmNocm9ub3VzIHdoZW4gdGhlIGVsZW1lbnQgaXMgYWxyZWFkeSBhY3RpdmUsXG4vLyBhbmQgYmx1ciB0byBiZSBzeW5jaHJvbm91cyB3aGVuIHRoZSBlbGVtZW50IGlzIG5vdCBhbHJlYWR5IGFjdGl2ZS5cbi8vIChmb2N1cyBhbmQgYmx1ciBhcmUgYWx3YXlzIHN5bmNocm9ub3VzIGluIG90aGVyIHN1cHBvcnRlZCBicm93c2Vycyxcbi8vIHRoaXMganVzdCBkZWZpbmVzIHdoZW4gd2UgY2FuIGNvdW50IG9uIGl0KS5cbmZ1bmN0aW9uIGV4cGVjdFN5bmMoIGVsZW0sIHR5cGUgKSB7XG5cdHJldHVybiAoIGVsZW0gPT09IHNhZmVBY3RpdmVFbGVtZW50KCkgKSA9PT0gKCB0eXBlID09PSBcImZvY3VzXCIgKTtcbn1cblxuLy8gU3VwcG9ydDogSUUgPD05IG9ubHlcbi8vIEFjY2Vzc2luZyBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGNhbiB0aHJvdyB1bmV4cGVjdGVkbHlcbi8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMzM5M1xuZnVuY3Rpb24gc2FmZUFjdGl2ZUVsZW1lbnQoKSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XG5cdH0gY2F0Y2ggKCBlcnIgKSB7IH1cbn1cblxuZnVuY3Rpb24gb24oIGVsZW0sIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4sIG9uZSApIHtcblx0dmFyIG9yaWdGbiwgdHlwZTtcblxuXHQvLyBUeXBlcyBjYW4gYmUgYSBtYXAgb2YgdHlwZXMvaGFuZGxlcnNcblx0aWYgKCB0eXBlb2YgdHlwZXMgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHQvLyAoIHR5cGVzLU9iamVjdCwgc2VsZWN0b3IsIGRhdGEgKVxuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLU9iamVjdCwgZGF0YSApXG5cdFx0XHRkYXRhID0gZGF0YSB8fCBzZWxlY3Rvcjtcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHRmb3IgKCB0eXBlIGluIHR5cGVzICkge1xuXHRcdFx0b24oIGVsZW0sIHR5cGUsIHNlbGVjdG9yLCBkYXRhLCB0eXBlc1sgdHlwZSBdLCBvbmUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIGVsZW07XG5cdH1cblxuXHRpZiAoIGRhdGEgPT0gbnVsbCAmJiBmbiA9PSBudWxsICkge1xuXG5cdFx0Ly8gKCB0eXBlcywgZm4gKVxuXHRcdGZuID0gc2VsZWN0b3I7XG5cdFx0ZGF0YSA9IHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHR9IGVsc2UgaWYgKCBmbiA9PSBudWxsICkge1xuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLCBzZWxlY3RvciwgZm4gKVxuXHRcdFx0Zm4gPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyAoIHR5cGVzLCBkYXRhLCBmbiApXG5cdFx0XHRmbiA9IGRhdGE7XG5cdFx0XHRkYXRhID0gc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdH1cblx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XG5cdFx0Zm4gPSByZXR1cm5GYWxzZTtcblx0fSBlbHNlIGlmICggIWZuICkge1xuXHRcdHJldHVybiBlbGVtO1xuXHR9XG5cblx0aWYgKCBvbmUgPT09IDEgKSB7XG5cdFx0b3JpZ0ZuID0gZm47XG5cdFx0Zm4gPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cblx0XHRcdC8vIENhbiB1c2UgYW4gZW1wdHkgc2V0LCBzaW5jZSBldmVudCBjb250YWlucyB0aGUgaW5mb1xuXHRcdFx0alF1ZXJ5KCkub2ZmKCBldmVudCApO1xuXHRcdFx0cmV0dXJuIG9yaWdGbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0fTtcblxuXHRcdC8vIFVzZSBzYW1lIGd1aWQgc28gY2FsbGVyIGNhbiByZW1vdmUgdXNpbmcgb3JpZ0ZuXG5cdFx0Zm4uZ3VpZCA9IG9yaWdGbi5ndWlkIHx8ICggb3JpZ0ZuLmd1aWQgPSBqUXVlcnkuZ3VpZCsrICk7XG5cdH1cblx0cmV0dXJuIGVsZW0uZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0alF1ZXJ5LmV2ZW50LmFkZCggdGhpcywgdHlwZXMsIGZuLCBkYXRhLCBzZWxlY3RvciApO1xuXHR9ICk7XG59XG5cbi8qXG4gKiBIZWxwZXIgZnVuY3Rpb25zIGZvciBtYW5hZ2luZyBldmVudHMgLS0gbm90IHBhcnQgb2YgdGhlIHB1YmxpYyBpbnRlcmZhY2UuXG4gKiBQcm9wcyB0byBEZWFuIEVkd2FyZHMnIGFkZEV2ZW50IGxpYnJhcnkgZm9yIG1hbnkgb2YgdGhlIGlkZWFzLlxuICovXG5qUXVlcnkuZXZlbnQgPSB7XG5cblx0Z2xvYmFsOiB7fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlcywgaGFuZGxlciwgZGF0YSwgc2VsZWN0b3IgKSB7XG5cblx0XHR2YXIgaGFuZGxlT2JqSW4sIGV2ZW50SGFuZGxlLCB0bXAsXG5cdFx0XHRldmVudHMsIHQsIGhhbmRsZU9iaixcblx0XHRcdHNwZWNpYWwsIGhhbmRsZXJzLCB0eXBlLCBuYW1lc3BhY2VzLCBvcmlnVHlwZSxcblx0XHRcdGVsZW1EYXRhID0gZGF0YVByaXYuZ2V0KCBlbGVtICk7XG5cblx0XHQvLyBPbmx5IGF0dGFjaCBldmVudHMgdG8gb2JqZWN0cyB0aGF0IGFjY2VwdCBkYXRhXG5cdFx0aWYgKCAhYWNjZXB0RGF0YSggZWxlbSApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIENhbGxlciBjYW4gcGFzcyBpbiBhbiBvYmplY3Qgb2YgY3VzdG9tIGRhdGEgaW4gbGlldSBvZiB0aGUgaGFuZGxlclxuXHRcdGlmICggaGFuZGxlci5oYW5kbGVyICkge1xuXHRcdFx0aGFuZGxlT2JqSW4gPSBoYW5kbGVyO1xuXHRcdFx0aGFuZGxlciA9IGhhbmRsZU9iakluLmhhbmRsZXI7XG5cdFx0XHRzZWxlY3RvciA9IGhhbmRsZU9iakluLnNlbGVjdG9yO1xuXHRcdH1cblxuXHRcdC8vIEVuc3VyZSB0aGF0IGludmFsaWQgc2VsZWN0b3JzIHRocm93IGV4Y2VwdGlvbnMgYXQgYXR0YWNoIHRpbWVcblx0XHQvLyBFdmFsdWF0ZSBhZ2FpbnN0IGRvY3VtZW50RWxlbWVudCBpbiBjYXNlIGVsZW0gaXMgYSBub24tZWxlbWVudCBub2RlIChlLmcuLCBkb2N1bWVudClcblx0XHRpZiAoIHNlbGVjdG9yICkge1xuXHRcdFx0alF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKCBkb2N1bWVudEVsZW1lbnQsIHNlbGVjdG9yICk7XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgdGhlIGhhbmRsZXIgaGFzIGEgdW5pcXVlIElELCB1c2VkIHRvIGZpbmQvcmVtb3ZlIGl0IGxhdGVyXG5cdFx0aWYgKCAhaGFuZGxlci5ndWlkICkge1xuXHRcdFx0aGFuZGxlci5ndWlkID0galF1ZXJ5Lmd1aWQrKztcblx0XHR9XG5cblx0XHQvLyBJbml0IHRoZSBlbGVtZW50J3MgZXZlbnQgc3RydWN0dXJlIGFuZCBtYWluIGhhbmRsZXIsIGlmIHRoaXMgaXMgdGhlIGZpcnN0XG5cdFx0aWYgKCAhKCBldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgKSApIHtcblx0XHRcdGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyA9IE9iamVjdC5jcmVhdGUoIG51bGwgKTtcblx0XHR9XG5cdFx0aWYgKCAhKCBldmVudEhhbmRsZSA9IGVsZW1EYXRhLmhhbmRsZSApICkge1xuXHRcdFx0ZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGUgPSBmdW5jdGlvbiggZSApIHtcblxuXHRcdFx0XHQvLyBEaXNjYXJkIHRoZSBzZWNvbmQgZXZlbnQgb2YgYSBqUXVlcnkuZXZlbnQudHJpZ2dlcigpIGFuZFxuXHRcdFx0XHQvLyB3aGVuIGFuIGV2ZW50IGlzIGNhbGxlZCBhZnRlciBhIHBhZ2UgaGFzIHVubG9hZGVkXG5cdFx0XHRcdHJldHVybiB0eXBlb2YgalF1ZXJ5ICE9PSBcInVuZGVmaW5lZFwiICYmIGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgIT09IGUudHlwZSA/XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmRpc3BhdGNoLmFwcGx5KCBlbGVtLCBhcmd1bWVudHMgKSA6IHVuZGVmaW5lZDtcblx0XHRcdH07XG5cdFx0fVxuXG5cdFx0Ly8gSGFuZGxlIG11bHRpcGxlIGV2ZW50cyBzZXBhcmF0ZWQgYnkgYSBzcGFjZVxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XG5cdFx0XHRuYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBUaGVyZSAqbXVzdCogYmUgYSB0eXBlLCBubyBhdHRhY2hpbmcgbmFtZXNwYWNlLW9ubHkgaGFuZGxlcnNcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBldmVudCBjaGFuZ2VzIGl0cyB0eXBlLCB1c2UgdGhlIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMgZm9yIHRoZSBjaGFuZ2VkIHR5cGVcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXG5cdFx0XHQvLyBJZiBzZWxlY3RvciBkZWZpbmVkLCBkZXRlcm1pbmUgc3BlY2lhbCBldmVudCBhcGkgdHlwZSwgb3RoZXJ3aXNlIGdpdmVuIHR5cGVcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblxuXHRcdFx0Ly8gVXBkYXRlIHNwZWNpYWwgYmFzZWQgb24gbmV3bHkgcmVzZXQgdHlwZVxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cblx0XHRcdC8vIGhhbmRsZU9iaiBpcyBwYXNzZWQgdG8gYWxsIGV2ZW50IGhhbmRsZXJzXG5cdFx0XHRoYW5kbGVPYmogPSBqUXVlcnkuZXh0ZW5kKCB7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdG9yaWdUeXBlOiBvcmlnVHlwZSxcblx0XHRcdFx0ZGF0YTogZGF0YSxcblx0XHRcdFx0aGFuZGxlcjogaGFuZGxlcixcblx0XHRcdFx0Z3VpZDogaGFuZGxlci5ndWlkLFxuXHRcdFx0XHRzZWxlY3Rvcjogc2VsZWN0b3IsXG5cdFx0XHRcdG5lZWRzQ29udGV4dDogc2VsZWN0b3IgJiYgalF1ZXJ5LmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICksXG5cdFx0XHRcdG5hbWVzcGFjZTogbmFtZXNwYWNlcy5qb2luKCBcIi5cIiApXG5cdFx0XHR9LCBoYW5kbGVPYmpJbiApO1xuXG5cdFx0XHQvLyBJbml0IHRoZSBldmVudCBoYW5kbGVyIHF1ZXVlIGlmIHdlJ3JlIHRoZSBmaXJzdFxuXHRcdFx0aWYgKCAhKCBoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdICkgKSB7XG5cdFx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gPSBbXTtcblx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudCA9IDA7XG5cblx0XHRcdFx0Ly8gT25seSB1c2UgYWRkRXZlbnRMaXN0ZW5lciBpZiB0aGUgc3BlY2lhbCBldmVudHMgaGFuZGxlciByZXR1cm5zIGZhbHNlXG5cdFx0XHRcdGlmICggIXNwZWNpYWwuc2V0dXAgfHxcblx0XHRcdFx0XHRzcGVjaWFsLnNldHVwLmNhbGwoIGVsZW0sIGRhdGEsIG5hbWVzcGFjZXMsIGV2ZW50SGFuZGxlICkgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdFx0aWYgKCBlbGVtLmFkZEV2ZW50TGlzdGVuZXIgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIGV2ZW50SGFuZGxlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmICggc3BlY2lhbC5hZGQgKSB7XG5cdFx0XHRcdHNwZWNpYWwuYWRkLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApO1xuXG5cdFx0XHRcdGlmICggIWhhbmRsZU9iai5oYW5kbGVyLmd1aWQgKSB7XG5cdFx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCA9IGhhbmRsZXIuZ3VpZDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgdG8gdGhlIGVsZW1lbnQncyBoYW5kbGVyIGxpc3QsIGRlbGVnYXRlcyBpbiBmcm9udFxuXHRcdFx0aWYgKCBzZWxlY3RvciApIHtcblx0XHRcdFx0aGFuZGxlcnMuc3BsaWNlKCBoYW5kbGVycy5kZWxlZ2F0ZUNvdW50KyssIDAsIGhhbmRsZU9iaiApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aGFuZGxlcnMucHVzaCggaGFuZGxlT2JqICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEtlZXAgdHJhY2sgb2Ygd2hpY2ggZXZlbnRzIGhhdmUgZXZlciBiZWVuIHVzZWQsIGZvciBldmVudCBvcHRpbWl6YXRpb25cblx0XHRcdGpRdWVyeS5ldmVudC5nbG9iYWxbIHR5cGUgXSA9IHRydWU7XG5cdFx0fVxuXG5cdH0sXG5cblx0Ly8gRGV0YWNoIGFuIGV2ZW50IG9yIHNldCBvZiBldmVudHMgZnJvbSBhbiBlbGVtZW50XG5cdHJlbW92ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBzZWxlY3RvciwgbWFwcGVkVHlwZXMgKSB7XG5cblx0XHR2YXIgaiwgb3JpZ0NvdW50LCB0bXAsXG5cdFx0XHRldmVudHMsIHQsIGhhbmRsZU9iaixcblx0XHRcdHNwZWNpYWwsIGhhbmRsZXJzLCB0eXBlLCBuYW1lc3BhY2VzLCBvcmlnVHlwZSxcblx0XHRcdGVsZW1EYXRhID0gZGF0YVByaXYuaGFzRGF0YSggZWxlbSApICYmIGRhdGFQcml2LmdldCggZWxlbSApO1xuXG5cdFx0aWYgKCAhZWxlbURhdGEgfHwgISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gT25jZSBmb3IgZWFjaCB0eXBlLm5hbWVzcGFjZSBpbiB0eXBlczsgdHlwZSBtYXkgYmUgb21pdHRlZFxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XG5cdFx0XHRuYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBVbmJpbmQgYWxsIGV2ZW50cyAob24gdGhpcyBuYW1lc3BhY2UsIGlmIHByb3ZpZGVkKSBmb3IgdGhlIGVsZW1lbnRcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGZvciAoIHR5cGUgaW4gZXZlbnRzICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKyB0eXBlc1sgdCBdLCBoYW5kbGVyLCBzZWxlY3RvciwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gfHwgW107XG5cdFx0XHR0bXAgPSB0bXBbIDIgXSAmJlxuXHRcdFx0XHRuZXcgUmVnRXhwKCBcIihefFxcXFwuKVwiICsgbmFtZXNwYWNlcy5qb2luKCBcIlxcXFwuKD86LipcXFxcLnwpXCIgKSArIFwiKFxcXFwufCQpXCIgKTtcblxuXHRcdFx0Ly8gUmVtb3ZlIG1hdGNoaW5nIGV2ZW50c1xuXHRcdFx0b3JpZ0NvdW50ID0gaiA9IGhhbmRsZXJzLmxlbmd0aDtcblx0XHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0XHRoYW5kbGVPYmogPSBoYW5kbGVyc1sgaiBdO1xuXG5cdFx0XHRcdGlmICggKCBtYXBwZWRUeXBlcyB8fCBvcmlnVHlwZSA9PT0gaGFuZGxlT2JqLm9yaWdUeXBlICkgJiZcblx0XHRcdFx0XHQoICFoYW5kbGVyIHx8IGhhbmRsZXIuZ3VpZCA9PT0gaGFuZGxlT2JqLmd1aWQgKSAmJlxuXHRcdFx0XHRcdCggIXRtcCB8fCB0bXAudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkgJiZcblx0XHRcdFx0XHQoICFzZWxlY3RvciB8fCBzZWxlY3RvciA9PT0gaGFuZGxlT2JqLnNlbGVjdG9yIHx8XG5cdFx0XHRcdFx0XHRzZWxlY3RvciA9PT0gXCIqKlwiICYmIGhhbmRsZU9iai5zZWxlY3RvciApICkge1xuXHRcdFx0XHRcdGhhbmRsZXJzLnNwbGljZSggaiwgMSApO1xuXG5cdFx0XHRcdFx0aWYgKCBoYW5kbGVPYmouc2VsZWN0b3IgKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVycy5kZWxlZ2F0ZUNvdW50LS07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggc3BlY2lhbC5yZW1vdmUgKSB7XG5cdFx0XHRcdFx0XHRzcGVjaWFsLnJlbW92ZS5jYWxsKCBlbGVtLCBoYW5kbGVPYmogKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVtb3ZlIGdlbmVyaWMgZXZlbnQgaGFuZGxlciBpZiB3ZSByZW1vdmVkIHNvbWV0aGluZyBhbmQgbm8gbW9yZSBoYW5kbGVycyBleGlzdFxuXHRcdFx0Ly8gKGF2b2lkcyBwb3RlbnRpYWwgZm9yIGVuZGxlc3MgcmVjdXJzaW9uIGR1cmluZyByZW1vdmFsIG9mIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMpXG5cdFx0XHRpZiAoIG9yaWdDb3VudCAmJiAhaGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0XHRpZiAoICFzcGVjaWFsLnRlYXJkb3duIHx8XG5cdFx0XHRcdFx0c3BlY2lhbC50ZWFyZG93bi5jYWxsKCBlbGVtLCBuYW1lc3BhY2VzLCBlbGVtRGF0YS5oYW5kbGUgKSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0XHRqUXVlcnkucmVtb3ZlRXZlbnQoIGVsZW0sIHR5cGUsIGVsZW1EYXRhLmhhbmRsZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZGVsZXRlIGV2ZW50c1sgdHlwZSBdO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFJlbW92ZSBkYXRhIGFuZCB0aGUgZXhwYW5kbyBpZiBpdCdzIG5vIGxvbmdlciB1c2VkXG5cdFx0aWYgKCBqUXVlcnkuaXNFbXB0eU9iamVjdCggZXZlbnRzICkgKSB7XG5cdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFwiaGFuZGxlIGV2ZW50c1wiICk7XG5cdFx0fVxuXHR9LFxuXG5cdGRpc3BhdGNoOiBmdW5jdGlvbiggbmF0aXZlRXZlbnQgKSB7XG5cblx0XHR2YXIgaSwgaiwgcmV0LCBtYXRjaGVkLCBoYW5kbGVPYmosIGhhbmRsZXJRdWV1ZSxcblx0XHRcdGFyZ3MgPSBuZXcgQXJyYXkoIGFyZ3VtZW50cy5sZW5ndGggKSxcblxuXHRcdFx0Ly8gTWFrZSBhIHdyaXRhYmxlIGpRdWVyeS5FdmVudCBmcm9tIHRoZSBuYXRpdmUgZXZlbnQgb2JqZWN0XG5cdFx0XHRldmVudCA9IGpRdWVyeS5ldmVudC5maXgoIG5hdGl2ZUV2ZW50ICksXG5cblx0XHRcdGhhbmRsZXJzID0gKFxuXHRcdFx0XHRkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZXZlbnRzXCIgKSB8fCBPYmplY3QuY3JlYXRlKCBudWxsIClcblx0XHRcdClbIGV2ZW50LnR5cGUgXSB8fCBbXSxcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgZXZlbnQudHlwZSBdIHx8IHt9O1xuXG5cdFx0Ly8gVXNlIHRoZSBmaXgtZWQgalF1ZXJ5LkV2ZW50IHJhdGhlciB0aGFuIHRoZSAocmVhZC1vbmx5KSBuYXRpdmUgZXZlbnRcblx0XHRhcmdzWyAwIF0gPSBldmVudDtcblxuXHRcdGZvciAoIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrICkge1xuXHRcdFx0YXJnc1sgaSBdID0gYXJndW1lbnRzWyBpIF07XG5cdFx0fVxuXG5cdFx0ZXZlbnQuZGVsZWdhdGVUYXJnZXQgPSB0aGlzO1xuXG5cdFx0Ly8gQ2FsbCB0aGUgcHJlRGlzcGF0Y2ggaG9vayBmb3IgdGhlIG1hcHBlZCB0eXBlLCBhbmQgbGV0IGl0IGJhaWwgaWYgZGVzaXJlZFxuXHRcdGlmICggc3BlY2lhbC5wcmVEaXNwYXRjaCAmJiBzcGVjaWFsLnByZURpc3BhdGNoLmNhbGwoIHRoaXMsIGV2ZW50ICkgPT09IGZhbHNlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIERldGVybWluZSBoYW5kbGVyc1xuXHRcdGhhbmRsZXJRdWV1ZSA9IGpRdWVyeS5ldmVudC5oYW5kbGVycy5jYWxsKCB0aGlzLCBldmVudCwgaGFuZGxlcnMgKTtcblxuXHRcdC8vIFJ1biBkZWxlZ2F0ZXMgZmlyc3Q7IHRoZXkgbWF5IHdhbnQgdG8gc3RvcCBwcm9wYWdhdGlvbiBiZW5lYXRoIHVzXG5cdFx0aSA9IDA7XG5cdFx0d2hpbGUgKCAoIG1hdGNoZWQgPSBoYW5kbGVyUXVldWVbIGkrKyBdICkgJiYgIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRldmVudC5jdXJyZW50VGFyZ2V0ID0gbWF0Y2hlZC5lbGVtO1xuXG5cdFx0XHRqID0gMDtcblx0XHRcdHdoaWxlICggKCBoYW5kbGVPYmogPSBtYXRjaGVkLmhhbmRsZXJzWyBqKysgXSApICYmXG5cdFx0XHRcdCFldmVudC5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXG5cdFx0XHRcdC8vIElmIHRoZSBldmVudCBpcyBuYW1lc3BhY2VkLCB0aGVuIGVhY2ggaGFuZGxlciBpcyBvbmx5IGludm9rZWQgaWYgaXQgaXNcblx0XHRcdFx0Ly8gc3BlY2lhbGx5IHVuaXZlcnNhbCBvciBpdHMgbmFtZXNwYWNlcyBhcmUgYSBzdXBlcnNldCBvZiB0aGUgZXZlbnQncy5cblx0XHRcdFx0aWYgKCAhZXZlbnQucm5hbWVzcGFjZSB8fCBoYW5kbGVPYmoubmFtZXNwYWNlID09PSBmYWxzZSB8fFxuXHRcdFx0XHRcdGV2ZW50LnJuYW1lc3BhY2UudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkge1xuXG5cdFx0XHRcdFx0ZXZlbnQuaGFuZGxlT2JqID0gaGFuZGxlT2JqO1xuXHRcdFx0XHRcdGV2ZW50LmRhdGEgPSBoYW5kbGVPYmouZGF0YTtcblxuXHRcdFx0XHRcdHJldCA9ICggKCBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgaGFuZGxlT2JqLm9yaWdUeXBlIF0gfHwge30gKS5oYW5kbGUgfHxcblx0XHRcdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyICkuYXBwbHkoIG1hdGNoZWQuZWxlbSwgYXJncyApO1xuXG5cdFx0XHRcdFx0aWYgKCByZXQgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRcdGlmICggKCBldmVudC5yZXN1bHQgPSByZXQgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGwgdGhlIHBvc3REaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGVcblx0XHRpZiAoIHNwZWNpYWwucG9zdERpc3BhdGNoICkge1xuXHRcdFx0c3BlY2lhbC5wb3N0RGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZXZlbnQucmVzdWx0O1xuXHR9LFxuXG5cdGhhbmRsZXJzOiBmdW5jdGlvbiggZXZlbnQsIGhhbmRsZXJzICkge1xuXHRcdHZhciBpLCBoYW5kbGVPYmosIHNlbCwgbWF0Y2hlZEhhbmRsZXJzLCBtYXRjaGVkU2VsZWN0b3JzLFxuXHRcdFx0aGFuZGxlclF1ZXVlID0gW10sXG5cdFx0XHRkZWxlZ2F0ZUNvdW50ID0gaGFuZGxlcnMuZGVsZWdhdGVDb3VudCxcblx0XHRcdGN1ciA9IGV2ZW50LnRhcmdldDtcblxuXHRcdC8vIEZpbmQgZGVsZWdhdGUgaGFuZGxlcnNcblx0XHRpZiAoIGRlbGVnYXRlQ291bnQgJiZcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05XG5cdFx0XHQvLyBCbGFjay1ob2xlIFNWRyA8dXNlPiBpbnN0YW5jZSB0cmVlcyAodHJhYy0xMzE4MClcblx0XHRcdGN1ci5ub2RlVHlwZSAmJlxuXG5cdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NDJcblx0XHRcdC8vIFN1cHByZXNzIHNwZWMtdmlvbGF0aW5nIGNsaWNrcyBpbmRpY2F0aW5nIGEgbm9uLXByaW1hcnkgcG9pbnRlciBidXR0b24gKHRyYWMtMzg2MSlcblx0XHRcdC8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9ET00tTGV2ZWwtMy1FdmVudHMvI2V2ZW50LXR5cGUtY2xpY2tcblx0XHRcdC8vIFN1cHBvcnQ6IElFIDExIG9ubHlcblx0XHRcdC8vIC4uLmJ1dCBub3QgYXJyb3cga2V5IFwiY2xpY2tzXCIgb2YgcmFkaW8gaW5wdXRzLCB3aGljaCBjYW4gaGF2ZSBgYnV0dG9uYCAtMSAoZ2gtMjM0Mylcblx0XHRcdCEoIGV2ZW50LnR5cGUgPT09IFwiY2xpY2tcIiAmJiBldmVudC5idXR0b24gPj0gMSApICkge1xuXG5cdFx0XHRmb3IgKCA7IGN1ciAhPT0gdGhpczsgY3VyID0gY3VyLnBhcmVudE5vZGUgfHwgdGhpcyApIHtcblxuXHRcdFx0XHQvLyBEb24ndCBjaGVjayBub24tZWxlbWVudHMgKHRyYWMtMTMyMDgpXG5cdFx0XHRcdC8vIERvbid0IHByb2Nlc3MgY2xpY2tzIG9uIGRpc2FibGVkIGVsZW1lbnRzICh0cmFjLTY5MTEsIHRyYWMtODE2NSwgdHJhYy0xMTM4MiwgdHJhYy0xMTc2NClcblx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPT09IDEgJiYgISggZXZlbnQudHlwZSA9PT0gXCJjbGlja1wiICYmIGN1ci5kaXNhYmxlZCA9PT0gdHJ1ZSApICkge1xuXHRcdFx0XHRcdG1hdGNoZWRIYW5kbGVycyA9IFtdO1xuXHRcdFx0XHRcdG1hdGNoZWRTZWxlY3RvcnMgPSB7fTtcblx0XHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGRlbGVnYXRlQ291bnQ7IGkrKyApIHtcblx0XHRcdFx0XHRcdGhhbmRsZU9iaiA9IGhhbmRsZXJzWyBpIF07XG5cblx0XHRcdFx0XHRcdC8vIERvbid0IGNvbmZsaWN0IHdpdGggT2JqZWN0LnByb3RvdHlwZSBwcm9wZXJ0aWVzICh0cmFjLTEzMjAzKVxuXHRcdFx0XHRcdFx0c2VsID0gaGFuZGxlT2JqLnNlbGVjdG9yICsgXCIgXCI7XG5cblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gPSBoYW5kbGVPYmoubmVlZHNDb250ZXh0ID9cblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkoIHNlbCwgdGhpcyApLmluZGV4KCBjdXIgKSA+IC0xIDpcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuZmluZCggc2VsLCB0aGlzLCBudWxsLCBbIGN1ciBdICkubGVuZ3RoO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVkU2VsZWN0b3JzWyBzZWwgXSApIHtcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZEhhbmRsZXJzLnB1c2goIGhhbmRsZU9iaiApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIG1hdGNoZWRIYW5kbGVycy5sZW5ndGggKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVyUXVldWUucHVzaCggeyBlbGVtOiBjdXIsIGhhbmRsZXJzOiBtYXRjaGVkSGFuZGxlcnMgfSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEFkZCB0aGUgcmVtYWluaW5nIChkaXJlY3RseS1ib3VuZCkgaGFuZGxlcnNcblx0XHRjdXIgPSB0aGlzO1xuXHRcdGlmICggZGVsZWdhdGVDb3VudCA8IGhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdGhhbmRsZXJRdWV1ZS5wdXNoKCB7IGVsZW06IGN1ciwgaGFuZGxlcnM6IGhhbmRsZXJzLnNsaWNlKCBkZWxlZ2F0ZUNvdW50ICkgfSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBoYW5kbGVyUXVldWU7XG5cdH0sXG5cblx0YWRkUHJvcDogZnVuY3Rpb24oIG5hbWUsIGhvb2sgKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCBqUXVlcnkuRXZlbnQucHJvdG90eXBlLCBuYW1lLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXG5cdFx0XHRnZXQ6IGlzRnVuY3Rpb24oIGhvb2sgKSA/XG5cdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGhvb2soIHRoaXMub3JpZ2luYWxFdmVudCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRoaXMub3JpZ2luYWxFdmVudFsgbmFtZSBdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblxuXHRcdFx0c2V0OiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggdGhpcywgbmFtZSwge1xuXHRcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXHRcdFx0XHRcdHdyaXRhYmxlOiB0cnVlLFxuXHRcdFx0XHRcdHZhbHVlOiB2YWx1ZVxuXHRcdFx0XHR9ICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGZpeDogZnVuY3Rpb24oIG9yaWdpbmFsRXZlbnQgKSB7XG5cdFx0cmV0dXJuIG9yaWdpbmFsRXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gP1xuXHRcdFx0b3JpZ2luYWxFdmVudCA6XG5cdFx0XHRuZXcgalF1ZXJ5LkV2ZW50KCBvcmlnaW5hbEV2ZW50ICk7XG5cdH0sXG5cblx0c3BlY2lhbDoge1xuXHRcdGxvYWQ6IHtcblxuXHRcdFx0Ly8gUHJldmVudCB0cmlnZ2VyZWQgaW1hZ2UubG9hZCBldmVudHMgZnJvbSBidWJibGluZyB0byB3aW5kb3cubG9hZFxuXHRcdFx0bm9CdWJibGU6IHRydWVcblx0XHR9LFxuXHRcdGNsaWNrOiB7XG5cblx0XHRcdC8vIFV0aWxpemUgbmF0aXZlIGV2ZW50IHRvIGVuc3VyZSBjb3JyZWN0IHN0YXRlIGZvciBjaGVja2FibGUgaW5wdXRzXG5cdFx0XHRzZXR1cDogZnVuY3Rpb24oIGRhdGEgKSB7XG5cblx0XHRcdFx0Ly8gRm9yIG11dHVhbCBjb21wcmVzc2liaWxpdHkgd2l0aCBfZGVmYXVsdCwgcmVwbGFjZSBgdGhpc2AgYWNjZXNzIHdpdGggYSBsb2NhbCB2YXIuXG5cdFx0XHRcdC8vIGB8fCBkYXRhYCBpcyBkZWFkIGNvZGUgbWVhbnQgb25seSB0byBwcmVzZXJ2ZSB0aGUgdmFyaWFibGUgdGhyb3VnaCBtaW5pZmljYXRpb24uXG5cdFx0XHRcdHZhciBlbCA9IHRoaXMgfHwgZGF0YTtcblxuXHRcdFx0XHQvLyBDbGFpbSB0aGUgZmlyc3QgaGFuZGxlclxuXHRcdFx0XHRpZiAoIHJjaGVja2FibGVUeXBlLnRlc3QoIGVsLnR5cGUgKSAmJlxuXHRcdFx0XHRcdGVsLmNsaWNrICYmIG5vZGVOYW1lKCBlbCwgXCJpbnB1dFwiICkgKSB7XG5cblx0XHRcdFx0XHQvLyBkYXRhUHJpdi5zZXQoIGVsLCBcImNsaWNrXCIsIC4uLiApXG5cdFx0XHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIGVsLCBcImNsaWNrXCIsIHJldHVyblRydWUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJldHVybiBmYWxzZSB0byBhbGxvdyBub3JtYWwgcHJvY2Vzc2luZyBpbiB0aGUgY2FsbGVyXG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0sXG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbiggZGF0YSApIHtcblxuXHRcdFx0XHQvLyBGb3IgbXV0dWFsIGNvbXByZXNzaWJpbGl0eSB3aXRoIF9kZWZhdWx0LCByZXBsYWNlIGB0aGlzYCBhY2Nlc3Mgd2l0aCBhIGxvY2FsIHZhci5cblx0XHRcdFx0Ly8gYHx8IGRhdGFgIGlzIGRlYWQgY29kZSBtZWFudCBvbmx5IHRvIHByZXNlcnZlIHRoZSB2YXJpYWJsZSB0aHJvdWdoIG1pbmlmaWNhdGlvbi5cblx0XHRcdFx0dmFyIGVsID0gdGhpcyB8fCBkYXRhO1xuXG5cdFx0XHRcdC8vIEZvcmNlIHNldHVwIGJlZm9yZSB0cmlnZ2VyaW5nIGEgY2xpY2tcblx0XHRcdFx0aWYgKCByY2hlY2thYmxlVHlwZS50ZXN0KCBlbC50eXBlICkgJiZcblx0XHRcdFx0XHRlbC5jbGljayAmJiBub2RlTmFtZSggZWwsIFwiaW5wdXRcIiApICkge1xuXG5cdFx0XHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIGVsLCBcImNsaWNrXCIgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJldHVybiBub24tZmFsc2UgdG8gYWxsb3cgbm9ybWFsIGV2ZW50LXBhdGggcHJvcGFnYXRpb25cblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBGb3IgY3Jvc3MtYnJvd3NlciBjb25zaXN0ZW5jeSwgc3VwcHJlc3MgbmF0aXZlIC5jbGljaygpIG9uIGxpbmtzXG5cdFx0XHQvLyBBbHNvIHByZXZlbnQgaXQgaWYgd2UncmUgY3VycmVudGx5IGluc2lkZSBhIGxldmVyYWdlZCBuYXRpdmUtZXZlbnQgc3RhY2tcblx0XHRcdF9kZWZhdWx0OiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG5cdFx0XHRcdHJldHVybiByY2hlY2thYmxlVHlwZS50ZXN0KCB0YXJnZXQudHlwZSApICYmXG5cdFx0XHRcdFx0dGFyZ2V0LmNsaWNrICYmIG5vZGVOYW1lKCB0YXJnZXQsIFwiaW5wdXRcIiApICYmXG5cdFx0XHRcdFx0ZGF0YVByaXYuZ2V0KCB0YXJnZXQsIFwiY2xpY2tcIiApIHx8XG5cdFx0XHRcdFx0bm9kZU5hbWUoIHRhcmdldCwgXCJhXCIgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0YmVmb3JldW5sb2FkOiB7XG5cdFx0XHRwb3N0RGlzcGF0Y2g6IGZ1bmN0aW9uKCBldmVudCApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDIwK1xuXHRcdFx0XHQvLyBGaXJlZm94IGRvZXNuJ3QgYWxlcnQgaWYgdGhlIHJldHVyblZhbHVlIGZpZWxkIGlzIG5vdCBzZXQuXG5cdFx0XHRcdGlmICggZXZlbnQucmVzdWx0ICE9PSB1bmRlZmluZWQgJiYgZXZlbnQub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRldmVudC5vcmlnaW5hbEV2ZW50LnJldHVyblZhbHVlID0gZXZlbnQucmVzdWx0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59O1xuXG4vLyBFbnN1cmUgdGhlIHByZXNlbmNlIG9mIGFuIGV2ZW50IGxpc3RlbmVyIHRoYXQgaGFuZGxlcyBtYW51YWxseS10cmlnZ2VyZWRcbi8vIHN5bnRoZXRpYyBldmVudHMgYnkgaW50ZXJydXB0aW5nIHByb2dyZXNzIHVudGlsIHJlaW52b2tlZCBpbiByZXNwb25zZSB0b1xuLy8gKm5hdGl2ZSogZXZlbnRzIHRoYXQgaXQgZmlyZXMgZGlyZWN0bHksIGVuc3VyaW5nIHRoYXQgc3RhdGUgY2hhbmdlcyBoYXZlXG4vLyBhbHJlYWR5IG9jY3VycmVkIGJlZm9yZSBvdGhlciBsaXN0ZW5lcnMgYXJlIGludm9rZWQuXG5mdW5jdGlvbiBsZXZlcmFnZU5hdGl2ZSggZWwsIHR5cGUsIGV4cGVjdFN5bmMgKSB7XG5cblx0Ly8gTWlzc2luZyBleHBlY3RTeW5jIGluZGljYXRlcyBhIHRyaWdnZXIgY2FsbCwgd2hpY2ggbXVzdCBmb3JjZSBzZXR1cCB0aHJvdWdoIGpRdWVyeS5ldmVudC5hZGRcblx0aWYgKCAhZXhwZWN0U3luYyApIHtcblx0XHRpZiAoIGRhdGFQcml2LmdldCggZWwsIHR5cGUgKSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZWwsIHR5cGUsIHJldHVyblRydWUgKTtcblx0XHR9XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gUmVnaXN0ZXIgdGhlIGNvbnRyb2xsZXIgYXMgYSBzcGVjaWFsIHVuaXZlcnNhbCBoYW5kbGVyIGZvciBhbGwgZXZlbnQgbmFtZXNwYWNlc1xuXHRkYXRhUHJpdi5zZXQoIGVsLCB0eXBlLCBmYWxzZSApO1xuXHRqUXVlcnkuZXZlbnQuYWRkKCBlbCwgdHlwZSwge1xuXHRcdG5hbWVzcGFjZTogZmFsc2UsXG5cdFx0aGFuZGxlcjogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIG5vdEFzeW5jLCByZXN1bHQsXG5cdFx0XHRcdHNhdmVkID0gZGF0YVByaXYuZ2V0KCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdGlmICggKCBldmVudC5pc1RyaWdnZXIgJiAxICkgJiYgdGhpc1sgdHlwZSBdICkge1xuXG5cdFx0XHRcdC8vIEludGVycnVwdCBwcm9jZXNzaW5nIG9mIHRoZSBvdXRlciBzeW50aGV0aWMgLnRyaWdnZXIoKWVkIGV2ZW50XG5cdFx0XHRcdC8vIFNhdmVkIGRhdGEgc2hvdWxkIGJlIGZhbHNlIGluIHN1Y2ggY2FzZXMsIGJ1dCBtaWdodCBiZSBhIGxlZnRvdmVyIGNhcHR1cmUgb2JqZWN0XG5cdFx0XHRcdC8vIGZyb20gYW4gYXN5bmMgbmF0aXZlIGhhbmRsZXIgKGdoLTQzNTApXG5cdFx0XHRcdGlmICggIXNhdmVkLmxlbmd0aCApIHtcblxuXHRcdFx0XHRcdC8vIFN0b3JlIGFyZ3VtZW50cyBmb3IgdXNlIHdoZW4gaGFuZGxpbmcgdGhlIGlubmVyIG5hdGl2ZSBldmVudFxuXHRcdFx0XHRcdC8vIFRoZXJlIHdpbGwgYWx3YXlzIGJlIGF0IGxlYXN0IG9uZSBhcmd1bWVudCAoYW4gZXZlbnQgb2JqZWN0KSwgc28gdGhpcyBhcnJheVxuXHRcdFx0XHRcdC8vIHdpbGwgbm90IGJlIGNvbmZ1c2VkIHdpdGggYSBsZWZ0b3ZlciBjYXB0dXJlIG9iamVjdC5cblx0XHRcdFx0XHRzYXZlZCA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgdHlwZSwgc2F2ZWQgKTtcblxuXHRcdFx0XHRcdC8vIFRyaWdnZXIgdGhlIG5hdGl2ZSBldmVudCBhbmQgY2FwdHVyZSBpdHMgcmVzdWx0XG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTErXG5cdFx0XHRcdFx0Ly8gZm9jdXMoKSBhbmQgYmx1cigpIGFyZSBhc3luY2hyb25vdXNcblx0XHRcdFx0XHRub3RBc3luYyA9IGV4cGVjdFN5bmMoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0XHR0aGlzWyB0eXBlIF0oKTtcblx0XHRcdFx0XHRyZXN1bHQgPSBkYXRhUHJpdi5nZXQoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0XHRpZiAoIHNhdmVkICE9PSByZXN1bHQgfHwgbm90QXN5bmMgKSB7XG5cdFx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIHRoaXMsIHR5cGUsIGZhbHNlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHJlc3VsdCA9IHt9O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIHNhdmVkICE9PSByZXN1bHQgKSB7XG5cblx0XHRcdFx0XHRcdC8vIENhbmNlbCB0aGUgb3V0ZXIgc3ludGhldGljIGV2ZW50XG5cdFx0XHRcdFx0XHRldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA4Nitcblx0XHRcdFx0XHRcdC8vIEluIENocm9tZSwgaWYgYW4gZWxlbWVudCBoYXZpbmcgYSBmb2N1c291dCBoYW5kbGVyIGlzIGJsdXJyZWQgYnlcblx0XHRcdFx0XHRcdC8vIGNsaWNraW5nIG91dHNpZGUgb2YgaXQsIGl0IGludm9rZXMgdGhlIGhhbmRsZXIgc3luY2hyb25vdXNseS4gSWZcblx0XHRcdFx0XHRcdC8vIHRoYXQgaGFuZGxlciBjYWxscyBgLnJlbW92ZSgpYCBvbiB0aGUgZWxlbWVudCwgdGhlIGRhdGEgaXMgY2xlYXJlZCxcblx0XHRcdFx0XHRcdC8vIGxlYXZpbmcgYHJlc3VsdGAgdW5kZWZpbmVkLiBXZSBuZWVkIHRvIGd1YXJkIGFnYWluc3QgdGhpcy5cblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHQgJiYgcmVzdWx0LnZhbHVlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBJZiB0aGlzIGlzIGFuIGlubmVyIHN5bnRoZXRpYyBldmVudCBmb3IgYW4gZXZlbnQgd2l0aCBhIGJ1YmJsaW5nIHN1cnJvZ2F0ZVxuXHRcdFx0XHQvLyAoZm9jdXMgb3IgYmx1ciksIGFzc3VtZSB0aGF0IHRoZSBzdXJyb2dhdGUgYWxyZWFkeSBwcm9wYWdhdGVkIGZyb20gdHJpZ2dlcmluZyB0aGVcblx0XHRcdFx0Ly8gbmF0aXZlIGV2ZW50IGFuZCBwcmV2ZW50IHRoYXQgZnJvbSBoYXBwZW5pbmcgYWdhaW4gaGVyZS5cblx0XHRcdFx0Ly8gVGhpcyB0ZWNobmljYWxseSBnZXRzIHRoZSBvcmRlcmluZyB3cm9uZyB3LnIudC4gdG8gYC50cmlnZ2VyKClgIChpbiB3aGljaCB0aGVcblx0XHRcdFx0Ly8gYnViYmxpbmcgc3Vycm9nYXRlIHByb3BhZ2F0ZXMgKmFmdGVyKiB0aGUgbm9uLWJ1YmJsaW5nIGJhc2UpLCBidXQgdGhhdCBzZWVtc1xuXHRcdFx0XHQvLyBsZXNzIGJhZCB0aGFuIGR1cGxpY2F0aW9uLlxuXHRcdFx0XHR9IGVsc2UgaWYgKCAoIGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge30gKS5kZWxlZ2F0ZVR5cGUgKSB7XG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgdGhpcyBpcyBhIG5hdGl2ZSBldmVudCB0cmlnZ2VyZWQgYWJvdmUsIGV2ZXJ5dGhpbmcgaXMgbm93IGluIG9yZGVyXG5cdFx0XHQvLyBGaXJlIGFuIGlubmVyIHN5bnRoZXRpYyBldmVudCB3aXRoIHRoZSBvcmlnaW5hbCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIHNhdmVkLmxlbmd0aCApIHtcblxuXHRcdFx0XHQvLyAuLi5hbmQgY2FwdHVyZSB0aGUgcmVzdWx0XG5cdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgdHlwZSwge1xuXHRcdFx0XHRcdHZhbHVlOiBqUXVlcnkuZXZlbnQudHJpZ2dlcihcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTErXG5cdFx0XHRcdFx0XHQvLyBFeHRlbmQgd2l0aCB0aGUgcHJvdG90eXBlIHRvIHJlc2V0IHRoZSBhYm92ZSBzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKVxuXHRcdFx0XHRcdFx0alF1ZXJ5LmV4dGVuZCggc2F2ZWRbIDAgXSwgalF1ZXJ5LkV2ZW50LnByb3RvdHlwZSApLFxuXHRcdFx0XHRcdFx0c2F2ZWQuc2xpY2UoIDEgKSxcblx0XHRcdFx0XHRcdHRoaXNcblx0XHRcdFx0XHQpXG5cdFx0XHRcdH0gKTtcblxuXHRcdFx0XHQvLyBBYm9ydCBoYW5kbGluZyBvZiB0aGUgbmF0aXZlIGV2ZW50XG5cdFx0XHRcdGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuXHRcdFx0fVxuXHRcdH1cblx0fSApO1xufVxuXG5qUXVlcnkucmVtb3ZlRXZlbnQgPSBmdW5jdGlvbiggZWxlbSwgdHlwZSwgaGFuZGxlICkge1xuXG5cdC8vIFRoaXMgXCJpZlwiIGlzIG5lZWRlZCBmb3IgcGxhaW4gb2JqZWN0c1xuXHRpZiAoIGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciApIHtcblx0XHRlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIGhhbmRsZSApO1xuXHR9XG59O1xuXG5qUXVlcnkuRXZlbnQgPSBmdW5jdGlvbiggc3JjLCBwcm9wcyApIHtcblxuXHQvLyBBbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQgdGhlICduZXcnIGtleXdvcmRcblx0aWYgKCAhKCB0aGlzIGluc3RhbmNlb2YgalF1ZXJ5LkV2ZW50ICkgKSB7XG5cdFx0cmV0dXJuIG5ldyBqUXVlcnkuRXZlbnQoIHNyYywgcHJvcHMgKTtcblx0fVxuXG5cdC8vIEV2ZW50IG9iamVjdFxuXHRpZiAoIHNyYyAmJiBzcmMudHlwZSApIHtcblx0XHR0aGlzLm9yaWdpbmFsRXZlbnQgPSBzcmM7XG5cdFx0dGhpcy50eXBlID0gc3JjLnR5cGU7XG5cblx0XHQvLyBFdmVudHMgYnViYmxpbmcgdXAgdGhlIGRvY3VtZW50IG1heSBoYXZlIGJlZW4gbWFya2VkIGFzIHByZXZlbnRlZFxuXHRcdC8vIGJ5IGEgaGFuZGxlciBsb3dlciBkb3duIHRoZSB0cmVlOyByZWZsZWN0IHRoZSBjb3JyZWN0IHZhbHVlLlxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gc3JjLmRlZmF1bHRQcmV2ZW50ZWQgfHxcblx0XHRcdFx0c3JjLmRlZmF1bHRQcmV2ZW50ZWQgPT09IHVuZGVmaW5lZCAmJlxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seVxuXHRcdFx0XHRzcmMucmV0dXJuVmFsdWUgPT09IGZhbHNlID9cblx0XHRcdHJldHVyblRydWUgOlxuXHRcdFx0cmV0dXJuRmFsc2U7XG5cblx0XHQvLyBDcmVhdGUgdGFyZ2V0IHByb3BlcnRpZXNcblx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgPD02IC0gNyBvbmx5XG5cdFx0Ly8gVGFyZ2V0IHNob3VsZCBub3QgYmUgYSB0ZXh0IG5vZGUgKHRyYWMtNTA0LCB0cmFjLTEzMTQzKVxuXHRcdHRoaXMudGFyZ2V0ID0gKCBzcmMudGFyZ2V0ICYmIHNyYy50YXJnZXQubm9kZVR5cGUgPT09IDMgKSA/XG5cdFx0XHRzcmMudGFyZ2V0LnBhcmVudE5vZGUgOlxuXHRcdFx0c3JjLnRhcmdldDtcblxuXHRcdHRoaXMuY3VycmVudFRhcmdldCA9IHNyYy5jdXJyZW50VGFyZ2V0O1xuXHRcdHRoaXMucmVsYXRlZFRhcmdldCA9IHNyYy5yZWxhdGVkVGFyZ2V0O1xuXG5cdC8vIEV2ZW50IHR5cGVcblx0fSBlbHNlIHtcblx0XHR0aGlzLnR5cGUgPSBzcmM7XG5cdH1cblxuXHQvLyBQdXQgZXhwbGljaXRseSBwcm92aWRlZCBwcm9wZXJ0aWVzIG9udG8gdGhlIGV2ZW50IG9iamVjdFxuXHRpZiAoIHByb3BzICkge1xuXHRcdGpRdWVyeS5leHRlbmQoIHRoaXMsIHByb3BzICk7XG5cdH1cblxuXHQvLyBDcmVhdGUgYSB0aW1lc3RhbXAgaWYgaW5jb21pbmcgZXZlbnQgZG9lc24ndCBoYXZlIG9uZVxuXHR0aGlzLnRpbWVTdGFtcCA9IHNyYyAmJiBzcmMudGltZVN0YW1wIHx8IERhdGUubm93KCk7XG5cblx0Ly8gTWFyayBpdCBhcyBmaXhlZFxuXHR0aGlzWyBqUXVlcnkuZXhwYW5kbyBdID0gdHJ1ZTtcbn07XG5cbi8vIGpRdWVyeS5FdmVudCBpcyBiYXNlZCBvbiBET00zIEV2ZW50cyBhcyBzcGVjaWZpZWQgYnkgdGhlIEVDTUFTY3JpcHQgTGFuZ3VhZ2UgQmluZGluZ1xuLy8gaHR0cHM6Ly93d3cudzMub3JnL1RSLzIwMDMvV0QtRE9NLUxldmVsLTMtRXZlbnRzLTIwMDMwMzMxL2VjbWEtc2NyaXB0LWJpbmRpbmcuaHRtbFxualF1ZXJ5LkV2ZW50LnByb3RvdHlwZSA9IHtcblx0Y29uc3RydWN0b3I6IGpRdWVyeS5FdmVudCxcblx0aXNEZWZhdWx0UHJldmVudGVkOiByZXR1cm5GYWxzZSxcblx0aXNQcm9wYWdhdGlvblN0b3BwZWQ6IHJldHVybkZhbHNlLFxuXHRpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZDogcmV0dXJuRmFsc2UsXG5cdGlzU2ltdWxhdGVkOiBmYWxzZSxcblxuXHRwcmV2ZW50RGVmYXVsdDogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzRGVmYXVsdFByZXZlbnRlZCA9IHJldHVyblRydWU7XG5cblx0XHRpZiAoIGUgJiYgIXRoaXMuaXNTaW11bGF0ZWQgKSB7XG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0fVxuXHR9LFxuXHRzdG9wUHJvcGFnYXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xuXG5cdFx0dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZCA9IHJldHVyblRydWU7XG5cblx0XHRpZiAoIGUgJiYgIXRoaXMuaXNTaW11bGF0ZWQgKSB7XG5cdFx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdH1cblx0fSxcblx0c3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcblx0XHR9XG5cblx0XHR0aGlzLnN0b3BQcm9wYWdhdGlvbigpO1xuXHR9XG59O1xuXG4vLyBJbmNsdWRlcyBhbGwgY29tbW9uIGV2ZW50IHByb3BzIGluY2x1ZGluZyBLZXlFdmVudCBhbmQgTW91c2VFdmVudCBzcGVjaWZpYyBwcm9wc1xualF1ZXJ5LmVhY2goIHtcblx0YWx0S2V5OiB0cnVlLFxuXHRidWJibGVzOiB0cnVlLFxuXHRjYW5jZWxhYmxlOiB0cnVlLFxuXHRjaGFuZ2VkVG91Y2hlczogdHJ1ZSxcblx0Y3RybEtleTogdHJ1ZSxcblx0ZGV0YWlsOiB0cnVlLFxuXHRldmVudFBoYXNlOiB0cnVlLFxuXHRtZXRhS2V5OiB0cnVlLFxuXHRwYWdlWDogdHJ1ZSxcblx0cGFnZVk6IHRydWUsXG5cdHNoaWZ0S2V5OiB0cnVlLFxuXHR2aWV3OiB0cnVlLFxuXHRcImNoYXJcIjogdHJ1ZSxcblx0Y29kZTogdHJ1ZSxcblx0Y2hhckNvZGU6IHRydWUsXG5cdGtleTogdHJ1ZSxcblx0a2V5Q29kZTogdHJ1ZSxcblx0YnV0dG9uOiB0cnVlLFxuXHRidXR0b25zOiB0cnVlLFxuXHRjbGllbnRYOiB0cnVlLFxuXHRjbGllbnRZOiB0cnVlLFxuXHRvZmZzZXRYOiB0cnVlLFxuXHRvZmZzZXRZOiB0cnVlLFxuXHRwb2ludGVySWQ6IHRydWUsXG5cdHBvaW50ZXJUeXBlOiB0cnVlLFxuXHRzY3JlZW5YOiB0cnVlLFxuXHRzY3JlZW5ZOiB0cnVlLFxuXHR0YXJnZXRUb3VjaGVzOiB0cnVlLFxuXHR0b0VsZW1lbnQ6IHRydWUsXG5cdHRvdWNoZXM6IHRydWUsXG5cdHdoaWNoOiB0cnVlXG59LCBqUXVlcnkuZXZlbnQuYWRkUHJvcCApO1xuXG5qUXVlcnkuZWFjaCggeyBmb2N1czogXCJmb2N1c2luXCIsIGJsdXI6IFwiZm9jdXNvdXRcIiB9LCBmdW5jdGlvbiggdHlwZSwgZGVsZWdhdGVUeXBlICkge1xuXHRqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdID0ge1xuXG5cdFx0Ly8gVXRpbGl6ZSBuYXRpdmUgZXZlbnQgaWYgcG9zc2libGUgc28gYmx1ci9mb2N1cyBzZXF1ZW5jZSBpcyBjb3JyZWN0XG5cdFx0c2V0dXA6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBDbGFpbSB0aGUgZmlyc3QgaGFuZGxlclxuXHRcdFx0Ly8gZGF0YVByaXYuc2V0KCB0aGlzLCBcImZvY3VzXCIsIC4uLiApXG5cdFx0XHQvLyBkYXRhUHJpdi5zZXQoIHRoaXMsIFwiYmx1clwiLCAuLi4gKVxuXHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIHRoaXMsIHR5cGUsIGV4cGVjdFN5bmMgKTtcblxuXHRcdFx0Ly8gUmV0dXJuIGZhbHNlIHRvIGFsbG93IG5vcm1hbCBwcm9jZXNzaW5nIGluIHRoZSBjYWxsZXJcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9LFxuXHRcdHRyaWdnZXI6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBGb3JjZSBzZXR1cCBiZWZvcmUgdHJpZ2dlclxuXHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIHRoaXMsIHR5cGUgKTtcblxuXHRcdFx0Ly8gUmV0dXJuIG5vbi1mYWxzZSB0byBhbGxvdyBub3JtYWwgZXZlbnQtcGF0aCBwcm9wYWdhdGlvblxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSxcblxuXHRcdC8vIFN1cHByZXNzIG5hdGl2ZSBmb2N1cyBvciBibHVyIGlmIHdlJ3JlIGN1cnJlbnRseSBpbnNpZGVcblx0XHQvLyBhIGxldmVyYWdlZCBuYXRpdmUtZXZlbnQgc3RhY2tcblx0XHRfZGVmYXVsdDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0cmV0dXJuIGRhdGFQcml2LmdldCggZXZlbnQudGFyZ2V0LCB0eXBlICk7XG5cdFx0fSxcblxuXHRcdGRlbGVnYXRlVHlwZTogZGVsZWdhdGVUeXBlXG5cdH07XG59ICk7XG5cbi8vIENyZWF0ZSBtb3VzZWVudGVyL2xlYXZlIGV2ZW50cyB1c2luZyBtb3VzZW92ZXIvb3V0IGFuZCBldmVudC10aW1lIGNoZWNrc1xuLy8gc28gdGhhdCBldmVudCBkZWxlZ2F0aW9uIHdvcmtzIGluIGpRdWVyeS5cbi8vIERvIHRoZSBzYW1lIGZvciBwb2ludGVyZW50ZXIvcG9pbnRlcmxlYXZlIGFuZCBwb2ludGVyb3Zlci9wb2ludGVyb3V0XG4vL1xuLy8gU3VwcG9ydDogU2FmYXJpIDcgb25seVxuLy8gU2FmYXJpIHNlbmRzIG1vdXNlZW50ZXIgdG9vIG9mdGVuOyBzZWU6XG4vLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD00NzAyNThcbi8vIGZvciB0aGUgZGVzY3JpcHRpb24gb2YgdGhlIGJ1ZyAoaXQgZXhpc3RlZCBpbiBvbGRlciBDaHJvbWUgdmVyc2lvbnMgYXMgd2VsbCkuXG5qUXVlcnkuZWFjaCgge1xuXHRtb3VzZWVudGVyOiBcIm1vdXNlb3ZlclwiLFxuXHRtb3VzZWxlYXZlOiBcIm1vdXNlb3V0XCIsXG5cdHBvaW50ZXJlbnRlcjogXCJwb2ludGVyb3ZlclwiLFxuXHRwb2ludGVybGVhdmU6IFwicG9pbnRlcm91dFwiXG59LCBmdW5jdGlvbiggb3JpZywgZml4ICkge1xuXHRqUXVlcnkuZXZlbnQuc3BlY2lhbFsgb3JpZyBdID0ge1xuXHRcdGRlbGVnYXRlVHlwZTogZml4LFxuXHRcdGJpbmRUeXBlOiBmaXgsXG5cblx0XHRoYW5kbGU6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdHZhciByZXQsXG5cdFx0XHRcdHRhcmdldCA9IHRoaXMsXG5cdFx0XHRcdHJlbGF0ZWQgPSBldmVudC5yZWxhdGVkVGFyZ2V0LFxuXHRcdFx0XHRoYW5kbGVPYmogPSBldmVudC5oYW5kbGVPYmo7XG5cblx0XHRcdC8vIEZvciBtb3VzZWVudGVyL2xlYXZlIGNhbGwgdGhlIGhhbmRsZXIgaWYgcmVsYXRlZCBpcyBvdXRzaWRlIHRoZSB0YXJnZXQuXG5cdFx0XHQvLyBOQjogTm8gcmVsYXRlZFRhcmdldCBpZiB0aGUgbW91c2UgbGVmdC9lbnRlcmVkIHRoZSBicm93c2VyIHdpbmRvd1xuXHRcdFx0aWYgKCAhcmVsYXRlZCB8fCAoIHJlbGF0ZWQgIT09IHRhcmdldCAmJiAhalF1ZXJ5LmNvbnRhaW5zKCB0YXJnZXQsIHJlbGF0ZWQgKSApICkge1xuXHRcdFx0XHRldmVudC50eXBlID0gaGFuZGxlT2JqLm9yaWdUeXBlO1xuXHRcdFx0XHRyZXQgPSBoYW5kbGVPYmouaGFuZGxlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdGV2ZW50LnR5cGUgPSBmaXg7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblx0fTtcbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXG5cdG9uOiBmdW5jdGlvbiggdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApIHtcblx0XHRyZXR1cm4gb24oIHRoaXMsIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKTtcblx0fSxcblx0b25lOiBmdW5jdGlvbiggdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApIHtcblx0XHRyZXR1cm4gb24oIHRoaXMsIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4sIDEgKTtcblx0fSxcblx0b2ZmOiBmdW5jdGlvbiggdHlwZXMsIHNlbGVjdG9yLCBmbiApIHtcblx0XHR2YXIgaGFuZGxlT2JqLCB0eXBlO1xuXHRcdGlmICggdHlwZXMgJiYgdHlwZXMucHJldmVudERlZmF1bHQgJiYgdHlwZXMuaGFuZGxlT2JqICkge1xuXG5cdFx0XHQvLyAoIGV2ZW50ICkgIGRpc3BhdGNoZWQgalF1ZXJ5LkV2ZW50XG5cdFx0XHRoYW5kbGVPYmogPSB0eXBlcy5oYW5kbGVPYmo7XG5cdFx0XHRqUXVlcnkoIHR5cGVzLmRlbGVnYXRlVGFyZ2V0ICkub2ZmKFxuXHRcdFx0XHRoYW5kbGVPYmoubmFtZXNwYWNlID9cblx0XHRcdFx0XHRoYW5kbGVPYmoub3JpZ1R5cGUgKyBcIi5cIiArIGhhbmRsZU9iai5uYW1lc3BhY2UgOlxuXHRcdFx0XHRcdGhhbmRsZU9iai5vcmlnVHlwZSxcblx0XHRcdFx0aGFuZGxlT2JqLnNlbGVjdG9yLFxuXHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlclxuXHRcdFx0KTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblx0XHRpZiAoIHR5cGVvZiB0eXBlcyA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcy1vYmplY3QgWywgc2VsZWN0b3JdIClcblx0XHRcdGZvciAoIHR5cGUgaW4gdHlwZXMgKSB7XG5cdFx0XHRcdHRoaXMub2ZmKCB0eXBlLCBzZWxlY3RvciwgdHlwZXNbIHR5cGUgXSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXHRcdGlmICggc2VsZWN0b3IgPT09IGZhbHNlIHx8IHR5cGVvZiBzZWxlY3RvciA9PT0gXCJmdW5jdGlvblwiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzIFssIGZuXSApXG5cdFx0XHRmbiA9IHNlbGVjdG9yO1xuXHRcdFx0c2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdGlmICggZm4gPT09IGZhbHNlICkge1xuXHRcdFx0Zm4gPSByZXR1cm5GYWxzZTtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCB0aGlzLCB0eXBlcywgZm4sIHNlbGVjdG9yICk7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cblxudmFyXG5cblx0Ly8gU3VwcG9ydDogSUUgPD0xMCAtIDExLCBFZGdlIDEyIC0gMTMgb25seVxuXHQvLyBJbiBJRS9FZGdlIHVzaW5nIHJlZ2V4IGdyb3VwcyBoZXJlIGNhdXNlcyBzZXZlcmUgc2xvd2Rvd25zLlxuXHQvLyBTZWUgaHR0cHM6Ly9jb25uZWN0Lm1pY3Jvc29mdC5jb20vSUUvZmVlZGJhY2svZGV0YWlscy8xNzM2NTEyL1xuXHRybm9Jbm5lcmh0bWwgPSAvPHNjcmlwdHw8c3R5bGV8PGxpbmsvaSxcblxuXHQvLyBjaGVja2VkPVwiY2hlY2tlZFwiIG9yIGNoZWNrZWRcblx0cmNoZWNrZWQgPSAvY2hlY2tlZFxccyooPzpbXj1dfD1cXHMqLmNoZWNrZWQuKS9pLFxuXG5cdHJjbGVhblNjcmlwdCA9IC9eXFxzKjwhXFxbQ0RBVEFcXFt8XFxdXFxdPlxccyokL2c7XG5cbi8vIFByZWZlciBhIHRib2R5IG92ZXIgaXRzIHBhcmVudCB0YWJsZSBmb3IgY29udGFpbmluZyBuZXcgcm93c1xuZnVuY3Rpb24gbWFuaXB1bGF0aW9uVGFyZ2V0KCBlbGVtLCBjb250ZW50ICkge1xuXHRpZiAoIG5vZGVOYW1lKCBlbGVtLCBcInRhYmxlXCIgKSAmJlxuXHRcdG5vZGVOYW1lKCBjb250ZW50Lm5vZGVUeXBlICE9PSAxMSA/IGNvbnRlbnQgOiBjb250ZW50LmZpcnN0Q2hpbGQsIFwidHJcIiApICkge1xuXG5cdFx0cmV0dXJuIGpRdWVyeSggZWxlbSApLmNoaWxkcmVuKCBcInRib2R5XCIgKVsgMCBdIHx8IGVsZW07XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxuLy8gUmVwbGFjZS9yZXN0b3JlIHRoZSB0eXBlIGF0dHJpYnV0ZSBvZiBzY3JpcHQgZWxlbWVudHMgZm9yIHNhZmUgRE9NIG1hbmlwdWxhdGlvblxuZnVuY3Rpb24gZGlzYWJsZVNjcmlwdCggZWxlbSApIHtcblx0ZWxlbS50eXBlID0gKCBlbGVtLmdldEF0dHJpYnV0ZSggXCJ0eXBlXCIgKSAhPT0gbnVsbCApICsgXCIvXCIgKyBlbGVtLnR5cGU7XG5cdHJldHVybiBlbGVtO1xufVxuZnVuY3Rpb24gcmVzdG9yZVNjcmlwdCggZWxlbSApIHtcblx0aWYgKCAoIGVsZW0udHlwZSB8fCBcIlwiICkuc2xpY2UoIDAsIDUgKSA9PT0gXCJ0cnVlL1wiICkge1xuXHRcdGVsZW0udHlwZSA9IGVsZW0udHlwZS5zbGljZSggNSApO1xuXHR9IGVsc2Uge1xuXHRcdGVsZW0ucmVtb3ZlQXR0cmlidXRlKCBcInR5cGVcIiApO1xuXHR9XG5cblx0cmV0dXJuIGVsZW07XG59XG5cbmZ1bmN0aW9uIGNsb25lQ29weUV2ZW50KCBzcmMsIGRlc3QgKSB7XG5cdHZhciBpLCBsLCB0eXBlLCBwZGF0YU9sZCwgdWRhdGFPbGQsIHVkYXRhQ3VyLCBldmVudHM7XG5cblx0aWYgKCBkZXN0Lm5vZGVUeXBlICE9PSAxICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIDEuIENvcHkgcHJpdmF0ZSBkYXRhOiBldmVudHMsIGhhbmRsZXJzLCBldGMuXG5cdGlmICggZGF0YVByaXYuaGFzRGF0YSggc3JjICkgKSB7XG5cdFx0cGRhdGFPbGQgPSBkYXRhUHJpdi5nZXQoIHNyYyApO1xuXHRcdGV2ZW50cyA9IHBkYXRhT2xkLmV2ZW50cztcblxuXHRcdGlmICggZXZlbnRzICkge1xuXHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBkZXN0LCBcImhhbmRsZSBldmVudHNcIiApO1xuXG5cdFx0XHRmb3IgKCB0eXBlIGluIGV2ZW50cyApIHtcblx0XHRcdFx0Zm9yICggaSA9IDAsIGwgPSBldmVudHNbIHR5cGUgXS5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZGVzdCwgdHlwZSwgZXZlbnRzWyB0eXBlIF1bIGkgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gMi4gQ29weSB1c2VyIGRhdGFcblx0aWYgKCBkYXRhVXNlci5oYXNEYXRhKCBzcmMgKSApIHtcblx0XHR1ZGF0YU9sZCA9IGRhdGFVc2VyLmFjY2Vzcyggc3JjICk7XG5cdFx0dWRhdGFDdXIgPSBqUXVlcnkuZXh0ZW5kKCB7fSwgdWRhdGFPbGQgKTtcblxuXHRcdGRhdGFVc2VyLnNldCggZGVzdCwgdWRhdGFDdXIgKTtcblx0fVxufVxuXG4vLyBGaXggSUUgYnVncywgc2VlIHN1cHBvcnQgdGVzdHNcbmZ1bmN0aW9uIGZpeElucHV0KCBzcmMsIGRlc3QgKSB7XG5cdHZhciBub2RlTmFtZSA9IGRlc3Qubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblxuXHQvLyBGYWlscyB0byBwZXJzaXN0IHRoZSBjaGVja2VkIHN0YXRlIG9mIGEgY2xvbmVkIGNoZWNrYm94IG9yIHJhZGlvIGJ1dHRvbi5cblx0aWYgKCBub2RlTmFtZSA9PT0gXCJpbnB1dFwiICYmIHJjaGVja2FibGVUeXBlLnRlc3QoIHNyYy50eXBlICkgKSB7XG5cdFx0ZGVzdC5jaGVja2VkID0gc3JjLmNoZWNrZWQ7XG5cblx0Ly8gRmFpbHMgdG8gcmV0dXJuIHRoZSBzZWxlY3RlZCBvcHRpb24gdG8gdGhlIGRlZmF1bHQgc2VsZWN0ZWQgc3RhdGUgd2hlbiBjbG9uaW5nIG9wdGlvbnNcblx0fSBlbHNlIGlmICggbm9kZU5hbWUgPT09IFwiaW5wdXRcIiB8fCBub2RlTmFtZSA9PT0gXCJ0ZXh0YXJlYVwiICkge1xuXHRcdGRlc3QuZGVmYXVsdFZhbHVlID0gc3JjLmRlZmF1bHRWYWx1ZTtcblx0fVxufVxuXG5mdW5jdGlvbiBkb21NYW5pcCggY29sbGVjdGlvbiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKSB7XG5cblx0Ly8gRmxhdHRlbiBhbnkgbmVzdGVkIGFycmF5c1xuXHRhcmdzID0gZmxhdCggYXJncyApO1xuXG5cdHZhciBmcmFnbWVudCwgZmlyc3QsIHNjcmlwdHMsIGhhc1NjcmlwdHMsIG5vZGUsIGRvYyxcblx0XHRpID0gMCxcblx0XHRsID0gY29sbGVjdGlvbi5sZW5ndGgsXG5cdFx0aU5vQ2xvbmUgPSBsIC0gMSxcblx0XHR2YWx1ZSA9IGFyZ3NbIDAgXSxcblx0XHR2YWx1ZUlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uKCB2YWx1ZSApO1xuXG5cdC8vIFdlIGNhbid0IGNsb25lTm9kZSBmcmFnbWVudHMgdGhhdCBjb250YWluIGNoZWNrZWQsIGluIFdlYktpdFxuXHRpZiAoIHZhbHVlSXNGdW5jdGlvbiB8fFxuXHRcdFx0KCBsID4gMSAmJiB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiZcblx0XHRcdFx0IXN1cHBvcnQuY2hlY2tDbG9uZSAmJiByY2hlY2tlZC50ZXN0KCB2YWx1ZSApICkgKSB7XG5cdFx0cmV0dXJuIGNvbGxlY3Rpb24uZWFjaCggZnVuY3Rpb24oIGluZGV4ICkge1xuXHRcdFx0dmFyIHNlbGYgPSBjb2xsZWN0aW9uLmVxKCBpbmRleCApO1xuXHRcdFx0aWYgKCB2YWx1ZUlzRnVuY3Rpb24gKSB7XG5cdFx0XHRcdGFyZ3NbIDAgXSA9IHZhbHVlLmNhbGwoIHRoaXMsIGluZGV4LCBzZWxmLmh0bWwoKSApO1xuXHRcdFx0fVxuXHRcdFx0ZG9tTWFuaXAoIHNlbGYsIGFyZ3MsIGNhbGxiYWNrLCBpZ25vcmVkICk7XG5cdFx0fSApO1xuXHR9XG5cblx0aWYgKCBsICkge1xuXHRcdGZyYWdtZW50ID0gYnVpbGRGcmFnbWVudCggYXJncywgY29sbGVjdGlvblsgMCBdLm93bmVyRG9jdW1lbnQsIGZhbHNlLCBjb2xsZWN0aW9uLCBpZ25vcmVkICk7XG5cdFx0Zmlyc3QgPSBmcmFnbWVudC5maXJzdENoaWxkO1xuXG5cdFx0aWYgKCBmcmFnbWVudC5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMSApIHtcblx0XHRcdGZyYWdtZW50ID0gZmlyc3Q7XG5cdFx0fVxuXG5cdFx0Ly8gUmVxdWlyZSBlaXRoZXIgbmV3IGNvbnRlbnQgb3IgYW4gaW50ZXJlc3QgaW4gaWdub3JlZCBlbGVtZW50cyB0byBpbnZva2UgdGhlIGNhbGxiYWNrXG5cdFx0aWYgKCBmaXJzdCB8fCBpZ25vcmVkICkge1xuXHRcdFx0c2NyaXB0cyA9IGpRdWVyeS5tYXAoIGdldEFsbCggZnJhZ21lbnQsIFwic2NyaXB0XCIgKSwgZGlzYWJsZVNjcmlwdCApO1xuXHRcdFx0aGFzU2NyaXB0cyA9IHNjcmlwdHMubGVuZ3RoO1xuXG5cdFx0XHQvLyBVc2UgdGhlIG9yaWdpbmFsIGZyYWdtZW50IGZvciB0aGUgbGFzdCBpdGVtXG5cdFx0XHQvLyBpbnN0ZWFkIG9mIHRoZSBmaXJzdCBiZWNhdXNlIGl0IGNhbiBlbmQgdXBcblx0XHRcdC8vIGJlaW5nIGVtcHRpZWQgaW5jb3JyZWN0bHkgaW4gY2VydGFpbiBzaXR1YXRpb25zICh0cmFjLTgwNzApLlxuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRub2RlID0gZnJhZ21lbnQ7XG5cblx0XHRcdFx0aWYgKCBpICE9PSBpTm9DbG9uZSApIHtcblx0XHRcdFx0XHRub2RlID0galF1ZXJ5LmNsb25lKCBub2RlLCB0cnVlLCB0cnVlICk7XG5cblx0XHRcdFx0XHQvLyBLZWVwIHJlZmVyZW5jZXMgdG8gY2xvbmVkIHNjcmlwdHMgZm9yIGxhdGVyIHJlc3RvcmF0aW9uXG5cdFx0XHRcdFx0aWYgKCBoYXNTY3JpcHRzICkge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdFx0XHRcdGpRdWVyeS5tZXJnZSggc2NyaXB0cywgZ2V0QWxsKCBub2RlLCBcInNjcmlwdFwiICkgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRjYWxsYmFjay5jYWxsKCBjb2xsZWN0aW9uWyBpIF0sIG5vZGUsIGkgKTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBoYXNTY3JpcHRzICkge1xuXHRcdFx0XHRkb2MgPSBzY3JpcHRzWyBzY3JpcHRzLmxlbmd0aCAtIDEgXS5vd25lckRvY3VtZW50O1xuXG5cdFx0XHRcdC8vIFJlZW5hYmxlIHNjcmlwdHNcblx0XHRcdFx0alF1ZXJ5Lm1hcCggc2NyaXB0cywgcmVzdG9yZVNjcmlwdCApO1xuXG5cdFx0XHRcdC8vIEV2YWx1YXRlIGV4ZWN1dGFibGUgc2NyaXB0cyBvbiBmaXJzdCBkb2N1bWVudCBpbnNlcnRpb25cblx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBoYXNTY3JpcHRzOyBpKysgKSB7XG5cdFx0XHRcdFx0bm9kZSA9IHNjcmlwdHNbIGkgXTtcblx0XHRcdFx0XHRpZiAoIHJzY3JpcHRUeXBlLnRlc3QoIG5vZGUudHlwZSB8fCBcIlwiICkgJiZcblx0XHRcdFx0XHRcdCFkYXRhUHJpdi5hY2Nlc3MoIG5vZGUsIFwiZ2xvYmFsRXZhbFwiICkgJiZcblx0XHRcdFx0XHRcdGpRdWVyeS5jb250YWlucyggZG9jLCBub2RlICkgKSB7XG5cblx0XHRcdFx0XHRcdGlmICggbm9kZS5zcmMgJiYgKCBub2RlLnR5cGUgfHwgXCJcIiApLnRvTG93ZXJDYXNlKCkgICE9PSBcIm1vZHVsZVwiICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIE9wdGlvbmFsIEFKQVggZGVwZW5kZW5jeSwgYnV0IHdvbid0IHJ1biBzY3JpcHRzIGlmIG5vdCBwcmVzZW50XG5cdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5Ll9ldmFsVXJsICYmICFub2RlLm5vTW9kdWxlICkge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5fZXZhbFVybCggbm9kZS5zcmMsIHtcblx0XHRcdFx0XHRcdFx0XHRcdG5vbmNlOiBub2RlLm5vbmNlIHx8IG5vZGUuZ2V0QXR0cmlidXRlKCBcIm5vbmNlXCIgKVxuXHRcdFx0XHRcdFx0XHRcdH0sIGRvYyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFVud3JhcCBhIENEQVRBIHNlY3Rpb24gY29udGFpbmluZyBzY3JpcHQgY29udGVudHMuIFRoaXMgc2hvdWxkbid0IGJlXG5cdFx0XHRcdFx0XHRcdC8vIG5lZWRlZCBhcyBpbiBYTUwgZG9jdW1lbnRzIHRoZXkncmUgYWxyZWFkeSBub3QgdmlzaWJsZSB3aGVuXG5cdFx0XHRcdFx0XHRcdC8vIGluc3BlY3RpbmcgZWxlbWVudCBjb250ZW50cyBhbmQgaW4gSFRNTCBkb2N1bWVudHMgdGhleSBoYXZlIG5vXG5cdFx0XHRcdFx0XHRcdC8vIG1lYW5pbmcgYnV0IHdlJ3JlIHByZXNlcnZpbmcgdGhhdCBsb2dpYyBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkuXG5cdFx0XHRcdFx0XHRcdC8vIFRoaXMgd2lsbCBiZSByZW1vdmVkIGNvbXBsZXRlbHkgaW4gNC4wLiBTZWUgZ2gtNDkwNC5cblx0XHRcdFx0XHRcdFx0RE9NRXZhbCggbm9kZS50ZXh0Q29udGVudC5yZXBsYWNlKCByY2xlYW5TY3JpcHQsIFwiXCIgKSwgbm9kZSwgZG9jICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGNvbGxlY3Rpb247XG59XG5cbmZ1bmN0aW9uIHJlbW92ZSggZWxlbSwgc2VsZWN0b3IsIGtlZXBEYXRhICkge1xuXHR2YXIgbm9kZSxcblx0XHRub2RlcyA9IHNlbGVjdG9yID8galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIGVsZW0gKSA6IGVsZW0sXG5cdFx0aSA9IDA7XG5cblx0Zm9yICggOyAoIG5vZGUgPSBub2Rlc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXHRcdGlmICggIWtlZXBEYXRhICYmIG5vZGUubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIG5vZGUgKSApO1xuXHRcdH1cblxuXHRcdGlmICggbm9kZS5wYXJlbnROb2RlICkge1xuXHRcdFx0aWYgKCBrZWVwRGF0YSAmJiBpc0F0dGFjaGVkKCBub2RlICkgKSB7XG5cdFx0XHRcdHNldEdsb2JhbEV2YWwoIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHR9XG5cdFx0XHRub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIG5vZGUgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRodG1sUHJlZmlsdGVyOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHRyZXR1cm4gaHRtbDtcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24oIGVsZW0sIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdHZhciBpLCBsLCBzcmNFbGVtZW50cywgZGVzdEVsZW1lbnRzLFxuXHRcdFx0Y2xvbmUgPSBlbGVtLmNsb25lTm9kZSggdHJ1ZSApLFxuXHRcdFx0aW5QYWdlID0gaXNBdHRhY2hlZCggZWxlbSApO1xuXG5cdFx0Ly8gRml4IElFIGNsb25pbmcgaXNzdWVzXG5cdFx0aWYgKCAhc3VwcG9ydC5ub0Nsb25lQ2hlY2tlZCAmJiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgZWxlbS5ub2RlVHlwZSA9PT0gMTEgKSAmJlxuXHRcdFx0XHQhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cblx0XHRcdC8vIFdlIGVzY2hldyBTaXp6bGUgaGVyZSBmb3IgcGVyZm9ybWFuY2UgcmVhc29uczogaHR0cHM6Ly9qc3BlcmYuY29tL2dldGFsbC12cy1zaXp6bGUvMlxuXHRcdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSApO1xuXHRcdFx0c3JjRWxlbWVudHMgPSBnZXRBbGwoIGVsZW0gKTtcblxuXHRcdFx0Zm9yICggaSA9IDAsIGwgPSBzcmNFbGVtZW50cy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdGZpeElucHV0KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENvcHkgdGhlIGV2ZW50cyBmcm9tIHRoZSBvcmlnaW5hbCB0byB0aGUgY2xvbmVcblx0XHRpZiAoIGRhdGFBbmRFdmVudHMgKSB7XG5cdFx0XHRpZiAoIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdFx0XHRzcmNFbGVtZW50cyA9IHNyY0VsZW1lbnRzIHx8IGdldEFsbCggZWxlbSApO1xuXHRcdFx0XHRkZXN0RWxlbWVudHMgPSBkZXN0RWxlbWVudHMgfHwgZ2V0QWxsKCBjbG9uZSApO1xuXG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gc3JjRWxlbWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdGNsb25lQ29weUV2ZW50KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRjbG9uZUNvcHlFdmVudCggZWxlbSwgY2xvbmUgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSwgXCJzY3JpcHRcIiApO1xuXHRcdGlmICggZGVzdEVsZW1lbnRzLmxlbmd0aCA+IDAgKSB7XG5cdFx0XHRzZXRHbG9iYWxFdmFsKCBkZXN0RWxlbWVudHMsICFpblBhZ2UgJiYgZ2V0QWxsKCBlbGVtLCBcInNjcmlwdFwiICkgKTtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4gdGhlIGNsb25lZCBzZXRcblx0XHRyZXR1cm4gY2xvbmU7XG5cdH0sXG5cblx0Y2xlYW5EYXRhOiBmdW5jdGlvbiggZWxlbXMgKSB7XG5cdFx0dmFyIGRhdGEsIGVsZW0sIHR5cGUsXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWwsXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgKCBlbGVtID0gZWxlbXNbIGkgXSApICE9PSB1bmRlZmluZWQ7IGkrKyApIHtcblx0XHRcdGlmICggYWNjZXB0RGF0YSggZWxlbSApICkge1xuXHRcdFx0XHRpZiAoICggZGF0YSA9IGVsZW1bIGRhdGFQcml2LmV4cGFuZG8gXSApICkge1xuXHRcdFx0XHRcdGlmICggZGF0YS5ldmVudHMgKSB7XG5cdFx0XHRcdFx0XHRmb3IgKCB0eXBlIGluIGRhdGEuZXZlbnRzICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIHNwZWNpYWxbIHR5cGUgXSApIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCBlbGVtLCB0eXBlICk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gVGhpcyBpcyBhIHNob3J0Y3V0IHRvIGF2b2lkIGpRdWVyeS5ldmVudC5yZW1vdmUncyBvdmVyaGVhZFxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5yZW1vdmVFdmVudCggZWxlbSwgdHlwZSwgZGF0YS5oYW5kbGUgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTM1IC0gNDUrXG5cdFx0XHRcdFx0Ly8gQXNzaWduIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIHVzaW5nIGRlbGV0ZSwgc2VlIERhdGEjcmVtb3ZlXG5cdFx0XHRcdFx0ZWxlbVsgZGF0YVByaXYuZXhwYW5kbyBdID0gdW5kZWZpbmVkO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICggZWxlbVsgZGF0YVVzZXIuZXhwYW5kbyBdICkge1xuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NStcblx0XHRcdFx0XHQvLyBBc3NpZ24gdW5kZWZpbmVkIGluc3RlYWQgb2YgdXNpbmcgZGVsZXRlLCBzZWUgRGF0YSNyZW1vdmVcblx0XHRcdFx0XHRlbGVtWyBkYXRhVXNlci5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRkZXRhY2g6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gcmVtb3ZlKCB0aGlzLCBzZWxlY3RvciwgdHJ1ZSApO1xuXHR9LFxuXG5cdHJlbW92ZTogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiByZW1vdmUoIHRoaXMsIHNlbGVjdG9yICk7XG5cdH0sXG5cblx0dGV4dDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdFx0alF1ZXJ5LnRleHQoIHRoaXMgKSA6XG5cdFx0XHRcdHRoaXMuZW1wdHkoKS5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0XHRcdHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gKTtcblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9LFxuXG5cdGFwcGVuZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBtYW5pcHVsYXRpb25UYXJnZXQoIHRoaXMsIGVsZW0gKTtcblx0XHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdHByZXBlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gbWFuaXB1bGF0aW9uVGFyZ2V0KCB0aGlzLCBlbGVtICk7XG5cdFx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoIGVsZW0sIHRhcmdldC5maXJzdENoaWxkICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGJlZm9yZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0YWZ0ZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzLm5leHRTaWJsaW5nICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZWxlbSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyAoIGVsZW0gPSB0aGlzWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XG5cdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHRcdFx0Ly8gUHJldmVudCBtZW1vcnkgbGVha3Ncblx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBlbGVtLCBmYWxzZSApICk7XG5cblx0XHRcdFx0Ly8gUmVtb3ZlIGFueSByZW1haW5pbmcgbm9kZXNcblx0XHRcdFx0ZWxlbS50ZXh0Q29udGVudCA9IFwiXCI7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0Y2xvbmU6IGZ1bmN0aW9uKCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcblx0XHRkYXRhQW5kRXZlbnRzID0gZGF0YUFuZEV2ZW50cyA9PSBudWxsID8gZmFsc2UgOiBkYXRhQW5kRXZlbnRzO1xuXHRcdGRlZXBEYXRhQW5kRXZlbnRzID0gZGVlcERhdGFBbmRFdmVudHMgPT0gbnVsbCA/IGRhdGFBbmRFdmVudHMgOiBkZWVwRGF0YUFuZEV2ZW50cztcblxuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmNsb25lKCB0aGlzLCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApO1xuXHRcdH0gKTtcblx0fSxcblxuXHRodG1sOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGVsZW0gPSB0aGlzWyAwIF0gfHwge30sXG5cdFx0XHRcdGkgPSAwLFxuXHRcdFx0XHRsID0gdGhpcy5sZW5ndGg7XG5cblx0XHRcdGlmICggdmFsdWUgPT09IHVuZGVmaW5lZCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5pbm5lckhUTUw7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNlZSBpZiB3ZSBjYW4gdGFrZSBhIHNob3J0Y3V0IGFuZCBqdXN0IHVzZSBpbm5lckhUTUxcblx0XHRcdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmICFybm9Jbm5lcmh0bWwudGVzdCggdmFsdWUgKSAmJlxuXHRcdFx0XHQhd3JhcE1hcFsgKCBydGFnTmFtZS5leGVjKCB2YWx1ZSApIHx8IFsgXCJcIiwgXCJcIiBdIClbIDEgXS50b0xvd2VyQ2FzZSgpIF0gKSB7XG5cblx0XHRcdFx0dmFsdWUgPSBqUXVlcnkuaHRtbFByZWZpbHRlciggdmFsdWUgKTtcblxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0XHRcdGVsZW0gPSB0aGlzWyBpIF0gfHwge307XG5cblx0XHRcdFx0XHRcdC8vIFJlbW92ZSBlbGVtZW50IG5vZGVzIGFuZCBwcmV2ZW50IG1lbW9yeSBsZWFrc1xuXHRcdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIGVsZW0sIGZhbHNlICkgKTtcblx0XHRcdFx0XHRcdFx0ZWxlbS5pbm5lckhUTUwgPSB2YWx1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRlbGVtID0gMDtcblxuXHRcdFx0XHQvLyBJZiB1c2luZyBpbm5lckhUTUwgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgdXNlIHRoZSBmYWxsYmFjayBtZXRob2Rcblx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHRcdHRoaXMuZW1wdHkoKS5hcHBlbmQoIHZhbHVlICk7XG5cdFx0XHR9XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTtcblx0fSxcblxuXHRyZXBsYWNlV2l0aDogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGlnbm9yZWQgPSBbXTtcblxuXHRcdC8vIE1ha2UgdGhlIGNoYW5nZXMsIHJlcGxhY2luZyBlYWNoIG5vbi1pZ25vcmVkIGNvbnRleHQgZWxlbWVudCB3aXRoIHRoZSBuZXcgY29udGVudFxuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG5cblx0XHRcdGlmICggalF1ZXJ5LmluQXJyYXkoIHRoaXMsIGlnbm9yZWQgKSA8IDAgKSB7XG5cdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggdGhpcyApICk7XG5cdFx0XHRcdGlmICggcGFyZW50ICkge1xuXHRcdFx0XHRcdHBhcmVudC5yZXBsYWNlQ2hpbGQoIGVsZW0sIHRoaXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0Ly8gRm9yY2UgY2FsbGJhY2sgaW52b2NhdGlvblxuXHRcdH0sIGlnbm9yZWQgKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCgge1xuXHRhcHBlbmRUbzogXCJhcHBlbmRcIixcblx0cHJlcGVuZFRvOiBcInByZXBlbmRcIixcblx0aW5zZXJ0QmVmb3JlOiBcImJlZm9yZVwiLFxuXHRpbnNlcnRBZnRlcjogXCJhZnRlclwiLFxuXHRyZXBsYWNlQWxsOiBcInJlcGxhY2VXaXRoXCJcbn0sIGZ1bmN0aW9uKCBuYW1lLCBvcmlnaW5hbCApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dmFyIGVsZW1zLFxuXHRcdFx0cmV0ID0gW10sXG5cdFx0XHRpbnNlcnQgPSBqUXVlcnkoIHNlbGVjdG9yICksXG5cdFx0XHRsYXN0ID0gaW5zZXJ0Lmxlbmd0aCAtIDEsXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgaSA8PSBsYXN0OyBpKysgKSB7XG5cdFx0XHRlbGVtcyA9IGkgPT09IGxhc3QgPyB0aGlzIDogdGhpcy5jbG9uZSggdHJ1ZSApO1xuXHRcdFx0alF1ZXJ5KCBpbnNlcnRbIGkgXSApWyBvcmlnaW5hbCBdKCBlbGVtcyApO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdC8vIC5nZXQoKSBiZWNhdXNlIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdHB1c2guYXBwbHkoIHJldCwgZWxlbXMuZ2V0KCkgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHJldCApO1xuXHR9O1xufSApO1xudmFyIHJudW1ub25weCA9IG5ldyBSZWdFeHAoIFwiXihcIiArIHBudW0gKyBcIikoPyFweClbYS16JV0rJFwiLCBcImlcIiApO1xuXG52YXIgcmN1c3RvbVByb3AgPSAvXi0tLztcblxuXG52YXIgZ2V0U3R5bGVzID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHksIEZpcmVmb3ggPD0zMCAodHJhYy0xNTA5OCwgdHJhYy0xNDE1MClcblx0XHQvLyBJRSB0aHJvd3Mgb24gZWxlbWVudHMgY3JlYXRlZCBpbiBwb3B1cHNcblx0XHQvLyBGRiBtZWFud2hpbGUgdGhyb3dzIG9uIGZyYW1lIGVsZW1lbnRzIHRocm91Z2ggXCJkZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlXCJcblx0XHR2YXIgdmlldyA9IGVsZW0ub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldztcblxuXHRcdGlmICggIXZpZXcgfHwgIXZpZXcub3BlbmVyICkge1xuXHRcdFx0dmlldyA9IHdpbmRvdztcblx0XHR9XG5cblx0XHRyZXR1cm4gdmlldy5nZXRDb21wdXRlZFN0eWxlKCBlbGVtICk7XG5cdH07XG5cbnZhciBzd2FwID0gZnVuY3Rpb24oIGVsZW0sIG9wdGlvbnMsIGNhbGxiYWNrICkge1xuXHR2YXIgcmV0LCBuYW1lLFxuXHRcdG9sZCA9IHt9O1xuXG5cdC8vIFJlbWVtYmVyIHRoZSBvbGQgdmFsdWVzLCBhbmQgaW5zZXJ0IHRoZSBuZXcgb25lc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0b2xkWyBuYW1lIF0gPSBlbGVtLnN0eWxlWyBuYW1lIF07XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb3B0aW9uc1sgbmFtZSBdO1xuXHR9XG5cblx0cmV0ID0gY2FsbGJhY2suY2FsbCggZWxlbSApO1xuXG5cdC8vIFJldmVydCB0aGUgb2xkIHZhbHVlc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb2xkWyBuYW1lIF07XG5cdH1cblxuXHRyZXR1cm4gcmV0O1xufTtcblxuXG52YXIgcmJveFN0eWxlID0gbmV3IFJlZ0V4cCggY3NzRXhwYW5kLmpvaW4oIFwifFwiICksIFwiaVwiICk7XG5cbnZhciB3aGl0ZXNwYWNlID0gXCJbXFxcXHgyMFxcXFx0XFxcXHJcXFxcblxcXFxmXVwiO1xuXG5cbnZhciBydHJpbUNTUyA9IG5ldyBSZWdFeHAoXG5cdFwiXlwiICsgd2hpdGVzcGFjZSArIFwiK3woKD86XnxbXlxcXFxcXFxcXSkoPzpcXFxcXFxcXC4pKilcIiArIHdoaXRlc3BhY2UgKyBcIiskXCIsXG5cdFwiZ1wiXG4pO1xuXG5cblxuXG4oIGZ1bmN0aW9uKCkge1xuXG5cdC8vIEV4ZWN1dGluZyBib3RoIHBpeGVsUG9zaXRpb24gJiBib3hTaXppbmdSZWxpYWJsZSB0ZXN0cyByZXF1aXJlIG9ubHkgb25lIGxheW91dFxuXHQvLyBzbyB0aGV5J3JlIGV4ZWN1dGVkIGF0IHRoZSBzYW1lIHRpbWUgdG8gc2F2ZSB0aGUgc2Vjb25kIGNvbXB1dGF0aW9uLlxuXHRmdW5jdGlvbiBjb21wdXRlU3R5bGVUZXN0cygpIHtcblxuXHRcdC8vIFRoaXMgaXMgYSBzaW5nbGV0b24sIHdlIG5lZWQgdG8gZXhlY3V0ZSBpdCBvbmx5IG9uY2Vcblx0XHRpZiAoICFkaXYgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Y29udGFpbmVyLnN0eWxlLmNzc1RleHQgPSBcInBvc2l0aW9uOmFic29sdXRlO2xlZnQ6LTExMTExcHg7d2lkdGg6NjBweDtcIiArXG5cdFx0XHRcIm1hcmdpbi10b3A6MXB4O3BhZGRpbmc6MDtib3JkZXI6MFwiO1xuXHRcdGRpdi5zdHlsZS5jc3NUZXh0ID1cblx0XHRcdFwicG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jaztib3gtc2l6aW5nOmJvcmRlci1ib3g7b3ZlcmZsb3c6c2Nyb2xsO1wiICtcblx0XHRcdFwibWFyZ2luOmF1dG87Ym9yZGVyOjFweDtwYWRkaW5nOjFweDtcIiArXG5cdFx0XHRcIndpZHRoOjYwJTt0b3A6MSVcIjtcblx0XHRkb2N1bWVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoIGNvbnRhaW5lciApLmFwcGVuZENoaWxkKCBkaXYgKTtcblxuXHRcdHZhciBkaXZTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCBkaXYgKTtcblx0XHRwaXhlbFBvc2l0aW9uVmFsID0gZGl2U3R5bGUudG9wICE9PSBcIjElXCI7XG5cblx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCAtIDQuMyBvbmx5LCBGaXJlZm94IDw9MyAtIDQ0XG5cdFx0cmVsaWFibGVNYXJnaW5MZWZ0VmFsID0gcm91bmRQaXhlbE1lYXN1cmVzKCBkaXZTdHlsZS5tYXJnaW5MZWZ0ICkgPT09IDEyO1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seSwgU2FmYXJpIDw9OS4xIC0gMTAuMSwgaU9TIDw9Ny4wIC0gOS4zXG5cdFx0Ly8gU29tZSBzdHlsZXMgY29tZSBiYWNrIHdpdGggcGVyY2VudGFnZSB2YWx1ZXMsIGV2ZW4gdGhvdWdoIHRoZXkgc2hvdWxkbid0XG5cdFx0ZGl2LnN0eWxlLnJpZ2h0ID0gXCI2MCVcIjtcblx0XHRwaXhlbEJveFN0eWxlc1ZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUucmlnaHQgKSA9PT0gMzY7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA5IC0gMTEgb25seVxuXHRcdC8vIERldGVjdCBtaXNyZXBvcnRpbmcgb2YgY29udGVudCBkaW1lbnNpb25zIGZvciBib3gtc2l6aW5nOmJvcmRlci1ib3ggZWxlbWVudHNcblx0XHRib3hTaXppbmdSZWxpYWJsZVZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUud2lkdGggKSA9PT0gMzY7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA5IG9ubHlcblx0XHQvLyBEZXRlY3Qgb3ZlcmZsb3c6c2Nyb2xsIHNjcmV3aW5lc3MgKGdoLTM2OTkpXG5cdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9NjRcblx0XHQvLyBEb24ndCBnZXQgdHJpY2tlZCB3aGVuIHpvb20gYWZmZWN0cyBvZmZzZXRXaWR0aCAoZ2gtNDAyOSlcblx0XHRkaXYuc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCI7XG5cdFx0c2Nyb2xsYm94U2l6ZVZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2Lm9mZnNldFdpZHRoIC8gMyApID09PSAxMjtcblxuXHRcdGRvY3VtZW50RWxlbWVudC5yZW1vdmVDaGlsZCggY29udGFpbmVyICk7XG5cblx0XHQvLyBOdWxsaWZ5IHRoZSBkaXYgc28gaXQgd291bGRuJ3QgYmUgc3RvcmVkIGluIHRoZSBtZW1vcnkgYW5kXG5cdFx0Ly8gaXQgd2lsbCBhbHNvIGJlIGEgc2lnbiB0aGF0IGNoZWNrcyBhbHJlYWR5IHBlcmZvcm1lZFxuXHRcdGRpdiA9IG51bGw7XG5cdH1cblxuXHRmdW5jdGlvbiByb3VuZFBpeGVsTWVhc3VyZXMoIG1lYXN1cmUgKSB7XG5cdFx0cmV0dXJuIE1hdGgucm91bmQoIHBhcnNlRmxvYXQoIG1lYXN1cmUgKSApO1xuXHR9XG5cblx0dmFyIHBpeGVsUG9zaXRpb25WYWwsIGJveFNpemluZ1JlbGlhYmxlVmFsLCBzY3JvbGxib3hTaXplVmFsLCBwaXhlbEJveFN0eWxlc1ZhbCxcblx0XHRyZWxpYWJsZVRyRGltZW5zaW9uc1ZhbCwgcmVsaWFibGVNYXJnaW5MZWZ0VmFsLFxuXHRcdGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSxcblx0XHRkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XG5cblx0Ly8gRmluaXNoIGVhcmx5IGluIGxpbWl0ZWQgKG5vbi1icm93c2VyKSBlbnZpcm9ubWVudHNcblx0aWYgKCAhZGl2LnN0eWxlICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0Ly8gU3R5bGUgb2YgY2xvbmVkIGVsZW1lbnQgYWZmZWN0cyBzb3VyY2UgZWxlbWVudCBjbG9uZWQgKHRyYWMtODkwOClcblx0ZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID0gXCJjb250ZW50LWJveFwiO1xuXHRkaXYuY2xvbmVOb2RlKCB0cnVlICkuc3R5bGUuYmFja2dyb3VuZENsaXAgPSBcIlwiO1xuXHRzdXBwb3J0LmNsZWFyQ2xvbmVTdHlsZSA9IGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9PT0gXCJjb250ZW50LWJveFwiO1xuXG5cdGpRdWVyeS5leHRlbmQoIHN1cHBvcnQsIHtcblx0XHRib3hTaXppbmdSZWxpYWJsZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIGJveFNpemluZ1JlbGlhYmxlVmFsO1xuXHRcdH0sXG5cdFx0cGl4ZWxCb3hTdHlsZXM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiBwaXhlbEJveFN0eWxlc1ZhbDtcblx0XHR9LFxuXHRcdHBpeGVsUG9zaXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiBwaXhlbFBvc2l0aW9uVmFsO1xuXHRcdH0sXG5cdFx0cmVsaWFibGVNYXJnaW5MZWZ0OiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gcmVsaWFibGVNYXJnaW5MZWZ0VmFsO1xuXHRcdH0sXG5cdFx0c2Nyb2xsYm94U2l6ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHNjcm9sbGJveFNpemVWYWw7XG5cdFx0fSxcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSssIEVkZ2UgMTUgLSAxOCtcblx0XHQvLyBJRS9FZGdlIG1pc3JlcG9ydCBgZ2V0Q29tcHV0ZWRTdHlsZWAgb2YgdGFibGUgcm93cyB3aXRoIHdpZHRoL2hlaWdodFxuXHRcdC8vIHNldCBpbiBDU1Mgd2hpbGUgYG9mZnNldCpgIHByb3BlcnRpZXMgcmVwb3J0IGNvcnJlY3QgdmFsdWVzLlxuXHRcdC8vIEJlaGF2aW9yIGluIElFIDkgaXMgbW9yZSBzdWJ0bGUgdGhhbiBpbiBuZXdlciB2ZXJzaW9ucyAmIGl0IHBhc3Nlc1xuXHRcdC8vIHNvbWUgdmVyc2lvbnMgb2YgdGhpcyB0ZXN0OyBtYWtlIHN1cmUgbm90IHRvIG1ha2UgaXQgcGFzcyB0aGVyZSFcblx0XHQvL1xuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggNzArXG5cdFx0Ly8gT25seSBGaXJlZm94IGluY2x1ZGVzIGJvcmRlciB3aWR0aHNcblx0XHQvLyBpbiBjb21wdXRlZCBkaW1lbnNpb25zLiAoZ2gtNDUyOSlcblx0XHRyZWxpYWJsZVRyRGltZW5zaW9uczogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgdGFibGUsIHRyLCB0ckNoaWxkLCB0clN0eWxlO1xuXHRcdFx0aWYgKCByZWxpYWJsZVRyRGltZW5zaW9uc1ZhbCA9PSBudWxsICkge1xuXHRcdFx0XHR0YWJsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwidGFibGVcIiApO1xuXHRcdFx0XHR0ciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwidHJcIiApO1xuXHRcdFx0XHR0ckNoaWxkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xuXG5cdFx0XHRcdHRhYmxlLnN0eWxlLmNzc1RleHQgPSBcInBvc2l0aW9uOmFic29sdXRlO2xlZnQ6LTExMTExcHg7Ym9yZGVyLWNvbGxhcHNlOnNlcGFyYXRlXCI7XG5cdFx0XHRcdHRyLnN0eWxlLmNzc1RleHQgPSBcImJvcmRlcjoxcHggc29saWRcIjtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgODYrXG5cdFx0XHRcdC8vIEhlaWdodCBzZXQgdGhyb3VnaCBjc3NUZXh0IGRvZXMgbm90IGdldCBhcHBsaWVkLlxuXHRcdFx0XHQvLyBDb21wdXRlZCBoZWlnaHQgdGhlbiBjb21lcyBiYWNrIGFzIDAuXG5cdFx0XHRcdHRyLnN0eWxlLmhlaWdodCA9IFwiMXB4XCI7XG5cdFx0XHRcdHRyQ2hpbGQuc3R5bGUuaGVpZ2h0ID0gXCI5cHhcIjtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDggQ2hyb21lIDg2K1xuXHRcdFx0XHQvLyBJbiBvdXIgYm9keUJhY2tncm91bmQuaHRtbCBpZnJhbWUsXG5cdFx0XHRcdC8vIGRpc3BsYXkgZm9yIGFsbCBkaXYgZWxlbWVudHMgaXMgc2V0IHRvIFwiaW5saW5lXCIsXG5cdFx0XHRcdC8vIHdoaWNoIGNhdXNlcyBhIHByb2JsZW0gb25seSBpbiBBbmRyb2lkIDggQ2hyb21lIDg2LlxuXHRcdFx0XHQvLyBFbnN1cmluZyB0aGUgZGl2IGlzIGRpc3BsYXk6IGJsb2NrXG5cdFx0XHRcdC8vIGdldHMgYXJvdW5kIHRoaXMgaXNzdWUuXG5cdFx0XHRcdHRyQ2hpbGQuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcblxuXHRcdFx0XHRkb2N1bWVudEVsZW1lbnRcblx0XHRcdFx0XHQuYXBwZW5kQ2hpbGQoIHRhYmxlIClcblx0XHRcdFx0XHQuYXBwZW5kQ2hpbGQoIHRyIClcblx0XHRcdFx0XHQuYXBwZW5kQ2hpbGQoIHRyQ2hpbGQgKTtcblxuXHRcdFx0XHR0clN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoIHRyICk7XG5cdFx0XHRcdHJlbGlhYmxlVHJEaW1lbnNpb25zVmFsID0gKCBwYXJzZUludCggdHJTdHlsZS5oZWlnaHQsIDEwICkgK1xuXHRcdFx0XHRcdHBhcnNlSW50KCB0clN0eWxlLmJvcmRlclRvcFdpZHRoLCAxMCApICtcblx0XHRcdFx0XHRwYXJzZUludCggdHJTdHlsZS5ib3JkZXJCb3R0b21XaWR0aCwgMTAgKSApID09PSB0ci5vZmZzZXRIZWlnaHQ7XG5cblx0XHRcdFx0ZG9jdW1lbnRFbGVtZW50LnJlbW92ZUNoaWxkKCB0YWJsZSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlbGlhYmxlVHJEaW1lbnNpb25zVmFsO1xuXHRcdH1cblx0fSApO1xufSApKCk7XG5cblxuZnVuY3Rpb24gY3VyQ1NTKCBlbGVtLCBuYW1lLCBjb21wdXRlZCApIHtcblx0dmFyIHdpZHRoLCBtaW5XaWR0aCwgbWF4V2lkdGgsIHJldCxcblx0XHRpc0N1c3RvbVByb3AgPSByY3VzdG9tUHJvcC50ZXN0KCBuYW1lICksXG5cblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDUxK1xuXHRcdC8vIFJldHJpZXZpbmcgc3R5bGUgYmVmb3JlIGNvbXB1dGVkIHNvbWVob3dcblx0XHQvLyBmaXhlcyBhbiBpc3N1ZSB3aXRoIGdldHRpbmcgd3JvbmcgdmFsdWVzXG5cdFx0Ly8gb24gZGV0YWNoZWQgZWxlbWVudHNcblx0XHRzdHlsZSA9IGVsZW0uc3R5bGU7XG5cblx0Y29tcHV0ZWQgPSBjb21wdXRlZCB8fCBnZXRTdHlsZXMoIGVsZW0gKTtcblxuXHQvLyBnZXRQcm9wZXJ0eVZhbHVlIGlzIG5lZWRlZCBmb3I6XG5cdC8vICAgLmNzcygnZmlsdGVyJykgKElFIDkgb25seSwgdHJhYy0xMjUzNylcblx0Ly8gICAuY3NzKCctLWN1c3RvbVByb3BlcnR5KSAoZ2gtMzE0NClcblx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExK1xuXHRcdC8vIElFIG9ubHkgc3VwcG9ydHMgYFwiZmxvYXRcImAgaW4gYGdldFByb3BlcnR5VmFsdWVgOyBpbiBjb21wdXRlZCBzdHlsZXNcblx0XHQvLyBpdCdzIG9ubHkgYXZhaWxhYmxlIGFzIGBcImNzc0Zsb2F0XCJgLiBXZSBubyBsb25nZXIgbW9kaWZ5IHByb3BlcnRpZXNcblx0XHQvLyBzZW50IHRvIGAuY3NzKClgIGFwYXJ0IGZyb20gY2FtZWxDYXNpbmcsIHNvIHdlIG5lZWQgdG8gY2hlY2sgYm90aC5cblx0XHQvLyBOb3JtYWxseSwgdGhpcyB3b3VsZCBjcmVhdGUgZGlmZmVyZW5jZSBpbiBiZWhhdmlvcjogaWZcblx0XHQvLyBgZ2V0UHJvcGVydHlWYWx1ZWAgcmV0dXJucyBhbiBlbXB0eSBzdHJpbmcsIHRoZSB2YWx1ZSByZXR1cm5lZFxuXHRcdC8vIGJ5IGAuY3NzKClgIHdvdWxkIGJlIGB1bmRlZmluZWRgLiBUaGlzIGlzIHVzdWFsbHkgdGhlIGNhc2UgZm9yXG5cdFx0Ly8gZGlzY29ubmVjdGVkIGVsZW1lbnRzLiBIb3dldmVyLCBpbiBJRSBldmVuIGRpc2Nvbm5lY3RlZCBlbGVtZW50c1xuXHRcdC8vIHdpdGggbm8gc3R5bGVzIHJldHVybiBgXCJub25lXCJgIGZvciBgZ2V0UHJvcGVydHlWYWx1ZSggXCJmbG9hdFwiIClgXG5cdFx0cmV0ID0gY29tcHV0ZWQuZ2V0UHJvcGVydHlWYWx1ZSggbmFtZSApIHx8IGNvbXB1dGVkWyBuYW1lIF07XG5cblx0XHRpZiAoIGlzQ3VzdG9tUHJvcCAmJiByZXQgKSB7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggMTA1KywgQ2hyb21lIDw9MTA1K1xuXHRcdFx0Ly8gU3BlYyByZXF1aXJlcyB0cmltbWluZyB3aGl0ZXNwYWNlIGZvciBjdXN0b20gcHJvcGVydGllcyAoZ2gtNDkyNikuXG5cdFx0XHQvLyBGaXJlZm94IG9ubHkgdHJpbXMgbGVhZGluZyB3aGl0ZXNwYWNlLiBDaHJvbWUganVzdCBjb2xsYXBzZXNcblx0XHRcdC8vIGJvdGggbGVhZGluZyAmIHRyYWlsaW5nIHdoaXRlc3BhY2UgdG8gYSBzaW5nbGUgc3BhY2UuXG5cdFx0XHQvL1xuXHRcdFx0Ly8gRmFsbCBiYWNrIHRvIGB1bmRlZmluZWRgIGlmIGVtcHR5IHN0cmluZyByZXR1cm5lZC5cblx0XHRcdC8vIFRoaXMgY29sbGFwc2VzIGEgbWlzc2luZyBkZWZpbml0aW9uIHdpdGggcHJvcGVydHkgZGVmaW5lZFxuXHRcdFx0Ly8gYW5kIHNldCB0byBhbiBlbXB0eSBzdHJpbmcgYnV0IHRoZXJlJ3Mgbm8gc3RhbmRhcmQgQVBJXG5cdFx0XHQvLyBhbGxvd2luZyB1cyB0byBkaWZmZXJlbnRpYXRlIHRoZW0gd2l0aG91dCBhIHBlcmZvcm1hbmNlIHBlbmFsdHlcblx0XHRcdC8vIGFuZCByZXR1cm5pbmcgYHVuZGVmaW5lZGAgYWxpZ25zIHdpdGggb2xkZXIgalF1ZXJ5LlxuXHRcdFx0Ly9cblx0XHRcdC8vIHJ0cmltQ1NTIHRyZWF0cyBVKzAwMEQgQ0FSUklBR0UgUkVUVVJOIGFuZCBVKzAwMEMgRk9STSBGRUVEXG5cdFx0XHQvLyBhcyB3aGl0ZXNwYWNlIHdoaWxlIENTUyBkb2VzIG5vdCwgYnV0IHRoaXMgaXMgbm90IGEgcHJvYmxlbVxuXHRcdFx0Ly8gYmVjYXVzZSBDU1MgcHJlcHJvY2Vzc2luZyByZXBsYWNlcyB0aGVtIHdpdGggVSswMDBBIExJTkUgRkVFRFxuXHRcdFx0Ly8gKHdoaWNoICppcyogQ1NTIHdoaXRlc3BhY2UpXG5cdFx0XHQvLyBodHRwczovL3d3dy53My5vcmcvVFIvY3NzLXN5bnRheC0zLyNpbnB1dC1wcmVwcm9jZXNzaW5nXG5cdFx0XHRyZXQgPSByZXQucmVwbGFjZSggcnRyaW1DU1MsIFwiJDFcIiApIHx8IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHRpZiAoIHJldCA9PT0gXCJcIiAmJiAhaXNBdHRhY2hlZCggZWxlbSApICkge1xuXHRcdFx0cmV0ID0galF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gQSB0cmlidXRlIHRvIHRoZSBcImF3ZXNvbWUgaGFjayBieSBEZWFuIEVkd2FyZHNcIlxuXHRcdC8vIEFuZHJvaWQgQnJvd3NlciByZXR1cm5zIHBlcmNlbnRhZ2UgZm9yIHNvbWUgdmFsdWVzLFxuXHRcdC8vIGJ1dCB3aWR0aCBzZWVtcyB0byBiZSByZWxpYWJseSBwaXhlbHMuXG5cdFx0Ly8gVGhpcyBpcyBhZ2FpbnN0IHRoZSBDU1NPTSBkcmFmdCBzcGVjOlxuXHRcdC8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3NvbS8jcmVzb2x2ZWQtdmFsdWVzXG5cdFx0aWYgKCAhc3VwcG9ydC5waXhlbEJveFN0eWxlcygpICYmIHJudW1ub25weC50ZXN0KCByZXQgKSAmJiByYm94U3R5bGUudGVzdCggbmFtZSApICkge1xuXG5cdFx0XHQvLyBSZW1lbWJlciB0aGUgb3JpZ2luYWwgdmFsdWVzXG5cdFx0XHR3aWR0aCA9IHN0eWxlLndpZHRoO1xuXHRcdFx0bWluV2lkdGggPSBzdHlsZS5taW5XaWR0aDtcblx0XHRcdG1heFdpZHRoID0gc3R5bGUubWF4V2lkdGg7XG5cblx0XHRcdC8vIFB1dCBpbiB0aGUgbmV3IHZhbHVlcyB0byBnZXQgYSBjb21wdXRlZCB2YWx1ZSBvdXRcblx0XHRcdHN0eWxlLm1pbldpZHRoID0gc3R5bGUubWF4V2lkdGggPSBzdHlsZS53aWR0aCA9IHJldDtcblx0XHRcdHJldCA9IGNvbXB1dGVkLndpZHRoO1xuXG5cdFx0XHQvLyBSZXZlcnQgdGhlIGNoYW5nZWQgdmFsdWVzXG5cdFx0XHRzdHlsZS53aWR0aCA9IHdpZHRoO1xuXHRcdFx0c3R5bGUubWluV2lkdGggPSBtaW5XaWR0aDtcblx0XHRcdHN0eWxlLm1heFdpZHRoID0gbWF4V2lkdGg7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHJldCAhPT0gdW5kZWZpbmVkID9cblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0XHQvLyBJRSByZXR1cm5zIHpJbmRleCB2YWx1ZSBhcyBhbiBpbnRlZ2VyLlxuXHRcdHJldCArIFwiXCIgOlxuXHRcdHJldDtcbn1cblxuXG5mdW5jdGlvbiBhZGRHZXRIb29rSWYoIGNvbmRpdGlvbkZuLCBob29rRm4gKSB7XG5cblx0Ly8gRGVmaW5lIHRoZSBob29rLCB3ZSdsbCBjaGVjayBvbiB0aGUgZmlyc3QgcnVuIGlmIGl0J3MgcmVhbGx5IG5lZWRlZC5cblx0cmV0dXJuIHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBjb25kaXRpb25GbigpICkge1xuXG5cdFx0XHRcdC8vIEhvb2sgbm90IG5lZWRlZCAob3IgaXQncyBub3QgcG9zc2libGUgdG8gdXNlIGl0IGR1ZVxuXHRcdFx0XHQvLyB0byBtaXNzaW5nIGRlcGVuZGVuY3kpLCByZW1vdmUgaXQuXG5cdFx0XHRcdGRlbGV0ZSB0aGlzLmdldDtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBIb29rIG5lZWRlZDsgcmVkZWZpbmUgaXQgc28gdGhhdCB0aGUgc3VwcG9ydCB0ZXN0IGlzIG5vdCBleGVjdXRlZCBhZ2Fpbi5cblx0XHRcdHJldHVybiAoIHRoaXMuZ2V0ID0gaG9va0ZuICkuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH1cblx0fTtcbn1cblxuXG52YXIgY3NzUHJlZml4ZXMgPSBbIFwiV2Via2l0XCIsIFwiTW96XCIsIFwibXNcIiBdLFxuXHRlbXB0eVN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApLnN0eWxlLFxuXHR2ZW5kb3JQcm9wcyA9IHt9O1xuXG4vLyBSZXR1cm4gYSB2ZW5kb3ItcHJlZml4ZWQgcHJvcGVydHkgb3IgdW5kZWZpbmVkXG5mdW5jdGlvbiB2ZW5kb3JQcm9wTmFtZSggbmFtZSApIHtcblxuXHQvLyBDaGVjayBmb3IgdmVuZG9yIHByZWZpeGVkIG5hbWVzXG5cdHZhciBjYXBOYW1lID0gbmFtZVsgMCBdLnRvVXBwZXJDYXNlKCkgKyBuYW1lLnNsaWNlKCAxICksXG5cdFx0aSA9IGNzc1ByZWZpeGVzLmxlbmd0aDtcblxuXHR3aGlsZSAoIGktLSApIHtcblx0XHRuYW1lID0gY3NzUHJlZml4ZXNbIGkgXSArIGNhcE5hbWU7XG5cdFx0aWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7XG5cdFx0XHRyZXR1cm4gbmFtZTtcblx0XHR9XG5cdH1cbn1cblxuLy8gUmV0dXJuIGEgcG90ZW50aWFsbHktbWFwcGVkIGpRdWVyeS5jc3NQcm9wcyBvciB2ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHlcbmZ1bmN0aW9uIGZpbmFsUHJvcE5hbWUoIG5hbWUgKSB7XG5cdHZhciBmaW5hbCA9IGpRdWVyeS5jc3NQcm9wc1sgbmFtZSBdIHx8IHZlbmRvclByb3BzWyBuYW1lIF07XG5cblx0aWYgKCBmaW5hbCApIHtcblx0XHRyZXR1cm4gZmluYWw7XG5cdH1cblx0aWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7XG5cdFx0cmV0dXJuIG5hbWU7XG5cdH1cblx0cmV0dXJuIHZlbmRvclByb3BzWyBuYW1lIF0gPSB2ZW5kb3JQcm9wTmFtZSggbmFtZSApIHx8IG5hbWU7XG59XG5cblxudmFyXG5cblx0Ly8gU3dhcHBhYmxlIGlmIGRpc3BsYXkgaXMgbm9uZSBvciBzdGFydHMgd2l0aCB0YWJsZVxuXHQvLyBleGNlcHQgXCJ0YWJsZVwiLCBcInRhYmxlLWNlbGxcIiwgb3IgXCJ0YWJsZS1jYXB0aW9uXCJcblx0Ly8gU2VlIGhlcmUgZm9yIGRpc3BsYXkgdmFsdWVzOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL0NTUy9kaXNwbGF5XG5cdHJkaXNwbGF5c3dhcCA9IC9eKG5vbmV8dGFibGUoPyEtY1tlYV0pLispLyxcblx0Y3NzU2hvdyA9IHsgcG9zaXRpb246IFwiYWJzb2x1dGVcIiwgdmlzaWJpbGl0eTogXCJoaWRkZW5cIiwgZGlzcGxheTogXCJibG9ja1wiIH0sXG5cdGNzc05vcm1hbFRyYW5zZm9ybSA9IHtcblx0XHRsZXR0ZXJTcGFjaW5nOiBcIjBcIixcblx0XHRmb250V2VpZ2h0OiBcIjQwMFwiXG5cdH07XG5cbmZ1bmN0aW9uIHNldFBvc2l0aXZlTnVtYmVyKCBfZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICkge1xuXG5cdC8vIEFueSByZWxhdGl2ZSAoKy8tKSB2YWx1ZXMgaGF2ZSBhbHJlYWR5IGJlZW5cblx0Ly8gbm9ybWFsaXplZCBhdCB0aGlzIHBvaW50XG5cdHZhciBtYXRjaGVzID0gcmNzc051bS5leGVjKCB2YWx1ZSApO1xuXHRyZXR1cm4gbWF0Y2hlcyA/XG5cblx0XHQvLyBHdWFyZCBhZ2FpbnN0IHVuZGVmaW5lZCBcInN1YnRyYWN0XCIsIGUuZy4sIHdoZW4gdXNlZCBhcyBpbiBjc3NIb29rc1xuXHRcdE1hdGgubWF4KCAwLCBtYXRjaGVzWyAyIF0gLSAoIHN1YnRyYWN0IHx8IDAgKSApICsgKCBtYXRjaGVzWyAzIF0gfHwgXCJweFwiICkgOlxuXHRcdHZhbHVlO1xufVxuXG5mdW5jdGlvbiBib3hNb2RlbEFkanVzdG1lbnQoIGVsZW0sIGRpbWVuc2lvbiwgYm94LCBpc0JvcmRlckJveCwgc3R5bGVzLCBjb21wdXRlZFZhbCApIHtcblx0dmFyIGkgPSBkaW1lbnNpb24gPT09IFwid2lkdGhcIiA/IDEgOiAwLFxuXHRcdGV4dHJhID0gMCxcblx0XHRkZWx0YSA9IDA7XG5cblx0Ly8gQWRqdXN0bWVudCBtYXkgbm90IGJlIG5lY2Vzc2FyeVxuXHRpZiAoIGJveCA9PT0gKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApICkge1xuXHRcdHJldHVybiAwO1xuXHR9XG5cblx0Zm9yICggOyBpIDwgNDsgaSArPSAyICkge1xuXG5cdFx0Ly8gQm90aCBib3ggbW9kZWxzIGV4Y2x1ZGUgbWFyZ2luXG5cdFx0aWYgKCBib3ggPT09IFwibWFyZ2luXCIgKSB7XG5cdFx0XHRkZWx0YSArPSBqUXVlcnkuY3NzKCBlbGVtLCBib3ggKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0fVxuXG5cdFx0Ly8gSWYgd2UgZ2V0IGhlcmUgd2l0aCBhIGNvbnRlbnQtYm94LCB3ZSdyZSBzZWVraW5nIFwicGFkZGluZ1wiIG9yIFwiYm9yZGVyXCIgb3IgXCJtYXJnaW5cIlxuXHRcdGlmICggIWlzQm9yZGVyQm94ICkge1xuXG5cdFx0XHQvLyBBZGQgcGFkZGluZ1xuXHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cblx0XHRcdC8vIEZvciBcImJvcmRlclwiIG9yIFwibWFyZ2luXCIsIGFkZCBib3JkZXJcblx0XHRcdGlmICggYm94ICE9PSBcInBhZGRpbmdcIiApIHtcblx0XHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblxuXHRcdFx0Ly8gQnV0IHN0aWxsIGtlZXAgdHJhY2sgb2YgaXQgb3RoZXJ3aXNlXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRleHRyYSArPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJvcmRlclwiICsgY3NzRXhwYW5kWyBpIF0gKyBcIldpZHRoXCIsIHRydWUsIHN0eWxlcyApO1xuXHRcdFx0fVxuXG5cdFx0Ly8gSWYgd2UgZ2V0IGhlcmUgd2l0aCBhIGJvcmRlci1ib3ggKGNvbnRlbnQgKyBwYWRkaW5nICsgYm9yZGVyKSwgd2UncmUgc2Vla2luZyBcImNvbnRlbnRcIiBvclxuXHRcdC8vIFwicGFkZGluZ1wiIG9yIFwibWFyZ2luXCJcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBGb3IgXCJjb250ZW50XCIsIHN1YnRyYWN0IHBhZGRpbmdcblx0XHRcdGlmICggYm94ID09PSBcImNvbnRlbnRcIiApIHtcblx0XHRcdFx0ZGVsdGEgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZvciBcImNvbnRlbnRcIiBvciBcInBhZGRpbmdcIiwgc3VidHJhY3QgYm9yZGVyXG5cdFx0XHRpZiAoIGJveCAhPT0gXCJtYXJnaW5cIiApIHtcblx0XHRcdFx0ZGVsdGEgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBBY2NvdW50IGZvciBwb3NpdGl2ZSBjb250ZW50LWJveCBzY3JvbGwgZ3V0dGVyIHdoZW4gcmVxdWVzdGVkIGJ5IHByb3ZpZGluZyBjb21wdXRlZFZhbFxuXHRpZiAoICFpc0JvcmRlckJveCAmJiBjb21wdXRlZFZhbCA+PSAwICkge1xuXG5cdFx0Ly8gb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGlzIGEgcm91bmRlZCBzdW0gb2YgY29udGVudCwgcGFkZGluZywgc2Nyb2xsIGd1dHRlciwgYW5kIGJvcmRlclxuXHRcdC8vIEFzc3VtaW5nIGludGVnZXIgc2Nyb2xsIGd1dHRlciwgc3VidHJhY3QgdGhlIHJlc3QgYW5kIHJvdW5kIGRvd25cblx0XHRkZWx0YSArPSBNYXRoLm1heCggMCwgTWF0aC5jZWlsKFxuXHRcdFx0ZWxlbVsgXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKSBdIC1cblx0XHRcdGNvbXB1dGVkVmFsIC1cblx0XHRcdGRlbHRhIC1cblx0XHRcdGV4dHJhIC1cblx0XHRcdDAuNVxuXG5cdFx0Ly8gSWYgb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGlzIHVua25vd24sIHRoZW4gd2UgY2FuJ3QgZGV0ZXJtaW5lIGNvbnRlbnQtYm94IHNjcm9sbCBndXR0ZXJcblx0XHQvLyBVc2UgYW4gZXhwbGljaXQgemVybyB0byBhdm9pZCBOYU4gKGdoLTM5NjQpXG5cdFx0KSApIHx8IDA7XG5cdH1cblxuXHRyZXR1cm4gZGVsdGE7XG59XG5cbmZ1bmN0aW9uIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIGRpbWVuc2lvbiwgZXh0cmEgKSB7XG5cblx0Ly8gU3RhcnQgd2l0aCBjb21wdXRlZCBzdHlsZVxuXHR2YXIgc3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICksXG5cblx0XHQvLyBUbyBhdm9pZCBmb3JjaW5nIGEgcmVmbG93LCBvbmx5IGZldGNoIGJveFNpemluZyBpZiB3ZSBuZWVkIGl0IChnaC00MzIyKS5cblx0XHQvLyBGYWtlIGNvbnRlbnQtYm94IHVudGlsIHdlIGtub3cgaXQncyBuZWVkZWQgdG8ga25vdyB0aGUgdHJ1ZSB2YWx1ZS5cblx0XHRib3hTaXppbmdOZWVkZWQgPSAhc3VwcG9ydC5ib3hTaXppbmdSZWxpYWJsZSgpIHx8IGV4dHJhLFxuXHRcdGlzQm9yZGVyQm94ID0gYm94U2l6aW5nTmVlZGVkICYmXG5cdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiLFxuXHRcdHZhbHVlSXNCb3JkZXJCb3ggPSBpc0JvcmRlckJveCxcblxuXHRcdHZhbCA9IGN1ckNTUyggZWxlbSwgZGltZW5zaW9uLCBzdHlsZXMgKSxcblx0XHRvZmZzZXRQcm9wID0gXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKTtcblxuXHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NTRcblx0Ly8gUmV0dXJuIGEgY29uZm91bmRpbmcgbm9uLXBpeGVsIHZhbHVlIG9yIGZlaWduIGlnbm9yYW5jZSwgYXMgYXBwcm9wcmlhdGUuXG5cdGlmICggcm51bW5vbnB4LnRlc3QoIHZhbCApICkge1xuXHRcdGlmICggIWV4dHJhICkge1xuXHRcdFx0cmV0dXJuIHZhbDtcblx0XHR9XG5cdFx0dmFsID0gXCJhdXRvXCI7XG5cdH1cblxuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5XG5cdC8vIFVzZSBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgZm9yIHdoZW4gYm94IHNpemluZyBpcyB1bnJlbGlhYmxlLlxuXHQvLyBJbiB0aG9zZSBjYXNlcywgdGhlIGNvbXB1dGVkIHZhbHVlIGNhbiBiZSB0cnVzdGVkIHRvIGJlIGJvcmRlci1ib3guXG5cdGlmICggKCAhc3VwcG9ydC5ib3hTaXppbmdSZWxpYWJsZSgpICYmIGlzQm9yZGVyQm94IHx8XG5cblx0XHQvLyBTdXBwb3J0OiBJRSAxMCAtIDExKywgRWRnZSAxNSAtIDE4K1xuXHRcdC8vIElFL0VkZ2UgbWlzcmVwb3J0IGBnZXRDb21wdXRlZFN0eWxlYCBvZiB0YWJsZSByb3dzIHdpdGggd2lkdGgvaGVpZ2h0XG5cdFx0Ly8gc2V0IGluIENTUyB3aGlsZSBgb2Zmc2V0KmAgcHJvcGVydGllcyByZXBvcnQgY29ycmVjdCB2YWx1ZXMuXG5cdFx0Ly8gSW50ZXJlc3RpbmdseSwgaW4gc29tZSBjYXNlcyBJRSA5IGRvZXNuJ3Qgc3VmZmVyIGZyb20gdGhpcyBpc3N1ZS5cblx0XHQhc3VwcG9ydC5yZWxpYWJsZVRyRGltZW5zaW9ucygpICYmIG5vZGVOYW1lKCBlbGVtLCBcInRyXCIgKSB8fFxuXG5cdFx0Ly8gRmFsbCBiYWNrIHRvIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCB3aGVuIHZhbHVlIGlzIFwiYXV0b1wiXG5cdFx0Ly8gVGhpcyBoYXBwZW5zIGZvciBpbmxpbmUgZWxlbWVudHMgd2l0aCBubyBleHBsaWNpdCBzZXR0aW5nIChnaC0zNTcxKVxuXHRcdHZhbCA9PT0gXCJhdXRvXCIgfHxcblxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjEgLSA0LjMgb25seVxuXHRcdC8vIEFsc28gdXNlIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBmb3IgbWlzcmVwb3J0ZWQgaW5saW5lIGRpbWVuc2lvbnMgKGdoLTM2MDIpXG5cdFx0IXBhcnNlRmxvYXQoIHZhbCApICYmIGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiaW5saW5lXCIgKSAmJlxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoZSBlbGVtZW50IGlzIHZpc2libGUgJiBjb25uZWN0ZWRcblx0XHRlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoICkge1xuXG5cdFx0aXNCb3JkZXJCb3ggPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiO1xuXG5cdFx0Ly8gV2hlcmUgYXZhaWxhYmxlLCBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgYXBwcm94aW1hdGUgYm9yZGVyIGJveCBkaW1lbnNpb25zLlxuXHRcdC8vIFdoZXJlIG5vdCBhdmFpbGFibGUgKGUuZy4sIFNWRyksIGFzc3VtZSB1bnJlbGlhYmxlIGJveC1zaXppbmcgYW5kIGludGVycHJldCB0aGVcblx0XHQvLyByZXRyaWV2ZWQgdmFsdWUgYXMgYSBjb250ZW50IGJveCBkaW1lbnNpb24uXG5cdFx0dmFsdWVJc0JvcmRlckJveCA9IG9mZnNldFByb3AgaW4gZWxlbTtcblx0XHRpZiAoIHZhbHVlSXNCb3JkZXJCb3ggKSB7XG5cdFx0XHR2YWwgPSBlbGVtWyBvZmZzZXRQcm9wIF07XG5cdFx0fVxuXHR9XG5cblx0Ly8gTm9ybWFsaXplIFwiXCIgYW5kIGF1dG9cblx0dmFsID0gcGFyc2VGbG9hdCggdmFsICkgfHwgMDtcblxuXHQvLyBBZGp1c3QgZm9yIHRoZSBlbGVtZW50J3MgYm94IG1vZGVsXG5cdHJldHVybiAoIHZhbCArXG5cdFx0Ym94TW9kZWxBZGp1c3RtZW50KFxuXHRcdFx0ZWxlbSxcblx0XHRcdGRpbWVuc2lvbixcblx0XHRcdGV4dHJhIHx8ICggaXNCb3JkZXJCb3ggPyBcImJvcmRlclwiIDogXCJjb250ZW50XCIgKSxcblx0XHRcdHZhbHVlSXNCb3JkZXJCb3gsXG5cdFx0XHRzdHlsZXMsXG5cblx0XHRcdC8vIFByb3ZpZGUgdGhlIGN1cnJlbnQgY29tcHV0ZWQgc2l6ZSB0byByZXF1ZXN0IHNjcm9sbCBndXR0ZXIgY2FsY3VsYXRpb24gKGdoLTM1ODkpXG5cdFx0XHR2YWxcblx0XHQpXG5cdCkgKyBcInB4XCI7XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBBZGQgaW4gc3R5bGUgcHJvcGVydHkgaG9va3MgZm9yIG92ZXJyaWRpbmcgdGhlIGRlZmF1bHRcblx0Ly8gYmVoYXZpb3Igb2YgZ2V0dGluZyBhbmQgc2V0dGluZyBhIHN0eWxlIHByb3BlcnR5XG5cdGNzc0hvb2tzOiB7XG5cdFx0b3BhY2l0eToge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7XG5cdFx0XHRcdGlmICggY29tcHV0ZWQgKSB7XG5cblx0XHRcdFx0XHQvLyBXZSBzaG91bGQgYWx3YXlzIGdldCBhIG51bWJlciBiYWNrIGZyb20gb3BhY2l0eVxuXHRcdFx0XHRcdHZhciByZXQgPSBjdXJDU1MoIGVsZW0sIFwib3BhY2l0eVwiICk7XG5cdFx0XHRcdFx0cmV0dXJuIHJldCA9PT0gXCJcIiA/IFwiMVwiIDogcmV0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdC8vIERvbid0IGF1dG9tYXRpY2FsbHkgYWRkIFwicHhcIiB0byB0aGVzZSBwb3NzaWJseS11bml0bGVzcyBwcm9wZXJ0aWVzXG5cdGNzc051bWJlcjoge1xuXHRcdFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogdHJ1ZSxcblx0XHRcImNvbHVtbkNvdW50XCI6IHRydWUsXG5cdFx0XCJmaWxsT3BhY2l0eVwiOiB0cnVlLFxuXHRcdFwiZmxleEdyb3dcIjogdHJ1ZSxcblx0XHRcImZsZXhTaHJpbmtcIjogdHJ1ZSxcblx0XHRcImZvbnRXZWlnaHRcIjogdHJ1ZSxcblx0XHRcImdyaWRBcmVhXCI6IHRydWUsXG5cdFx0XCJncmlkQ29sdW1uXCI6IHRydWUsXG5cdFx0XCJncmlkQ29sdW1uRW5kXCI6IHRydWUsXG5cdFx0XCJncmlkQ29sdW1uU3RhcnRcIjogdHJ1ZSxcblx0XHRcImdyaWRSb3dcIjogdHJ1ZSxcblx0XHRcImdyaWRSb3dFbmRcIjogdHJ1ZSxcblx0XHRcImdyaWRSb3dTdGFydFwiOiB0cnVlLFxuXHRcdFwibGluZUhlaWdodFwiOiB0cnVlLFxuXHRcdFwib3BhY2l0eVwiOiB0cnVlLFxuXHRcdFwib3JkZXJcIjogdHJ1ZSxcblx0XHRcIm9ycGhhbnNcIjogdHJ1ZSxcblx0XHRcIndpZG93c1wiOiB0cnVlLFxuXHRcdFwiekluZGV4XCI6IHRydWUsXG5cdFx0XCJ6b29tXCI6IHRydWVcblx0fSxcblxuXHQvLyBBZGQgaW4gcHJvcGVydGllcyB3aG9zZSBuYW1lcyB5b3Ugd2lzaCB0byBmaXggYmVmb3JlXG5cdC8vIHNldHRpbmcgb3IgZ2V0dGluZyB0aGUgdmFsdWVcblx0Y3NzUHJvcHM6IHt9LFxuXG5cdC8vIEdldCBhbmQgc2V0IHRoZSBzdHlsZSBwcm9wZXJ0eSBvbiBhIERPTSBOb2RlXG5cdHN0eWxlOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUsIGV4dHJhICkge1xuXG5cdFx0Ly8gRG9uJ3Qgc2V0IHN0eWxlcyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCAhZWxlbSB8fCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggfHwgIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lXG5cdFx0dmFyIHJldCwgdHlwZSwgaG9va3MsXG5cdFx0XHRvcmlnTmFtZSA9IGNhbWVsQ2FzZSggbmFtZSApLFxuXHRcdFx0aXNDdXN0b21Qcm9wID0gcmN1c3RvbVByb3AudGVzdCggbmFtZSApLFxuXHRcdFx0c3R5bGUgPSBlbGVtLnN0eWxlO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lLiBXZSBkb24ndFxuXHRcdC8vIHdhbnQgdG8gcXVlcnkgdGhlIHZhbHVlIGlmIGl0IGlzIGEgQ1NTIGN1c3RvbSBwcm9wZXJ0eVxuXHRcdC8vIHNpbmNlIHRoZXkgYXJlIHVzZXItZGVmaW5lZC5cblx0XHRpZiAoICFpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRuYW1lID0gZmluYWxQcm9wTmFtZSggb3JpZ05hbWUgKTtcblx0XHR9XG5cblx0XHQvLyBHZXRzIGhvb2sgZm9yIHRoZSBwcmVmaXhlZCB2ZXJzaW9uLCB0aGVuIHVucHJlZml4ZWQgdmVyc2lvblxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gfHwgalF1ZXJ5LmNzc0hvb2tzWyBvcmlnTmFtZSBdO1xuXG5cdFx0Ly8gQ2hlY2sgaWYgd2UncmUgc2V0dGluZyBhIHZhbHVlXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dHlwZSA9IHR5cGVvZiB2YWx1ZTtcblxuXHRcdFx0Ly8gQ29udmVydCBcIis9XCIgb3IgXCItPVwiIHRvIHJlbGF0aXZlIG51bWJlcnMgKHRyYWMtNzM0NSlcblx0XHRcdGlmICggdHlwZSA9PT0gXCJzdHJpbmdcIiAmJiAoIHJldCA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKSApICYmIHJldFsgMSBdICkge1xuXHRcdFx0XHR2YWx1ZSA9IGFkanVzdENTUyggZWxlbSwgbmFtZSwgcmV0ICk7XG5cblx0XHRcdFx0Ly8gRml4ZXMgYnVnIHRyYWMtOTIzN1xuXHRcdFx0XHR0eXBlID0gXCJudW1iZXJcIjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTWFrZSBzdXJlIHRoYXQgbnVsbCBhbmQgTmFOIHZhbHVlcyBhcmVuJ3Qgc2V0ICh0cmFjLTcxMTYpXG5cdFx0XHRpZiAoIHZhbHVlID09IG51bGwgfHwgdmFsdWUgIT09IHZhbHVlICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIGEgbnVtYmVyIHdhcyBwYXNzZWQgaW4sIGFkZCB0aGUgdW5pdCAoZXhjZXB0IGZvciBjZXJ0YWluIENTUyBwcm9wZXJ0aWVzKVxuXHRcdFx0Ly8gVGhlIGlzQ3VzdG9tUHJvcCBjaGVjayBjYW4gYmUgcmVtb3ZlZCBpbiBqUXVlcnkgNC4wIHdoZW4gd2Ugb25seSBhdXRvLWFwcGVuZFxuXHRcdFx0Ly8gXCJweFwiIHRvIGEgZmV3IGhhcmRjb2RlZCB2YWx1ZXMuXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwibnVtYmVyXCIgJiYgIWlzQ3VzdG9tUHJvcCApIHtcblx0XHRcdFx0dmFsdWUgKz0gcmV0ICYmIHJldFsgMyBdIHx8ICggalF1ZXJ5LmNzc051bWJlclsgb3JpZ05hbWUgXSA/IFwiXCIgOiBcInB4XCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gYmFja2dyb3VuZC0qIHByb3BzIGFmZmVjdCBvcmlnaW5hbCBjbG9uZSdzIHZhbHVlc1xuXHRcdFx0aWYgKCAhc3VwcG9ydC5jbGVhckNsb25lU3R5bGUgJiYgdmFsdWUgPT09IFwiXCIgJiYgbmFtZS5pbmRleE9mKCBcImJhY2tncm91bmRcIiApID09PSAwICkge1xuXHRcdFx0XHRzdHlsZVsgbmFtZSBdID0gXCJpbmhlcml0XCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQsIHVzZSB0aGF0IHZhbHVlLCBvdGhlcndpc2UganVzdCBzZXQgdGhlIHNwZWNpZmllZCB2YWx1ZVxuXHRcdFx0aWYgKCAhaG9va3MgfHwgISggXCJzZXRcIiBpbiBob29rcyApIHx8XG5cdFx0XHRcdCggdmFsdWUgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHRpZiAoIGlzQ3VzdG9tUHJvcCApIHtcblx0XHRcdFx0XHRzdHlsZS5zZXRQcm9wZXJ0eSggbmFtZSwgdmFsdWUgKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzdHlsZVsgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQgZ2V0IHRoZSBub24tY29tcHV0ZWQgdmFsdWUgZnJvbSB0aGVyZVxuXHRcdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBmYWxzZSwgZXh0cmEgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIGp1c3QgZ2V0IHRoZSB2YWx1ZSBmcm9tIHRoZSBzdHlsZSBvYmplY3Rcblx0XHRcdHJldHVybiBzdHlsZVsgbmFtZSBdO1xuXHRcdH1cblx0fSxcblxuXHRjc3M6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBleHRyYSwgc3R5bGVzICkge1xuXHRcdHZhciB2YWwsIG51bSwgaG9va3MsXG5cdFx0XHRvcmlnTmFtZSA9IGNhbWVsQ2FzZSggbmFtZSApLFxuXHRcdFx0aXNDdXN0b21Qcm9wID0gcmN1c3RvbVByb3AudGVzdCggbmFtZSApO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lLiBXZSBkb24ndFxuXHRcdC8vIHdhbnQgdG8gbW9kaWZ5IHRoZSB2YWx1ZSBpZiBpdCBpcyBhIENTUyBjdXN0b20gcHJvcGVydHlcblx0XHQvLyBzaW5jZSB0aGV5IGFyZSB1c2VyLWRlZmluZWQuXG5cdFx0aWYgKCAhaXNDdXN0b21Qcm9wICkge1xuXHRcdFx0bmFtZSA9IGZpbmFsUHJvcE5hbWUoIG9yaWdOYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gVHJ5IHByZWZpeGVkIG5hbWUgZm9sbG93ZWQgYnkgdGhlIHVucHJlZml4ZWQgbmFtZVxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gfHwgalF1ZXJ5LmNzc0hvb2tzWyBvcmlnTmFtZSBdO1xuXG5cdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmVcblx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgKSB7XG5cdFx0XHR2YWwgPSBob29rcy5nZXQoIGVsZW0sIHRydWUsIGV4dHJhICk7XG5cdFx0fVxuXG5cdFx0Ly8gT3RoZXJ3aXNlLCBpZiBhIHdheSB0byBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGV4aXN0cywgdXNlIHRoYXRcblx0XHRpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dmFsID0gY3VyQ1NTKCBlbGVtLCBuYW1lLCBzdHlsZXMgKTtcblx0XHR9XG5cblx0XHQvLyBDb252ZXJ0IFwibm9ybWFsXCIgdG8gY29tcHV0ZWQgdmFsdWVcblx0XHRpZiAoIHZhbCA9PT0gXCJub3JtYWxcIiAmJiBuYW1lIGluIGNzc05vcm1hbFRyYW5zZm9ybSApIHtcblx0XHRcdHZhbCA9IGNzc05vcm1hbFRyYW5zZm9ybVsgbmFtZSBdO1xuXHRcdH1cblxuXHRcdC8vIE1ha2UgbnVtZXJpYyBpZiBmb3JjZWQgb3IgYSBxdWFsaWZpZXIgd2FzIHByb3ZpZGVkIGFuZCB2YWwgbG9va3MgbnVtZXJpY1xuXHRcdGlmICggZXh0cmEgPT09IFwiXCIgfHwgZXh0cmEgKSB7XG5cdFx0XHRudW0gPSBwYXJzZUZsb2F0KCB2YWwgKTtcblx0XHRcdHJldHVybiBleHRyYSA9PT0gdHJ1ZSB8fCBpc0Zpbml0ZSggbnVtICkgPyBudW0gfHwgMCA6IHZhbDtcblx0XHR9XG5cblx0XHRyZXR1cm4gdmFsO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwiaGVpZ2h0XCIsIFwid2lkdGhcIiBdLCBmdW5jdGlvbiggX2ksIGRpbWVuc2lvbiApIHtcblx0alF1ZXJ5LmNzc0hvb2tzWyBkaW1lbnNpb24gXSA9IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCwgZXh0cmEgKSB7XG5cdFx0XHRpZiAoIGNvbXB1dGVkICkge1xuXG5cdFx0XHRcdC8vIENlcnRhaW4gZWxlbWVudHMgY2FuIGhhdmUgZGltZW5zaW9uIGluZm8gaWYgd2UgaW52aXNpYmx5IHNob3cgdGhlbVxuXHRcdFx0XHQvLyBidXQgaXQgbXVzdCBoYXZlIGEgY3VycmVudCBkaXNwbGF5IHN0eWxlIHRoYXQgd291bGQgYmVuZWZpdFxuXHRcdFx0XHRyZXR1cm4gcmRpc3BsYXlzd2FwLnRlc3QoIGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICkgKSAmJlxuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDgrXG5cdFx0XHRcdFx0Ly8gVGFibGUgY29sdW1ucyBpbiBTYWZhcmkgaGF2ZSBub24temVybyBvZmZzZXRXaWR0aCAmIHplcm9cblx0XHRcdFx0XHQvLyBnZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCB1bmxlc3MgZGlzcGxheSBpcyBjaGFuZ2VkLlxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHRcdFx0XHRcdC8vIFJ1bm5pbmcgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IG9uIGEgZGlzY29ubmVjdGVkIG5vZGVcblx0XHRcdFx0XHQvLyBpbiBJRSB0aHJvd3MgYW4gZXJyb3IuXG5cdFx0XHRcdFx0KCAhZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCB8fCAhZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCApID9cblx0XHRcdFx0XHRzd2FwKCBlbGVtLCBjc3NTaG93LCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdHJldHVybiBnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBkaW1lbnNpb24sIGV4dHJhICk7XG5cdFx0XHRcdFx0fSApIDpcblx0XHRcdFx0XHRnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBkaW1lbnNpb24sIGV4dHJhICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBleHRyYSApIHtcblx0XHRcdHZhciBtYXRjaGVzLFxuXHRcdFx0XHRzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKSxcblxuXHRcdFx0XHQvLyBPbmx5IHJlYWQgc3R5bGVzLnBvc2l0aW9uIGlmIHRoZSB0ZXN0IGhhcyBhIGNoYW5jZSB0byBmYWlsXG5cdFx0XHRcdC8vIHRvIGF2b2lkIGZvcmNpbmcgYSByZWZsb3cuXG5cdFx0XHRcdHNjcm9sbGJveFNpemVCdWdneSA9ICFzdXBwb3J0LnNjcm9sbGJveFNpemUoKSAmJlxuXHRcdFx0XHRcdHN0eWxlcy5wb3NpdGlvbiA9PT0gXCJhYnNvbHV0ZVwiLFxuXG5cdFx0XHRcdC8vIFRvIGF2b2lkIGZvcmNpbmcgYSByZWZsb3csIG9ubHkgZmV0Y2ggYm94U2l6aW5nIGlmIHdlIG5lZWQgaXQgKGdoLTM5OTEpXG5cdFx0XHRcdGJveFNpemluZ05lZWRlZCA9IHNjcm9sbGJveFNpemVCdWdneSB8fCBleHRyYSxcblx0XHRcdFx0aXNCb3JkZXJCb3ggPSBib3hTaXppbmdOZWVkZWQgJiZcblx0XHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiLFxuXHRcdFx0XHRzdWJ0cmFjdCA9IGV4dHJhID9cblx0XHRcdFx0XHRib3hNb2RlbEFkanVzdG1lbnQoXG5cdFx0XHRcdFx0XHRlbGVtLFxuXHRcdFx0XHRcdFx0ZGltZW5zaW9uLFxuXHRcdFx0XHRcdFx0ZXh0cmEsXG5cdFx0XHRcdFx0XHRpc0JvcmRlckJveCxcblx0XHRcdFx0XHRcdHN0eWxlc1xuXHRcdFx0XHRcdCkgOlxuXHRcdFx0XHRcdDA7XG5cblx0XHRcdC8vIEFjY291bnQgZm9yIHVucmVsaWFibGUgYm9yZGVyLWJveCBkaW1lbnNpb25zIGJ5IGNvbXBhcmluZyBvZmZzZXQqIHRvIGNvbXB1dGVkIGFuZFxuXHRcdFx0Ly8gZmFraW5nIGEgY29udGVudC1ib3ggdG8gZ2V0IGJvcmRlciBhbmQgcGFkZGluZyAoZ2gtMzY5OSlcblx0XHRcdGlmICggaXNCb3JkZXJCb3ggJiYgc2Nyb2xsYm94U2l6ZUJ1Z2d5ICkge1xuXHRcdFx0XHRzdWJ0cmFjdCAtPSBNYXRoLmNlaWwoXG5cdFx0XHRcdFx0ZWxlbVsgXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKSBdIC1cblx0XHRcdFx0XHRwYXJzZUZsb2F0KCBzdHlsZXNbIGRpbWVuc2lvbiBdICkgLVxuXHRcdFx0XHRcdGJveE1vZGVsQWRqdXN0bWVudCggZWxlbSwgZGltZW5zaW9uLCBcImJvcmRlclwiLCBmYWxzZSwgc3R5bGVzICkgLVxuXHRcdFx0XHRcdDAuNVxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb252ZXJ0IHRvIHBpeGVscyBpZiB2YWx1ZSBhZGp1c3RtZW50IGlzIG5lZWRlZFxuXHRcdFx0aWYgKCBzdWJ0cmFjdCAmJiAoIG1hdGNoZXMgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICkgKSAmJlxuXHRcdFx0XHQoIG1hdGNoZXNbIDMgXSB8fCBcInB4XCIgKSAhPT0gXCJweFwiICkge1xuXG5cdFx0XHRcdGVsZW0uc3R5bGVbIGRpbWVuc2lvbiBdID0gdmFsdWU7XG5cdFx0XHRcdHZhbHVlID0galF1ZXJ5LmNzcyggZWxlbSwgZGltZW5zaW9uICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICk7XG5cdFx0fVxuXHR9O1xufSApO1xuXG5qUXVlcnkuY3NzSG9va3MubWFyZ2luTGVmdCA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5yZWxpYWJsZU1hcmdpbkxlZnQsXG5cdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdFx0cmV0dXJuICggcGFyc2VGbG9hdCggY3VyQ1NTKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiApICkgfHxcblx0XHRcdFx0ZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0IC1cblx0XHRcdFx0XHRzd2FwKCBlbGVtLCB7IG1hcmdpbkxlZnQ6IDAgfSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0O1xuXHRcdFx0XHRcdH0gKVxuXHRcdFx0KSArIFwicHhcIjtcblx0XHR9XG5cdH1cbik7XG5cbi8vIFRoZXNlIGhvb2tzIGFyZSB1c2VkIGJ5IGFuaW1hdGUgdG8gZXhwYW5kIHByb3BlcnRpZXNcbmpRdWVyeS5lYWNoKCB7XG5cdG1hcmdpbjogXCJcIixcblx0cGFkZGluZzogXCJcIixcblx0Ym9yZGVyOiBcIldpZHRoXCJcbn0sIGZ1bmN0aW9uKCBwcmVmaXgsIHN1ZmZpeCApIHtcblx0alF1ZXJ5LmNzc0hvb2tzWyBwcmVmaXggKyBzdWZmaXggXSA9IHtcblx0XHRleHBhbmQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHZhciBpID0gMCxcblx0XHRcdFx0ZXhwYW5kZWQgPSB7fSxcblxuXHRcdFx0XHQvLyBBc3N1bWVzIGEgc2luZ2xlIG51bWJlciBpZiBub3QgYSBzdHJpbmdcblx0XHRcdFx0cGFydHMgPSB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgPyB2YWx1ZS5zcGxpdCggXCIgXCIgKSA6IFsgdmFsdWUgXTtcblxuXHRcdFx0Zm9yICggOyBpIDwgNDsgaSsrICkge1xuXHRcdFx0XHRleHBhbmRlZFsgcHJlZml4ICsgY3NzRXhwYW5kWyBpIF0gKyBzdWZmaXggXSA9XG5cdFx0XHRcdFx0cGFydHNbIGkgXSB8fCBwYXJ0c1sgaSAtIDIgXSB8fCBwYXJ0c1sgMCBdO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZXhwYW5kZWQ7XG5cdFx0fVxuXHR9O1xuXG5cdGlmICggcHJlZml4ICE9PSBcIm1hcmdpblwiICkge1xuXHRcdGpRdWVyeS5jc3NIb29rc1sgcHJlZml4ICsgc3VmZml4IF0uc2V0ID0gc2V0UG9zaXRpdmVOdW1iZXI7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRjc3M6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgc3R5bGVzLCBsZW4sXG5cdFx0XHRcdG1hcCA9IHt9LFxuXHRcdFx0XHRpID0gMDtcblxuXHRcdFx0aWYgKCBBcnJheS5pc0FycmF5KCBuYW1lICkgKSB7XG5cdFx0XHRcdHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApO1xuXHRcdFx0XHRsZW4gPSBuYW1lLmxlbmd0aDtcblxuXHRcdFx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0XHRtYXBbIG5hbWVbIGkgXSBdID0galF1ZXJ5LmNzcyggZWxlbSwgbmFtZVsgaSBdLCBmYWxzZSwgc3R5bGVzICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gbWFwO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgbmFtZSwgdmFsdWUgKSA6XG5cdFx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIG5hbWUgKTtcblx0XHR9LCBuYW1lLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgKTtcblx0fVxufSApO1xuXG5cbmZ1bmN0aW9uIFR3ZWVuKCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZyApIHtcblx0cmV0dXJuIG5ldyBUd2Vlbi5wcm90b3R5cGUuaW5pdCggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcgKTtcbn1cbmpRdWVyeS5Ud2VlbiA9IFR3ZWVuO1xuXG5Ud2Vlbi5wcm90b3R5cGUgPSB7XG5cdGNvbnN0cnVjdG9yOiBUd2Vlbixcblx0aW5pdDogZnVuY3Rpb24oIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nLCB1bml0ICkge1xuXHRcdHRoaXMuZWxlbSA9IGVsZW07XG5cdFx0dGhpcy5wcm9wID0gcHJvcDtcblx0XHR0aGlzLmVhc2luZyA9IGVhc2luZyB8fCBqUXVlcnkuZWFzaW5nLl9kZWZhdWx0O1xuXHRcdHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG5cdFx0dGhpcy5zdGFydCA9IHRoaXMubm93ID0gdGhpcy5jdXIoKTtcblx0XHR0aGlzLmVuZCA9IGVuZDtcblx0XHR0aGlzLnVuaXQgPSB1bml0IHx8ICggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdID8gXCJcIiA6IFwicHhcIiApO1xuXHR9LFxuXHRjdXI6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBob29rcyA9IFR3ZWVuLnByb3BIb29rc1sgdGhpcy5wcm9wIF07XG5cblx0XHRyZXR1cm4gaG9va3MgJiYgaG9va3MuZ2V0ID9cblx0XHRcdGhvb2tzLmdldCggdGhpcyApIDpcblx0XHRcdFR3ZWVuLnByb3BIb29rcy5fZGVmYXVsdC5nZXQoIHRoaXMgKTtcblx0fSxcblx0cnVuOiBmdW5jdGlvbiggcGVyY2VudCApIHtcblx0XHR2YXIgZWFzZWQsXG5cdFx0XHRob29rcyA9IFR3ZWVuLnByb3BIb29rc1sgdGhpcy5wcm9wIF07XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5kdXJhdGlvbiApIHtcblx0XHRcdHRoaXMucG9zID0gZWFzZWQgPSBqUXVlcnkuZWFzaW5nWyB0aGlzLmVhc2luZyBdKFxuXHRcdFx0XHRwZXJjZW50LCB0aGlzLm9wdGlvbnMuZHVyYXRpb24gKiBwZXJjZW50LCAwLCAxLCB0aGlzLm9wdGlvbnMuZHVyYXRpb25cblx0XHRcdCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMucG9zID0gZWFzZWQgPSBwZXJjZW50O1xuXHRcdH1cblx0XHR0aGlzLm5vdyA9ICggdGhpcy5lbmQgLSB0aGlzLnN0YXJ0ICkgKiBlYXNlZCArIHRoaXMuc3RhcnQ7XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5zdGVwICkge1xuXHRcdFx0dGhpcy5vcHRpb25zLnN0ZXAuY2FsbCggdGhpcy5lbGVtLCB0aGlzLm5vdywgdGhpcyApO1xuXHRcdH1cblxuXHRcdGlmICggaG9va3MgJiYgaG9va3Muc2V0ICkge1xuXHRcdFx0aG9va3Muc2V0KCB0aGlzICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdFR3ZWVuLnByb3BIb29rcy5fZGVmYXVsdC5zZXQoIHRoaXMgKTtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cbn07XG5cblR3ZWVuLnByb3RvdHlwZS5pbml0LnByb3RvdHlwZSA9IFR3ZWVuLnByb3RvdHlwZTtcblxuVHdlZW4ucHJvcEhvb2tzID0ge1xuXHRfZGVmYXVsdDoge1xuXHRcdGdldDogZnVuY3Rpb24oIHR3ZWVuICkge1xuXHRcdFx0dmFyIHJlc3VsdDtcblxuXHRcdFx0Ly8gVXNlIGEgcHJvcGVydHkgb24gdGhlIGVsZW1lbnQgZGlyZWN0bHkgd2hlbiBpdCBpcyBub3QgYSBET00gZWxlbWVudCxcblx0XHRcdC8vIG9yIHdoZW4gdGhlcmUgaXMgbm8gbWF0Y2hpbmcgc3R5bGUgcHJvcGVydHkgdGhhdCBleGlzdHMuXG5cdFx0XHRpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgIT09IDEgfHxcblx0XHRcdFx0dHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdICE9IG51bGwgJiYgdHdlZW4uZWxlbS5zdHlsZVsgdHdlZW4ucHJvcCBdID09IG51bGwgKSB7XG5cdFx0XHRcdHJldHVybiB0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF07XG5cdFx0XHR9XG5cblx0XHRcdC8vIFBhc3NpbmcgYW4gZW1wdHkgc3RyaW5nIGFzIGEgM3JkIHBhcmFtZXRlciB0byAuY3NzIHdpbGwgYXV0b21hdGljYWxseVxuXHRcdFx0Ly8gYXR0ZW1wdCBhIHBhcnNlRmxvYXQgYW5kIGZhbGxiYWNrIHRvIGEgc3RyaW5nIGlmIHRoZSBwYXJzZSBmYWlscy5cblx0XHRcdC8vIFNpbXBsZSB2YWx1ZXMgc3VjaCBhcyBcIjEwcHhcIiBhcmUgcGFyc2VkIHRvIEZsb2F0O1xuXHRcdFx0Ly8gY29tcGxleCB2YWx1ZXMgc3VjaCBhcyBcInJvdGF0ZSgxcmFkKVwiIGFyZSByZXR1cm5lZCBhcy1pcy5cblx0XHRcdHJlc3VsdCA9IGpRdWVyeS5jc3MoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIFwiXCIgKTtcblxuXHRcdFx0Ly8gRW1wdHkgc3RyaW5ncywgbnVsbCwgdW5kZWZpbmVkIGFuZCBcImF1dG9cIiBhcmUgY29udmVydGVkIHRvIDAuXG5cdFx0XHRyZXR1cm4gIXJlc3VsdCB8fCByZXN1bHQgPT09IFwiYXV0b1wiID8gMCA6IHJlc3VsdDtcblx0XHR9LFxuXHRcdHNldDogZnVuY3Rpb24oIHR3ZWVuICkge1xuXG5cdFx0XHQvLyBVc2Ugc3RlcCBob29rIGZvciBiYWNrIGNvbXBhdC5cblx0XHRcdC8vIFVzZSBjc3NIb29rIGlmIGl0cyB0aGVyZS5cblx0XHRcdC8vIFVzZSAuc3R5bGUgaWYgYXZhaWxhYmxlIGFuZCB1c2UgcGxhaW4gcHJvcGVydGllcyB3aGVyZSBhdmFpbGFibGUuXG5cdFx0XHRpZiAoIGpRdWVyeS5meC5zdGVwWyB0d2Vlbi5wcm9wIF0gKSB7XG5cdFx0XHRcdGpRdWVyeS5meC5zdGVwWyB0d2Vlbi5wcm9wIF0oIHR3ZWVuICk7XG5cdFx0XHR9IGVsc2UgaWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlID09PSAxICYmIChcblx0XHRcdFx0alF1ZXJ5LmNzc0hvb2tzWyB0d2Vlbi5wcm9wIF0gfHxcblx0XHRcdFx0XHR0d2Vlbi5lbGVtLnN0eWxlWyBmaW5hbFByb3BOYW1lKCB0d2Vlbi5wcm9wICkgXSAhPSBudWxsICkgKSB7XG5cdFx0XHRcdGpRdWVyeS5zdHlsZSggdHdlZW4uZWxlbSwgdHdlZW4ucHJvcCwgdHdlZW4ubm93ICsgdHdlZW4udW5pdCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdID0gdHdlZW4ubm93O1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufTtcblxuLy8gU3VwcG9ydDogSUUgPD05IG9ubHlcbi8vIFBhbmljIGJhc2VkIGFwcHJvYWNoIHRvIHNldHRpbmcgdGhpbmdzIG9uIGRpc2Nvbm5lY3RlZCBub2Rlc1xuVHdlZW4ucHJvcEhvb2tzLnNjcm9sbFRvcCA9IFR3ZWVuLnByb3BIb29rcy5zY3JvbGxMZWZ0ID0ge1xuXHRzZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcblx0XHRpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgJiYgdHdlZW4uZWxlbS5wYXJlbnROb2RlICkge1xuXHRcdFx0dHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdID0gdHdlZW4ubm93O1xuXHRcdH1cblx0fVxufTtcblxualF1ZXJ5LmVhc2luZyA9IHtcblx0bGluZWFyOiBmdW5jdGlvbiggcCApIHtcblx0XHRyZXR1cm4gcDtcblx0fSxcblx0c3dpbmc6IGZ1bmN0aW9uKCBwICkge1xuXHRcdHJldHVybiAwLjUgLSBNYXRoLmNvcyggcCAqIE1hdGguUEkgKSAvIDI7XG5cdH0sXG5cdF9kZWZhdWx0OiBcInN3aW5nXCJcbn07XG5cbmpRdWVyeS5meCA9IFR3ZWVuLnByb3RvdHlwZS5pbml0O1xuXG4vLyBCYWNrIGNvbXBhdCA8MS44IGV4dGVuc2lvbiBwb2ludFxualF1ZXJ5LmZ4LnN0ZXAgPSB7fTtcblxuXG5cblxudmFyXG5cdGZ4Tm93LCBpblByb2dyZXNzLFxuXHRyZnh0eXBlcyA9IC9eKD86dG9nZ2xlfHNob3d8aGlkZSkkLyxcblx0cnJ1biA9IC9xdWV1ZUhvb2tzJC87XG5cbmZ1bmN0aW9uIHNjaGVkdWxlKCkge1xuXHRpZiAoIGluUHJvZ3Jlc3MgKSB7XG5cdFx0aWYgKCBkb2N1bWVudC5oaWRkZW4gPT09IGZhbHNlICYmIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgKSB7XG5cdFx0XHR3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKCBzY2hlZHVsZSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR3aW5kb3cuc2V0VGltZW91dCggc2NoZWR1bGUsIGpRdWVyeS5meC5pbnRlcnZhbCApO1xuXHRcdH1cblxuXHRcdGpRdWVyeS5meC50aWNrKCk7XG5cdH1cbn1cblxuLy8gQW5pbWF0aW9ucyBjcmVhdGVkIHN5bmNocm9ub3VzbHkgd2lsbCBydW4gc3luY2hyb25vdXNseVxuZnVuY3Rpb24gY3JlYXRlRnhOb3coKSB7XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRmeE5vdyA9IHVuZGVmaW5lZDtcblx0fSApO1xuXHRyZXR1cm4gKCBmeE5vdyA9IERhdGUubm93KCkgKTtcbn1cblxuLy8gR2VuZXJhdGUgcGFyYW1ldGVycyB0byBjcmVhdGUgYSBzdGFuZGFyZCBhbmltYXRpb25cbmZ1bmN0aW9uIGdlbkZ4KCB0eXBlLCBpbmNsdWRlV2lkdGggKSB7XG5cdHZhciB3aGljaCxcblx0XHRpID0gMCxcblx0XHRhdHRycyA9IHsgaGVpZ2h0OiB0eXBlIH07XG5cblx0Ly8gSWYgd2UgaW5jbHVkZSB3aWR0aCwgc3RlcCB2YWx1ZSBpcyAxIHRvIGRvIGFsbCBjc3NFeHBhbmQgdmFsdWVzLFxuXHQvLyBvdGhlcndpc2Ugc3RlcCB2YWx1ZSBpcyAyIHRvIHNraXAgb3ZlciBMZWZ0IGFuZCBSaWdodFxuXHRpbmNsdWRlV2lkdGggPSBpbmNsdWRlV2lkdGggPyAxIDogMDtcblx0Zm9yICggOyBpIDwgNDsgaSArPSAyIC0gaW5jbHVkZVdpZHRoICkge1xuXHRcdHdoaWNoID0gY3NzRXhwYW5kWyBpIF07XG5cdFx0YXR0cnNbIFwibWFyZ2luXCIgKyB3aGljaCBdID0gYXR0cnNbIFwicGFkZGluZ1wiICsgd2hpY2ggXSA9IHR5cGU7XG5cdH1cblxuXHRpZiAoIGluY2x1ZGVXaWR0aCApIHtcblx0XHRhdHRycy5vcGFjaXR5ID0gYXR0cnMud2lkdGggPSB0eXBlO1xuXHR9XG5cblx0cmV0dXJuIGF0dHJzO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVUd2VlbiggdmFsdWUsIHByb3AsIGFuaW1hdGlvbiApIHtcblx0dmFyIHR3ZWVuLFxuXHRcdGNvbGxlY3Rpb24gPSAoIEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdIHx8IFtdICkuY29uY2F0KCBBbmltYXRpb24udHdlZW5lcnNbIFwiKlwiIF0gKSxcblx0XHRpbmRleCA9IDAsXG5cdFx0bGVuZ3RoID0gY29sbGVjdGlvbi5sZW5ndGg7XG5cdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0aWYgKCAoIHR3ZWVuID0gY29sbGVjdGlvblsgaW5kZXggXS5jYWxsKCBhbmltYXRpb24sIHByb3AsIHZhbHVlICkgKSApIHtcblxuXHRcdFx0Ly8gV2UncmUgZG9uZSB3aXRoIHRoaXMgcHJvcGVydHlcblx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gZGVmYXVsdFByZWZpbHRlciggZWxlbSwgcHJvcHMsIG9wdHMgKSB7XG5cdHZhciBwcm9wLCB2YWx1ZSwgdG9nZ2xlLCBob29rcywgb2xkZmlyZSwgcHJvcFR3ZWVuLCByZXN0b3JlRGlzcGxheSwgZGlzcGxheSxcblx0XHRpc0JveCA9IFwid2lkdGhcIiBpbiBwcm9wcyB8fCBcImhlaWdodFwiIGluIHByb3BzLFxuXHRcdGFuaW0gPSB0aGlzLFxuXHRcdG9yaWcgPSB7fSxcblx0XHRzdHlsZSA9IGVsZW0uc3R5bGUsXG5cdFx0aGlkZGVuID0gZWxlbS5ub2RlVHlwZSAmJiBpc0hpZGRlbldpdGhpblRyZWUoIGVsZW0gKSxcblx0XHRkYXRhU2hvdyA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJmeHNob3dcIiApO1xuXG5cdC8vIFF1ZXVlLXNraXBwaW5nIGFuaW1hdGlvbnMgaGlqYWNrIHRoZSBmeCBob29rc1xuXHRpZiAoICFvcHRzLnF1ZXVlICkge1xuXHRcdGhvb2tzID0galF1ZXJ5Ll9xdWV1ZUhvb2tzKCBlbGVtLCBcImZ4XCIgKTtcblx0XHRpZiAoIGhvb2tzLnVucXVldWVkID09IG51bGwgKSB7XG5cdFx0XHRob29rcy51bnF1ZXVlZCA9IDA7XG5cdFx0XHRvbGRmaXJlID0gaG9va3MuZW1wdHkuZmlyZTtcblx0XHRcdGhvb2tzLmVtcHR5LmZpcmUgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCAhaG9va3MudW5xdWV1ZWQgKSB7XG5cdFx0XHRcdFx0b2xkZmlyZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXHRcdH1cblx0XHRob29rcy51bnF1ZXVlZCsrO1xuXG5cdFx0YW5pbS5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBFbnN1cmUgdGhlIGNvbXBsZXRlIGhhbmRsZXIgaXMgY2FsbGVkIGJlZm9yZSB0aGlzIGNvbXBsZXRlc1xuXHRcdFx0YW5pbS5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRob29rcy51bnF1ZXVlZC0tO1xuXHRcdFx0XHRpZiAoICFqUXVlcnkucXVldWUoIGVsZW0sIFwiZnhcIiApLmxlbmd0aCApIHtcblx0XHRcdFx0XHRob29rcy5lbXB0eS5maXJlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBEZXRlY3Qgc2hvdy9oaWRlIGFuaW1hdGlvbnNcblx0Zm9yICggcHJvcCBpbiBwcm9wcyApIHtcblx0XHR2YWx1ZSA9IHByb3BzWyBwcm9wIF07XG5cdFx0aWYgKCByZnh0eXBlcy50ZXN0KCB2YWx1ZSApICkge1xuXHRcdFx0ZGVsZXRlIHByb3BzWyBwcm9wIF07XG5cdFx0XHR0b2dnbGUgPSB0b2dnbGUgfHwgdmFsdWUgPT09IFwidG9nZ2xlXCI7XG5cdFx0XHRpZiAoIHZhbHVlID09PSAoIGhpZGRlbiA/IFwiaGlkZVwiIDogXCJzaG93XCIgKSApIHtcblxuXHRcdFx0XHQvLyBQcmV0ZW5kIHRvIGJlIGhpZGRlbiBpZiB0aGlzIGlzIGEgXCJzaG93XCIgYW5kXG5cdFx0XHRcdC8vIHRoZXJlIGlzIHN0aWxsIGRhdGEgZnJvbSBhIHN0b3BwZWQgc2hvdy9oaWRlXG5cdFx0XHRcdGlmICggdmFsdWUgPT09IFwic2hvd1wiICYmIGRhdGFTaG93ICYmIGRhdGFTaG93WyBwcm9wIF0gIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRoaWRkZW4gPSB0cnVlO1xuXG5cdFx0XHRcdC8vIElnbm9yZSBhbGwgb3RoZXIgbm8tb3Agc2hvdy9oaWRlIGRhdGFcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0b3JpZ1sgcHJvcCBdID0gZGF0YVNob3cgJiYgZGF0YVNob3dbIHByb3AgXSB8fCBqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBCYWlsIG91dCBpZiB0aGlzIGlzIGEgbm8tb3AgbGlrZSAuaGlkZSgpLmhpZGUoKVxuXHRwcm9wVHdlZW4gPSAhalF1ZXJ5LmlzRW1wdHlPYmplY3QoIHByb3BzICk7XG5cdGlmICggIXByb3BUd2VlbiAmJiBqUXVlcnkuaXNFbXB0eU9iamVjdCggb3JpZyApICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIFJlc3RyaWN0IFwib3ZlcmZsb3dcIiBhbmQgXCJkaXNwbGF5XCIgc3R5bGVzIGR1cmluZyBib3ggYW5pbWF0aW9uc1xuXHRpZiAoIGlzQm94ICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSwgRWRnZSAxMiAtIDE1XG5cdFx0Ly8gUmVjb3JkIGFsbCAzIG92ZXJmbG93IGF0dHJpYnV0ZXMgYmVjYXVzZSBJRSBkb2VzIG5vdCBpbmZlciB0aGUgc2hvcnRoYW5kXG5cdFx0Ly8gZnJvbSBpZGVudGljYWxseS12YWx1ZWQgb3ZlcmZsb3dYIGFuZCBvdmVyZmxvd1kgYW5kIEVkZ2UganVzdCBtaXJyb3JzXG5cdFx0Ly8gdGhlIG92ZXJmbG93WCB2YWx1ZSB0aGVyZS5cblx0XHRvcHRzLm92ZXJmbG93ID0gWyBzdHlsZS5vdmVyZmxvdywgc3R5bGUub3ZlcmZsb3dYLCBzdHlsZS5vdmVyZmxvd1kgXTtcblxuXHRcdC8vIElkZW50aWZ5IGEgZGlzcGxheSB0eXBlLCBwcmVmZXJyaW5nIG9sZCBzaG93L2hpZGUgZGF0YSBvdmVyIHRoZSBDU1MgY2FzY2FkZVxuXHRcdHJlc3RvcmVEaXNwbGF5ID0gZGF0YVNob3cgJiYgZGF0YVNob3cuZGlzcGxheTtcblx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ID09IG51bGwgKSB7XG5cdFx0XHRyZXN0b3JlRGlzcGxheSA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJkaXNwbGF5XCIgKTtcblx0XHR9XG5cdFx0ZGlzcGxheSA9IGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICk7XG5cdFx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcblx0XHRcdGlmICggcmVzdG9yZURpc3BsYXkgKSB7XG5cdFx0XHRcdGRpc3BsYXkgPSByZXN0b3JlRGlzcGxheTtcblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gR2V0IG5vbmVtcHR5IHZhbHVlKHMpIGJ5IHRlbXBvcmFyaWx5IGZvcmNpbmcgdmlzaWJpbGl0eVxuXHRcdFx0XHRzaG93SGlkZSggWyBlbGVtIF0sIHRydWUgKTtcblx0XHRcdFx0cmVzdG9yZURpc3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXkgfHwgcmVzdG9yZURpc3BsYXk7XG5cdFx0XHRcdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApO1xuXHRcdFx0XHRzaG93SGlkZSggWyBlbGVtIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBBbmltYXRlIGlubGluZSBlbGVtZW50cyBhcyBpbmxpbmUtYmxvY2tcblx0XHRpZiAoIGRpc3BsYXkgPT09IFwiaW5saW5lXCIgfHwgZGlzcGxheSA9PT0gXCJpbmxpbmUtYmxvY2tcIiAmJiByZXN0b3JlRGlzcGxheSAhPSBudWxsICkge1xuXHRcdFx0aWYgKCBqUXVlcnkuY3NzKCBlbGVtLCBcImZsb2F0XCIgKSA9PT0gXCJub25lXCIgKSB7XG5cblx0XHRcdFx0Ly8gUmVzdG9yZSB0aGUgb3JpZ2luYWwgZGlzcGxheSB2YWx1ZSBhdCB0aGUgZW5kIG9mIHB1cmUgc2hvdy9oaWRlIGFuaW1hdGlvbnNcblx0XHRcdFx0aWYgKCAhcHJvcFR3ZWVuICkge1xuXHRcdFx0XHRcdGFuaW0uZG9uZSggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRzdHlsZS5kaXNwbGF5ID0gcmVzdG9yZURpc3BsYXk7XG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdGlmICggcmVzdG9yZURpc3BsYXkgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRcdGRpc3BsYXkgPSBzdHlsZS5kaXNwbGF5O1xuXHRcdFx0XHRcdFx0cmVzdG9yZURpc3BsYXkgPSBkaXNwbGF5ID09PSBcIm5vbmVcIiA/IFwiXCIgOiBkaXNwbGF5O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRzdHlsZS5kaXNwbGF5ID0gXCJpbmxpbmUtYmxvY2tcIjtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRpZiAoIG9wdHMub3ZlcmZsb3cgKSB7XG5cdFx0c3R5bGUub3ZlcmZsb3cgPSBcImhpZGRlblwiO1xuXHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblx0XHRcdHN0eWxlLm92ZXJmbG93ID0gb3B0cy5vdmVyZmxvd1sgMCBdO1xuXHRcdFx0c3R5bGUub3ZlcmZsb3dYID0gb3B0cy5vdmVyZmxvd1sgMSBdO1xuXHRcdFx0c3R5bGUub3ZlcmZsb3dZID0gb3B0cy5vdmVyZmxvd1sgMiBdO1xuXHRcdH0gKTtcblx0fVxuXG5cdC8vIEltcGxlbWVudCBzaG93L2hpZGUgYW5pbWF0aW9uc1xuXHRwcm9wVHdlZW4gPSBmYWxzZTtcblx0Zm9yICggcHJvcCBpbiBvcmlnICkge1xuXG5cdFx0Ly8gR2VuZXJhbCBzaG93L2hpZGUgc2V0dXAgZm9yIHRoaXMgZWxlbWVudCBhbmltYXRpb25cblx0XHRpZiAoICFwcm9wVHdlZW4gKSB7XG5cdFx0XHRpZiAoIGRhdGFTaG93ICkge1xuXHRcdFx0XHRpZiAoIFwiaGlkZGVuXCIgaW4gZGF0YVNob3cgKSB7XG5cdFx0XHRcdFx0aGlkZGVuID0gZGF0YVNob3cuaGlkZGVuO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRkYXRhU2hvdyA9IGRhdGFQcml2LmFjY2VzcyggZWxlbSwgXCJmeHNob3dcIiwgeyBkaXNwbGF5OiByZXN0b3JlRGlzcGxheSB9ICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN0b3JlIGhpZGRlbi92aXNpYmxlIGZvciB0b2dnbGUgc28gYC5zdG9wKCkudG9nZ2xlKClgIFwicmV2ZXJzZXNcIlxuXHRcdFx0aWYgKCB0b2dnbGUgKSB7XG5cdFx0XHRcdGRhdGFTaG93LmhpZGRlbiA9ICFoaWRkZW47XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNob3cgZWxlbWVudHMgYmVmb3JlIGFuaW1hdGluZyB0aGVtXG5cdFx0XHRpZiAoIGhpZGRlbiApIHtcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdLCB0cnVlICk7XG5cdFx0XHR9XG5cblx0XHRcdC8qIGVzbGludC1kaXNhYmxlIG5vLWxvb3AtZnVuYyAqL1xuXG5cdFx0XHRhbmltLmRvbmUoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8qIGVzbGludC1lbmFibGUgbm8tbG9vcC1mdW5jICovXG5cblx0XHRcdFx0Ly8gVGhlIGZpbmFsIHN0ZXAgb2YgYSBcImhpZGVcIiBhbmltYXRpb24gaXMgYWN0dWFsbHkgaGlkaW5nIHRoZSBlbGVtZW50XG5cdFx0XHRcdGlmICggIWhpZGRlbiApIHtcblx0XHRcdFx0XHRzaG93SGlkZSggWyBlbGVtIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFwiZnhzaG93XCIgKTtcblx0XHRcdFx0Zm9yICggcHJvcCBpbiBvcmlnICkge1xuXHRcdFx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgb3JpZ1sgcHJvcCBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHQvLyBQZXItcHJvcGVydHkgc2V0dXBcblx0XHRwcm9wVHdlZW4gPSBjcmVhdGVUd2VlbiggaGlkZGVuID8gZGF0YVNob3dbIHByb3AgXSA6IDAsIHByb3AsIGFuaW0gKTtcblx0XHRpZiAoICEoIHByb3AgaW4gZGF0YVNob3cgKSApIHtcblx0XHRcdGRhdGFTaG93WyBwcm9wIF0gPSBwcm9wVHdlZW4uc3RhcnQ7XG5cdFx0XHRpZiAoIGhpZGRlbiApIHtcblx0XHRcdFx0cHJvcFR3ZWVuLmVuZCA9IHByb3BUd2Vlbi5zdGFydDtcblx0XHRcdFx0cHJvcFR3ZWVuLnN0YXJ0ID0gMDtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gcHJvcEZpbHRlciggcHJvcHMsIHNwZWNpYWxFYXNpbmcgKSB7XG5cdHZhciBpbmRleCwgbmFtZSwgZWFzaW5nLCB2YWx1ZSwgaG9va3M7XG5cblx0Ly8gY2FtZWxDYXNlLCBzcGVjaWFsRWFzaW5nIGFuZCBleHBhbmQgY3NzSG9vayBwYXNzXG5cdGZvciAoIGluZGV4IGluIHByb3BzICkge1xuXHRcdG5hbWUgPSBjYW1lbENhc2UoIGluZGV4ICk7XG5cdFx0ZWFzaW5nID0gc3BlY2lhbEVhc2luZ1sgbmFtZSBdO1xuXHRcdHZhbHVlID0gcHJvcHNbIGluZGV4IF07XG5cdFx0aWYgKCBBcnJheS5pc0FycmF5KCB2YWx1ZSApICkge1xuXHRcdFx0ZWFzaW5nID0gdmFsdWVbIDEgXTtcblx0XHRcdHZhbHVlID0gcHJvcHNbIGluZGV4IF0gPSB2YWx1ZVsgMCBdO1xuXHRcdH1cblxuXHRcdGlmICggaW5kZXggIT09IG5hbWUgKSB7XG5cdFx0XHRwcm9wc1sgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRkZWxldGUgcHJvcHNbIGluZGV4IF07XG5cdFx0fVxuXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXTtcblx0XHRpZiAoIGhvb2tzICYmIFwiZXhwYW5kXCIgaW4gaG9va3MgKSB7XG5cdFx0XHR2YWx1ZSA9IGhvb2tzLmV4cGFuZCggdmFsdWUgKTtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgbmFtZSBdO1xuXG5cdFx0XHQvLyBOb3QgcXVpdGUgJC5leHRlbmQsIHRoaXMgd29uJ3Qgb3ZlcndyaXRlIGV4aXN0aW5nIGtleXMuXG5cdFx0XHQvLyBSZXVzaW5nICdpbmRleCcgYmVjYXVzZSB3ZSBoYXZlIHRoZSBjb3JyZWN0IFwibmFtZVwiXG5cdFx0XHRmb3IgKCBpbmRleCBpbiB2YWx1ZSApIHtcblx0XHRcdFx0aWYgKCAhKCBpbmRleCBpbiBwcm9wcyApICkge1xuXHRcdFx0XHRcdHByb3BzWyBpbmRleCBdID0gdmFsdWVbIGluZGV4IF07XG5cdFx0XHRcdFx0c3BlY2lhbEVhc2luZ1sgaW5kZXggXSA9IGVhc2luZztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRzcGVjaWFsRWFzaW5nWyBuYW1lIF0gPSBlYXNpbmc7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIEFuaW1hdGlvbiggZWxlbSwgcHJvcGVydGllcywgb3B0aW9ucyApIHtcblx0dmFyIHJlc3VsdCxcblx0XHRzdG9wcGVkLFxuXHRcdGluZGV4ID0gMCxcblx0XHRsZW5ndGggPSBBbmltYXRpb24ucHJlZmlsdGVycy5sZW5ndGgsXG5cdFx0ZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKS5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBEb24ndCBtYXRjaCBlbGVtIGluIHRoZSA6YW5pbWF0ZWQgc2VsZWN0b3Jcblx0XHRcdGRlbGV0ZSB0aWNrLmVsZW07XG5cdFx0fSApLFxuXHRcdHRpY2sgPSBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggc3RvcHBlZCApIHtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0dmFyIGN1cnJlbnRUaW1lID0gZnhOb3cgfHwgY3JlYXRlRnhOb3coKSxcblx0XHRcdFx0cmVtYWluaW5nID0gTWF0aC5tYXgoIDAsIGFuaW1hdGlvbi5zdGFydFRpbWUgKyBhbmltYXRpb24uZHVyYXRpb24gLSBjdXJyZW50VGltZSApLFxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgMi4zIG9ubHlcblx0XHRcdFx0Ly8gQXJjaGFpYyBjcmFzaCBidWcgd29uJ3QgYWxsb3cgdXMgdG8gdXNlIGAxIC0gKCAwLjUgfHwgMCApYCAodHJhYy0xMjQ5Nylcblx0XHRcdFx0dGVtcCA9IHJlbWFpbmluZyAvIGFuaW1hdGlvbi5kdXJhdGlvbiB8fCAwLFxuXHRcdFx0XHRwZXJjZW50ID0gMSAtIHRlbXAsXG5cdFx0XHRcdGluZGV4ID0gMCxcblx0XHRcdFx0bGVuZ3RoID0gYW5pbWF0aW9uLnR3ZWVucy5sZW5ndGg7XG5cblx0XHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRcdGFuaW1hdGlvbi50d2VlbnNbIGluZGV4IF0ucnVuKCBwZXJjZW50ICk7XG5cdFx0XHR9XG5cblx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBwZXJjZW50LCByZW1haW5pbmcgXSApO1xuXG5cdFx0XHQvLyBJZiB0aGVyZSdzIG1vcmUgdG8gZG8sIHlpZWxkXG5cdFx0XHRpZiAoIHBlcmNlbnQgPCAxICYmIGxlbmd0aCApIHtcblx0XHRcdFx0cmV0dXJuIHJlbWFpbmluZztcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgdGhpcyB3YXMgYW4gZW1wdHkgYW5pbWF0aW9uLCBzeW50aGVzaXplIGEgZmluYWwgcHJvZ3Jlc3Mgbm90aWZpY2F0aW9uXG5cdFx0XHRpZiAoICFsZW5ndGggKSB7XG5cdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAxLCAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVzb2x2ZSB0aGUgYW5pbWF0aW9uIGFuZCByZXBvcnQgaXRzIGNvbmNsdXNpb25cblx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiBdICk7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSxcblx0XHRhbmltYXRpb24gPSBkZWZlcnJlZC5wcm9taXNlKCB7XG5cdFx0XHRlbGVtOiBlbGVtLFxuXHRcdFx0cHJvcHM6IGpRdWVyeS5leHRlbmQoIHt9LCBwcm9wZXJ0aWVzICksXG5cdFx0XHRvcHRzOiBqUXVlcnkuZXh0ZW5kKCB0cnVlLCB7XG5cdFx0XHRcdHNwZWNpYWxFYXNpbmc6IHt9LFxuXHRcdFx0XHRlYXNpbmc6IGpRdWVyeS5lYXNpbmcuX2RlZmF1bHRcblx0XHRcdH0sIG9wdGlvbnMgKSxcblx0XHRcdG9yaWdpbmFsUHJvcGVydGllczogcHJvcGVydGllcyxcblx0XHRcdG9yaWdpbmFsT3B0aW9uczogb3B0aW9ucyxcblx0XHRcdHN0YXJ0VGltZTogZnhOb3cgfHwgY3JlYXRlRnhOb3coKSxcblx0XHRcdGR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLFxuXHRcdFx0dHdlZW5zOiBbXSxcblx0XHRcdGNyZWF0ZVR3ZWVuOiBmdW5jdGlvbiggcHJvcCwgZW5kICkge1xuXHRcdFx0XHR2YXIgdHdlZW4gPSBqUXVlcnkuVHdlZW4oIGVsZW0sIGFuaW1hdGlvbi5vcHRzLCBwcm9wLCBlbmQsXG5cdFx0XHRcdFx0YW5pbWF0aW9uLm9wdHMuc3BlY2lhbEVhc2luZ1sgcHJvcCBdIHx8IGFuaW1hdGlvbi5vcHRzLmVhc2luZyApO1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zLnB1c2goIHR3ZWVuICk7XG5cdFx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHRcdH0sXG5cdFx0XHRzdG9wOiBmdW5jdGlvbiggZ290b0VuZCApIHtcblx0XHRcdFx0dmFyIGluZGV4ID0gMCxcblxuXHRcdFx0XHRcdC8vIElmIHdlIGFyZSBnb2luZyB0byB0aGUgZW5kLCB3ZSB3YW50IHRvIHJ1biBhbGwgdGhlIHR3ZWVuc1xuXHRcdFx0XHRcdC8vIG90aGVyd2lzZSB3ZSBza2lwIHRoaXMgcGFydFxuXHRcdFx0XHRcdGxlbmd0aCA9IGdvdG9FbmQgPyBhbmltYXRpb24udHdlZW5zLmxlbmd0aCA6IDA7XG5cdFx0XHRcdGlmICggc3RvcHBlZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fVxuXHRcdFx0XHRzdG9wcGVkID0gdHJ1ZTtcblx0XHRcdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggMSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVzb2x2ZSB3aGVuIHdlIHBsYXllZCB0aGUgbGFzdCBmcmFtZTsgb3RoZXJ3aXNlLCByZWplY3Rcblx0XHRcdFx0aWYgKCBnb3RvRW5kICkge1xuXHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAxLCAwIF0gKTtcblx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBnb3RvRW5kIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH1cblx0XHR9ICksXG5cdFx0cHJvcHMgPSBhbmltYXRpb24ucHJvcHM7XG5cblx0cHJvcEZpbHRlciggcHJvcHMsIGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmcgKTtcblxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdHJlc3VsdCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgZWxlbSwgcHJvcHMsIGFuaW1hdGlvbi5vcHRzICk7XG5cdFx0aWYgKCByZXN1bHQgKSB7XG5cdFx0XHRpZiAoIGlzRnVuY3Rpb24oIHJlc3VsdC5zdG9wICkgKSB7XG5cdFx0XHRcdGpRdWVyeS5fcXVldWVIb29rcyggYW5pbWF0aW9uLmVsZW0sIGFuaW1hdGlvbi5vcHRzLnF1ZXVlICkuc3RvcCA9XG5cdFx0XHRcdFx0cmVzdWx0LnN0b3AuYmluZCggcmVzdWx0ICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdH1cblx0fVxuXG5cdGpRdWVyeS5tYXAoIHByb3BzLCBjcmVhdGVUd2VlbiwgYW5pbWF0aW9uICk7XG5cblx0aWYgKCBpc0Z1bmN0aW9uKCBhbmltYXRpb24ub3B0cy5zdGFydCApICkge1xuXHRcdGFuaW1hdGlvbi5vcHRzLnN0YXJ0LmNhbGwoIGVsZW0sIGFuaW1hdGlvbiApO1xuXHR9XG5cblx0Ly8gQXR0YWNoIGNhbGxiYWNrcyBmcm9tIG9wdGlvbnNcblx0YW5pbWF0aW9uXG5cdFx0LnByb2dyZXNzKCBhbmltYXRpb24ub3B0cy5wcm9ncmVzcyApXG5cdFx0LmRvbmUoIGFuaW1hdGlvbi5vcHRzLmRvbmUsIGFuaW1hdGlvbi5vcHRzLmNvbXBsZXRlIClcblx0XHQuZmFpbCggYW5pbWF0aW9uLm9wdHMuZmFpbCApXG5cdFx0LmFsd2F5cyggYW5pbWF0aW9uLm9wdHMuYWx3YXlzICk7XG5cblx0alF1ZXJ5LmZ4LnRpbWVyKFxuXHRcdGpRdWVyeS5leHRlbmQoIHRpY2ssIHtcblx0XHRcdGVsZW06IGVsZW0sXG5cdFx0XHRhbmltOiBhbmltYXRpb24sXG5cdFx0XHRxdWV1ZTogYW5pbWF0aW9uLm9wdHMucXVldWVcblx0XHR9IClcblx0KTtcblxuXHRyZXR1cm4gYW5pbWF0aW9uO1xufVxuXG5qUXVlcnkuQW5pbWF0aW9uID0galF1ZXJ5LmV4dGVuZCggQW5pbWF0aW9uLCB7XG5cblx0dHdlZW5lcnM6IHtcblx0XHRcIipcIjogWyBmdW5jdGlvbiggcHJvcCwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgdHdlZW4gPSB0aGlzLmNyZWF0ZVR3ZWVuKCBwcm9wLCB2YWx1ZSApO1xuXHRcdFx0YWRqdXN0Q1NTKCB0d2Vlbi5lbGVtLCBwcm9wLCByY3NzTnVtLmV4ZWMoIHZhbHVlICksIHR3ZWVuICk7XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fSBdXG5cdH0sXG5cblx0dHdlZW5lcjogZnVuY3Rpb24oIHByb3BzLCBjYWxsYmFjayApIHtcblx0XHRpZiAoIGlzRnVuY3Rpb24oIHByb3BzICkgKSB7XG5cdFx0XHRjYWxsYmFjayA9IHByb3BzO1xuXHRcdFx0cHJvcHMgPSBbIFwiKlwiIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdHByb3BzID0gcHJvcHMubWF0Y2goIHJub3RodG1sd2hpdGUgKTtcblx0XHR9XG5cblx0XHR2YXIgcHJvcCxcblx0XHRcdGluZGV4ID0gMCxcblx0XHRcdGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRwcm9wID0gcHJvcHNbIGluZGV4IF07XG5cdFx0XHRBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSA9IEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdIHx8IFtdO1xuXHRcdFx0QW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0udW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH0sXG5cblx0cHJlZmlsdGVyczogWyBkZWZhdWx0UHJlZmlsdGVyIF0sXG5cblx0cHJlZmlsdGVyOiBmdW5jdGlvbiggY2FsbGJhY2ssIHByZXBlbmQgKSB7XG5cdFx0aWYgKCBwcmVwZW5kICkge1xuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMudW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMucHVzaCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH1cbn0gKTtcblxualF1ZXJ5LnNwZWVkID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGZuICkge1xuXHR2YXIgb3B0ID0gc3BlZWQgJiYgdHlwZW9mIHNwZWVkID09PSBcIm9iamVjdFwiID8galF1ZXJ5LmV4dGVuZCgge30sIHNwZWVkICkgOiB7XG5cdFx0Y29tcGxldGU6IGZuIHx8ICFmbiAmJiBlYXNpbmcgfHxcblx0XHRcdGlzRnVuY3Rpb24oIHNwZWVkICkgJiYgc3BlZWQsXG5cdFx0ZHVyYXRpb246IHNwZWVkLFxuXHRcdGVhc2luZzogZm4gJiYgZWFzaW5nIHx8IGVhc2luZyAmJiAhaXNGdW5jdGlvbiggZWFzaW5nICkgJiYgZWFzaW5nXG5cdH07XG5cblx0Ly8gR28gdG8gdGhlIGVuZCBzdGF0ZSBpZiBmeCBhcmUgb2ZmXG5cdGlmICggalF1ZXJ5LmZ4Lm9mZiApIHtcblx0XHRvcHQuZHVyYXRpb24gPSAwO1xuXG5cdH0gZWxzZSB7XG5cdFx0aWYgKCB0eXBlb2Ygb3B0LmR1cmF0aW9uICE9PSBcIm51bWJlclwiICkge1xuXHRcdFx0aWYgKCBvcHQuZHVyYXRpb24gaW4galF1ZXJ5LmZ4LnNwZWVkcyApIHtcblx0XHRcdFx0b3B0LmR1cmF0aW9uID0galF1ZXJ5LmZ4LnNwZWVkc1sgb3B0LmR1cmF0aW9uIF07XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG9wdC5kdXJhdGlvbiA9IGpRdWVyeS5meC5zcGVlZHMuX2RlZmF1bHQ7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gTm9ybWFsaXplIG9wdC5xdWV1ZSAtIHRydWUvdW5kZWZpbmVkL251bGwgLT4gXCJmeFwiXG5cdGlmICggb3B0LnF1ZXVlID09IG51bGwgfHwgb3B0LnF1ZXVlID09PSB0cnVlICkge1xuXHRcdG9wdC5xdWV1ZSA9IFwiZnhcIjtcblx0fVxuXG5cdC8vIFF1ZXVlaW5nXG5cdG9wdC5vbGQgPSBvcHQuY29tcGxldGU7XG5cblx0b3B0LmNvbXBsZXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBvcHQub2xkICkgKSB7XG5cdFx0XHRvcHQub2xkLmNhbGwoIHRoaXMgKTtcblx0XHR9XG5cblx0XHRpZiAoIG9wdC5xdWV1ZSApIHtcblx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCBvcHQucXVldWUgKTtcblx0XHR9XG5cdH07XG5cblx0cmV0dXJuIG9wdDtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZmFkZVRvOiBmdW5jdGlvbiggc3BlZWQsIHRvLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXG5cdFx0Ly8gU2hvdyBhbnkgaGlkZGVuIGVsZW1lbnRzIGFmdGVyIHNldHRpbmcgb3BhY2l0eSB0byAwXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBpc0hpZGRlbldpdGhpblRyZWUgKS5jc3MoIFwib3BhY2l0eVwiLCAwICkuc2hvdygpXG5cblx0XHRcdC8vIEFuaW1hdGUgdG8gdGhlIHZhbHVlIHNwZWNpZmllZFxuXHRcdFx0LmVuZCgpLmFuaW1hdGUoIHsgb3BhY2l0eTogdG8gfSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fSxcblx0YW5pbWF0ZTogZnVuY3Rpb24oIHByb3AsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHZhciBlbXB0eSA9IGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wICksXG5cdFx0XHRvcHRhbGwgPSBqUXVlcnkuc3BlZWQoIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICksXG5cdFx0XHRkb0FuaW1hdGlvbiA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIE9wZXJhdGUgb24gYSBjb3B5IG9mIHByb3Agc28gcGVyLXByb3BlcnR5IGVhc2luZyB3b24ndCBiZSBsb3N0XG5cdFx0XHRcdHZhciBhbmltID0gQW5pbWF0aW9uKCB0aGlzLCBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcCApLCBvcHRhbGwgKTtcblxuXHRcdFx0XHQvLyBFbXB0eSBhbmltYXRpb25zLCBvciBmaW5pc2hpbmcgcmVzb2x2ZXMgaW1tZWRpYXRlbHlcblx0XHRcdFx0aWYgKCBlbXB0eSB8fCBkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZmluaXNoXCIgKSApIHtcblx0XHRcdFx0XHRhbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdGRvQW5pbWF0aW9uLmZpbmlzaCA9IGRvQW5pbWF0aW9uO1xuXG5cdFx0cmV0dXJuIGVtcHR5IHx8IG9wdGFsbC5xdWV1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0dGhpcy5lYWNoKCBkb0FuaW1hdGlvbiApIDpcblx0XHRcdHRoaXMucXVldWUoIG9wdGFsbC5xdWV1ZSwgZG9BbmltYXRpb24gKTtcblx0fSxcblx0c3RvcDogZnVuY3Rpb24oIHR5cGUsIGNsZWFyUXVldWUsIGdvdG9FbmQgKSB7XG5cdFx0dmFyIHN0b3BRdWV1ZSA9IGZ1bmN0aW9uKCBob29rcyApIHtcblx0XHRcdHZhciBzdG9wID0gaG9va3Muc3RvcDtcblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xuXHRcdFx0c3RvcCggZ290b0VuZCApO1xuXHRcdH07XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0Z290b0VuZCA9IGNsZWFyUXVldWU7XG5cdFx0XHRjbGVhclF1ZXVlID0gdHlwZTtcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdGlmICggY2xlYXJRdWV1ZSApIHtcblx0XHRcdHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGRlcXVldWUgPSB0cnVlLFxuXHRcdFx0XHRpbmRleCA9IHR5cGUgIT0gbnVsbCAmJiB0eXBlICsgXCJxdWV1ZUhvb2tzXCIsXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKTtcblxuXHRcdFx0aWYgKCBpbmRleCApIHtcblx0XHRcdFx0aWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCApIHtcblx0XHRcdFx0XHRzdG9wUXVldWUoIGRhdGFbIGluZGV4IF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Zm9yICggaW5kZXggaW4gZGF0YSApIHtcblx0XHRcdFx0XHRpZiAoIGRhdGFbIGluZGV4IF0gJiYgZGF0YVsgaW5kZXggXS5zdG9wICYmIHJydW4udGVzdCggaW5kZXggKSApIHtcblx0XHRcdFx0XHRcdHN0b3BRdWV1ZSggZGF0YVsgaW5kZXggXSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRmb3IgKCBpbmRleCA9IHRpbWVycy5sZW5ndGg7IGluZGV4LS07ICkge1xuXHRcdFx0XHRpZiAoIHRpbWVyc1sgaW5kZXggXS5lbGVtID09PSB0aGlzICYmXG5cdFx0XHRcdFx0KCB0eXBlID09IG51bGwgfHwgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkgKSB7XG5cblx0XHRcdFx0XHR0aW1lcnNbIGluZGV4IF0uYW5pbS5zdG9wKCBnb3RvRW5kICk7XG5cdFx0XHRcdFx0ZGVxdWV1ZSA9IGZhbHNlO1xuXHRcdFx0XHRcdHRpbWVycy5zcGxpY2UoIGluZGV4LCAxICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gU3RhcnQgdGhlIG5leHQgaW4gdGhlIHF1ZXVlIGlmIHRoZSBsYXN0IHN0ZXAgd2Fzbid0IGZvcmNlZC5cblx0XHRcdC8vIFRpbWVycyBjdXJyZW50bHkgd2lsbCBjYWxsIHRoZWlyIGNvbXBsZXRlIGNhbGxiYWNrcywgd2hpY2hcblx0XHRcdC8vIHdpbGwgZGVxdWV1ZSBidXQgb25seSBpZiB0aGV5IHdlcmUgZ290b0VuZC5cblx0XHRcdGlmICggZGVxdWV1ZSB8fCAhZ290b0VuZCApIHtcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cdGZpbmlzaDogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0aWYgKCB0eXBlICE9PSBmYWxzZSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgaW5kZXgsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKSxcblx0XHRcdFx0cXVldWUgPSBkYXRhWyB0eXBlICsgXCJxdWV1ZVwiIF0sXG5cdFx0XHRcdGhvb2tzID0gZGF0YVsgdHlwZSArIFwicXVldWVIb29rc1wiIF0sXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGxlbmd0aCA9IHF1ZXVlID8gcXVldWUubGVuZ3RoIDogMDtcblxuXHRcdFx0Ly8gRW5hYmxlIGZpbmlzaGluZyBmbGFnIG9uIHByaXZhdGUgZGF0YVxuXHRcdFx0ZGF0YS5maW5pc2ggPSB0cnVlO1xuXG5cdFx0XHQvLyBFbXB0eSB0aGUgcXVldWUgZmlyc3Rcblx0XHRcdGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgW10gKTtcblxuXHRcdFx0aWYgKCBob29rcyAmJiBob29rcy5zdG9wICkge1xuXHRcdFx0XHRob29rcy5zdG9wLmNhbGwoIHRoaXMsIHRydWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTG9vayBmb3IgYW55IGFjdGl2ZSBhbmltYXRpb25zLCBhbmQgZmluaXNoIHRoZW1cblx0XHRcdGZvciAoIGluZGV4ID0gdGltZXJzLmxlbmd0aDsgaW5kZXgtLTsgKSB7XG5cdFx0XHRcdGlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiYgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkge1xuXHRcdFx0XHRcdHRpbWVyc1sgaW5kZXggXS5hbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIExvb2sgZm9yIGFueSBhbmltYXRpb25zIGluIHRoZSBvbGQgcXVldWUgYW5kIGZpbmlzaCB0aGVtXG5cdFx0XHRmb3IgKCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRpZiAoIHF1ZXVlWyBpbmRleCBdICYmIHF1ZXVlWyBpbmRleCBdLmZpbmlzaCApIHtcblx0XHRcdFx0XHRxdWV1ZVsgaW5kZXggXS5maW5pc2guY2FsbCggdGhpcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFR1cm4gb2ZmIGZpbmlzaGluZyBmbGFnXG5cdFx0XHRkZWxldGUgZGF0YS5maW5pc2g7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwidG9nZ2xlXCIsIFwic2hvd1wiLCBcImhpZGVcIiBdLCBmdW5jdGlvbiggX2ksIG5hbWUgKSB7XG5cdHZhciBjc3NGbiA9IGpRdWVyeS5mblsgbmFtZSBdO1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gc3BlZWQgPT0gbnVsbCB8fCB0eXBlb2Ygc3BlZWQgPT09IFwiYm9vbGVhblwiID9cblx0XHRcdGNzc0ZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSA6XG5cdFx0XHR0aGlzLmFuaW1hdGUoIGdlbkZ4KCBuYW1lLCB0cnVlICksIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH07XG59ICk7XG5cbi8vIEdlbmVyYXRlIHNob3J0Y3V0cyBmb3IgY3VzdG9tIGFuaW1hdGlvbnNcbmpRdWVyeS5lYWNoKCB7XG5cdHNsaWRlRG93bjogZ2VuRngoIFwic2hvd1wiICksXG5cdHNsaWRlVXA6IGdlbkZ4KCBcImhpZGVcIiApLFxuXHRzbGlkZVRvZ2dsZTogZ2VuRngoIFwidG9nZ2xlXCIgKSxcblx0ZmFkZUluOiB7IG9wYWNpdHk6IFwic2hvd1wiIH0sXG5cdGZhZGVPdXQ6IHsgb3BhY2l0eTogXCJoaWRlXCIgfSxcblx0ZmFkZVRvZ2dsZTogeyBvcGFjaXR5OiBcInRvZ2dsZVwiIH1cbn0sIGZ1bmN0aW9uKCBuYW1lLCBwcm9wcyApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIHRoaXMuYW5pbWF0ZSggcHJvcHMsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS50aW1lcnMgPSBbXTtcbmpRdWVyeS5meC50aWNrID0gZnVuY3Rpb24oKSB7XG5cdHZhciB0aW1lcixcblx0XHRpID0gMCxcblx0XHR0aW1lcnMgPSBqUXVlcnkudGltZXJzO1xuXG5cdGZ4Tm93ID0gRGF0ZS5ub3coKTtcblxuXHRmb3IgKCA7IGkgPCB0aW1lcnMubGVuZ3RoOyBpKysgKSB7XG5cdFx0dGltZXIgPSB0aW1lcnNbIGkgXTtcblxuXHRcdC8vIFJ1biB0aGUgdGltZXIgYW5kIHNhZmVseSByZW1vdmUgaXQgd2hlbiBkb25lIChhbGxvd2luZyBmb3IgZXh0ZXJuYWwgcmVtb3ZhbClcblx0XHRpZiAoICF0aW1lcigpICYmIHRpbWVyc1sgaSBdID09PSB0aW1lciApIHtcblx0XHRcdHRpbWVycy5zcGxpY2UoIGktLSwgMSApO1xuXHRcdH1cblx0fVxuXG5cdGlmICggIXRpbWVycy5sZW5ndGggKSB7XG5cdFx0alF1ZXJ5LmZ4LnN0b3AoKTtcblx0fVxuXHRmeE5vdyA9IHVuZGVmaW5lZDtcbn07XG5cbmpRdWVyeS5meC50aW1lciA9IGZ1bmN0aW9uKCB0aW1lciApIHtcblx0alF1ZXJ5LnRpbWVycy5wdXNoKCB0aW1lciApO1xuXHRqUXVlcnkuZnguc3RhcnQoKTtcbn07XG5cbmpRdWVyeS5meC5pbnRlcnZhbCA9IDEzO1xualF1ZXJ5LmZ4LnN0YXJ0ID0gZnVuY3Rpb24oKSB7XG5cdGlmICggaW5Qcm9ncmVzcyApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHRpblByb2dyZXNzID0gdHJ1ZTtcblx0c2NoZWR1bGUoKTtcbn07XG5cbmpRdWVyeS5meC5zdG9wID0gZnVuY3Rpb24oKSB7XG5cdGluUHJvZ3Jlc3MgPSBudWxsO1xufTtcblxualF1ZXJ5LmZ4LnNwZWVkcyA9IHtcblx0c2xvdzogNjAwLFxuXHRmYXN0OiAyMDAsXG5cblx0Ly8gRGVmYXVsdCBzcGVlZFxuXHRfZGVmYXVsdDogNDAwXG59O1xuXG5cbi8vIEJhc2VkIG9mZiBvZiB0aGUgcGx1Z2luIGJ5IENsaW50IEhlbGZlcnMsIHdpdGggcGVybWlzc2lvbi5cbmpRdWVyeS5mbi5kZWxheSA9IGZ1bmN0aW9uKCB0aW1lLCB0eXBlICkge1xuXHR0aW1lID0galF1ZXJ5LmZ4ID8galF1ZXJ5LmZ4LnNwZWVkc1sgdGltZSBdIHx8IHRpbWUgOiB0aW1lO1xuXHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0cmV0dXJuIHRoaXMucXVldWUoIHR5cGUsIGZ1bmN0aW9uKCBuZXh0LCBob29rcyApIHtcblx0XHR2YXIgdGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KCBuZXh0LCB0aW1lICk7XG5cdFx0aG9va3Muc3RvcCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dCApO1xuXHRcdH07XG5cdH0gKTtcbn07XG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICksXG5cdFx0c2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJzZWxlY3RcIiApLFxuXHRcdG9wdCA9IHNlbGVjdC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJvcHRpb25cIiApICk7XG5cblx0aW5wdXQudHlwZSA9IFwiY2hlY2tib3hcIjtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4zIG9ubHlcblx0Ly8gRGVmYXVsdCB2YWx1ZSBmb3IgYSBjaGVja2JveCBzaG91bGQgYmUgXCJvblwiXG5cdHN1cHBvcnQuY2hlY2tPbiA9IGlucHV0LnZhbHVlICE9PSBcIlwiO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBNdXN0IGFjY2VzcyBzZWxlY3RlZEluZGV4IHRvIG1ha2UgZGVmYXVsdCBvcHRpb25zIHNlbGVjdFxuXHRzdXBwb3J0Lm9wdFNlbGVjdGVkID0gb3B0LnNlbGVjdGVkO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBBbiBpbnB1dCBsb3NlcyBpdHMgdmFsdWUgYWZ0ZXIgYmVjb21pbmcgYSByYWRpb1xuXHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXHRpbnB1dC52YWx1ZSA9IFwidFwiO1xuXHRpbnB1dC50eXBlID0gXCJyYWRpb1wiO1xuXHRzdXBwb3J0LnJhZGlvVmFsdWUgPSBpbnB1dC52YWx1ZSA9PT0gXCJ0XCI7XG59ICkoKTtcblxuXG52YXIgYm9vbEhvb2ssXG5cdGF0dHJIYW5kbGUgPSBqUXVlcnkuZXhwci5hdHRySGFuZGxlO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGF0dHI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkuYXR0ciwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cblx0cmVtb3ZlQXR0cjogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggdGhpcywgbmFtZSApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdGF0dHI6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHR2YXIgcmV0LCBob29rcyxcblx0XHRcdG5UeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRcdC8vIERvbid0IGdldC9zZXQgYXR0cmlidXRlcyBvbiB0ZXh0LCBjb21tZW50IGFuZCBhdHRyaWJ1dGUgbm9kZXNcblx0XHRpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5UeXBlID09PSAyICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIEZhbGxiYWNrIHRvIHByb3Agd2hlbiBhdHRyaWJ1dGVzIGFyZSBub3Qgc3VwcG9ydGVkXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGUgPT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LnByb3AoIGVsZW0sIG5hbWUsIHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXR0cmlidXRlIGhvb2tzIGFyZSBkZXRlcm1pbmVkIGJ5IHRoZSBsb3dlcmNhc2UgdmVyc2lvblxuXHRcdC8vIEdyYWIgbmVjZXNzYXJ5IGhvb2sgaWYgb25lIGlzIGRlZmluZWRcblx0XHRpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblx0XHRcdGhvb2tzID0galF1ZXJ5LmF0dHJIb29rc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gfHxcblx0XHRcdFx0KCBqUXVlcnkuZXhwci5tYXRjaC5ib29sLnRlc3QoIG5hbWUgKSA/IGJvb2xIb29rIDogdW5kZWZpbmVkICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gbnVsbCApIHtcblx0XHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGhvb2tzICYmIFwic2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBuYW1lICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgdmFsdWUgKyBcIlwiICk7XG5cdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXG5cdFx0cmV0ID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgbmFtZSApO1xuXG5cdFx0Ly8gTm9uLWV4aXN0ZW50IGF0dHJpYnV0ZXMgcmV0dXJuIG51bGwsIHdlIG5vcm1hbGl6ZSB0byB1bmRlZmluZWRcblx0XHRyZXR1cm4gcmV0ID09IG51bGwgPyB1bmRlZmluZWQgOiByZXQ7XG5cdH0sXG5cblx0YXR0ckhvb2tzOiB7XG5cdFx0dHlwZToge1xuXHRcdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRcdGlmICggIXN1cHBvcnQucmFkaW9WYWx1ZSAmJiB2YWx1ZSA9PT0gXCJyYWRpb1wiICYmXG5cdFx0XHRcdFx0bm9kZU5hbWUoIGVsZW0sIFwiaW5wdXRcIiApICkge1xuXHRcdFx0XHRcdHZhciB2YWwgPSBlbGVtLnZhbHVlO1xuXHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgdmFsdWUgKTtcblx0XHRcdFx0XHRpZiAoIHZhbCApIHtcblx0XHRcdFx0XHRcdGVsZW0udmFsdWUgPSB2YWw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRyZW1vdmVBdHRyOiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0dmFyIG5hbWUsXG5cdFx0XHRpID0gMCxcblxuXHRcdFx0Ly8gQXR0cmlidXRlIG5hbWVzIGNhbiBjb250YWluIG5vbi1IVE1MIHdoaXRlc3BhY2UgY2hhcmFjdGVyc1xuXHRcdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc3ludGF4Lmh0bWwjYXR0cmlidXRlcy0yXG5cdFx0XHRhdHRyTmFtZXMgPSB2YWx1ZSAmJiB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApO1xuXG5cdFx0aWYgKCBhdHRyTmFtZXMgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdHdoaWxlICggKCBuYW1lID0gYXR0ck5hbWVzWyBpKysgXSApICkge1xuXHRcdFx0XHRlbGVtLnJlbW92ZUF0dHJpYnV0ZSggbmFtZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG4vLyBIb29rcyBmb3IgYm9vbGVhbiBhdHRyaWJ1dGVzXG5ib29sSG9vayA9IHtcblx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7XG5cdFx0aWYgKCB2YWx1ZSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBib29sZWFuIGF0dHJpYnV0ZXMgd2hlbiBzZXQgdG8gZmFsc2Vcblx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBuYW1lLCBuYW1lICk7XG5cdFx0fVxuXHRcdHJldHVybiBuYW1lO1xuXHR9XG59O1xuXG5qUXVlcnkuZWFjaCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goIC9cXHcrL2cgKSwgZnVuY3Rpb24oIF9pLCBuYW1lICkge1xuXHR2YXIgZ2V0dGVyID0gYXR0ckhhbmRsZVsgbmFtZSBdIHx8IGpRdWVyeS5maW5kLmF0dHI7XG5cblx0YXR0ckhhbmRsZVsgbmFtZSBdID0gZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdHZhciByZXQsIGhhbmRsZSxcblx0XHRcdGxvd2VyY2FzZU5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG5cblx0XHRpZiAoICFpc1hNTCApIHtcblxuXHRcdFx0Ly8gQXZvaWQgYW4gaW5maW5pdGUgbG9vcCBieSB0ZW1wb3JhcmlseSByZW1vdmluZyB0aGlzIGZ1bmN0aW9uIGZyb20gdGhlIGdldHRlclxuXHRcdFx0aGFuZGxlID0gYXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdO1xuXHRcdFx0YXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdID0gcmV0O1xuXHRcdFx0cmV0ID0gZ2V0dGVyKCBlbGVtLCBuYW1lLCBpc1hNTCApICE9IG51bGwgP1xuXHRcdFx0XHRsb3dlcmNhc2VOYW1lIDpcblx0XHRcdFx0bnVsbDtcblx0XHRcdGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXSA9IGhhbmRsZTtcblx0XHR9XG5cdFx0cmV0dXJuIHJldDtcblx0fTtcbn0gKTtcblxuXG5cblxudmFyIHJmb2N1c2FibGUgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFxuXHRyY2xpY2thYmxlID0gL14oPzphfGFyZWEpJC9pO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHByb3A6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkucHJvcCwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cblx0cmVtb3ZlUHJvcDogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRkZWxldGUgdGhpc1sgalF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lIF07XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0cHJvcDogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdHZhciByZXQsIGhvb2tzLFxuXHRcdFx0blR5cGUgPSBlbGVtLm5vZGVUeXBlO1xuXG5cdFx0Ly8gRG9uJ3QgZ2V0L3NldCBwcm9wZXJ0aWVzIG9uIHRleHQsIGNvbW1lbnQgYW5kIGF0dHJpYnV0ZSBub2Rlc1xuXHRcdGlmICggblR5cGUgPT09IDMgfHwgblR5cGUgPT09IDggfHwgblR5cGUgPT09IDIgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCBuVHlwZSAhPT0gMSB8fCAhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cblx0XHRcdC8vIEZpeCBuYW1lIGFuZCBhdHRhY2ggaG9va3Ncblx0XHRcdG5hbWUgPSBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWU7XG5cdFx0XHRob29rcyA9IGpRdWVyeS5wcm9wSG9va3NbIG5hbWUgXTtcblx0XHR9XG5cblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRpZiAoIGhvb2tzICYmIFwic2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBuYW1lICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gKCBlbGVtWyBuYW1lIF0gPSB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJiAoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApICkgIT09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblxuXHRcdHJldHVybiBlbGVtWyBuYW1lIF07XG5cdH0sXG5cblx0cHJvcEhvb2tzOiB7XG5cdFx0dGFiSW5kZXg6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEgb25seVxuXHRcdFx0XHQvLyBlbGVtLnRhYkluZGV4IGRvZXNuJ3QgYWx3YXlzIHJldHVybiB0aGVcblx0XHRcdFx0Ly8gY29ycmVjdCB2YWx1ZSB3aGVuIGl0IGhhc24ndCBiZWVuIGV4cGxpY2l0bHkgc2V0XG5cdFx0XHRcdC8vIFVzZSBwcm9wZXIgYXR0cmlidXRlIHJldHJpZXZhbCAodHJhYy0xMjA3Milcblx0XHRcdFx0dmFyIHRhYmluZGV4ID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ0YWJpbmRleFwiICk7XG5cblx0XHRcdFx0aWYgKCB0YWJpbmRleCApIHtcblx0XHRcdFx0XHRyZXR1cm4gcGFyc2VJbnQoIHRhYmluZGV4LCAxMCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHJmb2N1c2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApIHx8XG5cdFx0XHRcdFx0cmNsaWNrYWJsZS50ZXN0KCBlbGVtLm5vZGVOYW1lICkgJiZcblx0XHRcdFx0XHRlbGVtLmhyZWZcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIDA7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdHByb3BGaXg6IHtcblx0XHRcImZvclwiOiBcImh0bWxGb3JcIixcblx0XHRcImNsYXNzXCI6IFwiY2xhc3NOYW1lXCJcblx0fVxufSApO1xuXG4vLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcbi8vIEFjY2Vzc2luZyB0aGUgc2VsZWN0ZWRJbmRleCBwcm9wZXJ0eVxuLy8gZm9yY2VzIHRoZSBicm93c2VyIHRvIHJlc3BlY3Qgc2V0dGluZyBzZWxlY3RlZFxuLy8gb24gdGhlIG9wdGlvblxuLy8gVGhlIGdldHRlciBlbnN1cmVzIGEgZGVmYXVsdCBvcHRpb24gaXMgc2VsZWN0ZWRcbi8vIHdoZW4gaW4gYW4gb3B0Z3JvdXBcbi8vIGVzbGludCBydWxlIFwibm8tdW51c2VkLWV4cHJlc3Npb25zXCIgaXMgZGlzYWJsZWQgZm9yIHRoaXMgY29kZVxuLy8gc2luY2UgaXQgY29uc2lkZXJzIHN1Y2ggYWNjZXNzaW9ucyBub29wXG5pZiAoICFzdXBwb3J0Lm9wdFNlbGVjdGVkICkge1xuXHRqUXVlcnkucHJvcEhvb2tzLnNlbGVjdGVkID0ge1xuXHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdC8qIGVzbGludCBuby11bnVzZWQtZXhwcmVzc2lvbnM6IFwib2ZmXCIgKi9cblxuXHRcdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRcdGlmICggcGFyZW50ICYmIHBhcmVudC5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fSxcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvKiBlc2xpbnQgbm8tdW51c2VkLWV4cHJlc3Npb25zOiBcIm9mZlwiICovXG5cblx0XHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0XHRpZiAoIHBhcmVudCApIHtcblx0XHRcdFx0cGFyZW50LnNlbGVjdGVkSW5kZXg7XG5cblx0XHRcdFx0aWYgKCBwYXJlbnQucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0XHRwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG5qUXVlcnkuZWFjaCggW1xuXHRcInRhYkluZGV4XCIsXG5cdFwicmVhZE9ubHlcIixcblx0XCJtYXhMZW5ndGhcIixcblx0XCJjZWxsU3BhY2luZ1wiLFxuXHRcImNlbGxQYWRkaW5nXCIsXG5cdFwicm93U3BhblwiLFxuXHRcImNvbFNwYW5cIixcblx0XCJ1c2VNYXBcIixcblx0XCJmcmFtZUJvcmRlclwiLFxuXHRcImNvbnRlbnRFZGl0YWJsZVwiXG5dLCBmdW5jdGlvbigpIHtcblx0alF1ZXJ5LnByb3BGaXhbIHRoaXMudG9Mb3dlckNhc2UoKSBdID0gdGhpcztcbn0gKTtcblxuXG5cblxuXHQvLyBTdHJpcCBhbmQgY29sbGFwc2Ugd2hpdGVzcGFjZSBhY2NvcmRpbmcgdG8gSFRNTCBzcGVjXG5cdC8vIGh0dHBzOi8vaW5mcmEuc3BlYy53aGF0d2cub3JnLyNzdHJpcC1hbmQtY29sbGFwc2UtYXNjaWktd2hpdGVzcGFjZVxuXHRmdW5jdGlvbiBzdHJpcEFuZENvbGxhcHNlKCB2YWx1ZSApIHtcblx0XHR2YXIgdG9rZW5zID0gdmFsdWUubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTtcblx0XHRyZXR1cm4gdG9rZW5zLmpvaW4oIFwiIFwiICk7XG5cdH1cblxuXG5mdW5jdGlvbiBnZXRDbGFzcyggZWxlbSApIHtcblx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlICYmIGVsZW0uZ2V0QXR0cmlidXRlKCBcImNsYXNzXCIgKSB8fCBcIlwiO1xufVxuXG5mdW5jdGlvbiBjbGFzc2VzVG9BcnJheSggdmFsdWUgKSB7XG5cdGlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHtcblx0XHRyZXR1cm4gdmFsdWU7XG5cdH1cblx0aWYgKCB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0cmV0dXJuIHZhbHVlLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107XG5cdH1cblx0cmV0dXJuIFtdO1xufVxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGFkZENsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGNsYXNzTmFtZXMsIGN1ciwgY3VyVmFsdWUsIGNsYXNzTmFtZSwgaSwgZmluYWxWYWx1ZTtcblxuXHRcdGlmICggaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5hZGRDbGFzcyggdmFsdWUuY2FsbCggdGhpcywgaiwgZ2V0Q2xhc3MoIHRoaXMgKSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0Y2xhc3NOYW1lcyA9IGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0aWYgKCBjbGFzc05hbWVzLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRjdXJWYWx1ZSA9IGdldENsYXNzKCB0aGlzICk7XG5cdFx0XHRcdGN1ciA9IHRoaXMubm9kZVR5cGUgPT09IDEgJiYgKCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGN1clZhbHVlICkgKyBcIiBcIiApO1xuXG5cdFx0XHRcdGlmICggY3VyICkge1xuXHRcdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgY2xhc3NOYW1lcy5sZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0XHRcdGNsYXNzTmFtZSA9IGNsYXNzTmFtZXNbIGkgXTtcblx0XHRcdFx0XHRcdGlmICggY3VyLmluZGV4T2YoIFwiIFwiICsgY2xhc3NOYW1lICsgXCIgXCIgKSA8IDAgKSB7XG5cdFx0XHRcdFx0XHRcdGN1ciArPSBjbGFzc05hbWUgKyBcIiBcIjtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBPbmx5IGFzc2lnbiBpZiBkaWZmZXJlbnQgdG8gYXZvaWQgdW5uZWVkZWQgcmVuZGVyaW5nLlxuXHRcdFx0XHRcdGZpbmFsVmFsdWUgPSBzdHJpcEFuZENvbGxhcHNlKCBjdXIgKTtcblx0XHRcdFx0XHRpZiAoIGN1clZhbHVlICE9PSBmaW5hbFZhbHVlICkge1xuXHRcdFx0XHRcdFx0dGhpcy5zZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIiwgZmluYWxWYWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHJlbW92ZUNsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGNsYXNzTmFtZXMsIGN1ciwgY3VyVmFsdWUsIGNsYXNzTmFtZSwgaSwgZmluYWxWYWx1ZTtcblxuXHRcdGlmICggaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5yZW1vdmVDbGFzcyggdmFsdWUuY2FsbCggdGhpcywgaiwgZ2V0Q2xhc3MoIHRoaXMgKSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0aWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiB0aGlzLmF0dHIoIFwiY2xhc3NcIiwgXCJcIiApO1xuXHRcdH1cblxuXHRcdGNsYXNzTmFtZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTtcblxuXHRcdGlmICggY2xhc3NOYW1lcy5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0Y3VyVmFsdWUgPSBnZXRDbGFzcyggdGhpcyApO1xuXG5cdFx0XHRcdC8vIFRoaXMgZXhwcmVzc2lvbiBpcyBoZXJlIGZvciBiZXR0ZXIgY29tcHJlc3NpYmlsaXR5IChzZWUgYWRkQ2xhc3MpXG5cdFx0XHRcdGN1ciA9IHRoaXMubm9kZVR5cGUgPT09IDEgJiYgKCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGN1clZhbHVlICkgKyBcIiBcIiApO1xuXG5cdFx0XHRcdGlmICggY3VyICkge1xuXHRcdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgY2xhc3NOYW1lcy5sZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0XHRcdGNsYXNzTmFtZSA9IGNsYXNzTmFtZXNbIGkgXTtcblxuXHRcdFx0XHRcdFx0Ly8gUmVtb3ZlICphbGwqIGluc3RhbmNlc1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBjdXIuaW5kZXhPZiggXCIgXCIgKyBjbGFzc05hbWUgKyBcIiBcIiApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRcdGN1ciA9IGN1ci5yZXBsYWNlKCBcIiBcIiArIGNsYXNzTmFtZSArIFwiIFwiLCBcIiBcIiApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIE9ubHkgYXNzaWduIGlmIGRpZmZlcmVudCB0byBhdm9pZCB1bm5lZWRlZCByZW5kZXJpbmcuXG5cdFx0XHRcdFx0ZmluYWxWYWx1ZSA9IHN0cmlwQW5kQ29sbGFwc2UoIGN1ciApO1xuXHRcdFx0XHRcdGlmICggY3VyVmFsdWUgIT09IGZpbmFsVmFsdWUgKSB7XG5cdFx0XHRcdFx0XHR0aGlzLnNldEF0dHJpYnV0ZSggXCJjbGFzc1wiLCBmaW5hbFZhbHVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0dG9nZ2xlQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSwgc3RhdGVWYWwgKSB7XG5cdFx0dmFyIGNsYXNzTmFtZXMsIGNsYXNzTmFtZSwgaSwgc2VsZixcblx0XHRcdHR5cGUgPSB0eXBlb2YgdmFsdWUsXG5cdFx0XHRpc1ZhbGlkVmFsdWUgPSB0eXBlID09PSBcInN0cmluZ1wiIHx8IEFycmF5LmlzQXJyYXkoIHZhbHVlICk7XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkudG9nZ2xlQ2xhc3MoXG5cdFx0XHRcdFx0dmFsdWUuY2FsbCggdGhpcywgaSwgZ2V0Q2xhc3MoIHRoaXMgKSwgc3RhdGVWYWwgKSxcblx0XHRcdFx0XHRzdGF0ZVZhbFxuXHRcdFx0XHQpO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdGlmICggdHlwZW9mIHN0YXRlVmFsID09PSBcImJvb2xlYW5cIiAmJiBpc1ZhbGlkVmFsdWUgKSB7XG5cdFx0XHRyZXR1cm4gc3RhdGVWYWwgPyB0aGlzLmFkZENsYXNzKCB2YWx1ZSApIDogdGhpcy5yZW1vdmVDbGFzcyggdmFsdWUgKTtcblx0XHR9XG5cblx0XHRjbGFzc05hbWVzID0gY2xhc3Nlc1RvQXJyYXkoIHZhbHVlICk7XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggaXNWYWxpZFZhbHVlICkge1xuXG5cdFx0XHRcdC8vIFRvZ2dsZSBpbmRpdmlkdWFsIGNsYXNzIG5hbWVzXG5cdFx0XHRcdHNlbGYgPSBqUXVlcnkoIHRoaXMgKTtcblxuXHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGNsYXNzTmFtZXMubGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRcdFx0Y2xhc3NOYW1lID0gY2xhc3NOYW1lc1sgaSBdO1xuXG5cdFx0XHRcdFx0Ly8gQ2hlY2sgZWFjaCBjbGFzc05hbWUgZ2l2ZW4sIHNwYWNlIHNlcGFyYXRlZCBsaXN0XG5cdFx0XHRcdFx0aWYgKCBzZWxmLmhhc0NsYXNzKCBjbGFzc05hbWUgKSApIHtcblx0XHRcdFx0XHRcdHNlbGYucmVtb3ZlQ2xhc3MoIGNsYXNzTmFtZSApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRzZWxmLmFkZENsYXNzKCBjbGFzc05hbWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gVG9nZ2xlIHdob2xlIGNsYXNzIG5hbWVcblx0XHRcdH0gZWxzZSBpZiAoIHZhbHVlID09PSB1bmRlZmluZWQgfHwgdHlwZSA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0XHRcdGNsYXNzTmFtZSA9IGdldENsYXNzKCB0aGlzICk7XG5cdFx0XHRcdGlmICggY2xhc3NOYW1lICkge1xuXG5cdFx0XHRcdFx0Ly8gU3RvcmUgY2xhc3NOYW1lIGlmIHNldFxuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIsIGNsYXNzTmFtZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gSWYgdGhlIGVsZW1lbnQgaGFzIGEgY2xhc3MgbmFtZSBvciBpZiB3ZSdyZSBwYXNzZWQgYGZhbHNlYCxcblx0XHRcdFx0Ly8gdGhlbiByZW1vdmUgdGhlIHdob2xlIGNsYXNzbmFtZSAoaWYgdGhlcmUgd2FzIG9uZSwgdGhlIGFib3ZlIHNhdmVkIGl0KS5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGJyaW5nIGJhY2sgd2hhdGV2ZXIgd2FzIHByZXZpb3VzbHkgc2F2ZWQgKGlmIGFueXRoaW5nKSxcblx0XHRcdFx0Ly8gZmFsbGluZyBiYWNrIHRvIHRoZSBlbXB0eSBzdHJpbmcgaWYgbm90aGluZyB3YXMgc3RvcmVkLlxuXHRcdFx0XHRpZiAoIHRoaXMuc2V0QXR0cmlidXRlICkge1xuXHRcdFx0XHRcdHRoaXMuc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsXG5cdFx0XHRcdFx0XHRjbGFzc05hbWUgfHwgdmFsdWUgPT09IGZhbHNlID9cblx0XHRcdFx0XHRcdFx0XCJcIiA6XG5cdFx0XHRcdFx0XHRcdGRhdGFQcml2LmdldCggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIgKSB8fCBcIlwiXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRoYXNDbGFzczogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBjbGFzc05hbWUsIGVsZW0sXG5cdFx0XHRpID0gMDtcblxuXHRcdGNsYXNzTmFtZSA9IFwiIFwiICsgc2VsZWN0b3IgKyBcIiBcIjtcblx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0KCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGdldENsYXNzKCBlbGVtICkgKSArIFwiIFwiICkuaW5kZXhPZiggY2xhc3NOYW1lICkgPiAtMSApIHtcblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59ICk7XG5cblxuXG5cbnZhciBycmV0dXJuID0gL1xcci9nO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHZhbDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBob29rcywgcmV0LCB2YWx1ZUlzRnVuY3Rpb24sXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xuXG5cdFx0aWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdGlmICggZWxlbSApIHtcblx0XHRcdFx0aG9va3MgPSBqUXVlcnkudmFsSG9va3NbIGVsZW0udHlwZSBdIHx8XG5cdFx0XHRcdFx0alF1ZXJ5LnZhbEhvb2tzWyBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0XHRpZiAoIGhvb2tzICYmXG5cdFx0XHRcdFx0XCJnZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHRcdCggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBcInZhbHVlXCIgKSApICE9PSB1bmRlZmluZWRcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldCA9IGVsZW0udmFsdWU7XG5cblx0XHRcdFx0Ly8gSGFuZGxlIG1vc3QgY29tbW9uIHN0cmluZyBjYXNlc1xuXHRcdFx0XHRpZiAoIHR5cGVvZiByZXQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJldC5yZXBsYWNlKCBycmV0dXJuLCBcIlwiICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBIYW5kbGUgY2FzZXMgd2hlcmUgdmFsdWUgaXMgbnVsbC91bmRlZiBvciBudW1iZXJcblx0XHRcdFx0cmV0dXJuIHJldCA9PSBudWxsID8gXCJcIiA6IHJldDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhbHVlSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIHZhbHVlICk7XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdHZhciB2YWw7XG5cblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSAhPT0gMSApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHZhbHVlSXNGdW5jdGlvbiApIHtcblx0XHRcdFx0dmFsID0gdmFsdWUuY2FsbCggdGhpcywgaSwgalF1ZXJ5KCB0aGlzICkudmFsKCkgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHZhbCA9IHZhbHVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUcmVhdCBudWxsL3VuZGVmaW5lZCBhcyBcIlwiOyBjb252ZXJ0IG51bWJlcnMgdG8gc3RyaW5nXG5cdFx0XHRpZiAoIHZhbCA9PSBudWxsICkge1xuXHRcdFx0XHR2YWwgPSBcIlwiO1xuXG5cdFx0XHR9IGVsc2UgaWYgKCB0eXBlb2YgdmFsID09PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHR2YWwgKz0gXCJcIjtcblxuXHRcdFx0fSBlbHNlIGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHZhbCA9IGpRdWVyeS5tYXAoIHZhbCwgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJldHVybiB2YWx1ZSA9PSBudWxsID8gXCJcIiA6IHZhbHVlICsgXCJcIjtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRob29rcyA9IGpRdWVyeS52YWxIb29rc1sgdGhpcy50eXBlIF0gfHwgalF1ZXJ5LnZhbEhvb2tzWyB0aGlzLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0Ly8gSWYgc2V0IHJldHVybnMgdW5kZWZpbmVkLCBmYWxsIGJhY2sgdG8gbm9ybWFsIHNldHRpbmdcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fCBob29rcy5zZXQoIHRoaXMsIHZhbCwgXCJ2YWx1ZVwiICkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0dGhpcy52YWx1ZSA9IHZhbDtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHR2YWxIb29rczoge1xuXHRcdG9wdGlvbjoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0XHR2YXIgdmFsID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ2YWx1ZVwiICk7XG5cdFx0XHRcdHJldHVybiB2YWwgIT0gbnVsbCA/XG5cdFx0XHRcdFx0dmFsIDpcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9MTAgLSAxMSBvbmx5XG5cdFx0XHRcdFx0Ly8gb3B0aW9uLnRleHQgdGhyb3dzIGV4Y2VwdGlvbnMgKHRyYWMtMTQ2ODYsIHRyYWMtMTQ4NTgpXG5cdFx0XHRcdFx0Ly8gU3RyaXAgYW5kIGNvbGxhcHNlIHdoaXRlc3BhY2Vcblx0XHRcdFx0XHQvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnLyNzdHJpcC1hbmQtY29sbGFwc2Utd2hpdGVzcGFjZVxuXHRcdFx0XHRcdHN0cmlwQW5kQ29sbGFwc2UoIGpRdWVyeS50ZXh0KCBlbGVtICkgKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdHNlbGVjdDoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIHZhbHVlLCBvcHRpb24sIGksXG5cdFx0XHRcdFx0b3B0aW9ucyA9IGVsZW0ub3B0aW9ucyxcblx0XHRcdFx0XHRpbmRleCA9IGVsZW0uc2VsZWN0ZWRJbmRleCxcblx0XHRcdFx0XHRvbmUgPSBlbGVtLnR5cGUgPT09IFwic2VsZWN0LW9uZVwiLFxuXHRcdFx0XHRcdHZhbHVlcyA9IG9uZSA/IG51bGwgOiBbXSxcblx0XHRcdFx0XHRtYXggPSBvbmUgPyBpbmRleCArIDEgOiBvcHRpb25zLmxlbmd0aDtcblxuXHRcdFx0XHRpZiAoIGluZGV4IDwgMCApIHtcblx0XHRcdFx0XHRpID0gbWF4O1xuXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0aSA9IG9uZSA/IGluZGV4IDogMDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIExvb3AgdGhyb3VnaCBhbGwgdGhlIHNlbGVjdGVkIG9wdGlvbnNcblx0XHRcdFx0Zm9yICggOyBpIDwgbWF4OyBpKysgKSB7XG5cdFx0XHRcdFx0b3B0aW9uID0gb3B0aW9uc1sgaSBdO1xuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHRcdFx0XHQvLyBJRTgtOSBkb2Vzbid0IHVwZGF0ZSBzZWxlY3RlZCBhZnRlciBmb3JtIHJlc2V0ICh0cmFjLTI1NTEpXG5cdFx0XHRcdFx0aWYgKCAoIG9wdGlvbi5zZWxlY3RlZCB8fCBpID09PSBpbmRleCApICYmXG5cblx0XHRcdFx0XHRcdFx0Ly8gRG9uJ3QgcmV0dXJuIG9wdGlvbnMgdGhhdCBhcmUgZGlzYWJsZWQgb3IgaW4gYSBkaXNhYmxlZCBvcHRncm91cFxuXHRcdFx0XHRcdFx0XHQhb3B0aW9uLmRpc2FibGVkICYmXG5cdFx0XHRcdFx0XHRcdCggIW9wdGlvbi5wYXJlbnROb2RlLmRpc2FibGVkIHx8XG5cdFx0XHRcdFx0XHRcdFx0IW5vZGVOYW1lKCBvcHRpb24ucGFyZW50Tm9kZSwgXCJvcHRncm91cFwiICkgKSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gR2V0IHRoZSBzcGVjaWZpYyB2YWx1ZSBmb3IgdGhlIG9wdGlvblxuXHRcdFx0XHRcdFx0dmFsdWUgPSBqUXVlcnkoIG9wdGlvbiApLnZhbCgpO1xuXG5cdFx0XHRcdFx0XHQvLyBXZSBkb24ndCBuZWVkIGFuIGFycmF5IGZvciBvbmUgc2VsZWN0c1xuXHRcdFx0XHRcdFx0aWYgKCBvbmUgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gTXVsdGktU2VsZWN0cyByZXR1cm4gYW4gYXJyYXlcblx0XHRcdFx0XHRcdHZhbHVlcy5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB2YWx1ZXM7XG5cdFx0XHR9LFxuXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHRcdFx0dmFyIG9wdGlvblNldCwgb3B0aW9uLFxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXG5cdFx0XHRcdFx0dmFsdWVzID0galF1ZXJ5Lm1ha2VBcnJheSggdmFsdWUgKSxcblx0XHRcdFx0XHRpID0gb3B0aW9ucy5sZW5ndGg7XG5cblx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0b3B0aW9uID0gb3B0aW9uc1sgaSBdO1xuXG5cdFx0XHRcdFx0LyogZXNsaW50LWRpc2FibGUgbm8tY29uZC1hc3NpZ24gKi9cblxuXHRcdFx0XHRcdGlmICggb3B0aW9uLnNlbGVjdGVkID1cblx0XHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBqUXVlcnkudmFsSG9va3Mub3B0aW9uLmdldCggb3B0aW9uICksIHZhbHVlcyApID4gLTFcblx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdG9wdGlvblNldCA9IHRydWU7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0LyogZXNsaW50LWVuYWJsZSBuby1jb25kLWFzc2lnbiAqL1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gRm9yY2UgYnJvd3NlcnMgdG8gYmVoYXZlIGNvbnNpc3RlbnRseSB3aGVuIG5vbi1tYXRjaGluZyB2YWx1ZSBpcyBzZXRcblx0XHRcdFx0aWYgKCAhb3B0aW9uU2V0ICkge1xuXHRcdFx0XHRcdGVsZW0uc2VsZWN0ZWRJbmRleCA9IC0xO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB2YWx1ZXM7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59ICk7XG5cbi8vIFJhZGlvcyBhbmQgY2hlY2tib3hlcyBnZXR0ZXIvc2V0dGVyXG5qUXVlcnkuZWFjaCggWyBcInJhZGlvXCIsIFwiY2hlY2tib3hcIiBdLCBmdW5jdGlvbigpIHtcblx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0gPSB7XG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0uY2hlY2tlZCA9IGpRdWVyeS5pbkFycmF5KCBqUXVlcnkoIGVsZW0gKS52YWwoKSwgdmFsdWUgKSA+IC0xICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRpZiAoICFzdXBwb3J0LmNoZWNrT24gKSB7XG5cdFx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0uZ2V0ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBudWxsID8gXCJvblwiIDogZWxlbS52YWx1ZTtcblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIFJldHVybiBqUXVlcnkgZm9yIGF0dHJpYnV0ZXMtb25seSBpbmNsdXNpb25cblxuXG5zdXBwb3J0LmZvY3VzaW4gPSBcIm9uZm9jdXNpblwiIGluIHdpbmRvdztcblxuXG52YXIgcmZvY3VzTW9ycGggPSAvXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC8sXG5cdHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrID0gZnVuY3Rpb24oIGUgKSB7XG5cdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0fTtcblxualF1ZXJ5LmV4dGVuZCggalF1ZXJ5LmV2ZW50LCB7XG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIGV2ZW50LCBkYXRhLCBlbGVtLCBvbmx5SGFuZGxlcnMgKSB7XG5cblx0XHR2YXIgaSwgY3VyLCB0bXAsIGJ1YmJsZVR5cGUsIG9udHlwZSwgaGFuZGxlLCBzcGVjaWFsLCBsYXN0RWxlbWVudCxcblx0XHRcdGV2ZW50UGF0aCA9IFsgZWxlbSB8fCBkb2N1bWVudCBdLFxuXHRcdFx0dHlwZSA9IGhhc093bi5jYWxsKCBldmVudCwgXCJ0eXBlXCIgKSA/IGV2ZW50LnR5cGUgOiBldmVudCxcblx0XHRcdG5hbWVzcGFjZXMgPSBoYXNPd24uY2FsbCggZXZlbnQsIFwibmFtZXNwYWNlXCIgKSA/IGV2ZW50Lm5hbWVzcGFjZS5zcGxpdCggXCIuXCIgKSA6IFtdO1xuXG5cdFx0Y3VyID0gbGFzdEVsZW1lbnQgPSB0bXAgPSBlbGVtID0gZWxlbSB8fCBkb2N1bWVudDtcblxuXHRcdC8vIERvbid0IGRvIGV2ZW50cyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gZm9jdXMvYmx1ciBtb3JwaHMgdG8gZm9jdXNpbi9vdXQ7IGVuc3VyZSB3ZSdyZSBub3QgZmlyaW5nIHRoZW0gcmlnaHQgbm93XG5cdFx0aWYgKCByZm9jdXNNb3JwaC50ZXN0KCB0eXBlICsgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggdHlwZS5pbmRleE9mKCBcIi5cIiApID4gLTEgKSB7XG5cblx0XHRcdC8vIE5hbWVzcGFjZWQgdHJpZ2dlcjsgY3JlYXRlIGEgcmVnZXhwIHRvIG1hdGNoIGV2ZW50IHR5cGUgaW4gaGFuZGxlKClcblx0XHRcdG5hbWVzcGFjZXMgPSB0eXBlLnNwbGl0KCBcIi5cIiApO1xuXHRcdFx0dHlwZSA9IG5hbWVzcGFjZXMuc2hpZnQoKTtcblx0XHRcdG5hbWVzcGFjZXMuc29ydCgpO1xuXHRcdH1cblx0XHRvbnR5cGUgPSB0eXBlLmluZGV4T2YoIFwiOlwiICkgPCAwICYmIFwib25cIiArIHR5cGU7XG5cblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYSBqUXVlcnkuRXZlbnQgb2JqZWN0LCBPYmplY3QsIG9yIGp1c3QgYW4gZXZlbnQgdHlwZSBzdHJpbmdcblx0XHRldmVudCA9IGV2ZW50WyBqUXVlcnkuZXhwYW5kbyBdID9cblx0XHRcdGV2ZW50IDpcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoIHR5cGUsIHR5cGVvZiBldmVudCA9PT0gXCJvYmplY3RcIiAmJiBldmVudCApO1xuXG5cdFx0Ly8gVHJpZ2dlciBiaXRtYXNrOiAmIDEgZm9yIG5hdGl2ZSBoYW5kbGVyczsgJiAyIGZvciBqUXVlcnkgKGFsd2F5cyB0cnVlKVxuXHRcdGV2ZW50LmlzVHJpZ2dlciA9IG9ubHlIYW5kbGVycyA/IDIgOiAzO1xuXHRcdGV2ZW50Lm5hbWVzcGFjZSA9IG5hbWVzcGFjZXMuam9pbiggXCIuXCIgKTtcblx0XHRldmVudC5ybmFtZXNwYWNlID0gZXZlbnQubmFtZXNwYWNlID9cblx0XHRcdG5ldyBSZWdFeHAoIFwiKF58XFxcXC4pXCIgKyBuYW1lc3BhY2VzLmpvaW4oIFwiXFxcXC4oPzouKlxcXFwufClcIiApICsgXCIoXFxcXC58JClcIiApIDpcblx0XHRcdG51bGw7XG5cblx0XHQvLyBDbGVhbiB1cCB0aGUgZXZlbnQgaW4gY2FzZSBpdCBpcyBiZWluZyByZXVzZWRcblx0XHRldmVudC5yZXN1bHQgPSB1bmRlZmluZWQ7XG5cdFx0aWYgKCAhZXZlbnQudGFyZ2V0ICkge1xuXHRcdFx0ZXZlbnQudGFyZ2V0ID0gZWxlbTtcblx0XHR9XG5cblx0XHQvLyBDbG9uZSBhbnkgaW5jb21pbmcgZGF0YSBhbmQgcHJlcGVuZCB0aGUgZXZlbnQsIGNyZWF0aW5nIHRoZSBoYW5kbGVyIGFyZyBsaXN0XG5cdFx0ZGF0YSA9IGRhdGEgPT0gbnVsbCA/XG5cdFx0XHRbIGV2ZW50IF0gOlxuXHRcdFx0alF1ZXJ5Lm1ha2VBcnJheSggZGF0YSwgWyBldmVudCBdICk7XG5cblx0XHQvLyBBbGxvdyBzcGVjaWFsIGV2ZW50cyB0byBkcmF3IG91dHNpZGUgdGhlIGxpbmVzXG5cdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmIHNwZWNpYWwudHJpZ2dlciAmJiBzcGVjaWFsLnRyaWdnZXIuYXBwbHkoIGVsZW0sIGRhdGEgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZXJtaW5lIGV2ZW50IHByb3BhZ2F0aW9uIHBhdGggaW4gYWR2YW5jZSwgcGVyIFczQyBldmVudHMgc3BlYyAodHJhYy05OTUxKVxuXHRcdC8vIEJ1YmJsZSB1cCB0byBkb2N1bWVudCwgdGhlbiB0byB3aW5kb3c7IHdhdGNoIGZvciBhIGdsb2JhbCBvd25lckRvY3VtZW50IHZhciAodHJhYy05NzI0KVxuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiAhc3BlY2lhbC5ub0J1YmJsZSAmJiAhaXNXaW5kb3coIGVsZW0gKSApIHtcblxuXHRcdFx0YnViYmxlVHlwZSA9IHNwZWNpYWwuZGVsZWdhdGVUeXBlIHx8IHR5cGU7XG5cdFx0XHRpZiAoICFyZm9jdXNNb3JwaC50ZXN0KCBidWJibGVUeXBlICsgdHlwZSApICkge1xuXHRcdFx0XHRjdXIgPSBjdXIucGFyZW50Tm9kZTtcblx0XHRcdH1cblx0XHRcdGZvciAoIDsgY3VyOyBjdXIgPSBjdXIucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0ZXZlbnRQYXRoLnB1c2goIGN1ciApO1xuXHRcdFx0XHR0bXAgPSBjdXI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE9ubHkgYWRkIHdpbmRvdyBpZiB3ZSBnb3QgdG8gZG9jdW1lbnQgKGUuZy4sIG5vdCBwbGFpbiBvYmogb3IgZGV0YWNoZWQgRE9NKVxuXHRcdFx0aWYgKCB0bXAgPT09ICggZWxlbS5vd25lckRvY3VtZW50IHx8IGRvY3VtZW50ICkgKSB7XG5cdFx0XHRcdGV2ZW50UGF0aC5wdXNoKCB0bXAuZGVmYXVsdFZpZXcgfHwgdG1wLnBhcmVudFdpbmRvdyB8fCB3aW5kb3cgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBGaXJlIGhhbmRsZXJzIG9uIHRoZSBldmVudCBwYXRoXG5cdFx0aSA9IDA7XG5cdFx0d2hpbGUgKCAoIGN1ciA9IGV2ZW50UGF0aFsgaSsrIF0gKSAmJiAhZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdGxhc3RFbGVtZW50ID0gY3VyO1xuXHRcdFx0ZXZlbnQudHlwZSA9IGkgPiAxID9cblx0XHRcdFx0YnViYmxlVHlwZSA6XG5cdFx0XHRcdHNwZWNpYWwuYmluZFR5cGUgfHwgdHlwZTtcblxuXHRcdFx0Ly8galF1ZXJ5IGhhbmRsZXJcblx0XHRcdGhhbmRsZSA9ICggZGF0YVByaXYuZ2V0KCBjdXIsIFwiZXZlbnRzXCIgKSB8fCBPYmplY3QuY3JlYXRlKCBudWxsICkgKVsgZXZlbnQudHlwZSBdICYmXG5cdFx0XHRcdGRhdGFQcml2LmdldCggY3VyLCBcImhhbmRsZVwiICk7XG5cdFx0XHRpZiAoIGhhbmRsZSApIHtcblx0XHRcdFx0aGFuZGxlLmFwcGx5KCBjdXIsIGRhdGEgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTmF0aXZlIGhhbmRsZXJcblx0XHRcdGhhbmRsZSA9IG9udHlwZSAmJiBjdXJbIG9udHlwZSBdO1xuXHRcdFx0aWYgKCBoYW5kbGUgJiYgaGFuZGxlLmFwcGx5ICYmIGFjY2VwdERhdGEoIGN1ciApICkge1xuXHRcdFx0XHRldmVudC5yZXN1bHQgPSBoYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApO1xuXHRcdFx0XHRpZiAoIGV2ZW50LnJlc3VsdCA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRldmVudC50eXBlID0gdHlwZTtcblxuXHRcdC8vIElmIG5vYm9keSBwcmV2ZW50ZWQgdGhlIGRlZmF1bHQgYWN0aW9uLCBkbyBpdCBub3dcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgIWV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpICkge1xuXG5cdFx0XHRpZiAoICggIXNwZWNpYWwuX2RlZmF1bHQgfHxcblx0XHRcdFx0c3BlY2lhbC5fZGVmYXVsdC5hcHBseSggZXZlbnRQYXRoLnBvcCgpLCBkYXRhICkgPT09IGZhbHNlICkgJiZcblx0XHRcdFx0YWNjZXB0RGF0YSggZWxlbSApICkge1xuXG5cdFx0XHRcdC8vIENhbGwgYSBuYXRpdmUgRE9NIG1ldGhvZCBvbiB0aGUgdGFyZ2V0IHdpdGggdGhlIHNhbWUgbmFtZSBhcyB0aGUgZXZlbnQuXG5cdFx0XHRcdC8vIERvbid0IGRvIGRlZmF1bHQgYWN0aW9ucyBvbiB3aW5kb3csIHRoYXQncyB3aGVyZSBnbG9iYWwgdmFyaWFibGVzIGJlICh0cmFjLTYxNzApXG5cdFx0XHRcdGlmICggb250eXBlICYmIGlzRnVuY3Rpb24oIGVsZW1bIHR5cGUgXSApICYmICFpc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRcdFx0Ly8gRG9uJ3QgcmUtdHJpZ2dlciBhbiBvbkZPTyBldmVudCB3aGVuIHdlIGNhbGwgaXRzIEZPTygpIG1ldGhvZFxuXHRcdFx0XHRcdHRtcCA9IGVsZW1bIG9udHlwZSBdO1xuXG5cdFx0XHRcdFx0aWYgKCB0bXAgKSB7XG5cdFx0XHRcdFx0XHRlbGVtWyBvbnR5cGUgXSA9IG51bGw7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gUHJldmVudCByZS10cmlnZ2VyaW5nIG9mIHRoZSBzYW1lIGV2ZW50LCBzaW5jZSB3ZSBhbHJlYWR5IGJ1YmJsZWQgaXQgYWJvdmVcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlcmVkID0gdHlwZTtcblxuXHRcdFx0XHRcdGlmICggZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdFx0XHRcdGxhc3RFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZWxlbVsgdHlwZSBdKCk7XG5cblx0XHRcdFx0XHRpZiAoIGV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRcdFx0XHRsYXN0RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCB0eXBlLCBzdG9wUHJvcGFnYXRpb25DYWxsYmFjayApO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB1bmRlZmluZWQ7XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gdG1wO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC5yZXN1bHQ7XG5cdH0sXG5cblx0Ly8gUGlnZ3liYWNrIG9uIGEgZG9ub3IgZXZlbnQgdG8gc2ltdWxhdGUgYSBkaWZmZXJlbnQgb25lXG5cdC8vIFVzZWQgb25seSBmb3IgYGZvY3VzKGluIHwgb3V0KWAgZXZlbnRzXG5cdHNpbXVsYXRlOiBmdW5jdGlvbiggdHlwZSwgZWxlbSwgZXZlbnQgKSB7XG5cdFx0dmFyIGUgPSBqUXVlcnkuZXh0ZW5kKFxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCgpLFxuXHRcdFx0ZXZlbnQsXG5cdFx0XHR7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdGlzU2ltdWxhdGVkOiB0cnVlXG5cdFx0XHR9XG5cdFx0KTtcblxuXHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBlLCBudWxsLCBlbGVtICk7XG5cdH1cblxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgdGhpcyApO1xuXHRcdH0gKTtcblx0fSxcblx0dHJpZ2dlckhhbmRsZXI6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBlbGVtID0gdGhpc1sgMCBdO1xuXHRcdGlmICggZWxlbSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgZWxlbSwgdHJ1ZSApO1xuXHRcdH1cblx0fVxufSApO1xuXG5cbi8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00NFxuLy8gRmlyZWZveCBkb2Vzbid0IGhhdmUgZm9jdXMoaW4gfCBvdXQpIGV2ZW50c1xuLy8gUmVsYXRlZCB0aWNrZXQgLSBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD02ODc3ODdcbi8vXG4vLyBTdXBwb3J0OiBDaHJvbWUgPD00OCAtIDQ5LCBTYWZhcmkgPD05LjAgLSA5LjFcbi8vIGZvY3VzKGluIHwgb3V0KSBldmVudHMgZmlyZSBhZnRlciBmb2N1cyAmIGJsdXIgZXZlbnRzLFxuLy8gd2hpY2ggaXMgc3BlYyB2aW9sYXRpb24gLSBodHRwOi8vd3d3LnczLm9yZy9UUi9ET00tTGV2ZWwtMy1FdmVudHMvI2V2ZW50cy1mb2N1c2V2ZW50LWV2ZW50LW9yZGVyXG4vLyBSZWxhdGVkIHRpY2tldCAtIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ0OTg1N1xuaWYgKCAhc3VwcG9ydC5mb2N1c2luICkge1xuXHRqUXVlcnkuZWFjaCggeyBmb2N1czogXCJmb2N1c2luXCIsIGJsdXI6IFwiZm9jdXNvdXRcIiB9LCBmdW5jdGlvbiggb3JpZywgZml4ICkge1xuXG5cdFx0Ly8gQXR0YWNoIGEgc2luZ2xlIGNhcHR1cmluZyBoYW5kbGVyIG9uIHRoZSBkb2N1bWVudCB3aGlsZSBzb21lb25lIHdhbnRzIGZvY3VzaW4vZm9jdXNvdXRcblx0XHR2YXIgaGFuZGxlciA9IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdGpRdWVyeS5ldmVudC5zaW11bGF0ZSggZml4LCBldmVudC50YXJnZXQsIGpRdWVyeS5ldmVudC5maXgoIGV2ZW50ICkgKTtcblx0XHR9O1xuXG5cdFx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGZpeCBdID0ge1xuXHRcdFx0c2V0dXA6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIEhhbmRsZTogcmVndWxhciBub2RlcyAodmlhIGB0aGlzLm93bmVyRG9jdW1lbnRgKSwgd2luZG93XG5cdFx0XHRcdC8vICh2aWEgYHRoaXMuZG9jdW1lbnRgKSAmIGRvY3VtZW50ICh2aWEgYHRoaXNgKS5cblx0XHRcdFx0dmFyIGRvYyA9IHRoaXMub3duZXJEb2N1bWVudCB8fCB0aGlzLmRvY3VtZW50IHx8IHRoaXMsXG5cdFx0XHRcdFx0YXR0YWNoZXMgPSBkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4ICk7XG5cblx0XHRcdFx0aWYgKCAhYXR0YWNoZXMgKSB7XG5cdFx0XHRcdFx0ZG9jLmFkZEV2ZW50TGlzdGVuZXIoIG9yaWcsIGhhbmRsZXIsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4LCAoIGF0dGFjaGVzIHx8IDAgKSArIDEgKTtcblx0XHRcdH0sXG5cdFx0XHR0ZWFyZG93bjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBkb2MgPSB0aGlzLm93bmVyRG9jdW1lbnQgfHwgdGhpcy5kb2N1bWVudCB8fCB0aGlzLFxuXHRcdFx0XHRcdGF0dGFjaGVzID0gZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCApIC0gMTtcblxuXHRcdFx0XHRpZiAoICFhdHRhY2hlcyApIHtcblx0XHRcdFx0XHRkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApO1xuXHRcdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZG9jLCBmaXggKTtcblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXgsIGF0dGFjaGVzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9ICk7XG59XG52YXIgbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb247XG5cbnZhciBub25jZSA9IHsgZ3VpZDogRGF0ZS5ub3coKSB9O1xuXG52YXIgcnF1ZXJ5ID0gKCAvXFw/LyApO1xuXG5cblxuLy8gQ3Jvc3MtYnJvd3NlciB4bWwgcGFyc2luZ1xualF1ZXJ5LnBhcnNlWE1MID0gZnVuY3Rpb24oIGRhdGEgKSB7XG5cdHZhciB4bWwsIHBhcnNlckVycm9yRWxlbTtcblx0aWYgKCAhZGF0YSB8fCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5XG5cdC8vIElFIHRocm93cyBvbiBwYXJzZUZyb21TdHJpbmcgd2l0aCBpbnZhbGlkIGlucHV0LlxuXHR0cnkge1xuXHRcdHhtbCA9ICggbmV3IHdpbmRvdy5ET01QYXJzZXIoKSApLnBhcnNlRnJvbVN0cmluZyggZGF0YSwgXCJ0ZXh0L3htbFwiICk7XG5cdH0gY2F0Y2ggKCBlICkge31cblxuXHRwYXJzZXJFcnJvckVsZW0gPSB4bWwgJiYgeG1sLmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcInBhcnNlcmVycm9yXCIgKVsgMCBdO1xuXHRpZiAoICF4bWwgfHwgcGFyc2VyRXJyb3JFbGVtICkge1xuXHRcdGpRdWVyeS5lcnJvciggXCJJbnZhbGlkIFhNTDogXCIgKyAoXG5cdFx0XHRwYXJzZXJFcnJvckVsZW0gP1xuXHRcdFx0XHRqUXVlcnkubWFwKCBwYXJzZXJFcnJvckVsZW0uY2hpbGROb2RlcywgZnVuY3Rpb24oIGVsICkge1xuXHRcdFx0XHRcdHJldHVybiBlbC50ZXh0Q29udGVudDtcblx0XHRcdFx0fSApLmpvaW4oIFwiXFxuXCIgKSA6XG5cdFx0XHRcdGRhdGFcblx0XHQpICk7XG5cdH1cblx0cmV0dXJuIHhtbDtcbn07XG5cblxudmFyXG5cdHJicmFja2V0ID0gL1xcW1xcXSQvLFxuXHRyQ1JMRiA9IC9cXHI/XFxuL2csXG5cdHJzdWJtaXR0ZXJUeXBlcyA9IC9eKD86c3VibWl0fGJ1dHRvbnxpbWFnZXxyZXNldHxmaWxlKSQvaSxcblx0cnN1Ym1pdHRhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8a2V5Z2VuKS9pO1xuXG5mdW5jdGlvbiBidWlsZFBhcmFtcyggcHJlZml4LCBvYmosIHRyYWRpdGlvbmFsLCBhZGQgKSB7XG5cdHZhciBuYW1lO1xuXG5cdGlmICggQXJyYXkuaXNBcnJheSggb2JqICkgKSB7XG5cblx0XHQvLyBTZXJpYWxpemUgYXJyYXkgaXRlbS5cblx0XHRqUXVlcnkuZWFjaCggb2JqLCBmdW5jdGlvbiggaSwgdiApIHtcblx0XHRcdGlmICggdHJhZGl0aW9uYWwgfHwgcmJyYWNrZXQudGVzdCggcHJlZml4ICkgKSB7XG5cblx0XHRcdFx0Ly8gVHJlYXQgZWFjaCBhcnJheSBpdGVtIGFzIGEgc2NhbGFyLlxuXHRcdFx0XHRhZGQoIHByZWZpeCwgdiApO1xuXG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEl0ZW0gaXMgbm9uLXNjYWxhciAoYXJyYXkgb3Igb2JqZWN0KSwgZW5jb2RlIGl0cyBudW1lcmljIGluZGV4LlxuXHRcdFx0XHRidWlsZFBhcmFtcyhcblx0XHRcdFx0XHRwcmVmaXggKyBcIltcIiArICggdHlwZW9mIHYgPT09IFwib2JqZWN0XCIgJiYgdiAhPSBudWxsID8gaSA6IFwiXCIgKSArIFwiXVwiLFxuXHRcdFx0XHRcdHYsXG5cdFx0XHRcdFx0dHJhZGl0aW9uYWwsXG5cdFx0XHRcdFx0YWRkXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXG5cdH0gZWxzZSBpZiAoICF0cmFkaXRpb25hbCAmJiB0b1R5cGUoIG9iaiApID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIG9iamVjdCBpdGVtLlxuXHRcdGZvciAoIG5hbWUgaW4gb2JqICkge1xuXHRcdFx0YnVpbGRQYXJhbXMoIHByZWZpeCArIFwiW1wiICsgbmFtZSArIFwiXVwiLCBvYmpbIG5hbWUgXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xuXHRcdH1cblxuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gU2VyaWFsaXplIHNjYWxhciBpdGVtLlxuXHRcdGFkZCggcHJlZml4LCBvYmogKTtcblx0fVxufVxuXG4vLyBTZXJpYWxpemUgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cyBvciBhIHNldCBvZlxuLy8ga2V5L3ZhbHVlcyBpbnRvIGEgcXVlcnkgc3RyaW5nXG5qUXVlcnkucGFyYW0gPSBmdW5jdGlvbiggYSwgdHJhZGl0aW9uYWwgKSB7XG5cdHZhciBwcmVmaXgsXG5cdFx0cyA9IFtdLFxuXHRcdGFkZCA9IGZ1bmN0aW9uKCBrZXksIHZhbHVlT3JGdW5jdGlvbiApIHtcblxuXHRcdFx0Ly8gSWYgdmFsdWUgaXMgYSBmdW5jdGlvbiwgaW52b2tlIGl0IGFuZCB1c2UgaXRzIHJldHVybiB2YWx1ZVxuXHRcdFx0dmFyIHZhbHVlID0gaXNGdW5jdGlvbiggdmFsdWVPckZ1bmN0aW9uICkgP1xuXHRcdFx0XHR2YWx1ZU9yRnVuY3Rpb24oKSA6XG5cdFx0XHRcdHZhbHVlT3JGdW5jdGlvbjtcblxuXHRcdFx0c1sgcy5sZW5ndGggXSA9IGVuY29kZVVSSUNvbXBvbmVudCgga2V5ICkgKyBcIj1cIiArXG5cdFx0XHRcdGVuY29kZVVSSUNvbXBvbmVudCggdmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSApO1xuXHRcdH07XG5cblx0aWYgKCBhID09IG51bGwgKSB7XG5cdFx0cmV0dXJuIFwiXCI7XG5cdH1cblxuXHQvLyBJZiBhbiBhcnJheSB3YXMgcGFzc2VkIGluLCBhc3N1bWUgdGhhdCBpdCBpcyBhbiBhcnJheSBvZiBmb3JtIGVsZW1lbnRzLlxuXHRpZiAoIEFycmF5LmlzQXJyYXkoIGEgKSB8fCAoIGEuanF1ZXJ5ICYmICFqUXVlcnkuaXNQbGFpbk9iamVjdCggYSApICkgKSB7XG5cblx0XHQvLyBTZXJpYWxpemUgdGhlIGZvcm0gZWxlbWVudHNcblx0XHRqUXVlcnkuZWFjaCggYSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRhZGQoIHRoaXMubmFtZSwgdGhpcy52YWx1ZSApO1xuXHRcdH0gKTtcblxuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gSWYgdHJhZGl0aW9uYWwsIGVuY29kZSB0aGUgXCJvbGRcIiB3YXkgKHRoZSB3YXkgMS4zLjIgb3Igb2xkZXJcblx0XHQvLyBkaWQgaXQpLCBvdGhlcndpc2UgZW5jb2RlIHBhcmFtcyByZWN1cnNpdmVseS5cblx0XHRmb3IgKCBwcmVmaXggaW4gYSApIHtcblx0XHRcdGJ1aWxkUGFyYW1zKCBwcmVmaXgsIGFbIHByZWZpeCBdLCB0cmFkaXRpb25hbCwgYWRkICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSByZXN1bHRpbmcgc2VyaWFsaXphdGlvblxuXHRyZXR1cm4gcy5qb2luKCBcIiZcIiApO1xufTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRzZXJpYWxpemU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBqUXVlcnkucGFyYW0oIHRoaXMuc2VyaWFsaXplQXJyYXkoKSApO1xuXHR9LFxuXHRzZXJpYWxpemVBcnJheTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gQ2FuIGFkZCBwcm9wSG9vayBmb3IgXCJlbGVtZW50c1wiIHRvIGZpbHRlciBvciBhZGQgZm9ybSBlbGVtZW50c1xuXHRcdFx0dmFyIGVsZW1lbnRzID0galF1ZXJ5LnByb3AoIHRoaXMsIFwiZWxlbWVudHNcIiApO1xuXHRcdFx0cmV0dXJuIGVsZW1lbnRzID8galF1ZXJ5Lm1ha2VBcnJheSggZWxlbWVudHMgKSA6IHRoaXM7XG5cdFx0fSApLmZpbHRlciggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgdHlwZSA9IHRoaXMudHlwZTtcblxuXHRcdFx0Ly8gVXNlIC5pcyggXCI6ZGlzYWJsZWRcIiApIHNvIHRoYXQgZmllbGRzZXRbZGlzYWJsZWRdIHdvcmtzXG5cdFx0XHRyZXR1cm4gdGhpcy5uYW1lICYmICFqUXVlcnkoIHRoaXMgKS5pcyggXCI6ZGlzYWJsZWRcIiApICYmXG5cdFx0XHRcdHJzdWJtaXR0YWJsZS50ZXN0KCB0aGlzLm5vZGVOYW1lICkgJiYgIXJzdWJtaXR0ZXJUeXBlcy50ZXN0KCB0eXBlICkgJiZcblx0XHRcdFx0KCB0aGlzLmNoZWNrZWQgfHwgIXJjaGVja2FibGVUeXBlLnRlc3QoIHR5cGUgKSApO1xuXHRcdH0gKS5tYXAoIGZ1bmN0aW9uKCBfaSwgZWxlbSApIHtcblx0XHRcdHZhciB2YWwgPSBqUXVlcnkoIHRoaXMgKS52YWwoKTtcblxuXHRcdFx0aWYgKCB2YWwgPT0gbnVsbCApIHtcblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHJldHVybiBqUXVlcnkubWFwKCB2YWwsIGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4geyBuYW1lOiBlbGVtLm5hbWUsIHZhbHVlOiB2YWwucmVwbGFjZSggckNSTEYsIFwiXFxyXFxuXCIgKSB9O1xuXHRcdH0gKS5nZXQoKTtcblx0fVxufSApO1xuXG5cbnZhclxuXHRyMjAgPSAvJTIwL2csXG5cdHJoYXNoID0gLyMuKiQvLFxuXHRyYW50aUNhY2hlID0gLyhbPyZdKV89W14mXSovLFxuXHRyaGVhZGVycyA9IC9eKC4qPyk6WyBcXHRdKihbXlxcclxcbl0qKSQvbWcsXG5cblx0Ly8gdHJhYy03NjUzLCB0cmFjLTgxMjUsIHRyYWMtODE1MjogbG9jYWwgcHJvdG9jb2wgZGV0ZWN0aW9uXG5cdHJsb2NhbFByb3RvY29sID0gL14oPzphYm91dHxhcHB8YXBwLXN0b3JhZ2V8ListZXh0ZW5zaW9ufGZpbGV8cmVzfHdpZGdldCk6JC8sXG5cdHJub0NvbnRlbnQgPSAvXig/OkdFVHxIRUFEKSQvLFxuXHRycHJvdG9jb2wgPSAvXlxcL1xcLy8sXG5cblx0LyogUHJlZmlsdGVyc1xuXHQgKiAxKSBUaGV5IGFyZSB1c2VmdWwgdG8gaW50cm9kdWNlIGN1c3RvbSBkYXRhVHlwZXMgKHNlZSBhamF4L2pzb25wLmpzIGZvciBhbiBleGFtcGxlKVxuXHQgKiAyKSBUaGVzZSBhcmUgY2FsbGVkOlxuXHQgKiAgICAtIEJFRk9SRSBhc2tpbmcgZm9yIGEgdHJhbnNwb3J0XG5cdCAqICAgIC0gQUZURVIgcGFyYW0gc2VyaWFsaXphdGlvbiAocy5kYXRhIGlzIGEgc3RyaW5nIGlmIHMucHJvY2Vzc0RhdGEgaXMgdHJ1ZSlcblx0ICogMykga2V5IGlzIHRoZSBkYXRhVHlwZVxuXHQgKiA0KSB0aGUgY2F0Y2hhbGwgc3ltYm9sIFwiKlwiIGNhbiBiZSB1c2VkXG5cdCAqIDUpIGV4ZWN1dGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGNvbnRpbnVlIGRvd24gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHRwcmVmaWx0ZXJzID0ge30sXG5cblx0LyogVHJhbnNwb3J0cyBiaW5kaW5nc1xuXHQgKiAxKSBrZXkgaXMgdGhlIGRhdGFUeXBlXG5cdCAqIDIpIHRoZSBjYXRjaGFsbCBzeW1ib2wgXCIqXCIgY2FuIGJlIHVzZWRcblx0ICogMykgc2VsZWN0aW9uIHdpbGwgc3RhcnQgd2l0aCB0cmFuc3BvcnQgZGF0YVR5cGUgYW5kIFRIRU4gZ28gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHR0cmFuc3BvcnRzID0ge30sXG5cblx0Ly8gQXZvaWQgY29tbWVudC1wcm9sb2cgY2hhciBzZXF1ZW5jZSAodHJhYy0xMDA5OCk7IG11c3QgYXBwZWFzZSBsaW50IGFuZCBldmFkZSBjb21wcmVzc2lvblxuXHRhbGxUeXBlcyA9IFwiKi9cIi5jb25jYXQoIFwiKlwiICksXG5cblx0Ly8gQW5jaG9yIHRhZyBmb3IgcGFyc2luZyB0aGUgZG9jdW1lbnQgb3JpZ2luXG5cdG9yaWdpbkFuY2hvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiYVwiICk7XG5cbm9yaWdpbkFuY2hvci5ocmVmID0gbG9jYXRpb24uaHJlZjtcblxuLy8gQmFzZSBcImNvbnN0cnVjdG9yXCIgZm9yIGpRdWVyeS5hamF4UHJlZmlsdGVyIGFuZCBqUXVlcnkuYWpheFRyYW5zcG9ydFxuZnVuY3Rpb24gYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUgKSB7XG5cblx0Ly8gZGF0YVR5cGVFeHByZXNzaW9uIGlzIG9wdGlvbmFsIGFuZCBkZWZhdWx0cyB0byBcIipcIlxuXHRyZXR1cm4gZnVuY3Rpb24oIGRhdGFUeXBlRXhwcmVzc2lvbiwgZnVuYyApIHtcblxuXHRcdGlmICggdHlwZW9mIGRhdGFUeXBlRXhwcmVzc2lvbiAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGZ1bmMgPSBkYXRhVHlwZUV4cHJlc3Npb247XG5cdFx0XHRkYXRhVHlwZUV4cHJlc3Npb24gPSBcIipcIjtcblx0XHR9XG5cblx0XHR2YXIgZGF0YVR5cGUsXG5cdFx0XHRpID0gMCxcblx0XHRcdGRhdGFUeXBlcyA9IGRhdGFUeXBlRXhwcmVzc2lvbi50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIGZ1bmMgKSApIHtcblxuXHRcdFx0Ly8gRm9yIGVhY2ggZGF0YVR5cGUgaW4gdGhlIGRhdGFUeXBlRXhwcmVzc2lvblxuXHRcdFx0d2hpbGUgKCAoIGRhdGFUeXBlID0gZGF0YVR5cGVzWyBpKysgXSApICkge1xuXG5cdFx0XHRcdC8vIFByZXBlbmQgaWYgcmVxdWVzdGVkXG5cdFx0XHRcdGlmICggZGF0YVR5cGVbIDAgXSA9PT0gXCIrXCIgKSB7XG5cdFx0XHRcdFx0ZGF0YVR5cGUgPSBkYXRhVHlwZS5zbGljZSggMSApIHx8IFwiKlwiO1xuXHRcdFx0XHRcdCggc3RydWN0dXJlWyBkYXRhVHlwZSBdID0gc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdICkudW5zaGlmdCggZnVuYyApO1xuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBhcHBlbmRcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQoIHN0cnVjdHVyZVsgZGF0YVR5cGUgXSA9IHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXSApLnB1c2goIGZ1bmMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn1cblxuLy8gQmFzZSBpbnNwZWN0aW9uIGZ1bmN0aW9uIGZvciBwcmVmaWx0ZXJzIGFuZCB0cmFuc3BvcnRzXG5mdW5jdGlvbiBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggc3RydWN0dXJlLCBvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIGpxWEhSICkge1xuXG5cdHZhciBpbnNwZWN0ZWQgPSB7fSxcblx0XHRzZWVraW5nVHJhbnNwb3J0ID0gKCBzdHJ1Y3R1cmUgPT09IHRyYW5zcG9ydHMgKTtcblxuXHRmdW5jdGlvbiBpbnNwZWN0KCBkYXRhVHlwZSApIHtcblx0XHR2YXIgc2VsZWN0ZWQ7XG5cdFx0aW5zcGVjdGVkWyBkYXRhVHlwZSBdID0gdHJ1ZTtcblx0XHRqUXVlcnkuZWFjaCggc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdLCBmdW5jdGlvbiggXywgcHJlZmlsdGVyT3JGYWN0b3J5ICkge1xuXHRcdFx0dmFyIGRhdGFUeXBlT3JUcmFuc3BvcnQgPSBwcmVmaWx0ZXJPckZhY3RvcnkoIG9wdGlvbnMsIG9yaWdpbmFsT3B0aW9ucywganFYSFIgKTtcblx0XHRcdGlmICggdHlwZW9mIGRhdGFUeXBlT3JUcmFuc3BvcnQgPT09IFwic3RyaW5nXCIgJiZcblx0XHRcdFx0IXNlZWtpbmdUcmFuc3BvcnQgJiYgIWluc3BlY3RlZFsgZGF0YVR5cGVPclRyYW5zcG9ydCBdICkge1xuXG5cdFx0XHRcdG9wdGlvbnMuZGF0YVR5cGVzLnVuc2hpZnQoIGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcblx0XHRcdFx0aW5zcGVjdCggZGF0YVR5cGVPclRyYW5zcG9ydCApO1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9IGVsc2UgaWYgKCBzZWVraW5nVHJhbnNwb3J0ICkge1xuXHRcdFx0XHRyZXR1cm4gISggc2VsZWN0ZWQgPSBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHRcdHJldHVybiBzZWxlY3RlZDtcblx0fVxuXG5cdHJldHVybiBpbnNwZWN0KCBvcHRpb25zLmRhdGFUeXBlc1sgMCBdICkgfHwgIWluc3BlY3RlZFsgXCIqXCIgXSAmJiBpbnNwZWN0KCBcIipcIiApO1xufVxuXG4vLyBBIHNwZWNpYWwgZXh0ZW5kIGZvciBhamF4IG9wdGlvbnNcbi8vIHRoYXQgdGFrZXMgXCJmbGF0XCIgb3B0aW9ucyAobm90IHRvIGJlIGRlZXAgZXh0ZW5kZWQpXG4vLyBGaXhlcyB0cmFjLTk4ODdcbmZ1bmN0aW9uIGFqYXhFeHRlbmQoIHRhcmdldCwgc3JjICkge1xuXHR2YXIga2V5LCBkZWVwLFxuXHRcdGZsYXRPcHRpb25zID0galF1ZXJ5LmFqYXhTZXR0aW5ncy5mbGF0T3B0aW9ucyB8fCB7fTtcblxuXHRmb3IgKCBrZXkgaW4gc3JjICkge1xuXHRcdGlmICggc3JjWyBrZXkgXSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0KCBmbGF0T3B0aW9uc1sga2V5IF0gPyB0YXJnZXQgOiAoIGRlZXAgfHwgKCBkZWVwID0ge30gKSApIClbIGtleSBdID0gc3JjWyBrZXkgXTtcblx0XHR9XG5cdH1cblx0aWYgKCBkZWVwICkge1xuXHRcdGpRdWVyeS5leHRlbmQoIHRydWUsIHRhcmdldCwgZGVlcCApO1xuXHR9XG5cblx0cmV0dXJuIHRhcmdldDtcbn1cblxuLyogSGFuZGxlcyByZXNwb25zZXMgdG8gYW4gYWpheCByZXF1ZXN0OlxuICogLSBmaW5kcyB0aGUgcmlnaHQgZGF0YVR5cGUgKG1lZGlhdGVzIGJldHdlZW4gY29udGVudC10eXBlIGFuZCBleHBlY3RlZCBkYXRhVHlwZSlcbiAqIC0gcmV0dXJucyB0aGUgY29ycmVzcG9uZGluZyByZXNwb25zZVxuICovXG5mdW5jdGlvbiBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICkge1xuXG5cdHZhciBjdCwgdHlwZSwgZmluYWxEYXRhVHlwZSwgZmlyc3REYXRhVHlwZSxcblx0XHRjb250ZW50cyA9IHMuY29udGVudHMsXG5cdFx0ZGF0YVR5cGVzID0gcy5kYXRhVHlwZXM7XG5cblx0Ly8gUmVtb3ZlIGF1dG8gZGF0YVR5cGUgYW5kIGdldCBjb250ZW50LXR5cGUgaW4gdGhlIHByb2Nlc3Ncblx0d2hpbGUgKCBkYXRhVHlwZXNbIDAgXSA9PT0gXCIqXCIgKSB7XG5cdFx0ZGF0YVR5cGVzLnNoaWZ0KCk7XG5cdFx0aWYgKCBjdCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0Y3QgPSBzLm1pbWVUeXBlIHx8IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCBcIkNvbnRlbnQtVHlwZVwiICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ2hlY2sgaWYgd2UncmUgZGVhbGluZyB3aXRoIGEga25vd24gY29udGVudC10eXBlXG5cdGlmICggY3QgKSB7XG5cdFx0Zm9yICggdHlwZSBpbiBjb250ZW50cyApIHtcblx0XHRcdGlmICggY29udGVudHNbIHR5cGUgXSAmJiBjb250ZW50c1sgdHlwZSBdLnRlc3QoIGN0ICkgKSB7XG5cdFx0XHRcdGRhdGFUeXBlcy51bnNoaWZ0KCB0eXBlICk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIENoZWNrIHRvIHNlZSBpZiB3ZSBoYXZlIGEgcmVzcG9uc2UgZm9yIHRoZSBleHBlY3RlZCBkYXRhVHlwZVxuXHRpZiAoIGRhdGFUeXBlc1sgMCBdIGluIHJlc3BvbnNlcyApIHtcblx0XHRmaW5hbERhdGFUeXBlID0gZGF0YVR5cGVzWyAwIF07XG5cdH0gZWxzZSB7XG5cblx0XHQvLyBUcnkgY29udmVydGlibGUgZGF0YVR5cGVzXG5cdFx0Zm9yICggdHlwZSBpbiByZXNwb25zZXMgKSB7XG5cdFx0XHRpZiAoICFkYXRhVHlwZXNbIDAgXSB8fCBzLmNvbnZlcnRlcnNbIHR5cGUgKyBcIiBcIiArIGRhdGFUeXBlc1sgMCBdIF0gKSB7XG5cdFx0XHRcdGZpbmFsRGF0YVR5cGUgPSB0eXBlO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdGlmICggIWZpcnN0RGF0YVR5cGUgKSB7XG5cdFx0XHRcdGZpcnN0RGF0YVR5cGUgPSB0eXBlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIE9yIGp1c3QgdXNlIGZpcnN0IG9uZVxuXHRcdGZpbmFsRGF0YVR5cGUgPSBmaW5hbERhdGFUeXBlIHx8IGZpcnN0RGF0YVR5cGU7XG5cdH1cblxuXHQvLyBJZiB3ZSBmb3VuZCBhIGRhdGFUeXBlXG5cdC8vIFdlIGFkZCB0aGUgZGF0YVR5cGUgdG8gdGhlIGxpc3QgaWYgbmVlZGVkXG5cdC8vIGFuZCByZXR1cm4gdGhlIGNvcnJlc3BvbmRpbmcgcmVzcG9uc2Vcblx0aWYgKCBmaW5hbERhdGFUeXBlICkge1xuXHRcdGlmICggZmluYWxEYXRhVHlwZSAhPT0gZGF0YVR5cGVzWyAwIF0gKSB7XG5cdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggZmluYWxEYXRhVHlwZSApO1xuXHRcdH1cblx0XHRyZXR1cm4gcmVzcG9uc2VzWyBmaW5hbERhdGFUeXBlIF07XG5cdH1cbn1cblxuLyogQ2hhaW4gY29udmVyc2lvbnMgZ2l2ZW4gdGhlIHJlcXVlc3QgYW5kIHRoZSBvcmlnaW5hbCByZXNwb25zZVxuICogQWxzbyBzZXRzIHRoZSByZXNwb25zZVhYWCBmaWVsZHMgb24gdGhlIGpxWEhSIGluc3RhbmNlXG4gKi9cbmZ1bmN0aW9uIGFqYXhDb252ZXJ0KCBzLCByZXNwb25zZSwganFYSFIsIGlzU3VjY2VzcyApIHtcblx0dmFyIGNvbnYyLCBjdXJyZW50LCBjb252LCB0bXAsIHByZXYsXG5cdFx0Y29udmVydGVycyA9IHt9LFxuXG5cdFx0Ly8gV29yayB3aXRoIGEgY29weSBvZiBkYXRhVHlwZXMgaW4gY2FzZSB3ZSBuZWVkIHRvIG1vZGlmeSBpdCBmb3IgY29udmVyc2lvblxuXHRcdGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzLnNsaWNlKCk7XG5cblx0Ly8gQ3JlYXRlIGNvbnZlcnRlcnMgbWFwIHdpdGggbG93ZXJjYXNlZCBrZXlzXG5cdGlmICggZGF0YVR5cGVzWyAxIF0gKSB7XG5cdFx0Zm9yICggY29udiBpbiBzLmNvbnZlcnRlcnMgKSB7XG5cdFx0XHRjb252ZXJ0ZXJzWyBjb252LnRvTG93ZXJDYXNlKCkgXSA9IHMuY29udmVydGVyc1sgY29udiBdO1xuXHRcdH1cblx0fVxuXG5cdGN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTtcblxuXHQvLyBDb252ZXJ0IHRvIGVhY2ggc2VxdWVudGlhbCBkYXRhVHlwZVxuXHR3aGlsZSAoIGN1cnJlbnQgKSB7XG5cblx0XHRpZiAoIHMucmVzcG9uc2VGaWVsZHNbIGN1cnJlbnQgXSApIHtcblx0XHRcdGpxWEhSWyBzLnJlc3BvbnNlRmllbGRzWyBjdXJyZW50IF0gXSA9IHJlc3BvbnNlO1xuXHRcdH1cblxuXHRcdC8vIEFwcGx5IHRoZSBkYXRhRmlsdGVyIGlmIHByb3ZpZGVkXG5cdFx0aWYgKCAhcHJldiAmJiBpc1N1Y2Nlc3MgJiYgcy5kYXRhRmlsdGVyICkge1xuXHRcdFx0cmVzcG9uc2UgPSBzLmRhdGFGaWx0ZXIoIHJlc3BvbnNlLCBzLmRhdGFUeXBlICk7XG5cdFx0fVxuXG5cdFx0cHJldiA9IGN1cnJlbnQ7XG5cdFx0Y3VycmVudCA9IGRhdGFUeXBlcy5zaGlmdCgpO1xuXG5cdFx0aWYgKCBjdXJyZW50ICkge1xuXG5cdFx0XHQvLyBUaGVyZSdzIG9ubHkgd29yayB0byBkbyBpZiBjdXJyZW50IGRhdGFUeXBlIGlzIG5vbi1hdXRvXG5cdFx0XHRpZiAoIGN1cnJlbnQgPT09IFwiKlwiICkge1xuXG5cdFx0XHRcdGN1cnJlbnQgPSBwcmV2O1xuXG5cdFx0XHQvLyBDb252ZXJ0IHJlc3BvbnNlIGlmIHByZXYgZGF0YVR5cGUgaXMgbm9uLWF1dG8gYW5kIGRpZmZlcnMgZnJvbSBjdXJyZW50XG5cdFx0XHR9IGVsc2UgaWYgKCBwcmV2ICE9PSBcIipcIiAmJiBwcmV2ICE9PSBjdXJyZW50ICkge1xuXG5cdFx0XHRcdC8vIFNlZWsgYSBkaXJlY3QgY29udmVydGVyXG5cdFx0XHRcdGNvbnYgPSBjb252ZXJ0ZXJzWyBwcmV2ICsgXCIgXCIgKyBjdXJyZW50IF0gfHwgY29udmVydGVyc1sgXCIqIFwiICsgY3VycmVudCBdO1xuXG5cdFx0XHRcdC8vIElmIG5vbmUgZm91bmQsIHNlZWsgYSBwYWlyXG5cdFx0XHRcdGlmICggIWNvbnYgKSB7XG5cdFx0XHRcdFx0Zm9yICggY29udjIgaW4gY29udmVydGVycyApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSWYgY29udjIgb3V0cHV0cyBjdXJyZW50XG5cdFx0XHRcdFx0XHR0bXAgPSBjb252Mi5zcGxpdCggXCIgXCIgKTtcblx0XHRcdFx0XHRcdGlmICggdG1wWyAxIF0gPT09IGN1cnJlbnQgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gSWYgcHJldiBjYW4gYmUgY29udmVydGVkIHRvIGFjY2VwdGVkIGlucHV0XG5cdFx0XHRcdFx0XHRcdGNvbnYgPSBjb252ZXJ0ZXJzWyBwcmV2ICsgXCIgXCIgKyB0bXBbIDAgXSBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0Y29udmVydGVyc1sgXCIqIFwiICsgdG1wWyAwIF0gXTtcblx0XHRcdFx0XHRcdFx0aWYgKCBjb252ICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gQ29uZGVuc2UgZXF1aXZhbGVuY2UgY29udmVydGVyc1xuXHRcdFx0XHRcdFx0XHRcdGlmICggY29udiA9PT0gdHJ1ZSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGNvbnYgPSBjb252ZXJ0ZXJzWyBjb252MiBdO1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCBpbnNlcnQgdGhlIGludGVybWVkaWF0ZSBkYXRhVHlwZVxuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoIGNvbnZlcnRlcnNbIGNvbnYyIF0gIT09IHRydWUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjdXJyZW50ID0gdG1wWyAwIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggdG1wWyAxIF0gKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBBcHBseSBjb252ZXJ0ZXIgKGlmIG5vdCBhbiBlcXVpdmFsZW5jZSlcblx0XHRcdFx0aWYgKCBjb252ICE9PSB0cnVlICkge1xuXG5cdFx0XHRcdFx0Ly8gVW5sZXNzIGVycm9ycyBhcmUgYWxsb3dlZCB0byBidWJibGUsIGNhdGNoIGFuZCByZXR1cm4gdGhlbVxuXHRcdFx0XHRcdGlmICggY29udiAmJiBzLnRocm93cyApIHtcblx0XHRcdFx0XHRcdHJlc3BvbnNlID0gY29udiggcmVzcG9uc2UgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0cmVzcG9uc2UgPSBjb252KCByZXNwb25zZSApO1xuXHRcdFx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0XHRcdFx0c3RhdGU6IFwicGFyc2VyZXJyb3JcIixcblx0XHRcdFx0XHRcdFx0XHRlcnJvcjogY29udiA/IGUgOiBcIk5vIGNvbnZlcnNpb24gZnJvbSBcIiArIHByZXYgKyBcIiB0byBcIiArIGN1cnJlbnRcblx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4geyBzdGF0ZTogXCJzdWNjZXNzXCIsIGRhdGE6IHJlc3BvbnNlIH07XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBDb3VudGVyIGZvciBob2xkaW5nIHRoZSBudW1iZXIgb2YgYWN0aXZlIHF1ZXJpZXNcblx0YWN0aXZlOiAwLFxuXG5cdC8vIExhc3QtTW9kaWZpZWQgaGVhZGVyIGNhY2hlIGZvciBuZXh0IHJlcXVlc3Rcblx0bGFzdE1vZGlmaWVkOiB7fSxcblx0ZXRhZzoge30sXG5cblx0YWpheFNldHRpbmdzOiB7XG5cdFx0dXJsOiBsb2NhdGlvbi5ocmVmLFxuXHRcdHR5cGU6IFwiR0VUXCIsXG5cdFx0aXNMb2NhbDogcmxvY2FsUHJvdG9jb2wudGVzdCggbG9jYXRpb24ucHJvdG9jb2wgKSxcblx0XHRnbG9iYWw6IHRydWUsXG5cdFx0cHJvY2Vzc0RhdGE6IHRydWUsXG5cdFx0YXN5bmM6IHRydWUsXG5cdFx0Y29udGVudFR5cGU6IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04XCIsXG5cblx0XHQvKlxuXHRcdHRpbWVvdXQ6IDAsXG5cdFx0ZGF0YTogbnVsbCxcblx0XHRkYXRhVHlwZTogbnVsbCxcblx0XHR1c2VybmFtZTogbnVsbCxcblx0XHRwYXNzd29yZDogbnVsbCxcblx0XHRjYWNoZTogbnVsbCxcblx0XHR0aHJvd3M6IGZhbHNlLFxuXHRcdHRyYWRpdGlvbmFsOiBmYWxzZSxcblx0XHRoZWFkZXJzOiB7fSxcblx0XHQqL1xuXG5cdFx0YWNjZXB0czoge1xuXHRcdFx0XCIqXCI6IGFsbFR5cGVzLFxuXHRcdFx0dGV4dDogXCJ0ZXh0L3BsYWluXCIsXG5cdFx0XHRodG1sOiBcInRleHQvaHRtbFwiLFxuXHRcdFx0eG1sOiBcImFwcGxpY2F0aW9uL3htbCwgdGV4dC94bWxcIixcblx0XHRcdGpzb246IFwiYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0XCJcblx0XHR9LFxuXG5cdFx0Y29udGVudHM6IHtcblx0XHRcdHhtbDogL1xcYnhtbFxcYi8sXG5cdFx0XHRodG1sOiAvXFxiaHRtbC8sXG5cdFx0XHRqc29uOiAvXFxianNvblxcYi9cblx0XHR9LFxuXG5cdFx0cmVzcG9uc2VGaWVsZHM6IHtcblx0XHRcdHhtbDogXCJyZXNwb25zZVhNTFwiLFxuXHRcdFx0dGV4dDogXCJyZXNwb25zZVRleHRcIixcblx0XHRcdGpzb246IFwicmVzcG9uc2VKU09OXCJcblx0XHR9LFxuXG5cdFx0Ly8gRGF0YSBjb252ZXJ0ZXJzXG5cdFx0Ly8gS2V5cyBzZXBhcmF0ZSBzb3VyY2UgKG9yIGNhdGNoYWxsIFwiKlwiKSBhbmQgZGVzdGluYXRpb24gdHlwZXMgd2l0aCBhIHNpbmdsZSBzcGFjZVxuXHRcdGNvbnZlcnRlcnM6IHtcblxuXHRcdFx0Ly8gQ29udmVydCBhbnl0aGluZyB0byB0ZXh0XG5cdFx0XHRcIiogdGV4dFwiOiBTdHJpbmcsXG5cblx0XHRcdC8vIFRleHQgdG8gaHRtbCAodHJ1ZSA9IG5vIHRyYW5zZm9ybWF0aW9uKVxuXHRcdFx0XCJ0ZXh0IGh0bWxcIjogdHJ1ZSxcblxuXHRcdFx0Ly8gRXZhbHVhdGUgdGV4dCBhcyBhIGpzb24gZXhwcmVzc2lvblxuXHRcdFx0XCJ0ZXh0IGpzb25cIjogSlNPTi5wYXJzZSxcblxuXHRcdFx0Ly8gUGFyc2UgdGV4dCBhcyB4bWxcblx0XHRcdFwidGV4dCB4bWxcIjogalF1ZXJ5LnBhcnNlWE1MXG5cdFx0fSxcblxuXHRcdC8vIEZvciBvcHRpb25zIHRoYXQgc2hvdWxkbid0IGJlIGRlZXAgZXh0ZW5kZWQ6XG5cdFx0Ly8geW91IGNhbiBhZGQgeW91ciBvd24gY3VzdG9tIG9wdGlvbnMgaGVyZSBpZlxuXHRcdC8vIGFuZCB3aGVuIHlvdSBjcmVhdGUgb25lIHRoYXQgc2hvdWxkbid0IGJlXG5cdFx0Ly8gZGVlcCBleHRlbmRlZCAoc2VlIGFqYXhFeHRlbmQpXG5cdFx0ZmxhdE9wdGlvbnM6IHtcblx0XHRcdHVybDogdHJ1ZSxcblx0XHRcdGNvbnRleHQ6IHRydWVcblx0XHR9XG5cdH0sXG5cblx0Ly8gQ3JlYXRlcyBhIGZ1bGwgZmxlZGdlZCBzZXR0aW5ncyBvYmplY3QgaW50byB0YXJnZXRcblx0Ly8gd2l0aCBib3RoIGFqYXhTZXR0aW5ncyBhbmQgc2V0dGluZ3MgZmllbGRzLlxuXHQvLyBJZiB0YXJnZXQgaXMgb21pdHRlZCwgd3JpdGVzIGludG8gYWpheFNldHRpbmdzLlxuXHRhamF4U2V0dXA6IGZ1bmN0aW9uKCB0YXJnZXQsIHNldHRpbmdzICkge1xuXHRcdHJldHVybiBzZXR0aW5ncyA/XG5cblx0XHRcdC8vIEJ1aWxkaW5nIGEgc2V0dGluZ3Mgb2JqZWN0XG5cdFx0XHRhamF4RXh0ZW5kKCBhamF4RXh0ZW5kKCB0YXJnZXQsIGpRdWVyeS5hamF4U2V0dGluZ3MgKSwgc2V0dGluZ3MgKSA6XG5cblx0XHRcdC8vIEV4dGVuZGluZyBhamF4U2V0dGluZ3Ncblx0XHRcdGFqYXhFeHRlbmQoIGpRdWVyeS5hamF4U2V0dGluZ3MsIHRhcmdldCApO1xuXHR9LFxuXG5cdGFqYXhQcmVmaWx0ZXI6IGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggcHJlZmlsdGVycyApLFxuXHRhamF4VHJhbnNwb3J0OiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMgKSxcblxuXHQvLyBNYWluIG1ldGhvZFxuXHRhamF4OiBmdW5jdGlvbiggdXJsLCBvcHRpb25zICkge1xuXG5cdFx0Ly8gSWYgdXJsIGlzIGFuIG9iamVjdCwgc2ltdWxhdGUgcHJlLTEuNSBzaWduYXR1cmVcblx0XHRpZiAoIHR5cGVvZiB1cmwgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0XHRvcHRpb25zID0gdXJsO1xuXHRcdFx0dXJsID0gdW5kZWZpbmVkO1xuXHRcdH1cblxuXHRcdC8vIEZvcmNlIG9wdGlvbnMgdG8gYmUgYW4gb2JqZWN0XG5cdFx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0XHR2YXIgdHJhbnNwb3J0LFxuXG5cdFx0XHQvLyBVUkwgd2l0aG91dCBhbnRpLWNhY2hlIHBhcmFtXG5cdFx0XHRjYWNoZVVSTCxcblxuXHRcdFx0Ly8gUmVzcG9uc2UgaGVhZGVyc1xuXHRcdFx0cmVzcG9uc2VIZWFkZXJzU3RyaW5nLFxuXHRcdFx0cmVzcG9uc2VIZWFkZXJzLFxuXG5cdFx0XHQvLyB0aW1lb3V0IGhhbmRsZVxuXHRcdFx0dGltZW91dFRpbWVyLFxuXG5cdFx0XHQvLyBVcmwgY2xlYW51cCB2YXJcblx0XHRcdHVybEFuY2hvcixcblxuXHRcdFx0Ly8gUmVxdWVzdCBzdGF0ZSAoYmVjb21lcyBmYWxzZSB1cG9uIHNlbmQgYW5kIHRydWUgdXBvbiBjb21wbGV0aW9uKVxuXHRcdFx0Y29tcGxldGVkLFxuXG5cdFx0XHQvLyBUbyBrbm93IGlmIGdsb2JhbCBldmVudHMgYXJlIHRvIGJlIGRpc3BhdGNoZWRcblx0XHRcdGZpcmVHbG9iYWxzLFxuXG5cdFx0XHQvLyBMb29wIHZhcmlhYmxlXG5cdFx0XHRpLFxuXG5cdFx0XHQvLyB1bmNhY2hlZCBwYXJ0IG9mIHRoZSB1cmxcblx0XHRcdHVuY2FjaGVkLFxuXG5cdFx0XHQvLyBDcmVhdGUgdGhlIGZpbmFsIG9wdGlvbnMgb2JqZWN0XG5cdFx0XHRzID0galF1ZXJ5LmFqYXhTZXR1cCgge30sIG9wdGlvbnMgKSxcblxuXHRcdFx0Ly8gQ2FsbGJhY2tzIGNvbnRleHRcblx0XHRcdGNhbGxiYWNrQ29udGV4dCA9IHMuY29udGV4dCB8fCBzLFxuXG5cdFx0XHQvLyBDb250ZXh0IGZvciBnbG9iYWwgZXZlbnRzIGlzIGNhbGxiYWNrQ29udGV4dCBpZiBpdCBpcyBhIERPTSBub2RlIG9yIGpRdWVyeSBjb2xsZWN0aW9uXG5cdFx0XHRnbG9iYWxFdmVudENvbnRleHQgPSBzLmNvbnRleHQgJiZcblx0XHRcdFx0KCBjYWxsYmFja0NvbnRleHQubm9kZVR5cGUgfHwgY2FsbGJhY2tDb250ZXh0LmpxdWVyeSApID9cblx0XHRcdFx0alF1ZXJ5KCBjYWxsYmFja0NvbnRleHQgKSA6XG5cdFx0XHRcdGpRdWVyeS5ldmVudCxcblxuXHRcdFx0Ly8gRGVmZXJyZWRzXG5cdFx0XHRkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuXHRcdFx0Y29tcGxldGVEZWZlcnJlZCA9IGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLFxuXG5cdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0c3RhdHVzQ29kZSA9IHMuc3RhdHVzQ29kZSB8fCB7fSxcblxuXHRcdFx0Ly8gSGVhZGVycyAodGhleSBhcmUgc2VudCBhbGwgYXQgb25jZSlcblx0XHRcdHJlcXVlc3RIZWFkZXJzID0ge30sXG5cdFx0XHRyZXF1ZXN0SGVhZGVyc05hbWVzID0ge30sXG5cblx0XHRcdC8vIERlZmF1bHQgYWJvcnQgbWVzc2FnZVxuXHRcdFx0c3RyQWJvcnQgPSBcImNhbmNlbGVkXCIsXG5cblx0XHRcdC8vIEZha2UgeGhyXG5cdFx0XHRqcVhIUiA9IHtcblx0XHRcdFx0cmVhZHlTdGF0ZTogMCxcblxuXHRcdFx0XHQvLyBCdWlsZHMgaGVhZGVycyBoYXNodGFibGUgaWYgbmVlZGVkXG5cdFx0XHRcdGdldFJlc3BvbnNlSGVhZGVyOiBmdW5jdGlvbigga2V5ICkge1xuXHRcdFx0XHRcdHZhciBtYXRjaDtcblx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblx0XHRcdFx0XHRcdGlmICggIXJlc3BvbnNlSGVhZGVycyApIHtcblx0XHRcdFx0XHRcdFx0cmVzcG9uc2VIZWFkZXJzID0ge307XG5cdFx0XHRcdFx0XHRcdHdoaWxlICggKCBtYXRjaCA9IHJoZWFkZXJzLmV4ZWMoIHJlc3BvbnNlSGVhZGVyc1N0cmluZyApICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmVzcG9uc2VIZWFkZXJzWyBtYXRjaFsgMSBdLnRvTG93ZXJDYXNlKCkgKyBcIiBcIiBdID1cblx0XHRcdFx0XHRcdFx0XHRcdCggcmVzcG9uc2VIZWFkZXJzWyBtYXRjaFsgMSBdLnRvTG93ZXJDYXNlKCkgKyBcIiBcIiBdIHx8IFtdIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LmNvbmNhdCggbWF0Y2hbIDIgXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRtYXRjaCA9IHJlc3BvbnNlSGVhZGVyc1sga2V5LnRvTG93ZXJDYXNlKCkgKyBcIiBcIiBdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gbWF0Y2ggPT0gbnVsbCA/IG51bGwgOiBtYXRjaC5qb2luKCBcIiwgXCIgKTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBSYXcgc3RyaW5nXG5cdFx0XHRcdGdldEFsbFJlc3BvbnNlSGVhZGVyczogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGNvbXBsZXRlZCA/IHJlc3BvbnNlSGVhZGVyc1N0cmluZyA6IG51bGw7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gQ2FjaGVzIHRoZSBoZWFkZXJcblx0XHRcdFx0c2V0UmVxdWVzdEhlYWRlcjogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdFx0XHRcdGlmICggY29tcGxldGVkID09IG51bGwgKSB7XG5cdFx0XHRcdFx0XHRuYW1lID0gcmVxdWVzdEhlYWRlcnNOYW1lc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gPVxuXHRcdFx0XHRcdFx0XHRyZXF1ZXN0SGVhZGVyc05hbWVzWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSB8fCBuYW1lO1xuXHRcdFx0XHRcdFx0cmVxdWVzdEhlYWRlcnNbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBPdmVycmlkZXMgcmVzcG9uc2UgY29udGVudC10eXBlIGhlYWRlclxuXHRcdFx0XHRvdmVycmlkZU1pbWVUeXBlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCA9PSBudWxsICkge1xuXHRcdFx0XHRcdFx0cy5taW1lVHlwZSA9IHR5cGU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzXG5cdFx0XHRcdHN0YXR1c0NvZGU6IGZ1bmN0aW9uKCBtYXAgKSB7XG5cdFx0XHRcdFx0dmFyIGNvZGU7XG5cdFx0XHRcdFx0aWYgKCBtYXAgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBFeGVjdXRlIHRoZSBhcHByb3ByaWF0ZSBjYWxsYmFja3Ncblx0XHRcdFx0XHRcdFx0anFYSFIuYWx3YXlzKCBtYXBbIGpxWEhSLnN0YXR1cyBdICk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdC8vIExhenktYWRkIHRoZSBuZXcgY2FsbGJhY2tzIGluIGEgd2F5IHRoYXQgcHJlc2VydmVzIG9sZCBvbmVzXG5cdFx0XHRcdFx0XHRcdGZvciAoIGNvZGUgaW4gbWFwICkge1xuXHRcdFx0XHRcdFx0XHRcdHN0YXR1c0NvZGVbIGNvZGUgXSA9IFsgc3RhdHVzQ29kZVsgY29kZSBdLCBtYXBbIGNvZGUgXSBdO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIENhbmNlbCB0aGUgcmVxdWVzdFxuXHRcdFx0XHRhYm9ydDogZnVuY3Rpb24oIHN0YXR1c1RleHQgKSB7XG5cdFx0XHRcdFx0dmFyIGZpbmFsVGV4dCA9IHN0YXR1c1RleHQgfHwgc3RyQWJvcnQ7XG5cdFx0XHRcdFx0aWYgKCB0cmFuc3BvcnQgKSB7XG5cdFx0XHRcdFx0XHR0cmFuc3BvcnQuYWJvcnQoIGZpbmFsVGV4dCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRkb25lKCAwLCBmaW5hbFRleHQgKTtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdC8vIEF0dGFjaCBkZWZlcnJlZHNcblx0XHRkZWZlcnJlZC5wcm9taXNlKCBqcVhIUiApO1xuXG5cdFx0Ly8gQWRkIHByb3RvY29sIGlmIG5vdCBwcm92aWRlZCAocHJlZmlsdGVycyBtaWdodCBleHBlY3QgaXQpXG5cdFx0Ly8gSGFuZGxlIGZhbHN5IHVybCBpbiB0aGUgc2V0dGluZ3Mgb2JqZWN0ICh0cmFjLTEwMDkzOiBjb25zaXN0ZW5jeSB3aXRoIG9sZCBzaWduYXR1cmUpXG5cdFx0Ly8gV2UgYWxzbyB1c2UgdGhlIHVybCBwYXJhbWV0ZXIgaWYgYXZhaWxhYmxlXG5cdFx0cy51cmwgPSAoICggdXJsIHx8IHMudXJsIHx8IGxvY2F0aW9uLmhyZWYgKSArIFwiXCIgKVxuXHRcdFx0LnJlcGxhY2UoIHJwcm90b2NvbCwgbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKTtcblxuXHRcdC8vIEFsaWFzIG1ldGhvZCBvcHRpb24gdG8gdHlwZSBhcyBwZXIgdGlja2V0IHRyYWMtMTIwMDRcblx0XHRzLnR5cGUgPSBvcHRpb25zLm1ldGhvZCB8fCBvcHRpb25zLnR5cGUgfHwgcy5tZXRob2QgfHwgcy50eXBlO1xuXG5cdFx0Ly8gRXh0cmFjdCBkYXRhVHlwZXMgbGlzdFxuXHRcdHMuZGF0YVR5cGVzID0gKCBzLmRhdGFUeXBlIHx8IFwiKlwiICkudG9Mb3dlckNhc2UoKS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFsgXCJcIiBdO1xuXG5cdFx0Ly8gQSBjcm9zcy1kb21haW4gcmVxdWVzdCBpcyBpbiBvcmRlciB3aGVuIHRoZSBvcmlnaW4gZG9lc24ndCBtYXRjaCB0aGUgY3VycmVudCBvcmlnaW4uXG5cdFx0aWYgKCBzLmNyb3NzRG9tYWluID09IG51bGwgKSB7XG5cdFx0XHR1cmxBbmNob3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImFcIiApO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTggLSAxMSwgRWRnZSAxMiAtIDE1XG5cdFx0XHQvLyBJRSB0aHJvd3MgZXhjZXB0aW9uIG9uIGFjY2Vzc2luZyB0aGUgaHJlZiBwcm9wZXJ0eSBpZiB1cmwgaXMgbWFsZm9ybWVkLFxuXHRcdFx0Ly8gZS5nLiBodHRwOi8vZXhhbXBsZS5jb206ODB4L1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0dXJsQW5jaG9yLmhyZWYgPSBzLnVybDtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTggLSAxMSBvbmx5XG5cdFx0XHRcdC8vIEFuY2hvcidzIGhvc3QgcHJvcGVydHkgaXNuJ3QgY29ycmVjdGx5IHNldCB3aGVuIHMudXJsIGlzIHJlbGF0aXZlXG5cdFx0XHRcdHVybEFuY2hvci5ocmVmID0gdXJsQW5jaG9yLmhyZWY7XG5cdFx0XHRcdHMuY3Jvc3NEb21haW4gPSBvcmlnaW5BbmNob3IucHJvdG9jb2wgKyBcIi8vXCIgKyBvcmlnaW5BbmNob3IuaG9zdCAhPT1cblx0XHRcdFx0XHR1cmxBbmNob3IucHJvdG9jb2wgKyBcIi8vXCIgKyB1cmxBbmNob3IuaG9zdDtcblx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdC8vIElmIHRoZXJlIGlzIGFuIGVycm9yIHBhcnNpbmcgdGhlIFVSTCwgYXNzdW1lIGl0IGlzIGNyb3NzRG9tYWluLFxuXHRcdFx0XHQvLyBpdCBjYW4gYmUgcmVqZWN0ZWQgYnkgdGhlIHRyYW5zcG9ydCBpZiBpdCBpcyBpbnZhbGlkXG5cdFx0XHRcdHMuY3Jvc3NEb21haW4gPSB0cnVlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENvbnZlcnQgZGF0YSBpZiBub3QgYWxyZWFkeSBhIHN0cmluZ1xuXHRcdGlmICggcy5kYXRhICYmIHMucHJvY2Vzc0RhdGEgJiYgdHlwZW9mIHMuZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHMuZGF0YSA9IGpRdWVyeS5wYXJhbSggcy5kYXRhLCBzLnRyYWRpdGlvbmFsICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXBwbHkgcHJlZmlsdGVyc1xuXHRcdGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBwcmVmaWx0ZXJzLCBzLCBvcHRpb25zLCBqcVhIUiApO1xuXG5cdFx0Ly8gSWYgcmVxdWVzdCB3YXMgYWJvcnRlZCBpbnNpZGUgYSBwcmVmaWx0ZXIsIHN0b3AgdGhlcmVcblx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblx0XHRcdHJldHVybiBqcVhIUjtcblx0XHR9XG5cblx0XHQvLyBXZSBjYW4gZmlyZSBnbG9iYWwgZXZlbnRzIGFzIG9mIG5vdyBpZiBhc2tlZCB0b1xuXHRcdC8vIERvbid0IGZpcmUgZXZlbnRzIGlmIGpRdWVyeS5ldmVudCBpcyB1bmRlZmluZWQgaW4gYW4gQU1ELXVzYWdlIHNjZW5hcmlvICh0cmFjLTE1MTE4KVxuXHRcdGZpcmVHbG9iYWxzID0galF1ZXJ5LmV2ZW50ICYmIHMuZ2xvYmFsO1xuXG5cdFx0Ly8gV2F0Y2ggZm9yIGEgbmV3IHNldCBvZiByZXF1ZXN0c1xuXHRcdGlmICggZmlyZUdsb2JhbHMgJiYgalF1ZXJ5LmFjdGl2ZSsrID09PSAwICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIFwiYWpheFN0YXJ0XCIgKTtcblx0XHR9XG5cblx0XHQvLyBVcHBlcmNhc2UgdGhlIHR5cGVcblx0XHRzLnR5cGUgPSBzLnR5cGUudG9VcHBlckNhc2UoKTtcblxuXHRcdC8vIERldGVybWluZSBpZiByZXF1ZXN0IGhhcyBjb250ZW50XG5cdFx0cy5oYXNDb250ZW50ID0gIXJub0NvbnRlbnQudGVzdCggcy50eXBlICk7XG5cblx0XHQvLyBTYXZlIHRoZSBVUkwgaW4gY2FzZSB3ZSdyZSB0b3lpbmcgd2l0aCB0aGUgSWYtTW9kaWZpZWQtU2luY2Vcblx0XHQvLyBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIgbGF0ZXIgb25cblx0XHQvLyBSZW1vdmUgaGFzaCB0byBzaW1wbGlmeSB1cmwgbWFuaXB1bGF0aW9uXG5cdFx0Y2FjaGVVUkwgPSBzLnVybC5yZXBsYWNlKCByaGFzaCwgXCJcIiApO1xuXG5cdFx0Ly8gTW9yZSBvcHRpb25zIGhhbmRsaW5nIGZvciByZXF1ZXN0cyB3aXRoIG5vIGNvbnRlbnRcblx0XHRpZiAoICFzLmhhc0NvbnRlbnQgKSB7XG5cblx0XHRcdC8vIFJlbWVtYmVyIHRoZSBoYXNoIHNvIHdlIGNhbiBwdXQgaXQgYmFja1xuXHRcdFx0dW5jYWNoZWQgPSBzLnVybC5zbGljZSggY2FjaGVVUkwubGVuZ3RoICk7XG5cblx0XHRcdC8vIElmIGRhdGEgaXMgYXZhaWxhYmxlIGFuZCBzaG91bGQgYmUgcHJvY2Vzc2VkLCBhcHBlbmQgZGF0YSB0byB1cmxcblx0XHRcdGlmICggcy5kYXRhICYmICggcy5wcm9jZXNzRGF0YSB8fCB0eXBlb2Ygcy5kYXRhID09PSBcInN0cmluZ1wiICkgKSB7XG5cdFx0XHRcdGNhY2hlVVJMICs9ICggcnF1ZXJ5LnRlc3QoIGNhY2hlVVJMICkgPyBcIiZcIiA6IFwiP1wiICkgKyBzLmRhdGE7XG5cblx0XHRcdFx0Ly8gdHJhYy05NjgyOiByZW1vdmUgZGF0YSBzbyB0aGF0IGl0J3Mgbm90IHVzZWQgaW4gYW4gZXZlbnR1YWwgcmV0cnlcblx0XHRcdFx0ZGVsZXRlIHMuZGF0YTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIG9yIHVwZGF0ZSBhbnRpLWNhY2hlIHBhcmFtIGlmIG5lZWRlZFxuXHRcdFx0aWYgKCBzLmNhY2hlID09PSBmYWxzZSApIHtcblx0XHRcdFx0Y2FjaGVVUkwgPSBjYWNoZVVSTC5yZXBsYWNlKCByYW50aUNhY2hlLCBcIiQxXCIgKTtcblx0XHRcdFx0dW5jYWNoZWQgPSAoIHJxdWVyeS50ZXN0KCBjYWNoZVVSTCApID8gXCImXCIgOiBcIj9cIiApICsgXCJfPVwiICsgKCBub25jZS5ndWlkKysgKSArXG5cdFx0XHRcdFx0dW5jYWNoZWQ7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFB1dCBoYXNoIGFuZCBhbnRpLWNhY2hlIG9uIHRoZSBVUkwgdGhhdCB3aWxsIGJlIHJlcXVlc3RlZCAoZ2gtMTczMilcblx0XHRcdHMudXJsID0gY2FjaGVVUkwgKyB1bmNhY2hlZDtcblxuXHRcdC8vIENoYW5nZSAnJTIwJyB0byAnKycgaWYgdGhpcyBpcyBlbmNvZGVkIGZvcm0gYm9keSBjb250ZW50IChnaC0yNjU4KVxuXHRcdH0gZWxzZSBpZiAoIHMuZGF0YSAmJiBzLnByb2Nlc3NEYXRhICYmXG5cdFx0XHQoIHMuY29udGVudFR5cGUgfHwgXCJcIiApLmluZGV4T2YoIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIgKSA9PT0gMCApIHtcblx0XHRcdHMuZGF0YSA9IHMuZGF0YS5yZXBsYWNlKCByMjAsIFwiK1wiICk7XG5cdFx0fVxuXG5cdFx0Ly8gU2V0IHRoZSBJZi1Nb2RpZmllZC1TaW5jZSBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIsIGlmIGluIGlmTW9kaWZpZWQgbW9kZS5cblx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdGlmICggalF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSApIHtcblx0XHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJJZi1Nb2RpZmllZC1TaW5jZVwiLCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdICkge1xuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU5vbmUtTWF0Y2hcIiwgalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIGNvcnJlY3QgaGVhZGVyLCBpZiBkYXRhIGlzIGJlaW5nIHNlbnRcblx0XHRpZiAoIHMuZGF0YSAmJiBzLmhhc0NvbnRlbnQgJiYgcy5jb250ZW50VHlwZSAhPT0gZmFsc2UgfHwgb3B0aW9ucy5jb250ZW50VHlwZSApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiQ29udGVudC1UeXBlXCIsIHMuY29udGVudFR5cGUgKTtcblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIEFjY2VwdHMgaGVhZGVyIGZvciB0aGUgc2VydmVyLCBkZXBlbmRpbmcgb24gdGhlIGRhdGFUeXBlXG5cdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlcihcblx0XHRcdFwiQWNjZXB0XCIsXG5cdFx0XHRzLmRhdGFUeXBlc1sgMCBdICYmIHMuYWNjZXB0c1sgcy5kYXRhVHlwZXNbIDAgXSBdID9cblx0XHRcdFx0cy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gK1xuXHRcdFx0XHRcdCggcy5kYXRhVHlwZXNbIDAgXSAhPT0gXCIqXCIgPyBcIiwgXCIgKyBhbGxUeXBlcyArIFwiOyBxPTAuMDFcIiA6IFwiXCIgKSA6XG5cdFx0XHRcdHMuYWNjZXB0c1sgXCIqXCIgXVxuXHRcdCk7XG5cblx0XHQvLyBDaGVjayBmb3IgaGVhZGVycyBvcHRpb25cblx0XHRmb3IgKCBpIGluIHMuaGVhZGVycyApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIGksIHMuaGVhZGVyc1sgaSBdICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsb3cgY3VzdG9tIGhlYWRlcnMvbWltZXR5cGVzIGFuZCBlYXJseSBhYm9ydFxuXHRcdGlmICggcy5iZWZvcmVTZW5kICYmXG5cdFx0XHQoIHMuYmVmb3JlU2VuZC5jYWxsKCBjYWxsYmFja0NvbnRleHQsIGpxWEhSLCBzICkgPT09IGZhbHNlIHx8IGNvbXBsZXRlZCApICkge1xuXG5cdFx0XHQvLyBBYm9ydCBpZiBub3QgZG9uZSBhbHJlYWR5IGFuZCByZXR1cm5cblx0XHRcdHJldHVybiBqcVhIUi5hYm9ydCgpO1xuXHRcdH1cblxuXHRcdC8vIEFib3J0aW5nIGlzIG5vIGxvbmdlciBhIGNhbmNlbGxhdGlvblxuXHRcdHN0ckFib3J0ID0gXCJhYm9ydFwiO1xuXG5cdFx0Ly8gSW5zdGFsbCBjYWxsYmFja3Mgb24gZGVmZXJyZWRzXG5cdFx0Y29tcGxldGVEZWZlcnJlZC5hZGQoIHMuY29tcGxldGUgKTtcblx0XHRqcVhIUi5kb25lKCBzLnN1Y2Nlc3MgKTtcblx0XHRqcVhIUi5mYWlsKCBzLmVycm9yICk7XG5cblx0XHQvLyBHZXQgdHJhbnNwb3J0XG5cdFx0dHJhbnNwb3J0ID0gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiBubyB0cmFuc3BvcnQsIHdlIGF1dG8tYWJvcnRcblx0XHRpZiAoICF0cmFuc3BvcnQgKSB7XG5cdFx0XHRkb25lKCAtMSwgXCJObyBUcmFuc3BvcnRcIiApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gMTtcblxuXHRcdFx0Ly8gU2VuZCBnbG9iYWwgZXZlbnRcblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhTZW5kXCIsIFsganFYSFIsIHMgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhamF4U2VuZCwgc3RvcCB0aGVyZVxuXHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdHJldHVybiBqcVhIUjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVGltZW91dFxuXHRcdFx0aWYgKCBzLmFzeW5jICYmIHMudGltZW91dCA+IDAgKSB7XG5cdFx0XHRcdHRpbWVvdXRUaW1lciA9IHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRqcVhIUi5hYm9ydCggXCJ0aW1lb3V0XCIgKTtcblx0XHRcdFx0fSwgcy50aW1lb3V0ICk7XG5cdFx0XHR9XG5cblx0XHRcdHRyeSB7XG5cdFx0XHRcdGNvbXBsZXRlZCA9IGZhbHNlO1xuXHRcdFx0XHR0cmFuc3BvcnQuc2VuZCggcmVxdWVzdEhlYWRlcnMsIGRvbmUgKTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdC8vIFJldGhyb3cgcG9zdC1jb21wbGV0aW9uIGV4Y2VwdGlvbnNcblx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdFx0dGhyb3cgZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFByb3BhZ2F0ZSBvdGhlcnMgYXMgcmVzdWx0c1xuXHRcdFx0XHRkb25lKCAtMSwgZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGxiYWNrIGZvciB3aGVuIGV2ZXJ5dGhpbmcgaXMgZG9uZVxuXHRcdGZ1bmN0aW9uIGRvbmUoIHN0YXR1cywgbmF0aXZlU3RhdHVzVGV4dCwgcmVzcG9uc2VzLCBoZWFkZXJzICkge1xuXHRcdFx0dmFyIGlzU3VjY2Vzcywgc3VjY2VzcywgZXJyb3IsIHJlc3BvbnNlLCBtb2RpZmllZCxcblx0XHRcdFx0c3RhdHVzVGV4dCA9IG5hdGl2ZVN0YXR1c1RleHQ7XG5cblx0XHRcdC8vIElnbm9yZSByZXBlYXQgaW52b2NhdGlvbnNcblx0XHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGNvbXBsZXRlZCA9IHRydWU7XG5cblx0XHRcdC8vIENsZWFyIHRpbWVvdXQgaWYgaXQgZXhpc3RzXG5cdFx0XHRpZiAoIHRpbWVvdXRUaW1lciApIHtcblx0XHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dFRpbWVyICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIERlcmVmZXJlbmNlIHRyYW5zcG9ydCBmb3IgZWFybHkgZ2FyYmFnZSBjb2xsZWN0aW9uXG5cdFx0XHQvLyAobm8gbWF0dGVyIGhvdyBsb25nIHRoZSBqcVhIUiBvYmplY3Qgd2lsbCBiZSB1c2VkKVxuXHRcdFx0dHJhbnNwb3J0ID0gdW5kZWZpbmVkO1xuXG5cdFx0XHQvLyBDYWNoZSByZXNwb25zZSBoZWFkZXJzXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcgPSBoZWFkZXJzIHx8IFwiXCI7XG5cblx0XHRcdC8vIFNldCByZWFkeVN0YXRlXG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gc3RhdHVzID4gMCA/IDQgOiAwO1xuXG5cdFx0XHQvLyBEZXRlcm1pbmUgaWYgc3VjY2Vzc2Z1bFxuXHRcdFx0aXNTdWNjZXNzID0gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID09PSAzMDQ7XG5cblx0XHRcdC8vIEdldCByZXNwb25zZSBkYXRhXG5cdFx0XHRpZiAoIHJlc3BvbnNlcyApIHtcblx0XHRcdFx0cmVzcG9uc2UgPSBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFVzZSBhIG5vb3AgY29udmVydGVyIGZvciBtaXNzaW5nIHNjcmlwdCBidXQgbm90IGlmIGpzb25wXG5cdFx0XHRpZiAoICFpc1N1Y2Nlc3MgJiZcblx0XHRcdFx0alF1ZXJ5LmluQXJyYXkoIFwic2NyaXB0XCIsIHMuZGF0YVR5cGVzICkgPiAtMSAmJlxuXHRcdFx0XHRqUXVlcnkuaW5BcnJheSggXCJqc29uXCIsIHMuZGF0YVR5cGVzICkgPCAwICkge1xuXHRcdFx0XHRzLmNvbnZlcnRlcnNbIFwidGV4dCBzY3JpcHRcIiBdID0gZnVuY3Rpb24oKSB7fTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29udmVydCBubyBtYXR0ZXIgd2hhdCAodGhhdCB3YXkgcmVzcG9uc2VYWFggZmllbGRzIGFyZSBhbHdheXMgc2V0KVxuXHRcdFx0cmVzcG9uc2UgPSBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKTtcblxuXHRcdFx0Ly8gSWYgc3VjY2Vzc2Z1bCwgaGFuZGxlIHR5cGUgY2hhaW5pbmdcblx0XHRcdGlmICggaXNTdWNjZXNzICkge1xuXG5cdFx0XHRcdC8vIFNldCB0aGUgSWYtTW9kaWZpZWQtU2luY2UgYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyLCBpZiBpbiBpZk1vZGlmaWVkIG1vZGUuXG5cdFx0XHRcdGlmICggcy5pZk1vZGlmaWVkICkge1xuXHRcdFx0XHRcdG1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiTGFzdC1Nb2RpZmllZFwiICk7XG5cdFx0XHRcdFx0aWYgKCBtb2RpZmllZCApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5sYXN0TW9kaWZpZWRbIGNhY2hlVVJMIF0gPSBtb2RpZmllZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bW9kaWZpZWQgPSBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJldGFnXCIgKTtcblx0XHRcdFx0XHRpZiAoIG1vZGlmaWVkICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gPSBtb2RpZmllZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBpZiBubyBjb250ZW50XG5cdFx0XHRcdGlmICggc3RhdHVzID09PSAyMDQgfHwgcy50eXBlID09PSBcIkhFQURcIiApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJub2NvbnRlbnRcIjtcblxuXHRcdFx0XHQvLyBpZiBub3QgbW9kaWZpZWRcblx0XHRcdFx0fSBlbHNlIGlmICggc3RhdHVzID09PSAzMDQgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm90bW9kaWZpZWRcIjtcblxuXHRcdFx0XHQvLyBJZiB3ZSBoYXZlIGRhdGEsIGxldCdzIGNvbnZlcnQgaXRcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gcmVzcG9uc2Uuc3RhdGU7XG5cdFx0XHRcdFx0c3VjY2VzcyA9IHJlc3BvbnNlLmRhdGE7XG5cdFx0XHRcdFx0ZXJyb3IgPSByZXNwb25zZS5lcnJvcjtcblx0XHRcdFx0XHRpc1N1Y2Nlc3MgPSAhZXJyb3I7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gRXh0cmFjdCBlcnJvciBmcm9tIHN0YXR1c1RleHQgYW5kIG5vcm1hbGl6ZSBmb3Igbm9uLWFib3J0c1xuXHRcdFx0XHRlcnJvciA9IHN0YXR1c1RleHQ7XG5cdFx0XHRcdGlmICggc3RhdHVzIHx8ICFzdGF0dXNUZXh0ICkge1xuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSBcImVycm9yXCI7XG5cdFx0XHRcdFx0aWYgKCBzdGF0dXMgPCAwICkge1xuXHRcdFx0XHRcdFx0c3RhdHVzID0gMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gU2V0IGRhdGEgZm9yIHRoZSBmYWtlIHhociBvYmplY3Rcblx0XHRcdGpxWEhSLnN0YXR1cyA9IHN0YXR1cztcblx0XHRcdGpxWEhSLnN0YXR1c1RleHQgPSAoIG5hdGl2ZVN0YXR1c1RleHQgfHwgc3RhdHVzVGV4dCApICsgXCJcIjtcblxuXHRcdFx0Ly8gU3VjY2Vzcy9FcnJvclxuXHRcdFx0aWYgKCBpc1N1Y2Nlc3MgKSB7XG5cdFx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBjYWxsYmFja0NvbnRleHQsIFsgc3VjY2Vzcywgc3RhdHVzVGV4dCwganFYSFIgXSApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0V2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIGpxWEhSLCBzdGF0dXNUZXh0LCBlcnJvciBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzXG5cdFx0XHRqcVhIUi5zdGF0dXNDb2RlKCBzdGF0dXNDb2RlICk7XG5cdFx0XHRzdGF0dXNDb2RlID0gdW5kZWZpbmVkO1xuXG5cdFx0XHRpZiAoIGZpcmVHbG9iYWxzICkge1xuXHRcdFx0XHRnbG9iYWxFdmVudENvbnRleHQudHJpZ2dlciggaXNTdWNjZXNzID8gXCJhamF4U3VjY2Vzc1wiIDogXCJhamF4RXJyb3JcIixcblx0XHRcdFx0XHRbIGpxWEhSLCBzLCBpc1N1Y2Nlc3MgPyBzdWNjZXNzIDogZXJyb3IgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb21wbGV0ZVxuXHRcdFx0Y29tcGxldGVEZWZlcnJlZC5maXJlV2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIGpxWEhSLCBzdGF0dXNUZXh0IF0gKTtcblxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIFwiYWpheENvbXBsZXRlXCIsIFsganFYSFIsIHMgXSApO1xuXG5cdFx0XHRcdC8vIEhhbmRsZSB0aGUgZ2xvYmFsIEFKQVggY291bnRlclxuXHRcdFx0XHRpZiAoICEoIC0talF1ZXJ5LmFjdGl2ZSApICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBcImFqYXhTdG9wXCIgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBqcVhIUjtcblx0fSxcblxuXHRnZXRKU09OOiBmdW5jdGlvbiggdXJsLCBkYXRhLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdldCggdXJsLCBkYXRhLCBjYWxsYmFjaywgXCJqc29uXCIgKTtcblx0fSxcblxuXHRnZXRTY3JpcHQ6IGZ1bmN0aW9uKCB1cmwsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ2V0KCB1cmwsIHVuZGVmaW5lZCwgY2FsbGJhY2ssIFwic2NyaXB0XCIgKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCggWyBcImdldFwiLCBcInBvc3RcIiBdLCBmdW5jdGlvbiggX2ksIG1ldGhvZCApIHtcblx0alF1ZXJ5WyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB1cmwsIGRhdGEsIGNhbGxiYWNrLCB0eXBlICkge1xuXG5cdFx0Ly8gU2hpZnQgYXJndW1lbnRzIGlmIGRhdGEgYXJndW1lbnQgd2FzIG9taXR0ZWRcblx0XHRpZiAoIGlzRnVuY3Rpb24oIGRhdGEgKSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IGNhbGxiYWNrO1xuXHRcdFx0Y2FsbGJhY2sgPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBUaGUgdXJsIGNhbiBiZSBhbiBvcHRpb25zIG9iamVjdCAod2hpY2ggdGhlbiBtdXN0IGhhdmUgLnVybClcblx0XHRyZXR1cm4galF1ZXJ5LmFqYXgoIGpRdWVyeS5leHRlbmQoIHtcblx0XHRcdHVybDogdXJsLFxuXHRcdFx0dHlwZTogbWV0aG9kLFxuXHRcdFx0ZGF0YVR5cGU6IHR5cGUsXG5cdFx0XHRkYXRhOiBkYXRhLFxuXHRcdFx0c3VjY2VzczogY2FsbGJhY2tcblx0XHR9LCBqUXVlcnkuaXNQbGFpbk9iamVjdCggdXJsICkgJiYgdXJsICkgKTtcblx0fTtcbn0gKTtcblxualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIGZ1bmN0aW9uKCBzICkge1xuXHR2YXIgaTtcblx0Zm9yICggaSBpbiBzLmhlYWRlcnMgKSB7XG5cdFx0aWYgKCBpLnRvTG93ZXJDYXNlKCkgPT09IFwiY29udGVudC10eXBlXCIgKSB7XG5cdFx0XHRzLmNvbnRlbnRUeXBlID0gcy5oZWFkZXJzWyBpIF0gfHwgXCJcIjtcblx0XHR9XG5cdH1cbn0gKTtcblxuXG5qUXVlcnkuX2V2YWxVcmwgPSBmdW5jdGlvbiggdXJsLCBvcHRpb25zLCBkb2MgKSB7XG5cdHJldHVybiBqUXVlcnkuYWpheCgge1xuXHRcdHVybDogdXJsLFxuXG5cdFx0Ly8gTWFrZSB0aGlzIGV4cGxpY2l0LCBzaW5jZSB1c2VyIGNhbiBvdmVycmlkZSB0aGlzIHRocm91Z2ggYWpheFNldHVwICh0cmFjLTExMjY0KVxuXHRcdHR5cGU6IFwiR0VUXCIsXG5cdFx0ZGF0YVR5cGU6IFwic2NyaXB0XCIsXG5cdFx0Y2FjaGU6IHRydWUsXG5cdFx0YXN5bmM6IGZhbHNlLFxuXHRcdGdsb2JhbDogZmFsc2UsXG5cblx0XHQvLyBPbmx5IGV2YWx1YXRlIHRoZSByZXNwb25zZSBpZiBpdCBpcyBzdWNjZXNzZnVsIChnaC00MTI2KVxuXHRcdC8vIGRhdGFGaWx0ZXIgaXMgbm90IGludm9rZWQgZm9yIGZhaWx1cmUgcmVzcG9uc2VzLCBzbyB1c2luZyBpdCBpbnN0ZWFkXG5cdFx0Ly8gb2YgdGhlIGRlZmF1bHQgY29udmVydGVyIGlzIGtsdWRneSBidXQgaXQgd29ya3MuXG5cdFx0Y29udmVydGVyczoge1xuXHRcdFx0XCJ0ZXh0IHNjcmlwdFwiOiBmdW5jdGlvbigpIHt9XG5cdFx0fSxcblx0XHRkYXRhRmlsdGVyOiBmdW5jdGlvbiggcmVzcG9uc2UgKSB7XG5cdFx0XHRqUXVlcnkuZ2xvYmFsRXZhbCggcmVzcG9uc2UsIG9wdGlvbnMsIGRvYyApO1xuXHRcdH1cblx0fSApO1xufTtcblxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHdyYXBBbGw6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHZhciB3cmFwO1xuXG5cdFx0aWYgKCB0aGlzWyAwIF0gKSB7XG5cdFx0XHRpZiAoIGlzRnVuY3Rpb24oIGh0bWwgKSApIHtcblx0XHRcdFx0aHRtbCA9IGh0bWwuY2FsbCggdGhpc1sgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFRoZSBlbGVtZW50cyB0byB3cmFwIHRoZSB0YXJnZXQgYXJvdW5kXG5cdFx0XHR3cmFwID0galF1ZXJ5KCBodG1sLCB0aGlzWyAwIF0ub3duZXJEb2N1bWVudCApLmVxKCAwICkuY2xvbmUoIHRydWUgKTtcblxuXHRcdFx0aWYgKCB0aGlzWyAwIF0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0d3JhcC5pbnNlcnRCZWZvcmUoIHRoaXNbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHR3cmFwLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBlbGVtID0gdGhpcztcblxuXHRcdFx0XHR3aGlsZSAoIGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQgKSB7XG5cdFx0XHRcdFx0ZWxlbSA9IGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gZWxlbTtcblx0XHRcdH0gKS5hcHBlbmQoIHRoaXMgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHR3cmFwSW5uZXI6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdGlmICggaXNGdW5jdGlvbiggaHRtbCApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLndyYXBJbm5lciggaHRtbC5jYWxsKCB0aGlzLCBpICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBzZWxmID0galF1ZXJ5KCB0aGlzICksXG5cdFx0XHRcdGNvbnRlbnRzID0gc2VsZi5jb250ZW50cygpO1xuXG5cdFx0XHRpZiAoIGNvbnRlbnRzLmxlbmd0aCApIHtcblx0XHRcdFx0Y29udGVudHMud3JhcEFsbCggaHRtbCApO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRzZWxmLmFwcGVuZCggaHRtbCApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHR3cmFwOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHR2YXIgaHRtbElzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uKCBodG1sICk7XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdGpRdWVyeSggdGhpcyApLndyYXBBbGwoIGh0bWxJc0Z1bmN0aW9uID8gaHRtbC5jYWxsKCB0aGlzLCBpICkgOiBodG1sICk7XG5cdFx0fSApO1xuXHR9LFxuXG5cdHVud3JhcDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHRoaXMucGFyZW50KCBzZWxlY3RvciApLm5vdCggXCJib2R5XCIgKS5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeSggdGhpcyApLnJlcGxhY2VXaXRoKCB0aGlzLmNoaWxkTm9kZXMgKTtcblx0XHR9ICk7XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cbn0gKTtcblxuXG5qUXVlcnkuZXhwci5wc2V1ZG9zLmhpZGRlbiA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRyZXR1cm4gIWpRdWVyeS5leHByLnBzZXVkb3MudmlzaWJsZSggZWxlbSApO1xufTtcbmpRdWVyeS5leHByLnBzZXVkb3MudmlzaWJsZSA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRyZXR1cm4gISEoIGVsZW0ub2Zmc2V0V2lkdGggfHwgZWxlbS5vZmZzZXRIZWlnaHQgfHwgZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApO1xufTtcblxuXG5cblxualF1ZXJ5LmFqYXhTZXR0aW5ncy54aHIgPSBmdW5jdGlvbigpIHtcblx0dHJ5IHtcblx0XHRyZXR1cm4gbmV3IHdpbmRvdy5YTUxIdHRwUmVxdWVzdCgpO1xuXHR9IGNhdGNoICggZSApIHt9XG59O1xuXG52YXIgeGhyU3VjY2Vzc1N0YXR1cyA9IHtcblxuXHRcdC8vIEZpbGUgcHJvdG9jb2wgYWx3YXlzIHlpZWxkcyBzdGF0dXMgY29kZSAwLCBhc3N1bWUgMjAwXG5cdFx0MDogMjAwLFxuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHQvLyB0cmFjLTE0NTA6IHNvbWV0aW1lcyBJRSByZXR1cm5zIDEyMjMgd2hlbiBpdCBzaG91bGQgYmUgMjA0XG5cdFx0MTIyMzogMjA0XG5cdH0sXG5cdHhoclN1cHBvcnRlZCA9IGpRdWVyeS5hamF4U2V0dGluZ3MueGhyKCk7XG5cbnN1cHBvcnQuY29ycyA9ICEheGhyU3VwcG9ydGVkICYmICggXCJ3aXRoQ3JlZGVudGlhbHNcIiBpbiB4aHJTdXBwb3J0ZWQgKTtcbnN1cHBvcnQuYWpheCA9IHhoclN1cHBvcnRlZCA9ICEheGhyU3VwcG9ydGVkO1xuXG5qUXVlcnkuYWpheFRyYW5zcG9ydCggZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cdHZhciBjYWxsYmFjaywgZXJyb3JDYWxsYmFjaztcblxuXHQvLyBDcm9zcyBkb21haW4gb25seSBhbGxvd2VkIGlmIHN1cHBvcnRlZCB0aHJvdWdoIFhNTEh0dHBSZXF1ZXN0XG5cdGlmICggc3VwcG9ydC5jb3JzIHx8IHhoclN1cHBvcnRlZCAmJiAhb3B0aW9ucy5jcm9zc0RvbWFpbiApIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0c2VuZDogZnVuY3Rpb24oIGhlYWRlcnMsIGNvbXBsZXRlICkge1xuXHRcdFx0XHR2YXIgaSxcblx0XHRcdFx0XHR4aHIgPSBvcHRpb25zLnhocigpO1xuXG5cdFx0XHRcdHhoci5vcGVuKFxuXHRcdFx0XHRcdG9wdGlvbnMudHlwZSxcblx0XHRcdFx0XHRvcHRpb25zLnVybCxcblx0XHRcdFx0XHRvcHRpb25zLmFzeW5jLFxuXHRcdFx0XHRcdG9wdGlvbnMudXNlcm5hbWUsXG5cdFx0XHRcdFx0b3B0aW9ucy5wYXNzd29yZFxuXHRcdFx0XHQpO1xuXG5cdFx0XHRcdC8vIEFwcGx5IGN1c3RvbSBmaWVsZHMgaWYgcHJvdmlkZWRcblx0XHRcdFx0aWYgKCBvcHRpb25zLnhockZpZWxkcyApIHtcblx0XHRcdFx0XHRmb3IgKCBpIGluIG9wdGlvbnMueGhyRmllbGRzICkge1xuXHRcdFx0XHRcdFx0eGhyWyBpIF0gPSBvcHRpb25zLnhockZpZWxkc1sgaSBdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIE92ZXJyaWRlIG1pbWUgdHlwZSBpZiBuZWVkZWRcblx0XHRcdFx0aWYgKCBvcHRpb25zLm1pbWVUeXBlICYmIHhoci5vdmVycmlkZU1pbWVUeXBlICkge1xuXHRcdFx0XHRcdHhoci5vdmVycmlkZU1pbWVUeXBlKCBvcHRpb25zLm1pbWVUeXBlICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBYLVJlcXVlc3RlZC1XaXRoIGhlYWRlclxuXHRcdFx0XHQvLyBGb3IgY3Jvc3MtZG9tYWluIHJlcXVlc3RzLCBzZWVpbmcgYXMgY29uZGl0aW9ucyBmb3IgYSBwcmVmbGlnaHQgYXJlXG5cdFx0XHRcdC8vIGFraW4gdG8gYSBqaWdzYXcgcHV6emxlLCB3ZSBzaW1wbHkgbmV2ZXIgc2V0IGl0IHRvIGJlIHN1cmUuXG5cdFx0XHRcdC8vIChpdCBjYW4gYWx3YXlzIGJlIHNldCBvbiBhIHBlci1yZXF1ZXN0IGJhc2lzIG9yIGV2ZW4gdXNpbmcgYWpheFNldHVwKVxuXHRcdFx0XHQvLyBGb3Igc2FtZS1kb21haW4gcmVxdWVzdHMsIHdvbid0IGNoYW5nZSBoZWFkZXIgaWYgYWxyZWFkeSBwcm92aWRlZC5cblx0XHRcdFx0aWYgKCAhb3B0aW9ucy5jcm9zc0RvbWFpbiAmJiAhaGVhZGVyc1sgXCJYLVJlcXVlc3RlZC1XaXRoXCIgXSApIHtcblx0XHRcdFx0XHRoZWFkZXJzWyBcIlgtUmVxdWVzdGVkLVdpdGhcIiBdID0gXCJYTUxIdHRwUmVxdWVzdFwiO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gU2V0IGhlYWRlcnNcblx0XHRcdFx0Zm9yICggaSBpbiBoZWFkZXJzICkge1xuXHRcdFx0XHRcdHhoci5zZXRSZXF1ZXN0SGVhZGVyKCBpLCBoZWFkZXJzWyBpIF0gKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIENhbGxiYWNrXG5cdFx0XHRcdGNhbGxiYWNrID0gZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRcdFx0Y2FsbGJhY2sgPSBlcnJvckNhbGxiYWNrID0geGhyLm9ubG9hZCA9XG5cdFx0XHRcdFx0XHRcdFx0eGhyLm9uZXJyb3IgPSB4aHIub25hYm9ydCA9IHhoci5vbnRpbWVvdXQgPVxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IG51bGw7XG5cblx0XHRcdFx0XHRcdFx0aWYgKCB0eXBlID09PSBcImFib3J0XCIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0eGhyLmFib3J0KCk7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoIHR5cGUgPT09IFwiZXJyb3JcIiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdFx0XHRcdFx0XHRcdFx0Ly8gT24gYSBtYW51YWwgbmF0aXZlIGFib3J0LCBJRTkgdGhyb3dzXG5cdFx0XHRcdFx0XHRcdFx0Ly8gZXJyb3JzIG9uIGFueSBwcm9wZXJ0eSBhY2Nlc3MgdGhhdCBpcyBub3QgcmVhZHlTdGF0ZVxuXHRcdFx0XHRcdFx0XHRcdGlmICggdHlwZW9mIHhoci5zdGF0dXMgIT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb21wbGV0ZSggMCwgXCJlcnJvclwiICk7XG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRcdGNvbXBsZXRlKFxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIEZpbGU6IHByb3RvY29sIGFsd2F5cyB5aWVsZHMgc3RhdHVzIDA7IHNlZSB0cmFjLTg2MDUsIHRyYWMtMTQyMDdcblx0XHRcdFx0XHRcdFx0XHRcdFx0eGhyLnN0YXR1cyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0eGhyLnN0YXR1c1RleHRcblx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdGNvbXBsZXRlKFxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyU3VjY2Vzc1N0YXR1c1sgeGhyLnN0YXR1cyBdIHx8IHhoci5zdGF0dXMsXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzVGV4dCxcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHRcdFx0XHRcdFx0XHRcdC8vIElFOSBoYXMgbm8gWEhSMiBidXQgdGhyb3dzIG9uIGJpbmFyeSAodHJhYy0xMTQyNilcblx0XHRcdFx0XHRcdFx0XHRcdC8vIEZvciBYSFIyIG5vbi10ZXh0LCBsZXQgdGhlIGNhbGxlciBoYW5kbGUgaXQgKGdoLTI0OTgpXG5cdFx0XHRcdFx0XHRcdFx0XHQoIHhoci5yZXNwb25zZVR5cGUgfHwgXCJ0ZXh0XCIgKSAhPT0gXCJ0ZXh0XCIgIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHR0eXBlb2YgeGhyLnJlc3BvbnNlVGV4dCAhPT0gXCJzdHJpbmdcIiA/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHsgYmluYXJ5OiB4aHIucmVzcG9uc2UgfSA6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHsgdGV4dDogeGhyLnJlc3BvbnNlVGV4dCB9LFxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyLmdldEFsbFJlc3BvbnNlSGVhZGVycygpXG5cdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH07XG5cblx0XHRcdFx0Ly8gTGlzdGVuIHRvIGV2ZW50c1xuXHRcdFx0XHR4aHIub25sb2FkID0gY2FsbGJhY2soKTtcblx0XHRcdFx0ZXJyb3JDYWxsYmFjayA9IHhoci5vbmVycm9yID0geGhyLm9udGltZW91dCA9IGNhbGxiYWNrKCBcImVycm9yXCIgKTtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA5IG9ubHlcblx0XHRcdFx0Ly8gVXNlIG9ucmVhZHlzdGF0ZWNoYW5nZSB0byByZXBsYWNlIG9uYWJvcnRcblx0XHRcdFx0Ly8gdG8gaGFuZGxlIHVuY2F1Z2h0IGFib3J0c1xuXHRcdFx0XHRpZiAoIHhoci5vbmFib3J0ICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0eGhyLm9uYWJvcnQgPSBlcnJvckNhbGxiYWNrO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRcdFx0Ly8gQ2hlY2sgcmVhZHlTdGF0ZSBiZWZvcmUgdGltZW91dCBhcyBpdCBjaGFuZ2VzXG5cdFx0XHRcdFx0XHRpZiAoIHhoci5yZWFkeVN0YXRlID09PSA0ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIEFsbG93IG9uZXJyb3IgdG8gYmUgY2FsbGVkIGZpcnN0LFxuXHRcdFx0XHRcdFx0XHQvLyBidXQgdGhhdCB3aWxsIG5vdCBoYW5kbGUgYSBuYXRpdmUgYWJvcnRcblx0XHRcdFx0XHRcdFx0Ly8gQWxzbywgc2F2ZSBlcnJvckNhbGxiYWNrIHRvIGEgdmFyaWFibGVcblx0XHRcdFx0XHRcdFx0Ly8gYXMgeGhyLm9uZXJyb3IgY2Fubm90IGJlIGFjY2Vzc2VkXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3JDYWxsYmFjaygpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBDcmVhdGUgdGhlIGFib3J0IGNhbGxiYWNrXG5cdFx0XHRcdGNhbGxiYWNrID0gY2FsbGJhY2soIFwiYWJvcnRcIiApO1xuXG5cdFx0XHRcdHRyeSB7XG5cblx0XHRcdFx0XHQvLyBEbyBzZW5kIHRoZSByZXF1ZXN0ICh0aGlzIG1heSByYWlzZSBhbiBleGNlcHRpb24pXG5cdFx0XHRcdFx0eGhyLnNlbmQoIG9wdGlvbnMuaGFzQ29udGVudCAmJiBvcHRpb25zLmRhdGEgfHwgbnVsbCApO1xuXHRcdFx0XHR9IGNhdGNoICggZSApIHtcblxuXHRcdFx0XHRcdC8vIHRyYWMtMTQ2ODM6IE9ubHkgcmV0aHJvdyBpZiB0aGlzIGhhc24ndCBiZWVuIG5vdGlmaWVkIGFzIGFuIGVycm9yIHlldFxuXHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0XHR0aHJvdyBlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSxcblxuXHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdGNhbGxiYWNrKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIFByZXZlbnQgYXV0by1leGVjdXRpb24gb2Ygc2NyaXB0cyB3aGVuIG5vIGV4cGxpY2l0IGRhdGFUeXBlIHdhcyBwcm92aWRlZCAoU2VlIGdoLTI0MzIpXG5qUXVlcnkuYWpheFByZWZpbHRlciggZnVuY3Rpb24oIHMgKSB7XG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcblx0XHRzLmNvbnRlbnRzLnNjcmlwdCA9IGZhbHNlO1xuXHR9XG59ICk7XG5cbi8vIEluc3RhbGwgc2NyaXB0IGRhdGFUeXBlXG5qUXVlcnkuYWpheFNldHVwKCB7XG5cdGFjY2VwdHM6IHtcblx0XHRzY3JpcHQ6IFwidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0LCBcIiArXG5cdFx0XHRcImFwcGxpY2F0aW9uL2VjbWFzY3JpcHQsIGFwcGxpY2F0aW9uL3gtZWNtYXNjcmlwdFwiXG5cdH0sXG5cdGNvbnRlbnRzOiB7XG5cdFx0c2NyaXB0OiAvXFxiKD86amF2YXxlY21hKXNjcmlwdFxcYi9cblx0fSxcblx0Y29udmVydGVyczoge1xuXHRcdFwidGV4dCBzY3JpcHRcIjogZnVuY3Rpb24oIHRleHQgKSB7XG5cdFx0XHRqUXVlcnkuZ2xvYmFsRXZhbCggdGV4dCApO1xuXHRcdFx0cmV0dXJuIHRleHQ7XG5cdFx0fVxuXHR9XG59ICk7XG5cbi8vIEhhbmRsZSBjYWNoZSdzIHNwZWNpYWwgY2FzZSBhbmQgY3Jvc3NEb21haW5cbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcInNjcmlwdFwiLCBmdW5jdGlvbiggcyApIHtcblx0aWYgKCBzLmNhY2hlID09PSB1bmRlZmluZWQgKSB7XG5cdFx0cy5jYWNoZSA9IGZhbHNlO1xuXHR9XG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcblx0XHRzLnR5cGUgPSBcIkdFVFwiO1xuXHR9XG59ICk7XG5cbi8vIEJpbmQgc2NyaXB0IHRhZyBoYWNrIHRyYW5zcG9ydFxualF1ZXJ5LmFqYXhUcmFuc3BvcnQoIFwic2NyaXB0XCIsIGZ1bmN0aW9uKCBzICkge1xuXG5cdC8vIFRoaXMgdHJhbnNwb3J0IG9ubHkgZGVhbHMgd2l0aCBjcm9zcyBkb21haW4gb3IgZm9yY2VkLWJ5LWF0dHJzIHJlcXVlc3RzXG5cdGlmICggcy5jcm9zc0RvbWFpbiB8fCBzLnNjcmlwdEF0dHJzICkge1xuXHRcdHZhciBzY3JpcHQsIGNhbGxiYWNrO1xuXHRcdHJldHVybiB7XG5cdFx0XHRzZW5kOiBmdW5jdGlvbiggXywgY29tcGxldGUgKSB7XG5cdFx0XHRcdHNjcmlwdCA9IGpRdWVyeSggXCI8c2NyaXB0PlwiIClcblx0XHRcdFx0XHQuYXR0ciggcy5zY3JpcHRBdHRycyB8fCB7fSApXG5cdFx0XHRcdFx0LnByb3AoIHsgY2hhcnNldDogcy5zY3JpcHRDaGFyc2V0LCBzcmM6IHMudXJsIH0gKVxuXHRcdFx0XHRcdC5vbiggXCJsb2FkIGVycm9yXCIsIGNhbGxiYWNrID0gZnVuY3Rpb24oIGV2dCApIHtcblx0XHRcdFx0XHRcdHNjcmlwdC5yZW1vdmUoKTtcblx0XHRcdFx0XHRcdGNhbGxiYWNrID0gbnVsbDtcblx0XHRcdFx0XHRcdGlmICggZXZ0ICkge1xuXHRcdFx0XHRcdFx0XHRjb21wbGV0ZSggZXZ0LnR5cGUgPT09IFwiZXJyb3JcIiA/IDQwNCA6IDIwMCwgZXZ0LnR5cGUgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9ICk7XG5cblx0XHRcdFx0Ly8gVXNlIG5hdGl2ZSBET00gbWFuaXB1bGF0aW9uIHRvIGF2b2lkIG91ciBkb21NYW5pcCBBSkFYIHRyaWNrZXJ5XG5cdFx0XHRcdGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoIHNjcmlwdFsgMCBdICk7XG5cdFx0XHR9LFxuXHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdGNhbGxiYWNrKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbnZhciBvbGRDYWxsYmFja3MgPSBbXSxcblx0cmpzb25wID0gLyg9KVxcPyg/PSZ8JCl8XFw/XFw/LztcblxuLy8gRGVmYXVsdCBqc29ucCBzZXR0aW5nc1xualF1ZXJ5LmFqYXhTZXR1cCgge1xuXHRqc29ucDogXCJjYWxsYmFja1wiLFxuXHRqc29ucENhbGxiYWNrOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgY2FsbGJhY2sgPSBvbGRDYWxsYmFja3MucG9wKCkgfHwgKCBqUXVlcnkuZXhwYW5kbyArIFwiX1wiICsgKCBub25jZS5ndWlkKysgKSApO1xuXHRcdHRoaXNbIGNhbGxiYWNrIF0gPSB0cnVlO1xuXHRcdHJldHVybiBjYWxsYmFjaztcblx0fVxufSApO1xuXG4vLyBEZXRlY3QsIG5vcm1hbGl6ZSBvcHRpb25zIGFuZCBpbnN0YWxsIGNhbGxiYWNrcyBmb3IganNvbnAgcmVxdWVzdHNcbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcImpzb24ganNvbnBcIiwgZnVuY3Rpb24oIHMsIG9yaWdpbmFsU2V0dGluZ3MsIGpxWEhSICkge1xuXG5cdHZhciBjYWxsYmFja05hbWUsIG92ZXJ3cml0dGVuLCByZXNwb25zZUNvbnRhaW5lcixcblx0XHRqc29uUHJvcCA9IHMuanNvbnAgIT09IGZhbHNlICYmICggcmpzb25wLnRlc3QoIHMudXJsICkgP1xuXHRcdFx0XCJ1cmxcIiA6XG5cdFx0XHR0eXBlb2Ygcy5kYXRhID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCggcy5jb250ZW50VHlwZSB8fCBcIlwiIClcblx0XHRcdFx0XHQuaW5kZXhPZiggXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIiApID09PSAwICYmXG5cdFx0XHRcdHJqc29ucC50ZXN0KCBzLmRhdGEgKSAmJiBcImRhdGFcIlxuXHRcdCk7XG5cblx0Ly8gSGFuZGxlIGlmZiB0aGUgZXhwZWN0ZWQgZGF0YSB0eXBlIGlzIFwianNvbnBcIiBvciB3ZSBoYXZlIGEgcGFyYW1ldGVyIHRvIHNldFxuXHRpZiAoIGpzb25Qcm9wIHx8IHMuZGF0YVR5cGVzWyAwIF0gPT09IFwianNvbnBcIiApIHtcblxuXHRcdC8vIEdldCBjYWxsYmFjayBuYW1lLCByZW1lbWJlcmluZyBwcmVleGlzdGluZyB2YWx1ZSBhc3NvY2lhdGVkIHdpdGggaXRcblx0XHRjYWxsYmFja05hbWUgPSBzLmpzb25wQ2FsbGJhY2sgPSBpc0Z1bmN0aW9uKCBzLmpzb25wQ2FsbGJhY2sgKSA/XG5cdFx0XHRzLmpzb25wQ2FsbGJhY2soKSA6XG5cdFx0XHRzLmpzb25wQ2FsbGJhY2s7XG5cblx0XHQvLyBJbnNlcnQgY2FsbGJhY2sgaW50byB1cmwgb3IgZm9ybSBkYXRhXG5cdFx0aWYgKCBqc29uUHJvcCApIHtcblx0XHRcdHNbIGpzb25Qcm9wIF0gPSBzWyBqc29uUHJvcCBdLnJlcGxhY2UoIHJqc29ucCwgXCIkMVwiICsgY2FsbGJhY2tOYW1lICk7XG5cdFx0fSBlbHNlIGlmICggcy5qc29ucCAhPT0gZmFsc2UgKSB7XG5cdFx0XHRzLnVybCArPSAoIHJxdWVyeS50ZXN0KCBzLnVybCApID8gXCImXCIgOiBcIj9cIiApICsgcy5qc29ucCArIFwiPVwiICsgY2FsbGJhY2tOYW1lO1xuXHRcdH1cblxuXHRcdC8vIFVzZSBkYXRhIGNvbnZlcnRlciB0byByZXRyaWV2ZSBqc29uIGFmdGVyIHNjcmlwdCBleGVjdXRpb25cblx0XHRzLmNvbnZlcnRlcnNbIFwic2NyaXB0IGpzb25cIiBdID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoICFyZXNwb25zZUNvbnRhaW5lciApIHtcblx0XHRcdFx0alF1ZXJ5LmVycm9yKCBjYWxsYmFja05hbWUgKyBcIiB3YXMgbm90IGNhbGxlZFwiICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzcG9uc2VDb250YWluZXJbIDAgXTtcblx0XHR9O1xuXG5cdFx0Ly8gRm9yY2UganNvbiBkYXRhVHlwZVxuXHRcdHMuZGF0YVR5cGVzWyAwIF0gPSBcImpzb25cIjtcblxuXHRcdC8vIEluc3RhbGwgY2FsbGJhY2tcblx0XHRvdmVyd3JpdHRlbiA9IHdpbmRvd1sgY2FsbGJhY2tOYW1lIF07XG5cdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmVzcG9uc2VDb250YWluZXIgPSBhcmd1bWVudHM7XG5cdFx0fTtcblxuXHRcdC8vIENsZWFuLXVwIGZ1bmN0aW9uIChmaXJlcyBhZnRlciBjb252ZXJ0ZXJzKVxuXHRcdGpxWEhSLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIElmIHByZXZpb3VzIHZhbHVlIGRpZG4ndCBleGlzdCAtIHJlbW92ZSBpdFxuXHRcdFx0aWYgKCBvdmVyd3JpdHRlbiA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRqUXVlcnkoIHdpbmRvdyApLnJlbW92ZVByb3AoIGNhbGxiYWNrTmFtZSApO1xuXG5cdFx0XHQvLyBPdGhlcndpc2UgcmVzdG9yZSBwcmVleGlzdGluZyB2YWx1ZVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IG92ZXJ3cml0dGVuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTYXZlIGJhY2sgYXMgZnJlZVxuXHRcdFx0aWYgKCBzWyBjYWxsYmFja05hbWUgXSApIHtcblxuXHRcdFx0XHQvLyBNYWtlIHN1cmUgdGhhdCByZS11c2luZyB0aGUgb3B0aW9ucyBkb2Vzbid0IHNjcmV3IHRoaW5ncyBhcm91bmRcblx0XHRcdFx0cy5qc29ucENhbGxiYWNrID0gb3JpZ2luYWxTZXR0aW5ncy5qc29ucENhbGxiYWNrO1xuXG5cdFx0XHRcdC8vIFNhdmUgdGhlIGNhbGxiYWNrIG5hbWUgZm9yIGZ1dHVyZSB1c2Vcblx0XHRcdFx0b2xkQ2FsbGJhY2tzLnB1c2goIGNhbGxiYWNrTmFtZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDYWxsIGlmIGl0IHdhcyBhIGZ1bmN0aW9uIGFuZCB3ZSBoYXZlIGEgcmVzcG9uc2Vcblx0XHRcdGlmICggcmVzcG9uc2VDb250YWluZXIgJiYgaXNGdW5jdGlvbiggb3ZlcndyaXR0ZW4gKSApIHtcblx0XHRcdFx0b3ZlcndyaXR0ZW4oIHJlc3BvbnNlQ29udGFpbmVyWyAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0cmVzcG9uc2VDb250YWluZXIgPSBvdmVyd3JpdHRlbiA9IHVuZGVmaW5lZDtcblx0XHR9ICk7XG5cblx0XHQvLyBEZWxlZ2F0ZSB0byBzY3JpcHRcblx0XHRyZXR1cm4gXCJzY3JpcHRcIjtcblx0fVxufSApO1xuXG5cblxuXG4vLyBTdXBwb3J0OiBTYWZhcmkgOCBvbmx5XG4vLyBJbiBTYWZhcmkgOCBkb2N1bWVudHMgY3JlYXRlZCB2aWEgZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50XG4vLyBjb2xsYXBzZSBzaWJsaW5nIGZvcm1zOiB0aGUgc2Vjb25kIG9uZSBiZWNvbWVzIGEgY2hpbGQgb2YgdGhlIGZpcnN0IG9uZS5cbi8vIEJlY2F1c2Ugb2YgdGhhdCwgdGhpcyBzZWN1cml0eSBtZWFzdXJlIGhhcyB0byBiZSBkaXNhYmxlZCBpbiBTYWZhcmkgOC5cbi8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzczMzdcbnN1cHBvcnQuY3JlYXRlSFRNTERvY3VtZW50ID0gKCBmdW5jdGlvbigpIHtcblx0dmFyIGJvZHkgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIFwiXCIgKS5ib2R5O1xuXHRib2R5LmlubmVySFRNTCA9IFwiPGZvcm0+PC9mb3JtPjxmb3JtPjwvZm9ybT5cIjtcblx0cmV0dXJuIGJvZHkuY2hpbGROb2Rlcy5sZW5ndGggPT09IDI7XG59ICkoKTtcblxuXG4vLyBBcmd1bWVudCBcImRhdGFcIiBzaG91bGQgYmUgc3RyaW5nIG9mIGh0bWxcbi8vIGNvbnRleHQgKG9wdGlvbmFsKTogSWYgc3BlY2lmaWVkLCB0aGUgZnJhZ21lbnQgd2lsbCBiZSBjcmVhdGVkIGluIHRoaXMgY29udGV4dCxcbi8vIGRlZmF1bHRzIHRvIGRvY3VtZW50XG4vLyBrZWVwU2NyaXB0cyAob3B0aW9uYWwpOiBJZiB0cnVlLCB3aWxsIGluY2x1ZGUgc2NyaXB0cyBwYXNzZWQgaW4gdGhlIGh0bWwgc3RyaW5nXG5qUXVlcnkucGFyc2VIVE1MID0gZnVuY3Rpb24oIGRhdGEsIGNvbnRleHQsIGtlZXBTY3JpcHRzICkge1xuXHRpZiAoIHR5cGVvZiBkYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBbXTtcblx0fVxuXHRpZiAoIHR5cGVvZiBjb250ZXh0ID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRrZWVwU2NyaXB0cyA9IGNvbnRleHQ7XG5cdFx0Y29udGV4dCA9IGZhbHNlO1xuXHR9XG5cblx0dmFyIGJhc2UsIHBhcnNlZCwgc2NyaXB0cztcblxuXHRpZiAoICFjb250ZXh0ICkge1xuXG5cdFx0Ly8gU3RvcCBzY3JpcHRzIG9yIGlubGluZSBldmVudCBoYW5kbGVycyBmcm9tIGJlaW5nIGV4ZWN1dGVkIGltbWVkaWF0ZWx5XG5cdFx0Ly8gYnkgdXNpbmcgZG9jdW1lbnQuaW1wbGVtZW50YXRpb25cblx0XHRpZiAoIHN1cHBvcnQuY3JlYXRlSFRNTERvY3VtZW50ICkge1xuXHRcdFx0Y29udGV4dCA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCggXCJcIiApO1xuXG5cdFx0XHQvLyBTZXQgdGhlIGJhc2UgaHJlZiBmb3IgdGhlIGNyZWF0ZWQgZG9jdW1lbnRcblx0XHRcdC8vIHNvIGFueSBwYXJzZWQgZWxlbWVudHMgd2l0aCBVUkxzXG5cdFx0XHQvLyBhcmUgYmFzZWQgb24gdGhlIGRvY3VtZW50J3MgVVJMIChnaC0yOTY1KVxuXHRcdFx0YmFzZSA9IGNvbnRleHQuY3JlYXRlRWxlbWVudCggXCJiYXNlXCIgKTtcblx0XHRcdGJhc2UuaHJlZiA9IGRvY3VtZW50LmxvY2F0aW9uLmhyZWY7XG5cdFx0XHRjb250ZXh0LmhlYWQuYXBwZW5kQ2hpbGQoIGJhc2UgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Y29udGV4dCA9IGRvY3VtZW50O1xuXHRcdH1cblx0fVxuXG5cdHBhcnNlZCA9IHJzaW5nbGVUYWcuZXhlYyggZGF0YSApO1xuXHRzY3JpcHRzID0gIWtlZXBTY3JpcHRzICYmIFtdO1xuXG5cdC8vIFNpbmdsZSB0YWdcblx0aWYgKCBwYXJzZWQgKSB7XG5cdFx0cmV0dXJuIFsgY29udGV4dC5jcmVhdGVFbGVtZW50KCBwYXJzZWRbIDEgXSApIF07XG5cdH1cblxuXHRwYXJzZWQgPSBidWlsZEZyYWdtZW50KCBbIGRhdGEgXSwgY29udGV4dCwgc2NyaXB0cyApO1xuXG5cdGlmICggc2NyaXB0cyAmJiBzY3JpcHRzLmxlbmd0aCApIHtcblx0XHRqUXVlcnkoIHNjcmlwdHMgKS5yZW1vdmUoKTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnkubWVyZ2UoIFtdLCBwYXJzZWQuY2hpbGROb2RlcyApO1xufTtcblxuXG4vKipcbiAqIExvYWQgYSB1cmwgaW50byBhIHBhZ2VcbiAqL1xualF1ZXJ5LmZuLmxvYWQgPSBmdW5jdGlvbiggdXJsLCBwYXJhbXMsIGNhbGxiYWNrICkge1xuXHR2YXIgc2VsZWN0b3IsIHR5cGUsIHJlc3BvbnNlLFxuXHRcdHNlbGYgPSB0aGlzLFxuXHRcdG9mZiA9IHVybC5pbmRleE9mKCBcIiBcIiApO1xuXG5cdGlmICggb2ZmID4gLTEgKSB7XG5cdFx0c2VsZWN0b3IgPSBzdHJpcEFuZENvbGxhcHNlKCB1cmwuc2xpY2UoIG9mZiApICk7XG5cdFx0dXJsID0gdXJsLnNsaWNlKCAwLCBvZmYgKTtcblx0fVxuXG5cdC8vIElmIGl0J3MgYSBmdW5jdGlvblxuXHRpZiAoIGlzRnVuY3Rpb24oIHBhcmFtcyApICkge1xuXG5cdFx0Ly8gV2UgYXNzdW1lIHRoYXQgaXQncyB0aGUgY2FsbGJhY2tcblx0XHRjYWxsYmFjayA9IHBhcmFtcztcblx0XHRwYXJhbXMgPSB1bmRlZmluZWQ7XG5cblx0Ly8gT3RoZXJ3aXNlLCBidWlsZCBhIHBhcmFtIHN0cmluZ1xuXHR9IGVsc2UgaWYgKCBwYXJhbXMgJiYgdHlwZW9mIHBhcmFtcyA9PT0gXCJvYmplY3RcIiApIHtcblx0XHR0eXBlID0gXCJQT1NUXCI7XG5cdH1cblxuXHQvLyBJZiB3ZSBoYXZlIGVsZW1lbnRzIHRvIG1vZGlmeSwgbWFrZSB0aGUgcmVxdWVzdFxuXHRpZiAoIHNlbGYubGVuZ3RoID4gMCApIHtcblx0XHRqUXVlcnkuYWpheCgge1xuXHRcdFx0dXJsOiB1cmwsXG5cblx0XHRcdC8vIElmIFwidHlwZVwiIHZhcmlhYmxlIGlzIHVuZGVmaW5lZCwgdGhlbiBcIkdFVFwiIG1ldGhvZCB3aWxsIGJlIHVzZWQuXG5cdFx0XHQvLyBNYWtlIHZhbHVlIG9mIHRoaXMgZmllbGQgZXhwbGljaXQgc2luY2Vcblx0XHRcdC8vIHVzZXIgY2FuIG92ZXJyaWRlIGl0IHRocm91Z2ggYWpheFNldHVwIG1ldGhvZFxuXHRcdFx0dHlwZTogdHlwZSB8fCBcIkdFVFwiLFxuXHRcdFx0ZGF0YVR5cGU6IFwiaHRtbFwiLFxuXHRcdFx0ZGF0YTogcGFyYW1zXG5cdFx0fSApLmRvbmUoIGZ1bmN0aW9uKCByZXNwb25zZVRleHQgKSB7XG5cblx0XHRcdC8vIFNhdmUgcmVzcG9uc2UgZm9yIHVzZSBpbiBjb21wbGV0ZSBjYWxsYmFja1xuXHRcdFx0cmVzcG9uc2UgPSBhcmd1bWVudHM7XG5cblx0XHRcdHNlbGYuaHRtbCggc2VsZWN0b3IgP1xuXG5cdFx0XHRcdC8vIElmIGEgc2VsZWN0b3Igd2FzIHNwZWNpZmllZCwgbG9jYXRlIHRoZSByaWdodCBlbGVtZW50cyBpbiBhIGR1bW15IGRpdlxuXHRcdFx0XHQvLyBFeGNsdWRlIHNjcmlwdHMgdG8gYXZvaWQgSUUgJ1Blcm1pc3Npb24gRGVuaWVkJyBlcnJvcnNcblx0XHRcdFx0alF1ZXJ5KCBcIjxkaXY+XCIgKS5hcHBlbmQoIGpRdWVyeS5wYXJzZUhUTUwoIHJlc3BvbnNlVGV4dCApICkuZmluZCggc2VsZWN0b3IgKSA6XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIHVzZSB0aGUgZnVsbCByZXN1bHRcblx0XHRcdFx0cmVzcG9uc2VUZXh0ICk7XG5cblx0XHQvLyBJZiB0aGUgcmVxdWVzdCBzdWNjZWVkcywgdGhpcyBmdW5jdGlvbiBnZXRzIFwiZGF0YVwiLCBcInN0YXR1c1wiLCBcImpxWEhSXCJcblx0XHQvLyBidXQgdGhleSBhcmUgaWdub3JlZCBiZWNhdXNlIHJlc3BvbnNlIHdhcyBzZXQgYWJvdmUuXG5cdFx0Ly8gSWYgaXQgZmFpbHMsIHRoaXMgZnVuY3Rpb24gZ2V0cyBcImpxWEhSXCIsIFwic3RhdHVzXCIsIFwiZXJyb3JcIlxuXHRcdH0gKS5hbHdheXMoIGNhbGxiYWNrICYmIGZ1bmN0aW9uKCBqcVhIUiwgc3RhdHVzICkge1xuXHRcdFx0c2VsZi5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0Y2FsbGJhY2suYXBwbHkoIHRoaXMsIHJlc3BvbnNlIHx8IFsganFYSFIucmVzcG9uc2VUZXh0LCBzdGF0dXMsIGpxWEhSIF0gKTtcblx0XHRcdH0gKTtcblx0XHR9ICk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cblxuXG5cbmpRdWVyeS5leHByLnBzZXVkb3MuYW5pbWF0ZWQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuIGpRdWVyeS5ncmVwKCBqUXVlcnkudGltZXJzLCBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIGVsZW0gPT09IGZuLmVsZW07XG5cdH0gKS5sZW5ndGg7XG59O1xuXG5cblxuXG5qUXVlcnkub2Zmc2V0ID0ge1xuXHRzZXRPZmZzZXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBpICkge1xuXHRcdHZhciBjdXJQb3NpdGlvbiwgY3VyTGVmdCwgY3VyQ1NTVG9wLCBjdXJUb3AsIGN1ck9mZnNldCwgY3VyQ1NTTGVmdCwgY2FsY3VsYXRlUG9zaXRpb24sXG5cdFx0XHRwb3NpdGlvbiA9IGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApLFxuXHRcdFx0Y3VyRWxlbSA9IGpRdWVyeSggZWxlbSApLFxuXHRcdFx0cHJvcHMgPSB7fTtcblxuXHRcdC8vIFNldCBwb3NpdGlvbiBmaXJzdCwgaW4tY2FzZSB0b3AvbGVmdCBhcmUgc2V0IGV2ZW4gb24gc3RhdGljIGVsZW1cblx0XHRpZiAoIHBvc2l0aW9uID09PSBcInN0YXRpY1wiICkge1xuXHRcdFx0ZWxlbS5zdHlsZS5wb3NpdGlvbiA9IFwicmVsYXRpdmVcIjtcblx0XHR9XG5cblx0XHRjdXJPZmZzZXQgPSBjdXJFbGVtLm9mZnNldCgpO1xuXHRcdGN1ckNTU1RvcCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwidG9wXCIgKTtcblx0XHRjdXJDU1NMZWZ0ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJsZWZ0XCIgKTtcblx0XHRjYWxjdWxhdGVQb3NpdGlvbiA9ICggcG9zaXRpb24gPT09IFwiYWJzb2x1dGVcIiB8fCBwb3NpdGlvbiA9PT0gXCJmaXhlZFwiICkgJiZcblx0XHRcdCggY3VyQ1NTVG9wICsgY3VyQ1NTTGVmdCApLmluZGV4T2YoIFwiYXV0b1wiICkgPiAtMTtcblxuXHRcdC8vIE5lZWQgdG8gYmUgYWJsZSB0byBjYWxjdWxhdGUgcG9zaXRpb24gaWYgZWl0aGVyXG5cdFx0Ly8gdG9wIG9yIGxlZnQgaXMgYXV0byBhbmQgcG9zaXRpb24gaXMgZWl0aGVyIGFic29sdXRlIG9yIGZpeGVkXG5cdFx0aWYgKCBjYWxjdWxhdGVQb3NpdGlvbiApIHtcblx0XHRcdGN1clBvc2l0aW9uID0gY3VyRWxlbS5wb3NpdGlvbigpO1xuXHRcdFx0Y3VyVG9wID0gY3VyUG9zaXRpb24udG9wO1xuXHRcdFx0Y3VyTGVmdCA9IGN1clBvc2l0aW9uLmxlZnQ7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0Y3VyVG9wID0gcGFyc2VGbG9hdCggY3VyQ1NTVG9wICkgfHwgMDtcblx0XHRcdGN1ckxlZnQgPSBwYXJzZUZsb2F0KCBjdXJDU1NMZWZ0ICkgfHwgMDtcblx0XHR9XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIG9wdGlvbnMgKSApIHtcblxuXHRcdFx0Ly8gVXNlIGpRdWVyeS5leHRlbmQgaGVyZSB0byBhbGxvdyBtb2RpZmljYXRpb24gb2YgY29vcmRpbmF0ZXMgYXJndW1lbnQgKGdoLTE4NDgpXG5cdFx0XHRvcHRpb25zID0gb3B0aW9ucy5jYWxsKCBlbGVtLCBpLCBqUXVlcnkuZXh0ZW5kKCB7fSwgY3VyT2Zmc2V0ICkgKTtcblx0XHR9XG5cblx0XHRpZiAoIG9wdGlvbnMudG9wICE9IG51bGwgKSB7XG5cdFx0XHRwcm9wcy50b3AgPSAoIG9wdGlvbnMudG9wIC0gY3VyT2Zmc2V0LnRvcCApICsgY3VyVG9wO1xuXHRcdH1cblx0XHRpZiAoIG9wdGlvbnMubGVmdCAhPSBudWxsICkge1xuXHRcdFx0cHJvcHMubGVmdCA9ICggb3B0aW9ucy5sZWZ0IC0gY3VyT2Zmc2V0LmxlZnQgKSArIGN1ckxlZnQ7XG5cdFx0fVxuXG5cdFx0aWYgKCBcInVzaW5nXCIgaW4gb3B0aW9ucyApIHtcblx0XHRcdG9wdGlvbnMudXNpbmcuY2FsbCggZWxlbSwgcHJvcHMgKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRjdXJFbGVtLmNzcyggcHJvcHMgKTtcblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHQvLyBvZmZzZXQoKSByZWxhdGVzIGFuIGVsZW1lbnQncyBib3JkZXIgYm94IHRvIHRoZSBkb2N1bWVudCBvcmlnaW5cblx0b2Zmc2V0OiBmdW5jdGlvbiggb3B0aW9ucyApIHtcblxuXHRcdC8vIFByZXNlcnZlIGNoYWluaW5nIGZvciBzZXR0ZXJcblx0XHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4gb3B0aW9ucyA9PT0gdW5kZWZpbmVkID9cblx0XHRcdFx0dGhpcyA6XG5cdFx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5Lm9mZnNldC5zZXRPZmZzZXQoIHRoaXMsIG9wdGlvbnMsIGkgKTtcblx0XHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHZhciByZWN0LCB3aW4sXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xuXG5cdFx0aWYgKCAhZWxlbSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4gemVyb3MgZm9yIGRpc2Nvbm5lY3RlZCBhbmQgaGlkZGVuIChkaXNwbGF5OiBub25lKSBlbGVtZW50cyAoZ2gtMjMxMClcblx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0XHQvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBvbiBhXG5cdFx0Ly8gZGlzY29ubmVjdGVkIG5vZGUgaW4gSUUgdGhyb3dzIGFuIGVycm9yXG5cdFx0aWYgKCAhZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiB7IHRvcDogMCwgbGVmdDogMCB9O1xuXHRcdH1cblxuXHRcdC8vIEdldCBkb2N1bWVudC1yZWxhdGl2ZSBwb3NpdGlvbiBieSBhZGRpbmcgdmlld3BvcnQgc2Nyb2xsIHRvIHZpZXdwb3J0LXJlbGF0aXZlIGdCQ1Jcblx0XHRyZWN0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblx0XHR3aW4gPSBlbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHRvcDogcmVjdC50b3AgKyB3aW4ucGFnZVlPZmZzZXQsXG5cdFx0XHRsZWZ0OiByZWN0LmxlZnQgKyB3aW4ucGFnZVhPZmZzZXRcblx0XHR9O1xuXHR9LFxuXG5cdC8vIHBvc2l0aW9uKCkgcmVsYXRlcyBhbiBlbGVtZW50J3MgbWFyZ2luIGJveCB0byBpdHMgb2Zmc2V0IHBhcmVudCdzIHBhZGRpbmcgYm94XG5cdC8vIFRoaXMgY29ycmVzcG9uZHMgdG8gdGhlIGJlaGF2aW9yIG9mIENTUyBhYnNvbHV0ZSBwb3NpdGlvbmluZ1xuXHRwb3NpdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCAhdGhpc1sgMCBdICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhciBvZmZzZXRQYXJlbnQsIG9mZnNldCwgZG9jLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcblx0XHRcdHBhcmVudE9mZnNldCA9IHsgdG9wOiAwLCBsZWZ0OiAwIH07XG5cblx0XHQvLyBwb3NpdGlvbjpmaXhlZCBlbGVtZW50cyBhcmUgb2Zmc2V0IGZyb20gdGhlIHZpZXdwb3J0LCB3aGljaCBpdHNlbGYgYWx3YXlzIGhhcyB6ZXJvIG9mZnNldFxuXHRcdGlmICggalF1ZXJ5LmNzcyggZWxlbSwgXCJwb3NpdGlvblwiICkgPT09IFwiZml4ZWRcIiApIHtcblxuXHRcdFx0Ly8gQXNzdW1lIHBvc2l0aW9uOmZpeGVkIGltcGxpZXMgYXZhaWxhYmlsaXR5IG9mIGdldEJvdW5kaW5nQ2xpZW50UmVjdFxuXHRcdFx0b2Zmc2V0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRvZmZzZXQgPSB0aGlzLm9mZnNldCgpO1xuXG5cdFx0XHQvLyBBY2NvdW50IGZvciB0aGUgKnJlYWwqIG9mZnNldCBwYXJlbnQsIHdoaWNoIGNhbiBiZSB0aGUgZG9jdW1lbnQgb3IgaXRzIHJvb3QgZWxlbWVudFxuXHRcdFx0Ly8gd2hlbiBhIHN0YXRpY2FsbHkgcG9zaXRpb25lZCBlbGVtZW50IGlzIGlkZW50aWZpZWRcblx0XHRcdGRvYyA9IGVsZW0ub3duZXJEb2N1bWVudDtcblx0XHRcdG9mZnNldFBhcmVudCA9IGVsZW0ub2Zmc2V0UGFyZW50IHx8IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG5cdFx0XHR3aGlsZSAoIG9mZnNldFBhcmVudCAmJlxuXHRcdFx0XHQoIG9mZnNldFBhcmVudCA9PT0gZG9jLmJvZHkgfHwgb2Zmc2V0UGFyZW50ID09PSBkb2MuZG9jdW1lbnRFbGVtZW50ICkgJiZcblx0XHRcdFx0alF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcInBvc2l0aW9uXCIgKSA9PT0gXCJzdGF0aWNcIiApIHtcblxuXHRcdFx0XHRvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQucGFyZW50Tm9kZTtcblx0XHRcdH1cblx0XHRcdGlmICggb2Zmc2V0UGFyZW50ICYmIG9mZnNldFBhcmVudCAhPT0gZWxlbSAmJiBvZmZzZXRQYXJlbnQubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHRcdFx0Ly8gSW5jb3Jwb3JhdGUgYm9yZGVycyBpbnRvIGl0cyBvZmZzZXQsIHNpbmNlIHRoZXkgYXJlIG91dHNpZGUgaXRzIGNvbnRlbnQgb3JpZ2luXG5cdFx0XHRcdHBhcmVudE9mZnNldCA9IGpRdWVyeSggb2Zmc2V0UGFyZW50ICkub2Zmc2V0KCk7XG5cdFx0XHRcdHBhcmVudE9mZnNldC50b3AgKz0galF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcImJvcmRlclRvcFdpZHRoXCIsIHRydWUgKTtcblx0XHRcdFx0cGFyZW50T2Zmc2V0LmxlZnQgKz0galF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcImJvcmRlckxlZnRXaWR0aFwiLCB0cnVlICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gU3VidHJhY3QgcGFyZW50IG9mZnNldHMgYW5kIGVsZW1lbnQgbWFyZ2luc1xuXHRcdHJldHVybiB7XG5cdFx0XHR0b3A6IG9mZnNldC50b3AgLSBwYXJlbnRPZmZzZXQudG9wIC0galF1ZXJ5LmNzcyggZWxlbSwgXCJtYXJnaW5Ub3BcIiwgdHJ1ZSApLFxuXHRcdFx0bGVmdDogb2Zmc2V0LmxlZnQgLSBwYXJlbnRPZmZzZXQubGVmdCAtIGpRdWVyeS5jc3MoIGVsZW0sIFwibWFyZ2luTGVmdFwiLCB0cnVlIClcblx0XHR9O1xuXHR9LFxuXG5cdC8vIFRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuIGRvY3VtZW50RWxlbWVudCBpbiB0aGUgZm9sbG93aW5nIGNhc2VzOlxuXHQvLyAxKSBGb3IgdGhlIGVsZW1lbnQgaW5zaWRlIHRoZSBpZnJhbWUgd2l0aG91dCBvZmZzZXRQYXJlbnQsIHRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuXG5cdC8vICAgIGRvY3VtZW50RWxlbWVudCBvZiB0aGUgcGFyZW50IHdpbmRvd1xuXHQvLyAyKSBGb3IgdGhlIGhpZGRlbiBvciBkZXRhY2hlZCBlbGVtZW50XG5cdC8vIDMpIEZvciBib2R5IG9yIGh0bWwgZWxlbWVudCwgaS5lLiBpbiBjYXNlIG9mIHRoZSBodG1sIG5vZGUgLSBpdCB3aWxsIHJldHVybiBpdHNlbGZcblx0Ly9cblx0Ly8gYnV0IHRob3NlIGV4Y2VwdGlvbnMgd2VyZSBuZXZlciBwcmVzZW50ZWQgYXMgYSByZWFsIGxpZmUgdXNlLWNhc2VzXG5cdC8vIGFuZCBtaWdodCBiZSBjb25zaWRlcmVkIGFzIG1vcmUgcHJlZmVyYWJsZSByZXN1bHRzLlxuXHQvL1xuXHQvLyBUaGlzIGxvZ2ljLCBob3dldmVyLCBpcyBub3QgZ3VhcmFudGVlZCBhbmQgY2FuIGNoYW5nZSBhdCBhbnkgcG9pbnQgaW4gdGhlIGZ1dHVyZVxuXHRvZmZzZXRQYXJlbnQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgb2Zmc2V0UGFyZW50ID0gdGhpcy5vZmZzZXRQYXJlbnQ7XG5cblx0XHRcdHdoaWxlICggb2Zmc2V0UGFyZW50ICYmIGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJwb3NpdGlvblwiICkgPT09IFwic3RhdGljXCIgKSB7XG5cdFx0XHRcdG9mZnNldFBhcmVudCA9IG9mZnNldFBhcmVudC5vZmZzZXRQYXJlbnQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBvZmZzZXRQYXJlbnQgfHwgZG9jdW1lbnRFbGVtZW50O1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG4vLyBDcmVhdGUgc2Nyb2xsTGVmdCBhbmQgc2Nyb2xsVG9wIG1ldGhvZHNcbmpRdWVyeS5lYWNoKCB7IHNjcm9sbExlZnQ6IFwicGFnZVhPZmZzZXRcIiwgc2Nyb2xsVG9wOiBcInBhZ2VZT2Zmc2V0XCIgfSwgZnVuY3Rpb24oIG1ldGhvZCwgcHJvcCApIHtcblx0dmFyIHRvcCA9IFwicGFnZVlPZmZzZXRcIiA9PT0gcHJvcDtcblxuXHRqUXVlcnkuZm5bIG1ldGhvZCBdID0gZnVuY3Rpb24oIHZhbCApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgbWV0aG9kLCB2YWwgKSB7XG5cblx0XHRcdC8vIENvYWxlc2NlIGRvY3VtZW50cyBhbmQgd2luZG93c1xuXHRcdFx0dmFyIHdpbjtcblx0XHRcdGlmICggaXNXaW5kb3coIGVsZW0gKSApIHtcblx0XHRcdFx0d2luID0gZWxlbTtcblx0XHRcdH0gZWxzZSBpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdHdpbiA9IGVsZW0uZGVmYXVsdFZpZXc7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggdmFsID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHJldHVybiB3aW4gPyB3aW5bIHByb3AgXSA6IGVsZW1bIG1ldGhvZCBdO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHdpbiApIHtcblx0XHRcdFx0d2luLnNjcm9sbFRvKFxuXHRcdFx0XHRcdCF0b3AgPyB2YWwgOiB3aW4ucGFnZVhPZmZzZXQsXG5cdFx0XHRcdFx0dG9wID8gdmFsIDogd2luLnBhZ2VZT2Zmc2V0XG5cdFx0XHRcdCk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGVsZW1bIG1ldGhvZCBdID0gdmFsO1xuXHRcdFx0fVxuXHRcdH0sIG1ldGhvZCwgdmFsLCBhcmd1bWVudHMubGVuZ3RoICk7XG5cdH07XG59ICk7XG5cbi8vIFN1cHBvcnQ6IFNhZmFyaSA8PTcgLSA5LjEsIENocm9tZSA8PTM3IC0gNDlcbi8vIEFkZCB0aGUgdG9wL2xlZnQgY3NzSG9va3MgdXNpbmcgalF1ZXJ5LmZuLnBvc2l0aW9uXG4vLyBXZWJraXQgYnVnOiBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjkwODRcbi8vIEJsaW5rIGJ1ZzogaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NTg5MzQ3XG4vLyBnZXRDb21wdXRlZFN0eWxlIHJldHVybnMgcGVyY2VudCB3aGVuIHNwZWNpZmllZCBmb3IgdG9wL2xlZnQvYm90dG9tL3JpZ2h0O1xuLy8gcmF0aGVyIHRoYW4gbWFrZSB0aGUgY3NzIG1vZHVsZSBkZXBlbmQgb24gdGhlIG9mZnNldCBtb2R1bGUsIGp1c3QgY2hlY2sgZm9yIGl0IGhlcmVcbmpRdWVyeS5lYWNoKCBbIFwidG9wXCIsIFwibGVmdFwiIF0sIGZ1bmN0aW9uKCBfaSwgcHJvcCApIHtcblx0alF1ZXJ5LmNzc0hvb2tzWyBwcm9wIF0gPSBhZGRHZXRIb29rSWYoIHN1cHBvcnQucGl4ZWxQb3NpdGlvbixcblx0XHRmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7XG5cdFx0XHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdFx0XHRjb21wdXRlZCA9IGN1ckNTUyggZWxlbSwgcHJvcCApO1xuXG5cdFx0XHRcdC8vIElmIGN1ckNTUyByZXR1cm5zIHBlcmNlbnRhZ2UsIGZhbGxiYWNrIHRvIG9mZnNldFxuXHRcdFx0XHRyZXR1cm4gcm51bW5vbnB4LnRlc3QoIGNvbXB1dGVkICkgP1xuXHRcdFx0XHRcdGpRdWVyeSggZWxlbSApLnBvc2l0aW9uKClbIHByb3AgXSArIFwicHhcIiA6XG5cdFx0XHRcdFx0Y29tcHV0ZWQ7XG5cdFx0XHR9XG5cdFx0fVxuXHQpO1xufSApO1xuXG5cbi8vIENyZWF0ZSBpbm5lckhlaWdodCwgaW5uZXJXaWR0aCwgaGVpZ2h0LCB3aWR0aCwgb3V0ZXJIZWlnaHQgYW5kIG91dGVyV2lkdGggbWV0aG9kc1xualF1ZXJ5LmVhY2goIHsgSGVpZ2h0OiBcImhlaWdodFwiLCBXaWR0aDogXCJ3aWR0aFwiIH0sIGZ1bmN0aW9uKCBuYW1lLCB0eXBlICkge1xuXHRqUXVlcnkuZWFjaCgge1xuXHRcdHBhZGRpbmc6IFwiaW5uZXJcIiArIG5hbWUsXG5cdFx0Y29udGVudDogdHlwZSxcblx0XHRcIlwiOiBcIm91dGVyXCIgKyBuYW1lXG5cdH0sIGZ1bmN0aW9uKCBkZWZhdWx0RXh0cmEsIGZ1bmNOYW1lICkge1xuXG5cdFx0Ly8gTWFyZ2luIGlzIG9ubHkgZm9yIG91dGVySGVpZ2h0LCBvdXRlcldpZHRoXG5cdFx0alF1ZXJ5LmZuWyBmdW5jTmFtZSBdID0gZnVuY3Rpb24oIG1hcmdpbiwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgY2hhaW5hYmxlID0gYXJndW1lbnRzLmxlbmd0aCAmJiAoIGRlZmF1bHRFeHRyYSB8fCB0eXBlb2YgbWFyZ2luICE9PSBcImJvb2xlYW5cIiApLFxuXHRcdFx0XHRleHRyYSA9IGRlZmF1bHRFeHRyYSB8fCAoIG1hcmdpbiA9PT0gdHJ1ZSB8fCB2YWx1ZSA9PT0gdHJ1ZSA/IFwibWFyZ2luXCIgOiBcImJvcmRlclwiICk7XG5cblx0XHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCB2YWx1ZSApIHtcblx0XHRcdFx0dmFyIGRvYztcblxuXHRcdFx0XHRpZiAoIGlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdFx0XHQvLyAkKCB3aW5kb3cgKS5vdXRlcldpZHRoL0hlaWdodCByZXR1cm4gdy9oIGluY2x1ZGluZyBzY3JvbGxiYXJzIChnaC0xNzI5KVxuXHRcdFx0XHRcdHJldHVybiBmdW5jTmFtZS5pbmRleE9mKCBcIm91dGVyXCIgKSA9PT0gMCA/XG5cdFx0XHRcdFx0XHRlbGVtWyBcImlubmVyXCIgKyBuYW1lIF0gOlxuXHRcdFx0XHRcdFx0ZWxlbS5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbIFwiY2xpZW50XCIgKyBuYW1lIF07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBHZXQgZG9jdW1lbnQgd2lkdGggb3IgaGVpZ2h0XG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0XHRkb2MgPSBlbGVtLmRvY3VtZW50RWxlbWVudDtcblxuXHRcdFx0XHRcdC8vIEVpdGhlciBzY3JvbGxbV2lkdGgvSGVpZ2h0XSBvciBvZmZzZXRbV2lkdGgvSGVpZ2h0XSBvciBjbGllbnRbV2lkdGgvSGVpZ2h0XSxcblx0XHRcdFx0XHQvLyB3aGljaGV2ZXIgaXMgZ3JlYXRlc3Rcblx0XHRcdFx0XHRyZXR1cm4gTWF0aC5tYXgoXG5cdFx0XHRcdFx0XHRlbGVtLmJvZHlbIFwic2Nyb2xsXCIgKyBuYW1lIF0sIGRvY1sgXCJzY3JvbGxcIiArIG5hbWUgXSxcblx0XHRcdFx0XHRcdGVsZW0uYm9keVsgXCJvZmZzZXRcIiArIG5hbWUgXSwgZG9jWyBcIm9mZnNldFwiICsgbmFtZSBdLFxuXHRcdFx0XHRcdFx0ZG9jWyBcImNsaWVudFwiICsgbmFtZSBdXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkID9cblxuXHRcdFx0XHRcdC8vIEdldCB3aWR0aCBvciBoZWlnaHQgb24gdGhlIGVsZW1lbnQsIHJlcXVlc3RpbmcgYnV0IG5vdCBmb3JjaW5nIHBhcnNlRmxvYXRcblx0XHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCB0eXBlLCBleHRyYSApIDpcblxuXHRcdFx0XHRcdC8vIFNldCB3aWR0aCBvciBoZWlnaHQgb24gdGhlIGVsZW1lbnRcblx0XHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHR5cGUsIHZhbHVlLCBleHRyYSApO1xuXHRcdFx0fSwgdHlwZSwgY2hhaW5hYmxlID8gbWFyZ2luIDogdW5kZWZpbmVkLCBjaGFpbmFibGUgKTtcblx0XHR9O1xuXHR9ICk7XG59ICk7XG5cblxualF1ZXJ5LmVhY2goIFtcblx0XCJhamF4U3RhcnRcIixcblx0XCJhamF4U3RvcFwiLFxuXHRcImFqYXhDb21wbGV0ZVwiLFxuXHRcImFqYXhFcnJvclwiLFxuXHRcImFqYXhTdWNjZXNzXCIsXG5cdFwiYWpheFNlbmRcIlxuXSwgZnVuY3Rpb24oIF9pLCB0eXBlICkge1xuXHRqUXVlcnkuZm5bIHR5cGUgXSA9IGZ1bmN0aW9uKCBmbiApIHtcblx0XHRyZXR1cm4gdGhpcy5vbiggdHlwZSwgZm4gKTtcblx0fTtcbn0gKTtcblxuXG5cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXG5cdGJpbmQ6IGZ1bmN0aW9uKCB0eXBlcywgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGVzLCBudWxsLCBkYXRhLCBmbiApO1xuXHR9LFxuXHR1bmJpbmQ6IGZ1bmN0aW9uKCB0eXBlcywgZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub2ZmKCB0eXBlcywgbnVsbCwgZm4gKTtcblx0fSxcblxuXHRkZWxlZ2F0ZTogZnVuY3Rpb24oIHNlbGVjdG9yLCB0eXBlcywgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKTtcblx0fSxcblx0dW5kZWxlZ2F0ZTogZnVuY3Rpb24oIHNlbGVjdG9yLCB0eXBlcywgZm4gKSB7XG5cblx0XHQvLyAoIG5hbWVzcGFjZSApIG9yICggc2VsZWN0b3IsIHR5cGVzIFssIGZuXSApXG5cdFx0cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgP1xuXHRcdFx0dGhpcy5vZmYoIHNlbGVjdG9yLCBcIioqXCIgKSA6XG5cdFx0XHR0aGlzLm9mZiggdHlwZXMsIHNlbGVjdG9yIHx8IFwiKipcIiwgZm4gKTtcblx0fSxcblxuXHRob3ZlcjogZnVuY3Rpb24oIGZuT3ZlciwgZm5PdXQgKSB7XG5cdFx0cmV0dXJuIHRoaXMubW91c2VlbnRlciggZm5PdmVyICkubW91c2VsZWF2ZSggZm5PdXQgfHwgZm5PdmVyICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goXG5cdCggXCJibHVyIGZvY3VzIGZvY3VzaW4gZm9jdXNvdXQgcmVzaXplIHNjcm9sbCBjbGljayBkYmxjbGljayBcIiArXG5cdFwibW91c2Vkb3duIG1vdXNldXAgbW91c2Vtb3ZlIG1vdXNlb3ZlciBtb3VzZW91dCBtb3VzZWVudGVyIG1vdXNlbGVhdmUgXCIgK1xuXHRcImNoYW5nZSBzZWxlY3Qgc3VibWl0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgY29udGV4dG1lbnVcIiApLnNwbGl0KCBcIiBcIiApLFxuXHRmdW5jdGlvbiggX2ksIG5hbWUgKSB7XG5cblx0XHQvLyBIYW5kbGUgZXZlbnQgYmluZGluZ1xuXHRcdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIGRhdGEsIGZuICkge1xuXHRcdFx0cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAwID9cblx0XHRcdFx0dGhpcy5vbiggbmFtZSwgbnVsbCwgZGF0YSwgZm4gKSA6XG5cdFx0XHRcdHRoaXMudHJpZ2dlciggbmFtZSApO1xuXHRcdH07XG5cdH1cbik7XG5cblxuXG5cbi8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seVxuLy8gTWFrZSBzdXJlIHdlIHRyaW0gQk9NIGFuZCBOQlNQXG4vLyBSZXF1aXJlIHRoYXQgdGhlIFwid2hpdGVzcGFjZSBydW5cIiBzdGFydHMgZnJvbSBhIG5vbi13aGl0ZXNwYWNlXG4vLyB0byBhdm9pZCBPKE5eMikgYmVoYXZpb3Igd2hlbiB0aGUgZW5naW5lIHdvdWxkIHRyeSBtYXRjaGluZyBcIlxccyskXCIgYXQgZWFjaCBzcGFjZSBwb3NpdGlvbi5cbnZhciBydHJpbSA9IC9eW1xcc1xcdUZFRkZcXHhBMF0rfChbXlxcc1xcdUZFRkZcXHhBMF0pW1xcc1xcdUZFRkZcXHhBMF0rJC9nO1xuXG4vLyBCaW5kIGEgZnVuY3Rpb24gdG8gYSBjb250ZXh0LCBvcHRpb25hbGx5IHBhcnRpYWxseSBhcHBseWluZyBhbnlcbi8vIGFyZ3VtZW50cy5cbi8vIGpRdWVyeS5wcm94eSBpcyBkZXByZWNhdGVkIHRvIHByb21vdGUgc3RhbmRhcmRzIChzcGVjaWZpY2FsbHkgRnVuY3Rpb24jYmluZClcbi8vIEhvd2V2ZXIsIGl0IGlzIG5vdCBzbGF0ZWQgZm9yIHJlbW92YWwgYW55IHRpbWUgc29vblxualF1ZXJ5LnByb3h5ID0gZnVuY3Rpb24oIGZuLCBjb250ZXh0ICkge1xuXHR2YXIgdG1wLCBhcmdzLCBwcm94eTtcblxuXHRpZiAoIHR5cGVvZiBjb250ZXh0ID09PSBcInN0cmluZ1wiICkge1xuXHRcdHRtcCA9IGZuWyBjb250ZXh0IF07XG5cdFx0Y29udGV4dCA9IGZuO1xuXHRcdGZuID0gdG1wO1xuXHR9XG5cblx0Ly8gUXVpY2sgY2hlY2sgdG8gZGV0ZXJtaW5lIGlmIHRhcmdldCBpcyBjYWxsYWJsZSwgaW4gdGhlIHNwZWNcblx0Ly8gdGhpcyB0aHJvd3MgYSBUeXBlRXJyb3IsIGJ1dCB3ZSB3aWxsIGp1c3QgcmV0dXJuIHVuZGVmaW5lZC5cblx0aWYgKCAhaXNGdW5jdGlvbiggZm4gKSApIHtcblx0XHRyZXR1cm4gdW5kZWZpbmVkO1xuXHR9XG5cblx0Ly8gU2ltdWxhdGVkIGJpbmRcblx0YXJncyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cywgMiApO1xuXHRwcm94eSA9IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBmbi5hcHBseSggY29udGV4dCB8fCB0aGlzLCBhcmdzLmNvbmNhdCggc2xpY2UuY2FsbCggYXJndW1lbnRzICkgKSApO1xuXHR9O1xuXG5cdC8vIFNldCB0aGUgZ3VpZCBvZiB1bmlxdWUgaGFuZGxlciB0byB0aGUgc2FtZSBvZiBvcmlnaW5hbCBoYW5kbGVyLCBzbyBpdCBjYW4gYmUgcmVtb3ZlZFxuXHRwcm94eS5ndWlkID0gZm4uZ3VpZCA9IGZuLmd1aWQgfHwgalF1ZXJ5Lmd1aWQrKztcblxuXHRyZXR1cm4gcHJveHk7XG59O1xuXG5qUXVlcnkuaG9sZFJlYWR5ID0gZnVuY3Rpb24oIGhvbGQgKSB7XG5cdGlmICggaG9sZCApIHtcblx0XHRqUXVlcnkucmVhZHlXYWl0Kys7XG5cdH0gZWxzZSB7XG5cdFx0alF1ZXJ5LnJlYWR5KCB0cnVlICk7XG5cdH1cbn07XG5qUXVlcnkuaXNBcnJheSA9IEFycmF5LmlzQXJyYXk7XG5qUXVlcnkucGFyc2VKU09OID0gSlNPTi5wYXJzZTtcbmpRdWVyeS5ub2RlTmFtZSA9IG5vZGVOYW1lO1xualF1ZXJ5LmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xualF1ZXJ5LmlzV2luZG93ID0gaXNXaW5kb3c7XG5qUXVlcnkuY2FtZWxDYXNlID0gY2FtZWxDYXNlO1xualF1ZXJ5LnR5cGUgPSB0b1R5cGU7XG5cbmpRdWVyeS5ub3cgPSBEYXRlLm5vdztcblxualF1ZXJ5LmlzTnVtZXJpYyA9IGZ1bmN0aW9uKCBvYmogKSB7XG5cblx0Ly8gQXMgb2YgalF1ZXJ5IDMuMCwgaXNOdW1lcmljIGlzIGxpbWl0ZWQgdG9cblx0Ly8gc3RyaW5ncyBhbmQgbnVtYmVycyAocHJpbWl0aXZlcyBvciBvYmplY3RzKVxuXHQvLyB0aGF0IGNhbiBiZSBjb2VyY2VkIHRvIGZpbml0ZSBudW1iZXJzIChnaC0yNjYyKVxuXHR2YXIgdHlwZSA9IGpRdWVyeS50eXBlKCBvYmogKTtcblx0cmV0dXJuICggdHlwZSA9PT0gXCJudW1iZXJcIiB8fCB0eXBlID09PSBcInN0cmluZ1wiICkgJiZcblxuXHRcdC8vIHBhcnNlRmxvYXQgTmFOcyBudW1lcmljLWNhc3QgZmFsc2UgcG9zaXRpdmVzIChcIlwiKVxuXHRcdC8vIC4uLmJ1dCBtaXNpbnRlcnByZXRzIGxlYWRpbmctbnVtYmVyIHN0cmluZ3MsIHBhcnRpY3VsYXJseSBoZXggbGl0ZXJhbHMgKFwiMHguLi5cIilcblx0XHQvLyBzdWJ0cmFjdGlvbiBmb3JjZXMgaW5maW5pdGllcyB0byBOYU5cblx0XHQhaXNOYU4oIG9iaiAtIHBhcnNlRmxvYXQoIG9iaiApICk7XG59O1xuXG5qUXVlcnkudHJpbSA9IGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRyZXR1cm4gdGV4dCA9PSBudWxsID9cblx0XHRcIlwiIDpcblx0XHQoIHRleHQgKyBcIlwiICkucmVwbGFjZSggcnRyaW0sIFwiJDFcIiApO1xufTtcblxuXG5cbi8vIFJlZ2lzdGVyIGFzIGEgbmFtZWQgQU1EIG1vZHVsZSwgc2luY2UgalF1ZXJ5IGNhbiBiZSBjb25jYXRlbmF0ZWQgd2l0aCBvdGhlclxuLy8gZmlsZXMgdGhhdCBtYXkgdXNlIGRlZmluZSwgYnV0IG5vdCB2aWEgYSBwcm9wZXIgY29uY2F0ZW5hdGlvbiBzY3JpcHQgdGhhdFxuLy8gdW5kZXJzdGFuZHMgYW5vbnltb3VzIEFNRCBtb2R1bGVzLiBBIG5hbWVkIEFNRCBpcyBzYWZlc3QgYW5kIG1vc3Qgcm9idXN0XG4vLyB3YXkgdG8gcmVnaXN0ZXIuIExvd2VyY2FzZSBqcXVlcnkgaXMgdXNlZCBiZWNhdXNlIEFNRCBtb2R1bGUgbmFtZXMgYXJlXG4vLyBkZXJpdmVkIGZyb20gZmlsZSBuYW1lcywgYW5kIGpRdWVyeSBpcyBub3JtYWxseSBkZWxpdmVyZWQgaW4gYSBsb3dlcmNhc2Vcbi8vIGZpbGUgbmFtZS4gRG8gdGhpcyBhZnRlciBjcmVhdGluZyB0aGUgZ2xvYmFsIHNvIHRoYXQgaWYgYW4gQU1EIG1vZHVsZSB3YW50c1xuLy8gdG8gY2FsbCBub0NvbmZsaWN0IHRvIGhpZGUgdGhpcyB2ZXJzaW9uIG9mIGpRdWVyeSwgaXQgd2lsbCB3b3JrLlxuXG4vLyBOb3RlIHRoYXQgZm9yIG1heGltdW0gcG9ydGFiaWxpdHksIGxpYnJhcmllcyB0aGF0IGFyZSBub3QgalF1ZXJ5IHNob3VsZFxuLy8gZGVjbGFyZSB0aGVtc2VsdmVzIGFzIGFub255bW91cyBtb2R1bGVzLCBhbmQgYXZvaWQgc2V0dGluZyBhIGdsb2JhbCBpZiBhblxuLy8gQU1EIGxvYWRlciBpcyBwcmVzZW50LiBqUXVlcnkgaXMgYSBzcGVjaWFsIGNhc2UuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWVcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9qcmJ1cmtlL3JlcXVpcmVqcy93aWtpL1VwZGF0aW5nLWV4aXN0aW5nLWxpYnJhcmllcyN3aWtpLWFub25cblxuaWYgKCB0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCApIHtcblx0ZGVmaW5lKCBcImpxdWVyeVwiLCBbXSwgZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGpRdWVyeTtcblx0fSApO1xufVxuXG5cblxuXG52YXJcblxuXHQvLyBNYXAgb3ZlciBqUXVlcnkgaW4gY2FzZSBvZiBvdmVyd3JpdGVcblx0X2pRdWVyeSA9IHdpbmRvdy5qUXVlcnksXG5cblx0Ly8gTWFwIG92ZXIgdGhlICQgaW4gY2FzZSBvZiBvdmVyd3JpdGVcblx0XyQgPSB3aW5kb3cuJDtcblxualF1ZXJ5Lm5vQ29uZmxpY3QgPSBmdW5jdGlvbiggZGVlcCApIHtcblx0aWYgKCB3aW5kb3cuJCA9PT0galF1ZXJ5ICkge1xuXHRcdHdpbmRvdy4kID0gXyQ7XG5cdH1cblxuXHRpZiAoIGRlZXAgJiYgd2luZG93LmpRdWVyeSA9PT0galF1ZXJ5ICkge1xuXHRcdHdpbmRvdy5qUXVlcnkgPSBfalF1ZXJ5O1xuXHR9XG5cblx0cmV0dXJuIGpRdWVyeTtcbn07XG5cbi8vIEV4cG9zZSBqUXVlcnkgYW5kICQgaWRlbnRpZmllcnMsIGV2ZW4gaW4gQU1EXG4vLyAodHJhYy03MTAyI2NvbW1lbnQ6MTAsIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5L3B1bGwvNTU3KVxuLy8gYW5kIENvbW1vbkpTIGZvciBicm93c2VyIGVtdWxhdG9ycyAodHJhYy0xMzU2NilcbmlmICggdHlwZW9mIG5vR2xvYmFsID09PSBcInVuZGVmaW5lZFwiICkge1xuXHR3aW5kb3cualF1ZXJ5ID0gd2luZG93LiQgPSBqUXVlcnk7XG59XG5cblxuXG5cbnJldHVybiBqUXVlcnk7XG59ICk7XG4iLCIvKiEgU2VsZWN0MiA0LjAuNyB8IGh0dHBzOi8vZ2l0aHViLmNvbS9zZWxlY3QyL3NlbGVjdDIvYmxvYi9tYXN0ZXIvTElDRU5TRS5tZCAqL1xuIWZ1bmN0aW9uKG4pe1wiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW1wianF1ZXJ5XCJdLG4pOlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/cmVxdWlyZShcImpxdWVyeVwiKTpyZXF1aXJlKFwianF1ZXJ5XCIpKGUpKSxuKHQpLHR9Om4oalF1ZXJ5KX0oZnVuY3Rpb24oZCl7dmFyIGU9ZnVuY3Rpb24oKXtpZihkJiZkLmZuJiZkLmZuLnNlbGVjdDImJmQuZm4uc2VsZWN0Mi5hbWQpdmFyIGU9ZC5mbi5zZWxlY3QyLmFtZDt2YXIgdCxuLGksaCxvLHMsZixnLG0sdix5LF8scixhLHcsbDtmdW5jdGlvbiBiKGUsdCl7cmV0dXJuIHIuY2FsbChlLHQpfWZ1bmN0aW9uIGMoZSx0KXt2YXIgbixpLHIsbyxzLGEsbCxjLHUsZCxwLGg9dCYmdC5zcGxpdChcIi9cIiksZj15Lm1hcCxnPWYmJmZbXCIqXCJdfHx7fTtpZihlKXtmb3Iocz0oZT1lLnNwbGl0KFwiL1wiKSkubGVuZ3RoLTEseS5ub2RlSWRDb21wYXQmJncudGVzdChlW3NdKSYmKGVbc109ZVtzXS5yZXBsYWNlKHcsXCJcIikpLFwiLlwiPT09ZVswXS5jaGFyQXQoMCkmJmgmJihlPWguc2xpY2UoMCxoLmxlbmd0aC0xKS5jb25jYXQoZSkpLHU9MDt1PGUubGVuZ3RoO3UrKylpZihcIi5cIj09PShwPWVbdV0pKWUuc3BsaWNlKHUsMSksdS09MTtlbHNlIGlmKFwiLi5cIj09PXApe2lmKDA9PT11fHwxPT09dSYmXCIuLlwiPT09ZVsyXXx8XCIuLlwiPT09ZVt1LTFdKWNvbnRpbnVlOzA8dSYmKGUuc3BsaWNlKHUtMSwyKSx1LT0yKX1lPWUuam9pbihcIi9cIil9aWYoKGh8fGcpJiZmKXtmb3IodT0obj1lLnNwbGl0KFwiL1wiKSkubGVuZ3RoOzA8dTt1LT0xKXtpZihpPW4uc2xpY2UoMCx1KS5qb2luKFwiL1wiKSxoKWZvcihkPWgubGVuZ3RoOzA8ZDtkLT0xKWlmKHI9KHI9ZltoLnNsaWNlKDAsZCkuam9pbihcIi9cIildKSYmcltpXSl7bz1yLGE9dTticmVha31pZihvKWJyZWFrOyFsJiZnJiZnW2ldJiYobD1nW2ldLGM9dSl9IW8mJmwmJihvPWwsYT1jKSxvJiYobi5zcGxpY2UoMCxhLG8pLGU9bi5qb2luKFwiL1wiKSl9cmV0dXJuIGV9ZnVuY3Rpb24gQSh0LG4pe3JldHVybiBmdW5jdGlvbigpe3ZhciBlPWEuY2FsbChhcmd1bWVudHMsMCk7cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIGVbMF0mJjE9PT1lLmxlbmd0aCYmZS5wdXNoKG51bGwpLHMuYXBwbHkoaCxlLmNvbmNhdChbdCxuXSkpfX1mdW5jdGlvbiB4KHQpe3JldHVybiBmdW5jdGlvbihlKXttW3RdPWV9fWZ1bmN0aW9uIFMoZSl7aWYoYih2LGUpKXt2YXIgdD12W2VdO2RlbGV0ZSB2W2VdLF9bZV09ITAsby5hcHBseShoLHQpfWlmKCFiKG0sZSkmJiFiKF8sZSkpdGhyb3cgbmV3IEVycm9yKFwiTm8gXCIrZSk7cmV0dXJuIG1bZV19ZnVuY3Rpb24gdShlKXt2YXIgdCxuPWU/ZS5pbmRleE9mKFwiIVwiKTotMTtyZXR1cm4tMTxuJiYodD1lLnN1YnN0cmluZygwLG4pLGU9ZS5zdWJzdHJpbmcobisxLGUubGVuZ3RoKSksW3QsZV19ZnVuY3Rpb24gRChlKXtyZXR1cm4gZT91KGUpOltdfXJldHVybiBlJiZlLnJlcXVpcmVqc3x8KGU/bj1lOmU9e30sbT17fSx2PXt9LHk9e30sXz17fSxyPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksYT1bXS5zbGljZSx3PS9cXC5qcyQvLGY9ZnVuY3Rpb24oZSx0KXt2YXIgbixpPXUoZSkscj1pWzBdLG89dFsxXTtyZXR1cm4gZT1pWzFdLHImJihuPVMocj1jKHIsbykpKSxyP2U9biYmbi5ub3JtYWxpemU/bi5ub3JtYWxpemUoZSxmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIGMoZSx0KX19KG8pKTpjKGUsbyk6KHI9KGk9dShlPWMoZSxvKSkpWzBdLGU9aVsxXSxyJiYobj1TKHIpKSkse2Y6cj9yK1wiIVwiK2U6ZSxuOmUscHI6cixwOm59fSxnPXtyZXF1aXJlOmZ1bmN0aW9uKGUpe3JldHVybiBBKGUpfSxleHBvcnRzOmZ1bmN0aW9uKGUpe3ZhciB0PW1bZV07cmV0dXJuIHZvaWQgMCE9PXQ/dDptW2VdPXt9fSxtb2R1bGU6ZnVuY3Rpb24oZSl7cmV0dXJue2lkOmUsdXJpOlwiXCIsZXhwb3J0czptW2VdLGNvbmZpZzpmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4geSYmeS5jb25maWcmJnkuY29uZmlnW2VdfHx7fX19KGUpfX19LG89ZnVuY3Rpb24oZSx0LG4saSl7dmFyIHIsbyxzLGEsbCxjLHUsZD1bXSxwPXR5cGVvZiBuO2lmKGM9RChpPWl8fGUpLFwidW5kZWZpbmVkXCI9PXB8fFwiZnVuY3Rpb25cIj09cCl7Zm9yKHQ9IXQubGVuZ3RoJiZuLmxlbmd0aD9bXCJyZXF1aXJlXCIsXCJleHBvcnRzXCIsXCJtb2R1bGVcIl06dCxsPTA7bDx0Lmxlbmd0aDtsKz0xKWlmKFwicmVxdWlyZVwiPT09KG89KGE9Zih0W2xdLGMpKS5mKSlkW2xdPWcucmVxdWlyZShlKTtlbHNlIGlmKFwiZXhwb3J0c1wiPT09bylkW2xdPWcuZXhwb3J0cyhlKSx1PSEwO2Vsc2UgaWYoXCJtb2R1bGVcIj09PW8pcj1kW2xdPWcubW9kdWxlKGUpO2Vsc2UgaWYoYihtLG8pfHxiKHYsbyl8fGIoXyxvKSlkW2xdPVMobyk7ZWxzZXtpZighYS5wKXRocm93IG5ldyBFcnJvcihlK1wiIG1pc3NpbmcgXCIrbyk7YS5wLmxvYWQoYS5uLEEoaSwhMCkseChvKSx7fSksZFtsXT1tW29dfXM9bj9uLmFwcGx5KG1bZV0sZCk6dm9pZCAwLGUmJihyJiZyLmV4cG9ydHMhPT1oJiZyLmV4cG9ydHMhPT1tW2VdP21bZV09ci5leHBvcnRzOnM9PT1oJiZ1fHwobVtlXT1zKSl9ZWxzZSBlJiYobVtlXT1uKX0sdD1uPXM9ZnVuY3Rpb24oZSx0LG4saSxyKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gZ1tlXT9nW2VdKHQpOlMoZihlLEQodCkpLmYpO2lmKCFlLnNwbGljZSl7aWYoKHk9ZSkuZGVwcyYmcyh5LmRlcHMseS5jYWxsYmFjayksIXQpcmV0dXJuO3Quc3BsaWNlPyhlPXQsdD1uLG49bnVsbCk6ZT1ofXJldHVybiB0PXR8fGZ1bmN0aW9uKCl7fSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBuJiYobj1pLGk9ciksaT9vKGgsZSx0LG4pOnNldFRpbWVvdXQoZnVuY3Rpb24oKXtvKGgsZSx0LG4pfSw0KSxzfSxzLmNvbmZpZz1mdW5jdGlvbihlKXtyZXR1cm4gcyhlKX0sdC5fZGVmaW5lZD1tLChpPWZ1bmN0aW9uKGUsdCxuKXtpZihcInN0cmluZ1wiIT10eXBlb2YgZSl0aHJvdyBuZXcgRXJyb3IoXCJTZWUgYWxtb25kIFJFQURNRTogaW5jb3JyZWN0IG1vZHVsZSBidWlsZCwgbm8gbW9kdWxlIG5hbWVcIik7dC5zcGxpY2V8fChuPXQsdD1bXSksYihtLGUpfHxiKHYsZSl8fCh2W2VdPVtlLHQsbl0pfSkuYW1kPXtqUXVlcnk6ITB9LGUucmVxdWlyZWpzPXQsZS5yZXF1aXJlPW4sZS5kZWZpbmU9aSksZS5kZWZpbmUoXCJhbG1vbmRcIixmdW5jdGlvbigpe30pLGUuZGVmaW5lKFwianF1ZXJ5XCIsW10sZnVuY3Rpb24oKXt2YXIgZT1kfHwkO3JldHVybiBudWxsPT1lJiZjb25zb2xlJiZjb25zb2xlLmVycm9yJiZjb25zb2xlLmVycm9yKFwiU2VsZWN0MjogQW4gaW5zdGFuY2Ugb2YgalF1ZXJ5IG9yIGEgalF1ZXJ5LWNvbXBhdGlibGUgbGlicmFyeSB3YXMgbm90IGZvdW5kLiBNYWtlIHN1cmUgdGhhdCB5b3UgYXJlIGluY2x1ZGluZyBqUXVlcnkgYmVmb3JlIFNlbGVjdDIgb24geW91ciB3ZWIgcGFnZS5cIiksZX0pLGUuZGVmaW5lKFwic2VsZWN0Mi91dGlsc1wiLFtcImpxdWVyeVwiXSxmdW5jdGlvbihvKXt2YXIgcj17fTtmdW5jdGlvbiB1KGUpe3ZhciB0PWUucHJvdG90eXBlLG49W107Zm9yKHZhciBpIGluIHQpe1wiZnVuY3Rpb25cIj09dHlwZW9mIHRbaV0mJlwiY29uc3RydWN0b3JcIiE9PWkmJm4ucHVzaChpKX1yZXR1cm4gbn1yLkV4dGVuZD1mdW5jdGlvbihlLHQpe3ZhciBuPXt9Lmhhc093blByb3BlcnR5O2Z1bmN0aW9uIGkoKXt0aGlzLmNvbnN0cnVjdG9yPWV9Zm9yKHZhciByIGluIHQpbi5jYWxsKHQscikmJihlW3JdPXRbcl0pO3JldHVybiBpLnByb3RvdHlwZT10LnByb3RvdHlwZSxlLnByb3RvdHlwZT1uZXcgaSxlLl9fc3VwZXJfXz10LnByb3RvdHlwZSxlfSxyLkRlY29yYXRlPWZ1bmN0aW9uKGkscil7dmFyIGU9dShyKSx0PXUoaSk7ZnVuY3Rpb24gbygpe3ZhciBlPUFycmF5LnByb3RvdHlwZS51bnNoaWZ0LHQ9ci5wcm90b3R5cGUuY29uc3RydWN0b3IubGVuZ3RoLG49aS5wcm90b3R5cGUuY29uc3RydWN0b3I7MDx0JiYoZS5jYWxsKGFyZ3VtZW50cyxpLnByb3RvdHlwZS5jb25zdHJ1Y3Rvciksbj1yLnByb3RvdHlwZS5jb25zdHJ1Y3Rvciksbi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ci5kaXNwbGF5TmFtZT1pLmRpc3BsYXlOYW1lLG8ucHJvdG90eXBlPW5ldyBmdW5jdGlvbigpe3RoaXMuY29uc3RydWN0b3I9b307Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciBzPXRbbl07by5wcm90b3R5cGVbc109aS5wcm90b3R5cGVbc119ZnVuY3Rpb24gYShlKXt2YXIgdD1mdW5jdGlvbigpe307ZSBpbiBvLnByb3RvdHlwZSYmKHQ9by5wcm90b3R5cGVbZV0pO3ZhciBuPXIucHJvdG90eXBlW2VdO3JldHVybiBmdW5jdGlvbigpe3JldHVybiBBcnJheS5wcm90b3R5cGUudW5zaGlmdC5jYWxsKGFyZ3VtZW50cyx0KSxuLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19Zm9yKHZhciBsPTA7bDxlLmxlbmd0aDtsKyspe3ZhciBjPWVbbF07by5wcm90b3R5cGVbY109YShjKX1yZXR1cm4gb307ZnVuY3Rpb24gZSgpe3RoaXMubGlzdGVuZXJzPXt9fWUucHJvdG90eXBlLm9uPWZ1bmN0aW9uKGUsdCl7dGhpcy5saXN0ZW5lcnM9dGhpcy5saXN0ZW5lcnN8fHt9LGUgaW4gdGhpcy5saXN0ZW5lcnM/dGhpcy5saXN0ZW5lcnNbZV0ucHVzaCh0KTp0aGlzLmxpc3RlbmVyc1tlXT1bdF19LGUucHJvdG90eXBlLnRyaWdnZXI9ZnVuY3Rpb24oZSl7dmFyIHQ9QXJyYXkucHJvdG90eXBlLnNsaWNlLG49dC5jYWxsKGFyZ3VtZW50cywxKTt0aGlzLmxpc3RlbmVycz10aGlzLmxpc3RlbmVyc3x8e30sbnVsbD09biYmKG49W10pLDA9PT1uLmxlbmd0aCYmbi5wdXNoKHt9KSwoblswXS5fdHlwZT1lKWluIHRoaXMubGlzdGVuZXJzJiZ0aGlzLmludm9rZSh0aGlzLmxpc3RlbmVyc1tlXSx0LmNhbGwoYXJndW1lbnRzLDEpKSxcIipcImluIHRoaXMubGlzdGVuZXJzJiZ0aGlzLmludm9rZSh0aGlzLmxpc3RlbmVyc1tcIipcIl0sYXJndW1lbnRzKX0sZS5wcm90b3R5cGUuaW52b2tlPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPTAsaT1lLmxlbmd0aDtuPGk7bisrKWVbbl0uYXBwbHkodGhpcyx0KX0sci5PYnNlcnZhYmxlPWUsci5nZW5lcmF0ZUNoYXJzPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1cIlwiLG49MDtuPGU7bisrKXt0Kz1NYXRoLmZsb29yKDM2Kk1hdGgucmFuZG9tKCkpLnRvU3RyaW5nKDM2KX1yZXR1cm4gdH0sci5iaW5kPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKCl7ZS5hcHBseSh0LGFyZ3VtZW50cyl9fSxyLl9jb252ZXJ0RGF0YT1mdW5jdGlvbihlKXtmb3IodmFyIHQgaW4gZSl7dmFyIG49dC5zcGxpdChcIi1cIiksaT1lO2lmKDEhPT1uLmxlbmd0aCl7Zm9yKHZhciByPTA7cjxuLmxlbmd0aDtyKyspe3ZhciBvPW5bcl07KG89by5zdWJzdHJpbmcoMCwxKS50b0xvd2VyQ2FzZSgpK28uc3Vic3RyaW5nKDEpKWluIGl8fChpW29dPXt9KSxyPT1uLmxlbmd0aC0xJiYoaVtvXT1lW3RdKSxpPWlbb119ZGVsZXRlIGVbdF19fXJldHVybiBlfSxyLmhhc1Njcm9sbD1mdW5jdGlvbihlLHQpe3ZhciBuPW8odCksaT10LnN0eWxlLm92ZXJmbG93WCxyPXQuc3R5bGUub3ZlcmZsb3dZO3JldHVybihpIT09cnx8XCJoaWRkZW5cIiE9PXImJlwidmlzaWJsZVwiIT09cikmJihcInNjcm9sbFwiPT09aXx8XCJzY3JvbGxcIj09PXJ8fChuLmlubmVySGVpZ2h0KCk8dC5zY3JvbGxIZWlnaHR8fG4uaW5uZXJXaWR0aCgpPHQuc2Nyb2xsV2lkdGgpKX0sci5lc2NhcGVNYXJrdXA9ZnVuY3Rpb24oZSl7dmFyIHQ9e1wiXFxcXFwiOlwiJiM5MjtcIixcIiZcIjpcIiZhbXA7XCIsXCI8XCI6XCImbHQ7XCIsXCI+XCI6XCImZ3Q7XCIsJ1wiJzpcIiZxdW90O1wiLFwiJ1wiOlwiJiMzOTtcIixcIi9cIjpcIiYjNDc7XCJ9O3JldHVyblwic3RyaW5nXCIhPXR5cGVvZiBlP2U6U3RyaW5nKGUpLnJlcGxhY2UoL1smPD5cIidcXC9cXFxcXS9nLGZ1bmN0aW9uKGUpe3JldHVybiB0W2VdfSl9LHIuYXBwZW5kTWFueT1mdW5jdGlvbihlLHQpe2lmKFwiMS43XCI9PT1vLmZuLmpxdWVyeS5zdWJzdHIoMCwzKSl7dmFyIG49bygpO28ubWFwKHQsZnVuY3Rpb24oZSl7bj1uLmFkZChlKX0pLHQ9bn1lLmFwcGVuZCh0KX0sci5fX2NhY2hlPXt9O3ZhciBuPTA7cmV0dXJuIHIuR2V0VW5pcXVlRWxlbWVudElkPWZ1bmN0aW9uKGUpe3ZhciB0PWUuZ2V0QXR0cmlidXRlKFwiZGF0YS1zZWxlY3QyLWlkXCIpO3JldHVybiBudWxsPT10JiYoZS5pZD8odD1lLmlkLGUuc2V0QXR0cmlidXRlKFwiZGF0YS1zZWxlY3QyLWlkXCIsdCkpOihlLnNldEF0dHJpYnV0ZShcImRhdGEtc2VsZWN0Mi1pZFwiLCsrbiksdD1uLnRvU3RyaW5nKCkpKSx0fSxyLlN0b3JlRGF0YT1mdW5jdGlvbihlLHQsbil7dmFyIGk9ci5HZXRVbmlxdWVFbGVtZW50SWQoZSk7ci5fX2NhY2hlW2ldfHwoci5fX2NhY2hlW2ldPXt9KSxyLl9fY2FjaGVbaV1bdF09bn0sci5HZXREYXRhPWZ1bmN0aW9uKGUsdCl7dmFyIG49ci5HZXRVbmlxdWVFbGVtZW50SWQoZSk7cmV0dXJuIHQ/ci5fX2NhY2hlW25dJiZudWxsIT1yLl9fY2FjaGVbbl1bdF0/ci5fX2NhY2hlW25dW3RdOm8oZSkuZGF0YSh0KTpyLl9fY2FjaGVbbl19LHIuUmVtb3ZlRGF0YT1mdW5jdGlvbihlKXt2YXIgdD1yLkdldFVuaXF1ZUVsZW1lbnRJZChlKTtudWxsIT1yLl9fY2FjaGVbdF0mJmRlbGV0ZSByLl9fY2FjaGVbdF19LHJ9KSxlLmRlZmluZShcInNlbGVjdDIvcmVzdWx0c1wiLFtcImpxdWVyeVwiLFwiLi91dGlsc1wiXSxmdW5jdGlvbihwLGgpe2Z1bmN0aW9uIGkoZSx0LG4pe3RoaXMuJGVsZW1lbnQ9ZSx0aGlzLmRhdGE9bix0aGlzLm9wdGlvbnM9dCxpLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpfXJldHVybiBoLkV4dGVuZChpLGguT2JzZXJ2YWJsZSksaS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7dmFyIGU9cCgnPHVsIGNsYXNzPVwic2VsZWN0Mi1yZXN1bHRzX19vcHRpb25zXCIgcm9sZT1cInRyZWVcIj48L3VsPicpO3JldHVybiB0aGlzLm9wdGlvbnMuZ2V0KFwibXVsdGlwbGVcIikmJmUuYXR0cihcImFyaWEtbXVsdGlzZWxlY3RhYmxlXCIsXCJ0cnVlXCIpLHRoaXMuJHJlc3VsdHM9ZX0saS5wcm90b3R5cGUuY2xlYXI9ZnVuY3Rpb24oKXt0aGlzLiRyZXN1bHRzLmVtcHR5KCl9LGkucHJvdG90eXBlLmRpc3BsYXlNZXNzYWdlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMub3B0aW9ucy5nZXQoXCJlc2NhcGVNYXJrdXBcIik7dGhpcy5jbGVhcigpLHRoaXMuaGlkZUxvYWRpbmcoKTt2YXIgbj1wKCc8bGkgcm9sZT1cInRyZWVpdGVtXCIgYXJpYS1saXZlPVwiYXNzZXJ0aXZlXCIgY2xhc3M9XCJzZWxlY3QyLXJlc3VsdHNfX29wdGlvblwiPjwvbGk+JyksaT10aGlzLm9wdGlvbnMuZ2V0KFwidHJhbnNsYXRpb25zXCIpLmdldChlLm1lc3NhZ2UpO24uYXBwZW5kKHQoaShlLmFyZ3MpKSksblswXS5jbGFzc05hbWUrPVwiIHNlbGVjdDItcmVzdWx0c19fbWVzc2FnZVwiLHRoaXMuJHJlc3VsdHMuYXBwZW5kKG4pfSxpLnByb3RvdHlwZS5oaWRlTWVzc2FnZXM9ZnVuY3Rpb24oKXt0aGlzLiRyZXN1bHRzLmZpbmQoXCIuc2VsZWN0Mi1yZXN1bHRzX19tZXNzYWdlXCIpLnJlbW92ZSgpfSxpLnByb3RvdHlwZS5hcHBlbmQ9ZnVuY3Rpb24oZSl7dGhpcy5oaWRlTG9hZGluZygpO3ZhciB0PVtdO2lmKG51bGwhPWUucmVzdWx0cyYmMCE9PWUucmVzdWx0cy5sZW5ndGgpe2UucmVzdWx0cz10aGlzLnNvcnQoZS5yZXN1bHRzKTtmb3IodmFyIG49MDtuPGUucmVzdWx0cy5sZW5ndGg7bisrKXt2YXIgaT1lLnJlc3VsdHNbbl0scj10aGlzLm9wdGlvbihpKTt0LnB1c2gocil9dGhpcy4kcmVzdWx0cy5hcHBlbmQodCl9ZWxzZSAwPT09dGhpcy4kcmVzdWx0cy5jaGlsZHJlbigpLmxlbmd0aCYmdGhpcy50cmlnZ2VyKFwicmVzdWx0czptZXNzYWdlXCIse21lc3NhZ2U6XCJub1Jlc3VsdHNcIn0pfSxpLnByb3RvdHlwZS5wb3NpdGlvbj1mdW5jdGlvbihlLHQpe3QuZmluZChcIi5zZWxlY3QyLXJlc3VsdHNcIikuYXBwZW5kKGUpfSxpLnByb3RvdHlwZS5zb3J0PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLm9wdGlvbnMuZ2V0KFwic29ydGVyXCIpKGUpfSxpLnByb3RvdHlwZS5oaWdobGlnaHRGaXJzdEl0ZW09ZnVuY3Rpb24oKXt2YXIgZT10aGlzLiRyZXN1bHRzLmZpbmQoXCIuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb25bYXJpYS1zZWxlY3RlZF1cIiksdD1lLmZpbHRlcihcIlthcmlhLXNlbGVjdGVkPXRydWVdXCIpOzA8dC5sZW5ndGg/dC5maXJzdCgpLnRyaWdnZXIoXCJtb3VzZWVudGVyXCIpOmUuZmlyc3QoKS50cmlnZ2VyKFwibW91c2VlbnRlclwiKSx0aGlzLmVuc3VyZUhpZ2hsaWdodFZpc2libGUoKX0saS5wcm90b3R5cGUuc2V0Q2xhc3Nlcz1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5kYXRhLmN1cnJlbnQoZnVuY3Rpb24oZSl7dmFyIGk9cC5tYXAoZSxmdW5jdGlvbihlKXtyZXR1cm4gZS5pZC50b1N0cmluZygpfSk7dC4kcmVzdWx0cy5maW5kKFwiLnNlbGVjdDItcmVzdWx0c19fb3B0aW9uW2FyaWEtc2VsZWN0ZWRdXCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgZT1wKHRoaXMpLHQ9aC5HZXREYXRhKHRoaXMsXCJkYXRhXCIpLG49XCJcIit0LmlkO251bGwhPXQuZWxlbWVudCYmdC5lbGVtZW50LnNlbGVjdGVkfHxudWxsPT10LmVsZW1lbnQmJi0xPHAuaW5BcnJheShuLGkpP2UuYXR0cihcImFyaWEtc2VsZWN0ZWRcIixcInRydWVcIik6ZS5hdHRyKFwiYXJpYS1zZWxlY3RlZFwiLFwiZmFsc2VcIil9KX0pfSxpLnByb3RvdHlwZS5zaG93TG9hZGluZz1mdW5jdGlvbihlKXt0aGlzLmhpZGVMb2FkaW5nKCk7dmFyIHQ9e2Rpc2FibGVkOiEwLGxvYWRpbmc6ITAsdGV4dDp0aGlzLm9wdGlvbnMuZ2V0KFwidHJhbnNsYXRpb25zXCIpLmdldChcInNlYXJjaGluZ1wiKShlKX0sbj10aGlzLm9wdGlvbih0KTtuLmNsYXNzTmFtZSs9XCIgbG9hZGluZy1yZXN1bHRzXCIsdGhpcy4kcmVzdWx0cy5wcmVwZW5kKG4pfSxpLnByb3RvdHlwZS5oaWRlTG9hZGluZz1mdW5jdGlvbigpe3RoaXMuJHJlc3VsdHMuZmluZChcIi5sb2FkaW5nLXJlc3VsdHNcIikucmVtb3ZlKCl9LGkucHJvdG90eXBlLm9wdGlvbj1mdW5jdGlvbihlKXt2YXIgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7dC5jbGFzc05hbWU9XCJzZWxlY3QyLXJlc3VsdHNfX29wdGlvblwiO3ZhciBuPXtyb2xlOlwidHJlZWl0ZW1cIixcImFyaWEtc2VsZWN0ZWRcIjpcImZhbHNlXCJ9O2Zvcih2YXIgaSBpbiBlLmRpc2FibGVkJiYoZGVsZXRlIG5bXCJhcmlhLXNlbGVjdGVkXCJdLG5bXCJhcmlhLWRpc2FibGVkXCJdPVwidHJ1ZVwiKSxudWxsPT1lLmlkJiZkZWxldGUgbltcImFyaWEtc2VsZWN0ZWRcIl0sbnVsbCE9ZS5fcmVzdWx0SWQmJih0LmlkPWUuX3Jlc3VsdElkKSxlLnRpdGxlJiYodC50aXRsZT1lLnRpdGxlKSxlLmNoaWxkcmVuJiYobi5yb2xlPVwiZ3JvdXBcIixuW1wiYXJpYS1sYWJlbFwiXT1lLnRleHQsZGVsZXRlIG5bXCJhcmlhLXNlbGVjdGVkXCJdKSxuKXt2YXIgcj1uW2ldO3Quc2V0QXR0cmlidXRlKGkscil9aWYoZS5jaGlsZHJlbil7dmFyIG89cCh0KSxzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHJvbmdcIik7cy5jbGFzc05hbWU9XCJzZWxlY3QyLXJlc3VsdHNfX2dyb3VwXCI7cChzKTt0aGlzLnRlbXBsYXRlKGUscyk7Zm9yKHZhciBhPVtdLGw9MDtsPGUuY2hpbGRyZW4ubGVuZ3RoO2wrKyl7dmFyIGM9ZS5jaGlsZHJlbltsXSx1PXRoaXMub3B0aW9uKGMpO2EucHVzaCh1KX12YXIgZD1wKFwiPHVsPjwvdWw+XCIse2NsYXNzOlwic2VsZWN0Mi1yZXN1bHRzX19vcHRpb25zIHNlbGVjdDItcmVzdWx0c19fb3B0aW9ucy0tbmVzdGVkXCJ9KTtkLmFwcGVuZChhKSxvLmFwcGVuZChzKSxvLmFwcGVuZChkKX1lbHNlIHRoaXMudGVtcGxhdGUoZSx0KTtyZXR1cm4gaC5TdG9yZURhdGEodCxcImRhdGFcIixlKSx0fSxpLnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKHQsZSl7dmFyIGw9dGhpcyxuPXQuaWQrXCItcmVzdWx0c1wiO3RoaXMuJHJlc3VsdHMuYXR0cihcImlkXCIsbiksdC5vbihcInJlc3VsdHM6YWxsXCIsZnVuY3Rpb24oZSl7bC5jbGVhcigpLGwuYXBwZW5kKGUuZGF0YSksdC5pc09wZW4oKSYmKGwuc2V0Q2xhc3NlcygpLGwuaGlnaGxpZ2h0Rmlyc3RJdGVtKCkpfSksdC5vbihcInJlc3VsdHM6YXBwZW5kXCIsZnVuY3Rpb24oZSl7bC5hcHBlbmQoZS5kYXRhKSx0LmlzT3BlbigpJiZsLnNldENsYXNzZXMoKX0pLHQub24oXCJxdWVyeVwiLGZ1bmN0aW9uKGUpe2wuaGlkZU1lc3NhZ2VzKCksbC5zaG93TG9hZGluZyhlKX0pLHQub24oXCJzZWxlY3RcIixmdW5jdGlvbigpe3QuaXNPcGVuKCkmJihsLnNldENsYXNzZXMoKSxsLm9wdGlvbnMuZ2V0KFwic2Nyb2xsQWZ0ZXJTZWxlY3RcIikmJmwuaGlnaGxpZ2h0Rmlyc3RJdGVtKCkpfSksdC5vbihcInVuc2VsZWN0XCIsZnVuY3Rpb24oKXt0LmlzT3BlbigpJiYobC5zZXRDbGFzc2VzKCksbC5vcHRpb25zLmdldChcInNjcm9sbEFmdGVyU2VsZWN0XCIpJiZsLmhpZ2hsaWdodEZpcnN0SXRlbSgpKX0pLHQub24oXCJvcGVuXCIsZnVuY3Rpb24oKXtsLiRyZXN1bHRzLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsXCJ0cnVlXCIpLGwuJHJlc3VsdHMuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJmYWxzZVwiKSxsLnNldENsYXNzZXMoKSxsLmVuc3VyZUhpZ2hsaWdodFZpc2libGUoKX0pLHQub24oXCJjbG9zZVwiLGZ1bmN0aW9uKCl7bC4kcmVzdWx0cy5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLFwiZmFsc2VcIiksbC4kcmVzdWx0cy5hdHRyKFwiYXJpYS1oaWRkZW5cIixcInRydWVcIiksbC4kcmVzdWx0cy5yZW1vdmVBdHRyKFwiYXJpYS1hY3RpdmVkZXNjZW5kYW50XCIpfSksdC5vbihcInJlc3VsdHM6dG9nZ2xlXCIsZnVuY3Rpb24oKXt2YXIgZT1sLmdldEhpZ2hsaWdodGVkUmVzdWx0cygpOzAhPT1lLmxlbmd0aCYmZS50cmlnZ2VyKFwibW91c2V1cFwiKX0pLHQub24oXCJyZXN1bHRzOnNlbGVjdFwiLGZ1bmN0aW9uKCl7dmFyIGU9bC5nZXRIaWdobGlnaHRlZFJlc3VsdHMoKTtpZigwIT09ZS5sZW5ndGgpe3ZhciB0PWguR2V0RGF0YShlWzBdLFwiZGF0YVwiKTtcInRydWVcIj09ZS5hdHRyKFwiYXJpYS1zZWxlY3RlZFwiKT9sLnRyaWdnZXIoXCJjbG9zZVwiLHt9KTpsLnRyaWdnZXIoXCJzZWxlY3RcIix7ZGF0YTp0fSl9fSksdC5vbihcInJlc3VsdHM6cHJldmlvdXNcIixmdW5jdGlvbigpe3ZhciBlPWwuZ2V0SGlnaGxpZ2h0ZWRSZXN1bHRzKCksdD1sLiRyZXN1bHRzLmZpbmQoXCJbYXJpYS1zZWxlY3RlZF1cIiksbj10LmluZGV4KGUpO2lmKCEobjw9MCkpe3ZhciBpPW4tMTswPT09ZS5sZW5ndGgmJihpPTApO3ZhciByPXQuZXEoaSk7ci50cmlnZ2VyKFwibW91c2VlbnRlclwiKTt2YXIgbz1sLiRyZXN1bHRzLm9mZnNldCgpLnRvcCxzPXIub2Zmc2V0KCkudG9wLGE9bC4kcmVzdWx0cy5zY3JvbGxUb3AoKSsocy1vKTswPT09aT9sLiRyZXN1bHRzLnNjcm9sbFRvcCgwKTpzLW88MCYmbC4kcmVzdWx0cy5zY3JvbGxUb3AoYSl9fSksdC5vbihcInJlc3VsdHM6bmV4dFwiLGZ1bmN0aW9uKCl7dmFyIGU9bC5nZXRIaWdobGlnaHRlZFJlc3VsdHMoKSx0PWwuJHJlc3VsdHMuZmluZChcIlthcmlhLXNlbGVjdGVkXVwiKSxuPXQuaW5kZXgoZSkrMTtpZighKG4+PXQubGVuZ3RoKSl7dmFyIGk9dC5lcShuKTtpLnRyaWdnZXIoXCJtb3VzZWVudGVyXCIpO3ZhciByPWwuJHJlc3VsdHMub2Zmc2V0KCkudG9wK2wuJHJlc3VsdHMub3V0ZXJIZWlnaHQoITEpLG89aS5vZmZzZXQoKS50b3AraS5vdXRlckhlaWdodCghMSkscz1sLiRyZXN1bHRzLnNjcm9sbFRvcCgpK28tcjswPT09bj9sLiRyZXN1bHRzLnNjcm9sbFRvcCgwKTpyPG8mJmwuJHJlc3VsdHMuc2Nyb2xsVG9wKHMpfX0pLHQub24oXCJyZXN1bHRzOmZvY3VzXCIsZnVuY3Rpb24oZSl7ZS5lbGVtZW50LmFkZENsYXNzKFwic2VsZWN0Mi1yZXN1bHRzX19vcHRpb24tLWhpZ2hsaWdodGVkXCIpfSksdC5vbihcInJlc3VsdHM6bWVzc2FnZVwiLGZ1bmN0aW9uKGUpe2wuZGlzcGxheU1lc3NhZ2UoZSl9KSxwLmZuLm1vdXNld2hlZWwmJnRoaXMuJHJlc3VsdHMub24oXCJtb3VzZXdoZWVsXCIsZnVuY3Rpb24oZSl7dmFyIHQ9bC4kcmVzdWx0cy5zY3JvbGxUb3AoKSxuPWwuJHJlc3VsdHMuZ2V0KDApLnNjcm9sbEhlaWdodC10K2UuZGVsdGFZLGk9MDxlLmRlbHRhWSYmdC1lLmRlbHRhWTw9MCxyPWUuZGVsdGFZPDAmJm48PWwuJHJlc3VsdHMuaGVpZ2h0KCk7aT8obC4kcmVzdWx0cy5zY3JvbGxUb3AoMCksZS5wcmV2ZW50RGVmYXVsdCgpLGUuc3RvcFByb3BhZ2F0aW9uKCkpOnImJihsLiRyZXN1bHRzLnNjcm9sbFRvcChsLiRyZXN1bHRzLmdldCgwKS5zY3JvbGxIZWlnaHQtbC4kcmVzdWx0cy5oZWlnaHQoKSksZS5wcmV2ZW50RGVmYXVsdCgpLGUuc3RvcFByb3BhZ2F0aW9uKCkpfSksdGhpcy4kcmVzdWx0cy5vbihcIm1vdXNldXBcIixcIi5zZWxlY3QyLXJlc3VsdHNfX29wdGlvblthcmlhLXNlbGVjdGVkXVwiLGZ1bmN0aW9uKGUpe3ZhciB0PXAodGhpcyksbj1oLkdldERhdGEodGhpcyxcImRhdGFcIik7XCJ0cnVlXCIhPT10LmF0dHIoXCJhcmlhLXNlbGVjdGVkXCIpP2wudHJpZ2dlcihcInNlbGVjdFwiLHtvcmlnaW5hbEV2ZW50OmUsZGF0YTpufSk6bC5vcHRpb25zLmdldChcIm11bHRpcGxlXCIpP2wudHJpZ2dlcihcInVuc2VsZWN0XCIse29yaWdpbmFsRXZlbnQ6ZSxkYXRhOm59KTpsLnRyaWdnZXIoXCJjbG9zZVwiLHt9KX0pLHRoaXMuJHJlc3VsdHMub24oXCJtb3VzZWVudGVyXCIsXCIuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb25bYXJpYS1zZWxlY3RlZF1cIixmdW5jdGlvbihlKXt2YXIgdD1oLkdldERhdGEodGhpcyxcImRhdGFcIik7bC5nZXRIaWdobGlnaHRlZFJlc3VsdHMoKS5yZW1vdmVDbGFzcyhcInNlbGVjdDItcmVzdWx0c19fb3B0aW9uLS1oaWdobGlnaHRlZFwiKSxsLnRyaWdnZXIoXCJyZXN1bHRzOmZvY3VzXCIse2RhdGE6dCxlbGVtZW50OnAodGhpcyl9KX0pfSxpLnByb3RvdHlwZS5nZXRIaWdobGlnaHRlZFJlc3VsdHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy4kcmVzdWx0cy5maW5kKFwiLnNlbGVjdDItcmVzdWx0c19fb3B0aW9uLS1oaWdobGlnaHRlZFwiKX0saS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3RoaXMuJHJlc3VsdHMucmVtb3ZlKCl9LGkucHJvdG90eXBlLmVuc3VyZUhpZ2hsaWdodFZpc2libGU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmdldEhpZ2hsaWdodGVkUmVzdWx0cygpO2lmKDAhPT1lLmxlbmd0aCl7dmFyIHQ9dGhpcy4kcmVzdWx0cy5maW5kKFwiW2FyaWEtc2VsZWN0ZWRdXCIpLmluZGV4KGUpLG49dGhpcy4kcmVzdWx0cy5vZmZzZXQoKS50b3AsaT1lLm9mZnNldCgpLnRvcCxyPXRoaXMuJHJlc3VsdHMuc2Nyb2xsVG9wKCkrKGktbiksbz1pLW47ci09MiplLm91dGVySGVpZ2h0KCExKSx0PD0yP3RoaXMuJHJlc3VsdHMuc2Nyb2xsVG9wKDApOihvPnRoaXMuJHJlc3VsdHMub3V0ZXJIZWlnaHQoKXx8bzwwKSYmdGhpcy4kcmVzdWx0cy5zY3JvbGxUb3Aocil9fSxpLnByb3RvdHlwZS50ZW1wbGF0ZT1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMub3B0aW9ucy5nZXQoXCJ0ZW1wbGF0ZVJlc3VsdFwiKSxpPXRoaXMub3B0aW9ucy5nZXQoXCJlc2NhcGVNYXJrdXBcIikscj1uKGUsdCk7bnVsbD09cj90LnN0eWxlLmRpc3BsYXk9XCJub25lXCI6XCJzdHJpbmdcIj09dHlwZW9mIHI/dC5pbm5lckhUTUw9aShyKTpwKHQpLmFwcGVuZChyKX0saX0pLGUuZGVmaW5lKFwic2VsZWN0Mi9rZXlzXCIsW10sZnVuY3Rpb24oKXtyZXR1cm57QkFDS1NQQUNFOjgsVEFCOjksRU5URVI6MTMsU0hJRlQ6MTYsQ1RSTDoxNyxBTFQ6MTgsRVNDOjI3LFNQQUNFOjMyLFBBR0VfVVA6MzMsUEFHRV9ET1dOOjM0LEVORDozNSxIT01FOjM2LExFRlQ6MzcsVVA6MzgsUklHSFQ6MzksRE9XTjo0MCxERUxFVEU6NDZ9fSksZS5kZWZpbmUoXCJzZWxlY3QyL3NlbGVjdGlvbi9iYXNlXCIsW1wianF1ZXJ5XCIsXCIuLi91dGlsc1wiLFwiLi4va2V5c1wiXSxmdW5jdGlvbihuLGkscil7ZnVuY3Rpb24gbyhlLHQpe3RoaXMuJGVsZW1lbnQ9ZSx0aGlzLm9wdGlvbnM9dCxvLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpfXJldHVybiBpLkV4dGVuZChvLGkuT2JzZXJ2YWJsZSksby5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7dmFyIGU9bignPHNwYW4gY2xhc3M9XCJzZWxlY3QyLXNlbGVjdGlvblwiIHJvbGU9XCJjb21ib2JveFwiICBhcmlhLWhhc3BvcHVwPVwidHJ1ZVwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiPjwvc3Bhbj4nKTtyZXR1cm4gdGhpcy5fdGFiaW5kZXg9MCxudWxsIT1pLkdldERhdGEodGhpcy4kZWxlbWVudFswXSxcIm9sZC10YWJpbmRleFwiKT90aGlzLl90YWJpbmRleD1pLkdldERhdGEodGhpcy4kZWxlbWVudFswXSxcIm9sZC10YWJpbmRleFwiKTpudWxsIT10aGlzLiRlbGVtZW50LmF0dHIoXCJ0YWJpbmRleFwiKSYmKHRoaXMuX3RhYmluZGV4PXRoaXMuJGVsZW1lbnQuYXR0cihcInRhYmluZGV4XCIpKSxlLmF0dHIoXCJ0aXRsZVwiLHRoaXMuJGVsZW1lbnQuYXR0cihcInRpdGxlXCIpKSxlLmF0dHIoXCJ0YWJpbmRleFwiLHRoaXMuX3RhYmluZGV4KSx0aGlzLiRzZWxlY3Rpb249ZX0sby5wcm90b3R5cGUuYmluZD1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMsaT0oZS5pZCxlLmlkK1wiLXJlc3VsdHNcIik7dGhpcy5jb250YWluZXI9ZSx0aGlzLiRzZWxlY3Rpb24ub24oXCJmb2N1c1wiLGZ1bmN0aW9uKGUpe24udHJpZ2dlcihcImZvY3VzXCIsZSl9KSx0aGlzLiRzZWxlY3Rpb24ub24oXCJibHVyXCIsZnVuY3Rpb24oZSl7bi5faGFuZGxlQmx1cihlKX0pLHRoaXMuJHNlbGVjdGlvbi5vbihcImtleWRvd25cIixmdW5jdGlvbihlKXtuLnRyaWdnZXIoXCJrZXlwcmVzc1wiLGUpLGUud2hpY2g9PT1yLlNQQUNFJiZlLnByZXZlbnREZWZhdWx0KCl9KSxlLm9uKFwicmVzdWx0czpmb2N1c1wiLGZ1bmN0aW9uKGUpe24uJHNlbGVjdGlvbi5hdHRyKFwiYXJpYS1hY3RpdmVkZXNjZW5kYW50XCIsZS5kYXRhLl9yZXN1bHRJZCl9KSxlLm9uKFwic2VsZWN0aW9uOnVwZGF0ZVwiLGZ1bmN0aW9uKGUpe24udXBkYXRlKGUuZGF0YSl9KSxlLm9uKFwib3BlblwiLGZ1bmN0aW9uKCl7bi4kc2VsZWN0aW9uLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsXCJ0cnVlXCIpLG4uJHNlbGVjdGlvbi5hdHRyKFwiYXJpYS1vd25zXCIsaSksbi5fYXR0YWNoQ2xvc2VIYW5kbGVyKGUpfSksZS5vbihcImNsb3NlXCIsZnVuY3Rpb24oKXtuLiRzZWxlY3Rpb24uYXR0cihcImFyaWEtZXhwYW5kZWRcIixcImZhbHNlXCIpLG4uJHNlbGVjdGlvbi5yZW1vdmVBdHRyKFwiYXJpYS1hY3RpdmVkZXNjZW5kYW50XCIpLG4uJHNlbGVjdGlvbi5yZW1vdmVBdHRyKFwiYXJpYS1vd25zXCIpLHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bi4kc2VsZWN0aW9uLmZvY3VzKCl9LDApLG4uX2RldGFjaENsb3NlSGFuZGxlcihlKX0pLGUub24oXCJlbmFibGVcIixmdW5jdGlvbigpe24uJHNlbGVjdGlvbi5hdHRyKFwidGFiaW5kZXhcIixuLl90YWJpbmRleCl9KSxlLm9uKFwiZGlzYWJsZVwiLGZ1bmN0aW9uKCl7bi4kc2VsZWN0aW9uLmF0dHIoXCJ0YWJpbmRleFwiLFwiLTFcIil9KX0sby5wcm90b3R5cGUuX2hhbmRsZUJsdXI9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpe2RvY3VtZW50LmFjdGl2ZUVsZW1lbnQ9PXQuJHNlbGVjdGlvblswXXx8bi5jb250YWlucyh0LiRzZWxlY3Rpb25bMF0sZG9jdW1lbnQuYWN0aXZlRWxlbWVudCl8fHQudHJpZ2dlcihcImJsdXJcIixlKX0sMSl9LG8ucHJvdG90eXBlLl9hdHRhY2hDbG9zZUhhbmRsZXI9ZnVuY3Rpb24oZSl7bihkb2N1bWVudC5ib2R5KS5vbihcIm1vdXNlZG93bi5zZWxlY3QyLlwiK2UuaWQsZnVuY3Rpb24oZSl7dmFyIHQ9bihlLnRhcmdldCkuY2xvc2VzdChcIi5zZWxlY3QyXCIpO24oXCIuc2VsZWN0Mi5zZWxlY3QyLWNvbnRhaW5lci0tb3BlblwiKS5lYWNoKGZ1bmN0aW9uKCl7bih0aGlzKTt0aGlzIT10WzBdJiZpLkdldERhdGEodGhpcyxcImVsZW1lbnRcIikuc2VsZWN0MihcImNsb3NlXCIpfSl9KX0sby5wcm90b3R5cGUuX2RldGFjaENsb3NlSGFuZGxlcj1mdW5jdGlvbihlKXtuKGRvY3VtZW50LmJvZHkpLm9mZihcIm1vdXNlZG93bi5zZWxlY3QyLlwiK2UuaWQpfSxvLnByb3RvdHlwZS5wb3NpdGlvbj1mdW5jdGlvbihlLHQpe3QuZmluZChcIi5zZWxlY3Rpb25cIikuYXBwZW5kKGUpfSxvLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dGhpcy5fZGV0YWNoQ2xvc2VIYW5kbGVyKHRoaXMuY29udGFpbmVyKX0sby5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUpe3Rocm93IG5ldyBFcnJvcihcIlRoZSBgdXBkYXRlYCBtZXRob2QgbXVzdCBiZSBkZWZpbmVkIGluIGNoaWxkIGNsYXNzZXMuXCIpfSxvfSksZS5kZWZpbmUoXCJzZWxlY3QyL3NlbGVjdGlvbi9zaW5nbGVcIixbXCJqcXVlcnlcIixcIi4vYmFzZVwiLFwiLi4vdXRpbHNcIixcIi4uL2tleXNcIl0sZnVuY3Rpb24oZSx0LG4saSl7ZnVuY3Rpb24gcigpe3IuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gbi5FeHRlbmQocix0KSxyLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgZT1yLl9fc3VwZXJfXy5yZW5kZXIuY2FsbCh0aGlzKTtyZXR1cm4gZS5hZGRDbGFzcyhcInNlbGVjdDItc2VsZWN0aW9uLS1zaW5nbGVcIiksZS5odG1sKCc8c3BhbiBjbGFzcz1cInNlbGVjdDItc2VsZWN0aW9uX19yZW5kZXJlZFwiPjwvc3Bhbj48c3BhbiBjbGFzcz1cInNlbGVjdDItc2VsZWN0aW9uX19hcnJvd1wiIHJvbGU9XCJwcmVzZW50YXRpb25cIj48YiByb2xlPVwicHJlc2VudGF0aW9uXCI+PC9iPjwvc3Bhbj4nKSxlfSxyLnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyLl9fc3VwZXJfXy5iaW5kLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt2YXIgaT10LmlkK1wiLWNvbnRhaW5lclwiO3RoaXMuJHNlbGVjdGlvbi5maW5kKFwiLnNlbGVjdDItc2VsZWN0aW9uX19yZW5kZXJlZFwiKS5hdHRyKFwiaWRcIixpKS5hdHRyKFwicm9sZVwiLFwidGV4dGJveFwiKS5hdHRyKFwiYXJpYS1yZWFkb25seVwiLFwidHJ1ZVwiKSx0aGlzLiRzZWxlY3Rpb24uYXR0cihcImFyaWEtbGFiZWxsZWRieVwiLGkpLHRoaXMuJHNlbGVjdGlvbi5vbihcIm1vdXNlZG93blwiLGZ1bmN0aW9uKGUpezE9PT1lLndoaWNoJiZuLnRyaWdnZXIoXCJ0b2dnbGVcIix7b3JpZ2luYWxFdmVudDplfSl9KSx0aGlzLiRzZWxlY3Rpb24ub24oXCJmb2N1c1wiLGZ1bmN0aW9uKGUpe30pLHRoaXMuJHNlbGVjdGlvbi5vbihcImJsdXJcIixmdW5jdGlvbihlKXt9KSx0Lm9uKFwiZm9jdXNcIixmdW5jdGlvbihlKXt0LmlzT3BlbigpfHxuLiRzZWxlY3Rpb24uZm9jdXMoKX0pfSxyLnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe3ZhciBlPXRoaXMuJHNlbGVjdGlvbi5maW5kKFwiLnNlbGVjdDItc2VsZWN0aW9uX19yZW5kZXJlZFwiKTtlLmVtcHR5KCksZS5yZW1vdmVBdHRyKFwidGl0bGVcIil9LHIucHJvdG90eXBlLmRpc3BsYXk9ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzLm9wdGlvbnMuZ2V0KFwidGVtcGxhdGVTZWxlY3Rpb25cIik7cmV0dXJuIHRoaXMub3B0aW9ucy5nZXQoXCJlc2NhcGVNYXJrdXBcIikobihlLHQpKX0sci5wcm90b3R5cGUuc2VsZWN0aW9uQ29udGFpbmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGUoXCI8c3Bhbj48L3NwYW4+XCIpfSxyLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSl7aWYoMCE9PWUubGVuZ3RoKXt2YXIgdD1lWzBdLG49dGhpcy4kc2VsZWN0aW9uLmZpbmQoXCIuc2VsZWN0Mi1zZWxlY3Rpb25fX3JlbmRlcmVkXCIpLGk9dGhpcy5kaXNwbGF5KHQsbik7bi5lbXB0eSgpLmFwcGVuZChpKSxuLmF0dHIoXCJ0aXRsZVwiLHQudGl0bGV8fHQudGV4dCl9ZWxzZSB0aGlzLmNsZWFyKCl9LHJ9KSxlLmRlZmluZShcInNlbGVjdDIvc2VsZWN0aW9uL211bHRpcGxlXCIsW1wianF1ZXJ5XCIsXCIuL2Jhc2VcIixcIi4uL3V0aWxzXCJdLGZ1bmN0aW9uKHIsZSxhKXtmdW5jdGlvbiBuKGUsdCl7bi5fX3N1cGVyX18uY29uc3RydWN0b3IuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiBhLkV4dGVuZChuLGUpLG4ucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbigpe3ZhciBlPW4uX19zdXBlcl9fLnJlbmRlci5jYWxsKHRoaXMpO3JldHVybiBlLmFkZENsYXNzKFwic2VsZWN0Mi1zZWxlY3Rpb24tLW11bHRpcGxlXCIpLGUuaHRtbCgnPHVsIGNsYXNzPVwic2VsZWN0Mi1zZWxlY3Rpb25fX3JlbmRlcmVkXCI+PC91bD4nKSxlfSxuLnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKGUsdCl7dmFyIGk9dGhpcztuLl9fc3VwZXJfXy5iaW5kLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLiRzZWxlY3Rpb24ub24oXCJjbGlja1wiLGZ1bmN0aW9uKGUpe2kudHJpZ2dlcihcInRvZ2dsZVwiLHtvcmlnaW5hbEV2ZW50OmV9KX0pLHRoaXMuJHNlbGVjdGlvbi5vbihcImNsaWNrXCIsXCIuc2VsZWN0Mi1zZWxlY3Rpb25fX2Nob2ljZV9fcmVtb3ZlXCIsZnVuY3Rpb24oZSl7aWYoIWkub3B0aW9ucy5nZXQoXCJkaXNhYmxlZFwiKSl7dmFyIHQ9cih0aGlzKS5wYXJlbnQoKSxuPWEuR2V0RGF0YSh0WzBdLFwiZGF0YVwiKTtpLnRyaWdnZXIoXCJ1bnNlbGVjdFwiLHtvcmlnaW5hbEV2ZW50OmUsZGF0YTpufSl9fSl9LG4ucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy4kc2VsZWN0aW9uLmZpbmQoXCIuc2VsZWN0Mi1zZWxlY3Rpb25fX3JlbmRlcmVkXCIpO2UuZW1wdHkoKSxlLnJlbW92ZUF0dHIoXCJ0aXRsZVwiKX0sbi5wcm90b3R5cGUuZGlzcGxheT1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMub3B0aW9ucy5nZXQoXCJ0ZW1wbGF0ZVNlbGVjdGlvblwiKTtyZXR1cm4gdGhpcy5vcHRpb25zLmdldChcImVzY2FwZU1hcmt1cFwiKShuKGUsdCkpfSxuLnByb3RvdHlwZS5zZWxlY3Rpb25Db250YWluZXI9ZnVuY3Rpb24oKXtyZXR1cm4gcignPGxpIGNsYXNzPVwic2VsZWN0Mi1zZWxlY3Rpb25fX2Nob2ljZVwiPjxzcGFuIGNsYXNzPVwic2VsZWN0Mi1zZWxlY3Rpb25fX2Nob2ljZV9fcmVtb3ZlXCIgcm9sZT1cInByZXNlbnRhdGlvblwiPiZ0aW1lczs8L3NwYW4+PC9saT4nKX0sbi5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUpe2lmKHRoaXMuY2xlYXIoKSwwIT09ZS5sZW5ndGgpe2Zvcih2YXIgdD1bXSxuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBpPWVbbl0scj10aGlzLnNlbGVjdGlvbkNvbnRhaW5lcigpLG89dGhpcy5kaXNwbGF5KGkscik7ci5hcHBlbmQobyksci5hdHRyKFwidGl0bGVcIixpLnRpdGxlfHxpLnRleHQpLGEuU3RvcmVEYXRhKHJbMF0sXCJkYXRhXCIsaSksdC5wdXNoKHIpfXZhciBzPXRoaXMuJHNlbGVjdGlvbi5maW5kKFwiLnNlbGVjdDItc2VsZWN0aW9uX19yZW5kZXJlZFwiKTthLmFwcGVuZE1hbnkocyx0KX19LG59KSxlLmRlZmluZShcInNlbGVjdDIvc2VsZWN0aW9uL3BsYWNlaG9sZGVyXCIsW1wiLi4vdXRpbHNcIl0sZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHQsbil7dGhpcy5wbGFjZWhvbGRlcj10aGlzLm5vcm1hbGl6ZVBsYWNlaG9sZGVyKG4uZ2V0KFwicGxhY2Vob2xkZXJcIikpLGUuY2FsbCh0aGlzLHQsbil9cmV0dXJuIHQucHJvdG90eXBlLm5vcm1hbGl6ZVBsYWNlaG9sZGVyPWZ1bmN0aW9uKGUsdCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQmJih0PXtpZDpcIlwiLHRleHQ6dH0pLHR9LHQucHJvdG90eXBlLmNyZWF0ZVBsYWNlaG9sZGVyPWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcy5zZWxlY3Rpb25Db250YWluZXIoKTtyZXR1cm4gbi5odG1sKHRoaXMuZGlzcGxheSh0KSksbi5hZGRDbGFzcyhcInNlbGVjdDItc2VsZWN0aW9uX19wbGFjZWhvbGRlclwiKS5yZW1vdmVDbGFzcyhcInNlbGVjdDItc2VsZWN0aW9uX19jaG9pY2VcIiksbn0sdC5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUsdCl7dmFyIG49MT09dC5sZW5ndGgmJnRbMF0uaWQhPXRoaXMucGxhY2Vob2xkZXIuaWQ7aWYoMTx0Lmxlbmd0aHx8bilyZXR1cm4gZS5jYWxsKHRoaXMsdCk7dGhpcy5jbGVhcigpO3ZhciBpPXRoaXMuY3JlYXRlUGxhY2Vob2xkZXIodGhpcy5wbGFjZWhvbGRlcik7dGhpcy4kc2VsZWN0aW9uLmZpbmQoXCIuc2VsZWN0Mi1zZWxlY3Rpb25fX3JlbmRlcmVkXCIpLmFwcGVuZChpKX0sdH0pLGUuZGVmaW5lKFwic2VsZWN0Mi9zZWxlY3Rpb24vYWxsb3dDbGVhclwiLFtcImpxdWVyeVwiLFwiLi4va2V5c1wiLFwiLi4vdXRpbHNcIl0sZnVuY3Rpb24ocixpLGEpe2Z1bmN0aW9uIGUoKXt9cmV0dXJuIGUucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPXRoaXM7ZS5jYWxsKHRoaXMsdCxuKSxudWxsPT10aGlzLnBsYWNlaG9sZGVyJiZ0aGlzLm9wdGlvbnMuZ2V0KFwiZGVidWdcIikmJndpbmRvdy5jb25zb2xlJiZjb25zb2xlLmVycm9yJiZjb25zb2xlLmVycm9yKFwiU2VsZWN0MjogVGhlIGBhbGxvd0NsZWFyYCBvcHRpb24gc2hvdWxkIGJlIHVzZWQgaW4gY29tYmluYXRpb24gd2l0aCB0aGUgYHBsYWNlaG9sZGVyYCBvcHRpb24uXCIpLHRoaXMuJHNlbGVjdGlvbi5vbihcIm1vdXNlZG93blwiLFwiLnNlbGVjdDItc2VsZWN0aW9uX19jbGVhclwiLGZ1bmN0aW9uKGUpe2kuX2hhbmRsZUNsZWFyKGUpfSksdC5vbihcImtleXByZXNzXCIsZnVuY3Rpb24oZSl7aS5faGFuZGxlS2V5Ym9hcmRDbGVhcihlLHQpfSl9LGUucHJvdG90eXBlLl9oYW5kbGVDbGVhcj1mdW5jdGlvbihlLHQpe2lmKCF0aGlzLm9wdGlvbnMuZ2V0KFwiZGlzYWJsZWRcIikpe3ZhciBuPXRoaXMuJHNlbGVjdGlvbi5maW5kKFwiLnNlbGVjdDItc2VsZWN0aW9uX19jbGVhclwiKTtpZigwIT09bi5sZW5ndGgpe3Quc3RvcFByb3BhZ2F0aW9uKCk7dmFyIGk9YS5HZXREYXRhKG5bMF0sXCJkYXRhXCIpLHI9dGhpcy4kZWxlbWVudC52YWwoKTt0aGlzLiRlbGVtZW50LnZhbCh0aGlzLnBsYWNlaG9sZGVyLmlkKTt2YXIgbz17ZGF0YTppfTtpZih0aGlzLnRyaWdnZXIoXCJjbGVhclwiLG8pLG8ucHJldmVudGVkKXRoaXMuJGVsZW1lbnQudmFsKHIpO2Vsc2V7Zm9yKHZhciBzPTA7czxpLmxlbmd0aDtzKyspaWYobz17ZGF0YTppW3NdfSx0aGlzLnRyaWdnZXIoXCJ1bnNlbGVjdFwiLG8pLG8ucHJldmVudGVkKXJldHVybiB2b2lkIHRoaXMuJGVsZW1lbnQudmFsKHIpO3RoaXMuJGVsZW1lbnQudHJpZ2dlcihcImNoYW5nZVwiKSx0aGlzLnRyaWdnZXIoXCJ0b2dnbGVcIix7fSl9fX19LGUucHJvdG90eXBlLl9oYW5kbGVLZXlib2FyZENsZWFyPWZ1bmN0aW9uKGUsdCxuKXtuLmlzT3BlbigpfHx0LndoaWNoIT1pLkRFTEVURSYmdC53aGljaCE9aS5CQUNLU1BBQ0V8fHRoaXMuX2hhbmRsZUNsZWFyKHQpfSxlLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSx0KXtpZihlLmNhbGwodGhpcyx0KSwhKDA8dGhpcy4kc2VsZWN0aW9uLmZpbmQoXCIuc2VsZWN0Mi1zZWxlY3Rpb25fX3BsYWNlaG9sZGVyXCIpLmxlbmd0aHx8MD09PXQubGVuZ3RoKSl7dmFyIG49dGhpcy5vcHRpb25zLmdldChcInRyYW5zbGF0aW9uc1wiKS5nZXQoXCJyZW1vdmVBbGxJdGVtc1wiKSxpPXIoJzxzcGFuIGNsYXNzPVwic2VsZWN0Mi1zZWxlY3Rpb25fX2NsZWFyXCIgdGl0bGU9XCInK24oKSsnXCI+JnRpbWVzOzwvc3Bhbj4nKTthLlN0b3JlRGF0YShpWzBdLFwiZGF0YVwiLHQpLHRoaXMuJHNlbGVjdGlvbi5maW5kKFwiLnNlbGVjdDItc2VsZWN0aW9uX19yZW5kZXJlZFwiKS5wcmVwZW5kKGkpfX0sZX0pLGUuZGVmaW5lKFwic2VsZWN0Mi9zZWxlY3Rpb24vc2VhcmNoXCIsW1wianF1ZXJ5XCIsXCIuLi91dGlsc1wiLFwiLi4va2V5c1wiXSxmdW5jdGlvbihpLHMsYSl7ZnVuY3Rpb24gZShlLHQsbil7ZS5jYWxsKHRoaXMsdCxuKX1yZXR1cm4gZS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGUpe3ZhciB0PWkoJzxsaSBjbGFzcz1cInNlbGVjdDItc2VhcmNoIHNlbGVjdDItc2VhcmNoLS1pbmxpbmVcIj48aW5wdXQgY2xhc3M9XCJzZWxlY3QyLXNlYXJjaF9fZmllbGRcIiB0eXBlPVwic2VhcmNoXCIgdGFiaW5kZXg9XCItMVwiIGF1dG9jb21wbGV0ZT1cIm9mZlwiIGF1dG9jb3JyZWN0PVwib2ZmXCIgYXV0b2NhcGl0YWxpemU9XCJub25lXCIgc3BlbGxjaGVjaz1cImZhbHNlXCIgcm9sZT1cInRleHRib3hcIiBhcmlhLWF1dG9jb21wbGV0ZT1cImxpc3RcIiAvPjwvbGk+Jyk7dGhpcy4kc2VhcmNoQ29udGFpbmVyPXQsdGhpcy4kc2VhcmNoPXQuZmluZChcImlucHV0XCIpO3ZhciBuPWUuY2FsbCh0aGlzKTtyZXR1cm4gdGhpcy5fdHJhbnNmZXJUYWJJbmRleCgpLG59LGUucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPXRoaXM7ZS5jYWxsKHRoaXMsdCxuKSx0Lm9uKFwib3BlblwiLGZ1bmN0aW9uKCl7aS4kc2VhcmNoLnRyaWdnZXIoXCJmb2N1c1wiKX0pLHQub24oXCJjbG9zZVwiLGZ1bmN0aW9uKCl7aS4kc2VhcmNoLnZhbChcIlwiKSxpLiRzZWFyY2gucmVtb3ZlQXR0cihcImFyaWEtYWN0aXZlZGVzY2VuZGFudFwiKSxpLiRzZWFyY2gudHJpZ2dlcihcImZvY3VzXCIpfSksdC5vbihcImVuYWJsZVwiLGZ1bmN0aW9uKCl7aS4kc2VhcmNoLnByb3AoXCJkaXNhYmxlZFwiLCExKSxpLl90cmFuc2ZlclRhYkluZGV4KCl9KSx0Lm9uKFwiZGlzYWJsZVwiLGZ1bmN0aW9uKCl7aS4kc2VhcmNoLnByb3AoXCJkaXNhYmxlZFwiLCEwKX0pLHQub24oXCJmb2N1c1wiLGZ1bmN0aW9uKGUpe2kuJHNlYXJjaC50cmlnZ2VyKFwiZm9jdXNcIil9KSx0Lm9uKFwicmVzdWx0czpmb2N1c1wiLGZ1bmN0aW9uKGUpe2kuJHNlYXJjaC5hdHRyKFwiYXJpYS1hY3RpdmVkZXNjZW5kYW50XCIsZS5pZCl9KSx0aGlzLiRzZWxlY3Rpb24ub24oXCJmb2N1c2luXCIsXCIuc2VsZWN0Mi1zZWFyY2gtLWlubGluZVwiLGZ1bmN0aW9uKGUpe2kudHJpZ2dlcihcImZvY3VzXCIsZSl9KSx0aGlzLiRzZWxlY3Rpb24ub24oXCJmb2N1c291dFwiLFwiLnNlbGVjdDItc2VhcmNoLS1pbmxpbmVcIixmdW5jdGlvbihlKXtpLl9oYW5kbGVCbHVyKGUpfSksdGhpcy4kc2VsZWN0aW9uLm9uKFwia2V5ZG93blwiLFwiLnNlbGVjdDItc2VhcmNoLS1pbmxpbmVcIixmdW5jdGlvbihlKXtpZihlLnN0b3BQcm9wYWdhdGlvbigpLGkudHJpZ2dlcihcImtleXByZXNzXCIsZSksaS5fa2V5VXBQcmV2ZW50ZWQ9ZS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSxlLndoaWNoPT09YS5CQUNLU1BBQ0UmJlwiXCI9PT1pLiRzZWFyY2gudmFsKCkpe3ZhciB0PWkuJHNlYXJjaENvbnRhaW5lci5wcmV2KFwiLnNlbGVjdDItc2VsZWN0aW9uX19jaG9pY2VcIik7aWYoMDx0Lmxlbmd0aCl7dmFyIG49cy5HZXREYXRhKHRbMF0sXCJkYXRhXCIpO2kuc2VhcmNoUmVtb3ZlQ2hvaWNlKG4pLGUucHJldmVudERlZmF1bHQoKX19fSk7dmFyIHI9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLG89ciYmcjw9MTE7dGhpcy4kc2VsZWN0aW9uLm9uKFwiaW5wdXQuc2VhcmNoY2hlY2tcIixcIi5zZWxlY3QyLXNlYXJjaC0taW5saW5lXCIsZnVuY3Rpb24oZSl7bz9pLiRzZWxlY3Rpb24ub2ZmKFwiaW5wdXQuc2VhcmNoIGlucHV0LnNlYXJjaGNoZWNrXCIpOmkuJHNlbGVjdGlvbi5vZmYoXCJrZXl1cC5zZWFyY2hcIil9KSx0aGlzLiRzZWxlY3Rpb24ub24oXCJrZXl1cC5zZWFyY2ggaW5wdXQuc2VhcmNoXCIsXCIuc2VsZWN0Mi1zZWFyY2gtLWlubGluZVwiLGZ1bmN0aW9uKGUpe2lmKG8mJlwiaW5wdXRcIj09PWUudHlwZSlpLiRzZWxlY3Rpb24ub2ZmKFwiaW5wdXQuc2VhcmNoIGlucHV0LnNlYXJjaGNoZWNrXCIpO2Vsc2V7dmFyIHQ9ZS53aGljaDt0IT1hLlNISUZUJiZ0IT1hLkNUUkwmJnQhPWEuQUxUJiZ0IT1hLlRBQiYmaS5oYW5kbGVTZWFyY2goZSl9fSl9LGUucHJvdG90eXBlLl90cmFuc2ZlclRhYkluZGV4PWZ1bmN0aW9uKGUpe3RoaXMuJHNlYXJjaC5hdHRyKFwidGFiaW5kZXhcIix0aGlzLiRzZWxlY3Rpb24uYXR0cihcInRhYmluZGV4XCIpKSx0aGlzLiRzZWxlY3Rpb24uYXR0cihcInRhYmluZGV4XCIsXCItMVwiKX0sZS5wcm90b3R5cGUuY3JlYXRlUGxhY2Vob2xkZXI9ZnVuY3Rpb24oZSx0KXt0aGlzLiRzZWFyY2guYXR0cihcInBsYWNlaG9sZGVyXCIsdC50ZXh0KX0sZS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcy4kc2VhcmNoWzBdPT1kb2N1bWVudC5hY3RpdmVFbGVtZW50O3RoaXMuJHNlYXJjaC5hdHRyKFwicGxhY2Vob2xkZXJcIixcIlwiKSxlLmNhbGwodGhpcyx0KSx0aGlzLiRzZWxlY3Rpb24uZmluZChcIi5zZWxlY3QyLXNlbGVjdGlvbl9fcmVuZGVyZWRcIikuYXBwZW5kKHRoaXMuJHNlYXJjaENvbnRhaW5lciksdGhpcy5yZXNpemVTZWFyY2goKSxuJiYodGhpcy4kZWxlbWVudC5maW5kKFwiW2RhdGEtc2VsZWN0Mi10YWddXCIpLmxlbmd0aD90aGlzLiRlbGVtZW50LmZvY3VzKCk6dGhpcy4kc2VhcmNoLmZvY3VzKCkpfSxlLnByb3RvdHlwZS5oYW5kbGVTZWFyY2g9ZnVuY3Rpb24oKXtpZih0aGlzLnJlc2l6ZVNlYXJjaCgpLCF0aGlzLl9rZXlVcFByZXZlbnRlZCl7dmFyIGU9dGhpcy4kc2VhcmNoLnZhbCgpO3RoaXMudHJpZ2dlcihcInF1ZXJ5XCIse3Rlcm06ZX0pfXRoaXMuX2tleVVwUHJldmVudGVkPSExfSxlLnByb3RvdHlwZS5zZWFyY2hSZW1vdmVDaG9pY2U9ZnVuY3Rpb24oZSx0KXt0aGlzLnRyaWdnZXIoXCJ1bnNlbGVjdFwiLHtkYXRhOnR9KSx0aGlzLiRzZWFyY2gudmFsKHQudGV4dCksdGhpcy5oYW5kbGVTZWFyY2goKX0sZS5wcm90b3R5cGUucmVzaXplU2VhcmNoPWZ1bmN0aW9uKCl7dGhpcy4kc2VhcmNoLmNzcyhcIndpZHRoXCIsXCIyNXB4XCIpO3ZhciBlPVwiXCI7XCJcIiE9PXRoaXMuJHNlYXJjaC5hdHRyKFwicGxhY2Vob2xkZXJcIik/ZT10aGlzLiRzZWxlY3Rpb24uZmluZChcIi5zZWxlY3QyLXNlbGVjdGlvbl9fcmVuZGVyZWRcIikuaW5uZXJXaWR0aCgpOmU9Ljc1Kih0aGlzLiRzZWFyY2gudmFsKCkubGVuZ3RoKzEpK1wiZW1cIjt0aGlzLiRzZWFyY2guY3NzKFwid2lkdGhcIixlKX0sZX0pLGUuZGVmaW5lKFwic2VsZWN0Mi9zZWxlY3Rpb24vZXZlbnRSZWxheVwiLFtcImpxdWVyeVwiXSxmdW5jdGlvbihzKXtmdW5jdGlvbiBlKCl7fXJldHVybiBlLnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKGUsdCxuKXt2YXIgaT10aGlzLHI9W1wib3BlblwiLFwib3BlbmluZ1wiLFwiY2xvc2VcIixcImNsb3NpbmdcIixcInNlbGVjdFwiLFwic2VsZWN0aW5nXCIsXCJ1bnNlbGVjdFwiLFwidW5zZWxlY3RpbmdcIixcImNsZWFyXCIsXCJjbGVhcmluZ1wiXSxvPVtcIm9wZW5pbmdcIixcImNsb3NpbmdcIixcInNlbGVjdGluZ1wiLFwidW5zZWxlY3RpbmdcIixcImNsZWFyaW5nXCJdO2UuY2FsbCh0aGlzLHQsbiksdC5vbihcIipcIixmdW5jdGlvbihlLHQpe2lmKC0xIT09cy5pbkFycmF5KGUscikpe3Q9dHx8e307dmFyIG49cy5FdmVudChcInNlbGVjdDI6XCIrZSx7cGFyYW1zOnR9KTtpLiRlbGVtZW50LnRyaWdnZXIobiksLTEhPT1zLmluQXJyYXkoZSxvKSYmKHQucHJldmVudGVkPW4uaXNEZWZhdWx0UHJldmVudGVkKCkpfX0pfSxlfSksZS5kZWZpbmUoXCJzZWxlY3QyL3RyYW5zbGF0aW9uXCIsW1wianF1ZXJ5XCIsXCJyZXF1aXJlXCJdLGZ1bmN0aW9uKHQsbil7ZnVuY3Rpb24gaShlKXt0aGlzLmRpY3Q9ZXx8e319cmV0dXJuIGkucHJvdG90eXBlLmFsbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmRpY3R9LGkucHJvdG90eXBlLmdldD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5kaWN0W2VdfSxpLnByb3RvdHlwZS5leHRlbmQ9ZnVuY3Rpb24oZSl7dGhpcy5kaWN0PXQuZXh0ZW5kKHt9LGUuYWxsKCksdGhpcy5kaWN0KX0saS5fY2FjaGU9e30saS5sb2FkUGF0aD1mdW5jdGlvbihlKXtpZighKGUgaW4gaS5fY2FjaGUpKXt2YXIgdD1uKGUpO2kuX2NhY2hlW2VdPXR9cmV0dXJuIG5ldyBpKGkuX2NhY2hlW2VdKX0saX0pLGUuZGVmaW5lKFwic2VsZWN0Mi9kaWFjcml0aWNzXCIsW10sZnVuY3Rpb24oKXtyZXR1cm57XCLikrZcIjpcIkFcIixcIu+8oVwiOlwiQVwiLFwiw4BcIjpcIkFcIixcIsOBXCI6XCJBXCIsXCLDglwiOlwiQVwiLFwi4bqmXCI6XCJBXCIsXCLhuqRcIjpcIkFcIixcIuG6qlwiOlwiQVwiLFwi4bqoXCI6XCJBXCIsXCLDg1wiOlwiQVwiLFwixIBcIjpcIkFcIixcIsSCXCI6XCJBXCIsXCLhurBcIjpcIkFcIixcIuG6rlwiOlwiQVwiLFwi4bq0XCI6XCJBXCIsXCLhurJcIjpcIkFcIixcIsimXCI6XCJBXCIsXCLHoFwiOlwiQVwiLFwiw4RcIjpcIkFcIixcIseeXCI6XCJBXCIsXCLhuqJcIjpcIkFcIixcIsOFXCI6XCJBXCIsXCLHulwiOlwiQVwiLFwix41cIjpcIkFcIixcIsiAXCI6XCJBXCIsXCLIglwiOlwiQVwiLFwi4bqgXCI6XCJBXCIsXCLhuqxcIjpcIkFcIixcIuG6tlwiOlwiQVwiLFwi4biAXCI6XCJBXCIsXCLEhFwiOlwiQVwiLFwiyLpcIjpcIkFcIixcIuKxr1wiOlwiQVwiLFwi6pyyXCI6XCJBQVwiLFwiw4ZcIjpcIkFFXCIsXCLHvFwiOlwiQUVcIixcIseiXCI6XCJBRVwiLFwi6py0XCI6XCJBT1wiLFwi6py2XCI6XCJBVVwiLFwi6py4XCI6XCJBVlwiLFwi6py6XCI6XCJBVlwiLFwi6py8XCI6XCJBWVwiLFwi4pK3XCI6XCJCXCIsXCLvvKJcIjpcIkJcIixcIuG4glwiOlwiQlwiLFwi4biEXCI6XCJCXCIsXCLhuIZcIjpcIkJcIixcIsmDXCI6XCJCXCIsXCLGglwiOlwiQlwiLFwixoFcIjpcIkJcIixcIuKSuFwiOlwiQ1wiLFwi77yjXCI6XCJDXCIsXCLEhlwiOlwiQ1wiLFwixIhcIjpcIkNcIixcIsSKXCI6XCJDXCIsXCLEjFwiOlwiQ1wiLFwiw4dcIjpcIkNcIixcIuG4iFwiOlwiQ1wiLFwixodcIjpcIkNcIixcIsi7XCI6XCJDXCIsXCLqnL5cIjpcIkNcIixcIuKSuVwiOlwiRFwiLFwi77ykXCI6XCJEXCIsXCLhuIpcIjpcIkRcIixcIsSOXCI6XCJEXCIsXCLhuIxcIjpcIkRcIixcIuG4kFwiOlwiRFwiLFwi4biSXCI6XCJEXCIsXCLhuI5cIjpcIkRcIixcIsSQXCI6XCJEXCIsXCLGi1wiOlwiRFwiLFwixopcIjpcIkRcIixcIsaJXCI6XCJEXCIsXCLqnblcIjpcIkRcIixcIsexXCI6XCJEWlwiLFwix4RcIjpcIkRaXCIsXCLHslwiOlwiRHpcIixcIseFXCI6XCJEelwiLFwi4pK6XCI6XCJFXCIsXCLvvKVcIjpcIkVcIixcIsOIXCI6XCJFXCIsXCLDiVwiOlwiRVwiLFwiw4pcIjpcIkVcIixcIuG7gFwiOlwiRVwiLFwi4bq+XCI6XCJFXCIsXCLhu4RcIjpcIkVcIixcIuG7glwiOlwiRVwiLFwi4bq8XCI6XCJFXCIsXCLEklwiOlwiRVwiLFwi4biUXCI6XCJFXCIsXCLhuJZcIjpcIkVcIixcIsSUXCI6XCJFXCIsXCLEllwiOlwiRVwiLFwiw4tcIjpcIkVcIixcIuG6ulwiOlwiRVwiLFwixJpcIjpcIkVcIixcIsiEXCI6XCJFXCIsXCLIhlwiOlwiRVwiLFwi4bq4XCI6XCJFXCIsXCLhu4ZcIjpcIkVcIixcIsioXCI6XCJFXCIsXCLhuJxcIjpcIkVcIixcIsSYXCI6XCJFXCIsXCLhuJhcIjpcIkVcIixcIuG4mlwiOlwiRVwiLFwixpBcIjpcIkVcIixcIsaOXCI6XCJFXCIsXCLikrtcIjpcIkZcIixcIu+8plwiOlwiRlwiLFwi4bieXCI6XCJGXCIsXCLGkVwiOlwiRlwiLFwi6p27XCI6XCJGXCIsXCLikrxcIjpcIkdcIixcIu+8p1wiOlwiR1wiLFwix7RcIjpcIkdcIixcIsScXCI6XCJHXCIsXCLhuKBcIjpcIkdcIixcIsSeXCI6XCJHXCIsXCLEoFwiOlwiR1wiLFwix6ZcIjpcIkdcIixcIsSiXCI6XCJHXCIsXCLHpFwiOlwiR1wiLFwixpNcIjpcIkdcIixcIuqeoFwiOlwiR1wiLFwi6p29XCI6XCJHXCIsXCLqnb5cIjpcIkdcIixcIuKSvVwiOlwiSFwiLFwi77yoXCI6XCJIXCIsXCLEpFwiOlwiSFwiLFwi4biiXCI6XCJIXCIsXCLhuKZcIjpcIkhcIixcIsieXCI6XCJIXCIsXCLhuKRcIjpcIkhcIixcIuG4qFwiOlwiSFwiLFwi4biqXCI6XCJIXCIsXCLEplwiOlwiSFwiLFwi4rGnXCI6XCJIXCIsXCLisbVcIjpcIkhcIixcIuqejVwiOlwiSFwiLFwi4pK+XCI6XCJJXCIsXCLvvKlcIjpcIklcIixcIsOMXCI6XCJJXCIsXCLDjVwiOlwiSVwiLFwiw45cIjpcIklcIixcIsSoXCI6XCJJXCIsXCLEqlwiOlwiSVwiLFwixKxcIjpcIklcIixcIsSwXCI6XCJJXCIsXCLDj1wiOlwiSVwiLFwi4biuXCI6XCJJXCIsXCLhu4hcIjpcIklcIixcIsePXCI6XCJJXCIsXCLIiFwiOlwiSVwiLFwiyIpcIjpcIklcIixcIuG7ilwiOlwiSVwiLFwixK5cIjpcIklcIixcIuG4rFwiOlwiSVwiLFwixpdcIjpcIklcIixcIuKSv1wiOlwiSlwiLFwi77yqXCI6XCJKXCIsXCLEtFwiOlwiSlwiLFwiyYhcIjpcIkpcIixcIuKTgFwiOlwiS1wiLFwi77yrXCI6XCJLXCIsXCLhuLBcIjpcIktcIixcIseoXCI6XCJLXCIsXCLhuLJcIjpcIktcIixcIsS2XCI6XCJLXCIsXCLhuLRcIjpcIktcIixcIsaYXCI6XCJLXCIsXCLisalcIjpcIktcIixcIuqdgFwiOlwiS1wiLFwi6p2CXCI6XCJLXCIsXCLqnYRcIjpcIktcIixcIuqeolwiOlwiS1wiLFwi4pOBXCI6XCJMXCIsXCLvvKxcIjpcIkxcIixcIsS/XCI6XCJMXCIsXCLEuVwiOlwiTFwiLFwixL1cIjpcIkxcIixcIuG4tlwiOlwiTFwiLFwi4bi4XCI6XCJMXCIsXCLEu1wiOlwiTFwiLFwi4bi8XCI6XCJMXCIsXCLhuLpcIjpcIkxcIixcIsWBXCI6XCJMXCIsXCLIvVwiOlwiTFwiLFwi4rGiXCI6XCJMXCIsXCLisaBcIjpcIkxcIixcIuqdiFwiOlwiTFwiLFwi6p2GXCI6XCJMXCIsXCLqnoBcIjpcIkxcIixcIseHXCI6XCJMSlwiLFwix4hcIjpcIkxqXCIsXCLik4JcIjpcIk1cIixcIu+8rVwiOlwiTVwiLFwi4bi+XCI6XCJNXCIsXCLhuYBcIjpcIk1cIixcIuG5glwiOlwiTVwiLFwi4rGuXCI6XCJNXCIsXCLGnFwiOlwiTVwiLFwi4pODXCI6XCJOXCIsXCLvvK5cIjpcIk5cIixcIse4XCI6XCJOXCIsXCLFg1wiOlwiTlwiLFwiw5FcIjpcIk5cIixcIuG5hFwiOlwiTlwiLFwixYdcIjpcIk5cIixcIuG5hlwiOlwiTlwiLFwixYVcIjpcIk5cIixcIuG5ilwiOlwiTlwiLFwi4bmIXCI6XCJOXCIsXCLIoFwiOlwiTlwiLFwixp1cIjpcIk5cIixcIuqekFwiOlwiTlwiLFwi6p6kXCI6XCJOXCIsXCLHilwiOlwiTkpcIixcIseLXCI6XCJOalwiLFwi4pOEXCI6XCJPXCIsXCLvvK9cIjpcIk9cIixcIsOSXCI6XCJPXCIsXCLDk1wiOlwiT1wiLFwiw5RcIjpcIk9cIixcIuG7klwiOlwiT1wiLFwi4buQXCI6XCJPXCIsXCLhu5ZcIjpcIk9cIixcIuG7lFwiOlwiT1wiLFwiw5VcIjpcIk9cIixcIuG5jFwiOlwiT1wiLFwiyKxcIjpcIk9cIixcIuG5jlwiOlwiT1wiLFwixYxcIjpcIk9cIixcIuG5kFwiOlwiT1wiLFwi4bmSXCI6XCJPXCIsXCLFjlwiOlwiT1wiLFwiyK5cIjpcIk9cIixcIsiwXCI6XCJPXCIsXCLDllwiOlwiT1wiLFwiyKpcIjpcIk9cIixcIuG7jlwiOlwiT1wiLFwixZBcIjpcIk9cIixcIseRXCI6XCJPXCIsXCLIjFwiOlwiT1wiLFwiyI5cIjpcIk9cIixcIsagXCI6XCJPXCIsXCLhu5xcIjpcIk9cIixcIuG7mlwiOlwiT1wiLFwi4bugXCI6XCJPXCIsXCLhu55cIjpcIk9cIixcIuG7olwiOlwiT1wiLFwi4buMXCI6XCJPXCIsXCLhu5hcIjpcIk9cIixcIseqXCI6XCJPXCIsXCLHrFwiOlwiT1wiLFwiw5hcIjpcIk9cIixcIse+XCI6XCJPXCIsXCLGhlwiOlwiT1wiLFwixp9cIjpcIk9cIixcIuqdilwiOlwiT1wiLFwi6p2MXCI6XCJPXCIsXCLFklwiOlwiT0VcIixcIsaiXCI6XCJPSVwiLFwi6p2OXCI6XCJPT1wiLFwiyKJcIjpcIk9VXCIsXCLik4VcIjpcIlBcIixcIu+8sFwiOlwiUFwiLFwi4bmUXCI6XCJQXCIsXCLhuZZcIjpcIlBcIixcIsakXCI6XCJQXCIsXCLisaNcIjpcIlBcIixcIuqdkFwiOlwiUFwiLFwi6p2SXCI6XCJQXCIsXCLqnZRcIjpcIlBcIixcIuKThlwiOlwiUVwiLFwi77yxXCI6XCJRXCIsXCLqnZZcIjpcIlFcIixcIuqdmFwiOlwiUVwiLFwiyYpcIjpcIlFcIixcIuKTh1wiOlwiUlwiLFwi77yyXCI6XCJSXCIsXCLFlFwiOlwiUlwiLFwi4bmYXCI6XCJSXCIsXCLFmFwiOlwiUlwiLFwiyJBcIjpcIlJcIixcIsiSXCI6XCJSXCIsXCLhuZpcIjpcIlJcIixcIuG5nFwiOlwiUlwiLFwixZZcIjpcIlJcIixcIuG5nlwiOlwiUlwiLFwiyYxcIjpcIlJcIixcIuKxpFwiOlwiUlwiLFwi6p2aXCI6XCJSXCIsXCLqnqZcIjpcIlJcIixcIuqeglwiOlwiUlwiLFwi4pOIXCI6XCJTXCIsXCLvvLNcIjpcIlNcIixcIuG6nlwiOlwiU1wiLFwixZpcIjpcIlNcIixcIuG5pFwiOlwiU1wiLFwixZxcIjpcIlNcIixcIuG5oFwiOlwiU1wiLFwixaBcIjpcIlNcIixcIuG5plwiOlwiU1wiLFwi4bmiXCI6XCJTXCIsXCLhuahcIjpcIlNcIixcIsiYXCI6XCJTXCIsXCLFnlwiOlwiU1wiLFwi4rG+XCI6XCJTXCIsXCLqnqhcIjpcIlNcIixcIuqehFwiOlwiU1wiLFwi4pOJXCI6XCJUXCIsXCLvvLRcIjpcIlRcIixcIuG5qlwiOlwiVFwiLFwixaRcIjpcIlRcIixcIuG5rFwiOlwiVFwiLFwiyJpcIjpcIlRcIixcIsWiXCI6XCJUXCIsXCLhubBcIjpcIlRcIixcIuG5rlwiOlwiVFwiLFwixaZcIjpcIlRcIixcIsasXCI6XCJUXCIsXCLGrlwiOlwiVFwiLFwiyL5cIjpcIlRcIixcIuqehlwiOlwiVFwiLFwi6pyoXCI6XCJUWlwiLFwi4pOKXCI6XCJVXCIsXCLvvLVcIjpcIlVcIixcIsOZXCI6XCJVXCIsXCLDmlwiOlwiVVwiLFwiw5tcIjpcIlVcIixcIsWoXCI6XCJVXCIsXCLhubhcIjpcIlVcIixcIsWqXCI6XCJVXCIsXCLhubpcIjpcIlVcIixcIsWsXCI6XCJVXCIsXCLDnFwiOlwiVVwiLFwix5tcIjpcIlVcIixcIseXXCI6XCJVXCIsXCLHlVwiOlwiVVwiLFwix5lcIjpcIlVcIixcIuG7plwiOlwiVVwiLFwixa5cIjpcIlVcIixcIsWwXCI6XCJVXCIsXCLHk1wiOlwiVVwiLFwiyJRcIjpcIlVcIixcIsiWXCI6XCJVXCIsXCLGr1wiOlwiVVwiLFwi4buqXCI6XCJVXCIsXCLhu6hcIjpcIlVcIixcIuG7rlwiOlwiVVwiLFwi4busXCI6XCJVXCIsXCLhu7BcIjpcIlVcIixcIuG7pFwiOlwiVVwiLFwi4bmyXCI6XCJVXCIsXCLFslwiOlwiVVwiLFwi4bm2XCI6XCJVXCIsXCLhubRcIjpcIlVcIixcIsmEXCI6XCJVXCIsXCLik4tcIjpcIlZcIixcIu+8tlwiOlwiVlwiLFwi4bm8XCI6XCJWXCIsXCLhub5cIjpcIlZcIixcIsayXCI6XCJWXCIsXCLqnZ5cIjpcIlZcIixcIsmFXCI6XCJWXCIsXCLqnaBcIjpcIlZZXCIsXCLik4xcIjpcIldcIixcIu+8t1wiOlwiV1wiLFwi4bqAXCI6XCJXXCIsXCLhuoJcIjpcIldcIixcIsW0XCI6XCJXXCIsXCLhuoZcIjpcIldcIixcIuG6hFwiOlwiV1wiLFwi4bqIXCI6XCJXXCIsXCLisbJcIjpcIldcIixcIuKTjVwiOlwiWFwiLFwi77y4XCI6XCJYXCIsXCLhuopcIjpcIlhcIixcIuG6jFwiOlwiWFwiLFwi4pOOXCI6XCJZXCIsXCLvvLlcIjpcIllcIixcIuG7slwiOlwiWVwiLFwiw51cIjpcIllcIixcIsW2XCI6XCJZXCIsXCLhu7hcIjpcIllcIixcIsiyXCI6XCJZXCIsXCLhuo5cIjpcIllcIixcIsW4XCI6XCJZXCIsXCLhu7ZcIjpcIllcIixcIuG7tFwiOlwiWVwiLFwixrNcIjpcIllcIixcIsmOXCI6XCJZXCIsXCLhu75cIjpcIllcIixcIuKTj1wiOlwiWlwiLFwi77y6XCI6XCJaXCIsXCLFuVwiOlwiWlwiLFwi4bqQXCI6XCJaXCIsXCLFu1wiOlwiWlwiLFwixb1cIjpcIlpcIixcIuG6klwiOlwiWlwiLFwi4bqUXCI6XCJaXCIsXCLGtVwiOlwiWlwiLFwiyKRcIjpcIlpcIixcIuKxv1wiOlwiWlwiLFwi4rGrXCI6XCJaXCIsXCLqnaJcIjpcIlpcIixcIuKTkFwiOlwiYVwiLFwi772BXCI6XCJhXCIsXCLhuppcIjpcImFcIixcIsOgXCI6XCJhXCIsXCLDoVwiOlwiYVwiLFwiw6JcIjpcImFcIixcIuG6p1wiOlwiYVwiLFwi4bqlXCI6XCJhXCIsXCLhuqtcIjpcImFcIixcIuG6qVwiOlwiYVwiLFwiw6NcIjpcImFcIixcIsSBXCI6XCJhXCIsXCLEg1wiOlwiYVwiLFwi4bqxXCI6XCJhXCIsXCLhuq9cIjpcImFcIixcIuG6tVwiOlwiYVwiLFwi4bqzXCI6XCJhXCIsXCLIp1wiOlwiYVwiLFwix6FcIjpcImFcIixcIsOkXCI6XCJhXCIsXCLHn1wiOlwiYVwiLFwi4bqjXCI6XCJhXCIsXCLDpVwiOlwiYVwiLFwix7tcIjpcImFcIixcIseOXCI6XCJhXCIsXCLIgVwiOlwiYVwiLFwiyINcIjpcImFcIixcIuG6oVwiOlwiYVwiLFwi4bqtXCI6XCJhXCIsXCLhurdcIjpcImFcIixcIuG4gVwiOlwiYVwiLFwixIVcIjpcImFcIixcIuKxpVwiOlwiYVwiLFwiyZBcIjpcImFcIixcIuqcs1wiOlwiYWFcIixcIsOmXCI6XCJhZVwiLFwix71cIjpcImFlXCIsXCLHo1wiOlwiYWVcIixcIuqctVwiOlwiYW9cIixcIuqct1wiOlwiYXVcIixcIuqcuVwiOlwiYXZcIixcIuqcu1wiOlwiYXZcIixcIuqcvVwiOlwiYXlcIixcIuKTkVwiOlwiYlwiLFwi772CXCI6XCJiXCIsXCLhuINcIjpcImJcIixcIuG4hVwiOlwiYlwiLFwi4biHXCI6XCJiXCIsXCLGgFwiOlwiYlwiLFwixoNcIjpcImJcIixcIsmTXCI6XCJiXCIsXCLik5JcIjpcImNcIixcIu+9g1wiOlwiY1wiLFwixIdcIjpcImNcIixcIsSJXCI6XCJjXCIsXCLEi1wiOlwiY1wiLFwixI1cIjpcImNcIixcIsOnXCI6XCJjXCIsXCLhuIlcIjpcImNcIixcIsaIXCI6XCJjXCIsXCLIvFwiOlwiY1wiLFwi6py/XCI6XCJjXCIsXCLihoRcIjpcImNcIixcIuKTk1wiOlwiZFwiLFwi772EXCI6XCJkXCIsXCLhuItcIjpcImRcIixcIsSPXCI6XCJkXCIsXCLhuI1cIjpcImRcIixcIuG4kVwiOlwiZFwiLFwi4biTXCI6XCJkXCIsXCLhuI9cIjpcImRcIixcIsSRXCI6XCJkXCIsXCLGjFwiOlwiZFwiLFwiyZZcIjpcImRcIixcIsmXXCI6XCJkXCIsXCLqnbpcIjpcImRcIixcIsezXCI6XCJkelwiLFwix4ZcIjpcImR6XCIsXCLik5RcIjpcImVcIixcIu+9hVwiOlwiZVwiLFwiw6hcIjpcImVcIixcIsOpXCI6XCJlXCIsXCLDqlwiOlwiZVwiLFwi4buBXCI6XCJlXCIsXCLhur9cIjpcImVcIixcIuG7hVwiOlwiZVwiLFwi4buDXCI6XCJlXCIsXCLhur1cIjpcImVcIixcIsSTXCI6XCJlXCIsXCLhuJVcIjpcImVcIixcIuG4l1wiOlwiZVwiLFwixJVcIjpcImVcIixcIsSXXCI6XCJlXCIsXCLDq1wiOlwiZVwiLFwi4bq7XCI6XCJlXCIsXCLEm1wiOlwiZVwiLFwiyIVcIjpcImVcIixcIsiHXCI6XCJlXCIsXCLhurlcIjpcImVcIixcIuG7h1wiOlwiZVwiLFwiyKlcIjpcImVcIixcIuG4nVwiOlwiZVwiLFwixJlcIjpcImVcIixcIuG4mVwiOlwiZVwiLFwi4bibXCI6XCJlXCIsXCLJh1wiOlwiZVwiLFwiyZtcIjpcImVcIixcIsedXCI6XCJlXCIsXCLik5VcIjpcImZcIixcIu+9hlwiOlwiZlwiLFwi4bifXCI6XCJmXCIsXCLGklwiOlwiZlwiLFwi6p28XCI6XCJmXCIsXCLik5ZcIjpcImdcIixcIu+9h1wiOlwiZ1wiLFwix7VcIjpcImdcIixcIsSdXCI6XCJnXCIsXCLhuKFcIjpcImdcIixcIsSfXCI6XCJnXCIsXCLEoVwiOlwiZ1wiLFwix6dcIjpcImdcIixcIsSjXCI6XCJnXCIsXCLHpVwiOlwiZ1wiLFwiyaBcIjpcImdcIixcIuqeoVwiOlwiZ1wiLFwi4bW5XCI6XCJnXCIsXCLqnb9cIjpcImdcIixcIuKTl1wiOlwiaFwiLFwi772IXCI6XCJoXCIsXCLEpVwiOlwiaFwiLFwi4bijXCI6XCJoXCIsXCLhuKdcIjpcImhcIixcIsifXCI6XCJoXCIsXCLhuKVcIjpcImhcIixcIuG4qVwiOlwiaFwiLFwi4birXCI6XCJoXCIsXCLhupZcIjpcImhcIixcIsSnXCI6XCJoXCIsXCLisahcIjpcImhcIixcIuKxtlwiOlwiaFwiLFwiyaVcIjpcImhcIixcIsaVXCI6XCJodlwiLFwi4pOYXCI6XCJpXCIsXCLvvYlcIjpcImlcIixcIsOsXCI6XCJpXCIsXCLDrVwiOlwiaVwiLFwiw65cIjpcImlcIixcIsSpXCI6XCJpXCIsXCLEq1wiOlwiaVwiLFwixK1cIjpcImlcIixcIsOvXCI6XCJpXCIsXCLhuK9cIjpcImlcIixcIuG7iVwiOlwiaVwiLFwix5BcIjpcImlcIixcIsiJXCI6XCJpXCIsXCLIi1wiOlwiaVwiLFwi4buLXCI6XCJpXCIsXCLEr1wiOlwiaVwiLFwi4bitXCI6XCJpXCIsXCLJqFwiOlwiaVwiLFwixLFcIjpcImlcIixcIuKTmVwiOlwialwiLFwi772KXCI6XCJqXCIsXCLEtVwiOlwialwiLFwix7BcIjpcImpcIixcIsmJXCI6XCJqXCIsXCLik5pcIjpcImtcIixcIu+9i1wiOlwia1wiLFwi4bixXCI6XCJrXCIsXCLHqVwiOlwia1wiLFwi4bizXCI6XCJrXCIsXCLEt1wiOlwia1wiLFwi4bi1XCI6XCJrXCIsXCLGmVwiOlwia1wiLFwi4rGqXCI6XCJrXCIsXCLqnYFcIjpcImtcIixcIuqdg1wiOlwia1wiLFwi6p2FXCI6XCJrXCIsXCLqnqNcIjpcImtcIixcIuKTm1wiOlwibFwiLFwi772MXCI6XCJsXCIsXCLFgFwiOlwibFwiLFwixLpcIjpcImxcIixcIsS+XCI6XCJsXCIsXCLhuLdcIjpcImxcIixcIuG4uVwiOlwibFwiLFwixLxcIjpcImxcIixcIuG4vVwiOlwibFwiLFwi4bi7XCI6XCJsXCIsXCLFv1wiOlwibFwiLFwixYJcIjpcImxcIixcIsaaXCI6XCJsXCIsXCLJq1wiOlwibFwiLFwi4rGhXCI6XCJsXCIsXCLqnYlcIjpcImxcIixcIuqegVwiOlwibFwiLFwi6p2HXCI6XCJsXCIsXCLHiVwiOlwibGpcIixcIuKTnFwiOlwibVwiLFwi772NXCI6XCJtXCIsXCLhuL9cIjpcIm1cIixcIuG5gVwiOlwibVwiLFwi4bmDXCI6XCJtXCIsXCLJsVwiOlwibVwiLFwiya9cIjpcIm1cIixcIuKTnVwiOlwiblwiLFwi772OXCI6XCJuXCIsXCLHuVwiOlwiblwiLFwixYRcIjpcIm5cIixcIsOxXCI6XCJuXCIsXCLhuYVcIjpcIm5cIixcIsWIXCI6XCJuXCIsXCLhuYdcIjpcIm5cIixcIsWGXCI6XCJuXCIsXCLhuYtcIjpcIm5cIixcIuG5iVwiOlwiblwiLFwixp5cIjpcIm5cIixcIsmyXCI6XCJuXCIsXCLFiVwiOlwiblwiLFwi6p6RXCI6XCJuXCIsXCLqnqVcIjpcIm5cIixcIseMXCI6XCJualwiLFwi4pOeXCI6XCJvXCIsXCLvvY9cIjpcIm9cIixcIsOyXCI6XCJvXCIsXCLDs1wiOlwib1wiLFwiw7RcIjpcIm9cIixcIuG7k1wiOlwib1wiLFwi4buRXCI6XCJvXCIsXCLhu5dcIjpcIm9cIixcIuG7lVwiOlwib1wiLFwiw7VcIjpcIm9cIixcIuG5jVwiOlwib1wiLFwiyK1cIjpcIm9cIixcIuG5j1wiOlwib1wiLFwixY1cIjpcIm9cIixcIuG5kVwiOlwib1wiLFwi4bmTXCI6XCJvXCIsXCLFj1wiOlwib1wiLFwiyK9cIjpcIm9cIixcIsixXCI6XCJvXCIsXCLDtlwiOlwib1wiLFwiyKtcIjpcIm9cIixcIuG7j1wiOlwib1wiLFwixZFcIjpcIm9cIixcIseSXCI6XCJvXCIsXCLIjVwiOlwib1wiLFwiyI9cIjpcIm9cIixcIsahXCI6XCJvXCIsXCLhu51cIjpcIm9cIixcIuG7m1wiOlwib1wiLFwi4buhXCI6XCJvXCIsXCLhu59cIjpcIm9cIixcIuG7o1wiOlwib1wiLFwi4buNXCI6XCJvXCIsXCLhu5lcIjpcIm9cIixcIserXCI6XCJvXCIsXCLHrVwiOlwib1wiLFwiw7hcIjpcIm9cIixcIse/XCI6XCJvXCIsXCLJlFwiOlwib1wiLFwi6p2LXCI6XCJvXCIsXCLqnY1cIjpcIm9cIixcIsm1XCI6XCJvXCIsXCLFk1wiOlwib2VcIixcIsajXCI6XCJvaVwiLFwiyKNcIjpcIm91XCIsXCLqnY9cIjpcIm9vXCIsXCLik59cIjpcInBcIixcIu+9kFwiOlwicFwiLFwi4bmVXCI6XCJwXCIsXCLhuZdcIjpcInBcIixcIsalXCI6XCJwXCIsXCLhtb1cIjpcInBcIixcIuqdkVwiOlwicFwiLFwi6p2TXCI6XCJwXCIsXCLqnZVcIjpcInBcIixcIuKToFwiOlwicVwiLFwi772RXCI6XCJxXCIsXCLJi1wiOlwicVwiLFwi6p2XXCI6XCJxXCIsXCLqnZlcIjpcInFcIixcIuKToVwiOlwiclwiLFwi772SXCI6XCJyXCIsXCLFlVwiOlwiclwiLFwi4bmZXCI6XCJyXCIsXCLFmVwiOlwiclwiLFwiyJFcIjpcInJcIixcIsiTXCI6XCJyXCIsXCLhuZtcIjpcInJcIixcIuG5nVwiOlwiclwiLFwixZdcIjpcInJcIixcIuG5n1wiOlwiclwiLFwiyY1cIjpcInJcIixcIsm9XCI6XCJyXCIsXCLqnZtcIjpcInJcIixcIuqep1wiOlwiclwiLFwi6p6DXCI6XCJyXCIsXCLik6JcIjpcInNcIixcIu+9k1wiOlwic1wiLFwiw59cIjpcInNcIixcIsWbXCI6XCJzXCIsXCLhuaVcIjpcInNcIixcIsWdXCI6XCJzXCIsXCLhuaFcIjpcInNcIixcIsWhXCI6XCJzXCIsXCLhuadcIjpcInNcIixcIuG5o1wiOlwic1wiLFwi4bmpXCI6XCJzXCIsXCLImVwiOlwic1wiLFwixZ9cIjpcInNcIixcIsi/XCI6XCJzXCIsXCLqnqlcIjpcInNcIixcIuqehVwiOlwic1wiLFwi4bqbXCI6XCJzXCIsXCLik6NcIjpcInRcIixcIu+9lFwiOlwidFwiLFwi4bmrXCI6XCJ0XCIsXCLhupdcIjpcInRcIixcIsWlXCI6XCJ0XCIsXCLhua1cIjpcInRcIixcIsibXCI6XCJ0XCIsXCLFo1wiOlwidFwiLFwi4bmxXCI6XCJ0XCIsXCLhua9cIjpcInRcIixcIsWnXCI6XCJ0XCIsXCLGrVwiOlwidFwiLFwiyohcIjpcInRcIixcIuKxplwiOlwidFwiLFwi6p6HXCI6XCJ0XCIsXCLqnKlcIjpcInR6XCIsXCLik6RcIjpcInVcIixcIu+9lVwiOlwidVwiLFwiw7lcIjpcInVcIixcIsO6XCI6XCJ1XCIsXCLDu1wiOlwidVwiLFwixalcIjpcInVcIixcIuG5uVwiOlwidVwiLFwixatcIjpcInVcIixcIuG5u1wiOlwidVwiLFwixa1cIjpcInVcIixcIsO8XCI6XCJ1XCIsXCLHnFwiOlwidVwiLFwix5hcIjpcInVcIixcIseWXCI6XCJ1XCIsXCLHmlwiOlwidVwiLFwi4bunXCI6XCJ1XCIsXCLFr1wiOlwidVwiLFwixbFcIjpcInVcIixcIseUXCI6XCJ1XCIsXCLIlVwiOlwidVwiLFwiyJdcIjpcInVcIixcIsawXCI6XCJ1XCIsXCLhu6tcIjpcInVcIixcIuG7qVwiOlwidVwiLFwi4buvXCI6XCJ1XCIsXCLhu61cIjpcInVcIixcIuG7sVwiOlwidVwiLFwi4bulXCI6XCJ1XCIsXCLhubNcIjpcInVcIixcIsWzXCI6XCJ1XCIsXCLhubdcIjpcInVcIixcIuG5tVwiOlwidVwiLFwiyolcIjpcInVcIixcIuKTpVwiOlwidlwiLFwi772WXCI6XCJ2XCIsXCLhub1cIjpcInZcIixcIuG5v1wiOlwidlwiLFwiyotcIjpcInZcIixcIuqdn1wiOlwidlwiLFwiyoxcIjpcInZcIixcIuqdoVwiOlwidnlcIixcIuKTplwiOlwid1wiLFwi772XXCI6XCJ3XCIsXCLhuoFcIjpcIndcIixcIuG6g1wiOlwid1wiLFwixbVcIjpcIndcIixcIuG6h1wiOlwid1wiLFwi4bqFXCI6XCJ3XCIsXCLhuphcIjpcIndcIixcIuG6iVwiOlwid1wiLFwi4rGzXCI6XCJ3XCIsXCLik6dcIjpcInhcIixcIu+9mFwiOlwieFwiLFwi4bqLXCI6XCJ4XCIsXCLhuo1cIjpcInhcIixcIuKTqFwiOlwieVwiLFwi772ZXCI6XCJ5XCIsXCLhu7NcIjpcInlcIixcIsO9XCI6XCJ5XCIsXCLFt1wiOlwieVwiLFwi4bu5XCI6XCJ5XCIsXCLIs1wiOlwieVwiLFwi4bqPXCI6XCJ5XCIsXCLDv1wiOlwieVwiLFwi4bu3XCI6XCJ5XCIsXCLhuplcIjpcInlcIixcIuG7tVwiOlwieVwiLFwixrRcIjpcInlcIixcIsmPXCI6XCJ5XCIsXCLhu79cIjpcInlcIixcIuKTqVwiOlwielwiLFwi772aXCI6XCJ6XCIsXCLFulwiOlwielwiLFwi4bqRXCI6XCJ6XCIsXCLFvFwiOlwielwiLFwixb5cIjpcInpcIixcIuG6k1wiOlwielwiLFwi4bqVXCI6XCJ6XCIsXCLGtlwiOlwielwiLFwiyKVcIjpcInpcIixcIsmAXCI6XCJ6XCIsXCLisaxcIjpcInpcIixcIuqdo1wiOlwielwiLFwizoZcIjpcIs6RXCIsXCLOiFwiOlwizpVcIixcIs6JXCI6XCLOl1wiLFwizopcIjpcIs6ZXCIsXCLOqlwiOlwizplcIixcIs6MXCI6XCLOn1wiLFwizo5cIjpcIs6lXCIsXCLOq1wiOlwizqVcIixcIs6PXCI6XCLOqVwiLFwizqxcIjpcIs6xXCIsXCLOrVwiOlwizrVcIixcIs6uXCI6XCLOt1wiLFwizq9cIjpcIs65XCIsXCLPilwiOlwizrlcIixcIs6QXCI6XCLOuVwiLFwiz4xcIjpcIs6/XCIsXCLPjVwiOlwiz4VcIixcIs+LXCI6XCLPhVwiLFwizrBcIjpcIs+FXCIsXCLPjlwiOlwiz4lcIixcIs+CXCI6XCLPg1wiLFwi4oCZXCI6XCInXCJ9fSksZS5kZWZpbmUoXCJzZWxlY3QyL2RhdGEvYmFzZVwiLFtcIi4uL3V0aWxzXCJdLGZ1bmN0aW9uKGkpe2Z1bmN0aW9uIG4oZSx0KXtuLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpfXJldHVybiBpLkV4dGVuZChuLGkuT2JzZXJ2YWJsZSksbi5wcm90b3R5cGUuY3VycmVudD1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJUaGUgYGN1cnJlbnRgIG1ldGhvZCBtdXN0IGJlIGRlZmluZWQgaW4gY2hpbGQgY2xhc3Nlcy5cIil9LG4ucHJvdG90eXBlLnF1ZXJ5PWZ1bmN0aW9uKGUsdCl7dGhyb3cgbmV3IEVycm9yKFwiVGhlIGBxdWVyeWAgbWV0aG9kIG11c3QgYmUgZGVmaW5lZCBpbiBjaGlsZCBjbGFzc2VzLlwiKX0sbi5wcm90b3R5cGUuYmluZD1mdW5jdGlvbihlLHQpe30sbi5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe30sbi5wcm90b3R5cGUuZ2VuZXJhdGVSZXN1bHRJZD1mdW5jdGlvbihlLHQpe3ZhciBuPWUuaWQrXCItcmVzdWx0LVwiO3JldHVybiBuKz1pLmdlbmVyYXRlQ2hhcnMoNCksbnVsbCE9dC5pZD9uKz1cIi1cIit0LmlkLnRvU3RyaW5nKCk6bis9XCItXCIraS5nZW5lcmF0ZUNoYXJzKDQpLG59LG59KSxlLmRlZmluZShcInNlbGVjdDIvZGF0YS9zZWxlY3RcIixbXCIuL2Jhc2VcIixcIi4uL3V0aWxzXCIsXCJqcXVlcnlcIl0sZnVuY3Rpb24oZSxhLGwpe2Z1bmN0aW9uIG4oZSx0KXt0aGlzLiRlbGVtZW50PWUsdGhpcy5vcHRpb25zPXQsbi5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzKX1yZXR1cm4gYS5FeHRlbmQobixlKSxuLnByb3RvdHlwZS5jdXJyZW50PWZ1bmN0aW9uKGUpe3ZhciBuPVtdLGk9dGhpczt0aGlzLiRlbGVtZW50LmZpbmQoXCI6c2VsZWN0ZWRcIikuZWFjaChmdW5jdGlvbigpe3ZhciBlPWwodGhpcyksdD1pLml0ZW0oZSk7bi5wdXNoKHQpfSksZShuKX0sbi5wcm90b3R5cGUuc2VsZWN0PWZ1bmN0aW9uKHIpe3ZhciBvPXRoaXM7aWYoci5zZWxlY3RlZD0hMCxsKHIuZWxlbWVudCkuaXMoXCJvcHRpb25cIikpcmV0dXJuIHIuZWxlbWVudC5zZWxlY3RlZD0hMCx2b2lkIHRoaXMuJGVsZW1lbnQudHJpZ2dlcihcImNoYW5nZVwiKTtpZih0aGlzLiRlbGVtZW50LnByb3AoXCJtdWx0aXBsZVwiKSl0aGlzLmN1cnJlbnQoZnVuY3Rpb24oZSl7dmFyIHQ9W107KHI9W3JdKS5wdXNoLmFwcGx5KHIsZSk7Zm9yKHZhciBuPTA7bjxyLmxlbmd0aDtuKyspe3ZhciBpPXJbbl0uaWQ7LTE9PT1sLmluQXJyYXkoaSx0KSYmdC5wdXNoKGkpfW8uJGVsZW1lbnQudmFsKHQpLG8uJGVsZW1lbnQudHJpZ2dlcihcImNoYW5nZVwiKX0pO2Vsc2V7dmFyIGU9ci5pZDt0aGlzLiRlbGVtZW50LnZhbChlKSx0aGlzLiRlbGVtZW50LnRyaWdnZXIoXCJjaGFuZ2VcIil9fSxuLnByb3RvdHlwZS51bnNlbGVjdD1mdW5jdGlvbihyKXt2YXIgbz10aGlzO2lmKHRoaXMuJGVsZW1lbnQucHJvcChcIm11bHRpcGxlXCIpKXtpZihyLnNlbGVjdGVkPSExLGwoci5lbGVtZW50KS5pcyhcIm9wdGlvblwiKSlyZXR1cm4gci5lbGVtZW50LnNlbGVjdGVkPSExLHZvaWQgdGhpcy4kZWxlbWVudC50cmlnZ2VyKFwiY2hhbmdlXCIpO3RoaXMuY3VycmVudChmdW5jdGlvbihlKXtmb3IodmFyIHQ9W10sbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgaT1lW25dLmlkO2khPT1yLmlkJiYtMT09PWwuaW5BcnJheShpLHQpJiZ0LnB1c2goaSl9by4kZWxlbWVudC52YWwodCksby4kZWxlbWVudC50cmlnZ2VyKFwiY2hhbmdlXCIpfSl9fSxuLnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpczsodGhpcy5jb250YWluZXI9ZSkub24oXCJzZWxlY3RcIixmdW5jdGlvbihlKXtuLnNlbGVjdChlLmRhdGEpfSksZS5vbihcInVuc2VsZWN0XCIsZnVuY3Rpb24oZSl7bi51bnNlbGVjdChlLmRhdGEpfSl9LG4ucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLiRlbGVtZW50LmZpbmQoXCIqXCIpLmVhY2goZnVuY3Rpb24oKXthLlJlbW92ZURhdGEodGhpcyl9KX0sbi5wcm90b3R5cGUucXVlcnk9ZnVuY3Rpb24oaSxlKXt2YXIgcj1bXSxvPXRoaXM7dGhpcy4kZWxlbWVudC5jaGlsZHJlbigpLmVhY2goZnVuY3Rpb24oKXt2YXIgZT1sKHRoaXMpO2lmKGUuaXMoXCJvcHRpb25cIil8fGUuaXMoXCJvcHRncm91cFwiKSl7dmFyIHQ9by5pdGVtKGUpLG49by5tYXRjaGVzKGksdCk7bnVsbCE9PW4mJnIucHVzaChuKX19KSxlKHtyZXN1bHRzOnJ9KX0sbi5wcm90b3R5cGUuYWRkT3B0aW9ucz1mdW5jdGlvbihlKXthLmFwcGVuZE1hbnkodGhpcy4kZWxlbWVudCxlKX0sbi5wcm90b3R5cGUub3B0aW9uPWZ1bmN0aW9uKGUpe3ZhciB0O2UuY2hpbGRyZW4/KHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGdyb3VwXCIpKS5sYWJlbD1lLnRleHQ6dm9pZCAwIT09KHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKSkudGV4dENvbnRlbnQ/dC50ZXh0Q29udGVudD1lLnRleHQ6dC5pbm5lclRleHQ9ZS50ZXh0LHZvaWQgMCE9PWUuaWQmJih0LnZhbHVlPWUuaWQpLGUuZGlzYWJsZWQmJih0LmRpc2FibGVkPSEwKSxlLnNlbGVjdGVkJiYodC5zZWxlY3RlZD0hMCksZS50aXRsZSYmKHQudGl0bGU9ZS50aXRsZSk7dmFyIG49bCh0KSxpPXRoaXMuX25vcm1hbGl6ZUl0ZW0oZSk7cmV0dXJuIGkuZWxlbWVudD10LGEuU3RvcmVEYXRhKHQsXCJkYXRhXCIsaSksbn0sbi5wcm90b3R5cGUuaXRlbT1mdW5jdGlvbihlKXt2YXIgdD17fTtpZihudWxsIT0odD1hLkdldERhdGEoZVswXSxcImRhdGFcIikpKXJldHVybiB0O2lmKGUuaXMoXCJvcHRpb25cIikpdD17aWQ6ZS52YWwoKSx0ZXh0OmUudGV4dCgpLGRpc2FibGVkOmUucHJvcChcImRpc2FibGVkXCIpLHNlbGVjdGVkOmUucHJvcChcInNlbGVjdGVkXCIpLHRpdGxlOmUucHJvcChcInRpdGxlXCIpfTtlbHNlIGlmKGUuaXMoXCJvcHRncm91cFwiKSl7dD17dGV4dDplLnByb3AoXCJsYWJlbFwiKSxjaGlsZHJlbjpbXSx0aXRsZTplLnByb3AoXCJ0aXRsZVwiKX07Zm9yKHZhciBuPWUuY2hpbGRyZW4oXCJvcHRpb25cIiksaT1bXSxyPTA7cjxuLmxlbmd0aDtyKyspe3ZhciBvPWwobltyXSkscz10aGlzLml0ZW0obyk7aS5wdXNoKHMpfXQuY2hpbGRyZW49aX1yZXR1cm4odD10aGlzLl9ub3JtYWxpemVJdGVtKHQpKS5lbGVtZW50PWVbMF0sYS5TdG9yZURhdGEoZVswXSxcImRhdGFcIix0KSx0fSxuLnByb3RvdHlwZS5fbm9ybWFsaXplSXRlbT1mdW5jdGlvbihlKXtlIT09T2JqZWN0KGUpJiYoZT17aWQ6ZSx0ZXh0OmV9KTtyZXR1cm4gbnVsbCE9KGU9bC5leHRlbmQoe30se3RleHQ6XCJcIn0sZSkpLmlkJiYoZS5pZD1lLmlkLnRvU3RyaW5nKCkpLG51bGwhPWUudGV4dCYmKGUudGV4dD1lLnRleHQudG9TdHJpbmcoKSksbnVsbD09ZS5fcmVzdWx0SWQmJmUuaWQmJm51bGwhPXRoaXMuY29udGFpbmVyJiYoZS5fcmVzdWx0SWQ9dGhpcy5nZW5lcmF0ZVJlc3VsdElkKHRoaXMuY29udGFpbmVyLGUpKSxsLmV4dGVuZCh7fSx7c2VsZWN0ZWQ6ITEsZGlzYWJsZWQ6ITF9LGUpfSxuLnByb3RvdHlwZS5tYXRjaGVzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMub3B0aW9ucy5nZXQoXCJtYXRjaGVyXCIpKGUsdCl9LG59KSxlLmRlZmluZShcInNlbGVjdDIvZGF0YS9hcnJheVwiLFtcIi4vc2VsZWN0XCIsXCIuLi91dGlsc1wiLFwianF1ZXJ5XCJdLGZ1bmN0aW9uKGUsZixnKXtmdW5jdGlvbiBpKGUsdCl7dmFyIG49dC5nZXQoXCJkYXRhXCIpfHxbXTtpLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsZSx0KSx0aGlzLmFkZE9wdGlvbnModGhpcy5jb252ZXJ0VG9PcHRpb25zKG4pKX1yZXR1cm4gZi5FeHRlbmQoaSxlKSxpLnByb3RvdHlwZS5zZWxlY3Q9ZnVuY3Rpb24obil7dmFyIGU9dGhpcy4kZWxlbWVudC5maW5kKFwib3B0aW9uXCIpLmZpbHRlcihmdW5jdGlvbihlLHQpe3JldHVybiB0LnZhbHVlPT1uLmlkLnRvU3RyaW5nKCl9KTswPT09ZS5sZW5ndGgmJihlPXRoaXMub3B0aW9uKG4pLHRoaXMuYWRkT3B0aW9ucyhlKSksaS5fX3N1cGVyX18uc2VsZWN0LmNhbGwodGhpcyxuKX0saS5wcm90b3R5cGUuY29udmVydFRvT3B0aW9ucz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLG49dGhpcy4kZWxlbWVudC5maW5kKFwib3B0aW9uXCIpLGk9bi5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gdC5pdGVtKGcodGhpcykpLmlkfSkuZ2V0KCkscj1bXTtmdW5jdGlvbiBvKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBnKHRoaXMpLnZhbCgpPT1lLmlkfX1mb3IodmFyIHM9MDtzPGUubGVuZ3RoO3MrKyl7dmFyIGE9dGhpcy5fbm9ybWFsaXplSXRlbShlW3NdKTtpZigwPD1nLmluQXJyYXkoYS5pZCxpKSl7dmFyIGw9bi5maWx0ZXIobyhhKSksYz10aGlzLml0ZW0obCksdT1nLmV4dGVuZCghMCx7fSxhLGMpLGQ9dGhpcy5vcHRpb24odSk7bC5yZXBsYWNlV2l0aChkKX1lbHNle3ZhciBwPXRoaXMub3B0aW9uKGEpO2lmKGEuY2hpbGRyZW4pe3ZhciBoPXRoaXMuY29udmVydFRvT3B0aW9ucyhhLmNoaWxkcmVuKTtmLmFwcGVuZE1hbnkocCxoKX1yLnB1c2gocCl9fXJldHVybiByfSxpfSksZS5kZWZpbmUoXCJzZWxlY3QyL2RhdGEvYWpheFwiLFtcIi4vYXJyYXlcIixcIi4uL3V0aWxzXCIsXCJqcXVlcnlcIl0sZnVuY3Rpb24oZSx0LG8pe2Z1bmN0aW9uIG4oZSx0KXt0aGlzLmFqYXhPcHRpb25zPXRoaXMuX2FwcGx5RGVmYXVsdHModC5nZXQoXCJhamF4XCIpKSxudWxsIT10aGlzLmFqYXhPcHRpb25zLnByb2Nlc3NSZXN1bHRzJiYodGhpcy5wcm9jZXNzUmVzdWx0cz10aGlzLmFqYXhPcHRpb25zLnByb2Nlc3NSZXN1bHRzKSxuLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsZSx0KX1yZXR1cm4gdC5FeHRlbmQobixlKSxuLnByb3RvdHlwZS5fYXBwbHlEZWZhdWx0cz1mdW5jdGlvbihlKXt2YXIgdD17ZGF0YTpmdW5jdGlvbihlKXtyZXR1cm4gby5leHRlbmQoe30sZSx7cTplLnRlcm19KX0sdHJhbnNwb3J0OmZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1vLmFqYXgoZSk7cmV0dXJuIGkudGhlbih0KSxpLmZhaWwobiksaX19O3JldHVybiBvLmV4dGVuZCh7fSx0LGUsITApfSxuLnByb3RvdHlwZS5wcm9jZXNzUmVzdWx0cz1mdW5jdGlvbihlKXtyZXR1cm4gZX0sbi5wcm90b3R5cGUucXVlcnk9ZnVuY3Rpb24obixpKXt2YXIgcj10aGlzO251bGwhPXRoaXMuX3JlcXVlc3QmJihvLmlzRnVuY3Rpb24odGhpcy5fcmVxdWVzdC5hYm9ydCkmJnRoaXMuX3JlcXVlc3QuYWJvcnQoKSx0aGlzLl9yZXF1ZXN0PW51bGwpO3ZhciB0PW8uZXh0ZW5kKHt0eXBlOlwiR0VUXCJ9LHRoaXMuYWpheE9wdGlvbnMpO2Z1bmN0aW9uIGUoKXt2YXIgZT10LnRyYW5zcG9ydCh0LGZ1bmN0aW9uKGUpe3ZhciB0PXIucHJvY2Vzc1Jlc3VsdHMoZSxuKTtyLm9wdGlvbnMuZ2V0KFwiZGVidWdcIikmJndpbmRvdy5jb25zb2xlJiZjb25zb2xlLmVycm9yJiYodCYmdC5yZXN1bHRzJiZvLmlzQXJyYXkodC5yZXN1bHRzKXx8Y29uc29sZS5lcnJvcihcIlNlbGVjdDI6IFRoZSBBSkFYIHJlc3VsdHMgZGlkIG5vdCByZXR1cm4gYW4gYXJyYXkgaW4gdGhlIGByZXN1bHRzYCBrZXkgb2YgdGhlIHJlc3BvbnNlLlwiKSksaSh0KX0sZnVuY3Rpb24oKXtcInN0YXR1c1wiaW4gZSYmKDA9PT1lLnN0YXR1c3x8XCIwXCI9PT1lLnN0YXR1cyl8fHIudHJpZ2dlcihcInJlc3VsdHM6bWVzc2FnZVwiLHttZXNzYWdlOlwiZXJyb3JMb2FkaW5nXCJ9KX0pO3IuX3JlcXVlc3Q9ZX1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0LnVybCYmKHQudXJsPXQudXJsLmNhbGwodGhpcy4kZWxlbWVudCxuKSksXCJmdW5jdGlvblwiPT10eXBlb2YgdC5kYXRhJiYodC5kYXRhPXQuZGF0YS5jYWxsKHRoaXMuJGVsZW1lbnQsbikpLHRoaXMuYWpheE9wdGlvbnMuZGVsYXkmJm51bGwhPW4udGVybT8odGhpcy5fcXVlcnlUaW1lb3V0JiZ3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMuX3F1ZXJ5VGltZW91dCksdGhpcy5fcXVlcnlUaW1lb3V0PXdpbmRvdy5zZXRUaW1lb3V0KGUsdGhpcy5hamF4T3B0aW9ucy5kZWxheSkpOmUoKX0sbn0pLGUuZGVmaW5lKFwic2VsZWN0Mi9kYXRhL3RhZ3NcIixbXCJqcXVlcnlcIl0sZnVuY3Rpb24odSl7ZnVuY3Rpb24gZShlLHQsbil7dmFyIGk9bi5nZXQoXCJ0YWdzXCIpLHI9bi5nZXQoXCJjcmVhdGVUYWdcIik7dm9pZCAwIT09ciYmKHRoaXMuY3JlYXRlVGFnPXIpO3ZhciBvPW4uZ2V0KFwiaW5zZXJ0VGFnXCIpO2lmKHZvaWQgMCE9PW8mJih0aGlzLmluc2VydFRhZz1vKSxlLmNhbGwodGhpcyx0LG4pLHUuaXNBcnJheShpKSlmb3IodmFyIHM9MDtzPGkubGVuZ3RoO3MrKyl7dmFyIGE9aVtzXSxsPXRoaXMuX25vcm1hbGl6ZUl0ZW0oYSksYz10aGlzLm9wdGlvbihsKTt0aGlzLiRlbGVtZW50LmFwcGVuZChjKX19cmV0dXJuIGUucHJvdG90eXBlLnF1ZXJ5PWZ1bmN0aW9uKGUsYyx1KXt2YXIgZD10aGlzO3RoaXMuX3JlbW92ZU9sZFRhZ3MoKSxudWxsIT1jLnRlcm0mJm51bGw9PWMucGFnZT9lLmNhbGwodGhpcyxjLGZ1bmN0aW9uIGUodCxuKXtmb3IodmFyIGk9dC5yZXN1bHRzLHI9MDtyPGkubGVuZ3RoO3IrKyl7dmFyIG89aVtyXSxzPW51bGwhPW8uY2hpbGRyZW4mJiFlKHtyZXN1bHRzOm8uY2hpbGRyZW59LCEwKTtpZigoby50ZXh0fHxcIlwiKS50b1VwcGVyQ2FzZSgpPT09KGMudGVybXx8XCJcIikudG9VcHBlckNhc2UoKXx8cylyZXR1cm4hbiYmKHQuZGF0YT1pLHZvaWQgdSh0KSl9aWYobilyZXR1cm4hMDt2YXIgYT1kLmNyZWF0ZVRhZyhjKTtpZihudWxsIT1hKXt2YXIgbD1kLm9wdGlvbihhKTtsLmF0dHIoXCJkYXRhLXNlbGVjdDItdGFnXCIsITApLGQuYWRkT3B0aW9ucyhbbF0pLGQuaW5zZXJ0VGFnKGksYSl9dC5yZXN1bHRzPWksdSh0KX0pOmUuY2FsbCh0aGlzLGMsdSl9LGUucHJvdG90eXBlLmNyZWF0ZVRhZz1mdW5jdGlvbihlLHQpe3ZhciBuPXUudHJpbSh0LnRlcm0pO3JldHVyblwiXCI9PT1uP251bGw6e2lkOm4sdGV4dDpufX0sZS5wcm90b3R5cGUuaW5zZXJ0VGFnPWZ1bmN0aW9uKGUsdCxuKXt0LnVuc2hpZnQobil9LGUucHJvdG90eXBlLl9yZW1vdmVPbGRUYWdzPWZ1bmN0aW9uKGUpe3RoaXMuX2xhc3RUYWc7dGhpcy4kZWxlbWVudC5maW5kKFwib3B0aW9uW2RhdGEtc2VsZWN0Mi10YWddXCIpLmVhY2goZnVuY3Rpb24oKXt0aGlzLnNlbGVjdGVkfHx1KHRoaXMpLnJlbW92ZSgpfSl9LGV9KSxlLmRlZmluZShcInNlbGVjdDIvZGF0YS90b2tlbml6ZXJcIixbXCJqcXVlcnlcIl0sZnVuY3Rpb24oZCl7ZnVuY3Rpb24gZShlLHQsbil7dmFyIGk9bi5nZXQoXCJ0b2tlbml6ZXJcIik7dm9pZCAwIT09aSYmKHRoaXMudG9rZW5pemVyPWkpLGUuY2FsbCh0aGlzLHQsbil9cmV0dXJuIGUucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oZSx0LG4pe2UuY2FsbCh0aGlzLHQsbiksdGhpcy4kc2VhcmNoPXQuZHJvcGRvd24uJHNlYXJjaHx8dC5zZWxlY3Rpb24uJHNlYXJjaHx8bi5maW5kKFwiLnNlbGVjdDItc2VhcmNoX19maWVsZFwiKX0sZS5wcm90b3R5cGUucXVlcnk9ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPXRoaXM7dC50ZXJtPXQudGVybXx8XCJcIjt2YXIgcj10aGlzLnRva2VuaXplcih0LHRoaXMub3B0aW9ucyxmdW5jdGlvbihlKXt2YXIgdD1pLl9ub3JtYWxpemVJdGVtKGUpO2lmKCFpLiRlbGVtZW50LmZpbmQoXCJvcHRpb25cIikuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIGQodGhpcykudmFsKCk9PT10LmlkfSkubGVuZ3RoKXt2YXIgbj1pLm9wdGlvbih0KTtuLmF0dHIoXCJkYXRhLXNlbGVjdDItdGFnXCIsITApLGkuX3JlbW92ZU9sZFRhZ3MoKSxpLmFkZE9wdGlvbnMoW25dKX0hZnVuY3Rpb24oZSl7aS50cmlnZ2VyKFwic2VsZWN0XCIse2RhdGE6ZX0pfSh0KX0pO3IudGVybSE9PXQudGVybSYmKHRoaXMuJHNlYXJjaC5sZW5ndGgmJih0aGlzLiRzZWFyY2gudmFsKHIudGVybSksdGhpcy4kc2VhcmNoLmZvY3VzKCkpLHQudGVybT1yLnRlcm0pLGUuY2FsbCh0aGlzLHQsbil9LGUucHJvdG90eXBlLnRva2VuaXplcj1mdW5jdGlvbihlLHQsbixpKXtmb3IodmFyIHI9bi5nZXQoXCJ0b2tlblNlcGFyYXRvcnNcIil8fFtdLG89dC50ZXJtLHM9MCxhPXRoaXMuY3JlYXRlVGFnfHxmdW5jdGlvbihlKXtyZXR1cm57aWQ6ZS50ZXJtLHRleHQ6ZS50ZXJtfX07czxvLmxlbmd0aDspe3ZhciBsPW9bc107aWYoLTEhPT1kLmluQXJyYXkobCxyKSl7dmFyIGM9by5zdWJzdHIoMCxzKSx1PWEoZC5leHRlbmQoe30sdCx7dGVybTpjfSkpO251bGwhPXU/KGkodSksbz1vLnN1YnN0cihzKzEpfHxcIlwiLHM9MCk6cysrfWVsc2UgcysrfXJldHVybnt0ZXJtOm99fSxlfSksZS5kZWZpbmUoXCJzZWxlY3QyL2RhdGEvbWluaW11bUlucHV0TGVuZ3RoXCIsW10sZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCxuKXt0aGlzLm1pbmltdW1JbnB1dExlbmd0aD1uLmdldChcIm1pbmltdW1JbnB1dExlbmd0aFwiKSxlLmNhbGwodGhpcyx0LG4pfXJldHVybiBlLnByb3RvdHlwZS5xdWVyeT1mdW5jdGlvbihlLHQsbil7dC50ZXJtPXQudGVybXx8XCJcIix0LnRlcm0ubGVuZ3RoPHRoaXMubWluaW11bUlucHV0TGVuZ3RoP3RoaXMudHJpZ2dlcihcInJlc3VsdHM6bWVzc2FnZVwiLHttZXNzYWdlOlwiaW5wdXRUb29TaG9ydFwiLGFyZ3M6e21pbmltdW06dGhpcy5taW5pbXVtSW5wdXRMZW5ndGgsaW5wdXQ6dC50ZXJtLHBhcmFtczp0fX0pOmUuY2FsbCh0aGlzLHQsbil9LGV9KSxlLmRlZmluZShcInNlbGVjdDIvZGF0YS9tYXhpbXVtSW5wdXRMZW5ndGhcIixbXSxmdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0LG4pe3RoaXMubWF4aW11bUlucHV0TGVuZ3RoPW4uZ2V0KFwibWF4aW11bUlucHV0TGVuZ3RoXCIpLGUuY2FsbCh0aGlzLHQsbil9cmV0dXJuIGUucHJvdG90eXBlLnF1ZXJ5PWZ1bmN0aW9uKGUsdCxuKXt0LnRlcm09dC50ZXJtfHxcIlwiLDA8dGhpcy5tYXhpbXVtSW5wdXRMZW5ndGgmJnQudGVybS5sZW5ndGg+dGhpcy5tYXhpbXVtSW5wdXRMZW5ndGg/dGhpcy50cmlnZ2VyKFwicmVzdWx0czptZXNzYWdlXCIse21lc3NhZ2U6XCJpbnB1dFRvb0xvbmdcIixhcmdzOnttYXhpbXVtOnRoaXMubWF4aW11bUlucHV0TGVuZ3RoLGlucHV0OnQudGVybSxwYXJhbXM6dH19KTplLmNhbGwodGhpcyx0LG4pfSxlfSksZS5kZWZpbmUoXCJzZWxlY3QyL2RhdGEvbWF4aW11bVNlbGVjdGlvbkxlbmd0aFwiLFtdLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQsbil7dGhpcy5tYXhpbXVtU2VsZWN0aW9uTGVuZ3RoPW4uZ2V0KFwibWF4aW11bVNlbGVjdGlvbkxlbmd0aFwiKSxlLmNhbGwodGhpcyx0LG4pfXJldHVybiBlLnByb3RvdHlwZS5xdWVyeT1mdW5jdGlvbihuLGkscil7dmFyIG89dGhpczt0aGlzLmN1cnJlbnQoZnVuY3Rpb24oZSl7dmFyIHQ9bnVsbCE9ZT9lLmxlbmd0aDowOzA8by5tYXhpbXVtU2VsZWN0aW9uTGVuZ3RoJiZ0Pj1vLm1heGltdW1TZWxlY3Rpb25MZW5ndGg/by50cmlnZ2VyKFwicmVzdWx0czptZXNzYWdlXCIse21lc3NhZ2U6XCJtYXhpbXVtU2VsZWN0ZWRcIixhcmdzOnttYXhpbXVtOm8ubWF4aW11bVNlbGVjdGlvbkxlbmd0aH19KTpuLmNhbGwobyxpLHIpfSl9LGV9KSxlLmRlZmluZShcInNlbGVjdDIvZHJvcGRvd25cIixbXCJqcXVlcnlcIixcIi4vdXRpbHNcIl0sZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKGUsdCl7dGhpcy4kZWxlbWVudD1lLHRoaXMub3B0aW9ucz10LG4uX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcyl9cmV0dXJuIGUuRXh0ZW5kKG4sZS5PYnNlcnZhYmxlKSxuLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgZT10KCc8c3BhbiBjbGFzcz1cInNlbGVjdDItZHJvcGRvd25cIj48c3BhbiBjbGFzcz1cInNlbGVjdDItcmVzdWx0c1wiPjwvc3Bhbj48L3NwYW4+Jyk7cmV0dXJuIGUuYXR0cihcImRpclwiLHRoaXMub3B0aW9ucy5nZXQoXCJkaXJcIikpLHRoaXMuJGRyb3Bkb3duPWV9LG4ucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oKXt9LG4ucHJvdG90eXBlLnBvc2l0aW9uPWZ1bmN0aW9uKGUsdCl7fSxuLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dGhpcy4kZHJvcGRvd24ucmVtb3ZlKCl9LG59KSxlLmRlZmluZShcInNlbGVjdDIvZHJvcGRvd24vc2VhcmNoXCIsW1wianF1ZXJ5XCIsXCIuLi91dGlsc1wiXSxmdW5jdGlvbihyLGUpe2Z1bmN0aW9uIHQoKXt9cmV0dXJuIHQucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihlKXt2YXIgdD1lLmNhbGwodGhpcyksbj1yKCc8c3BhbiBjbGFzcz1cInNlbGVjdDItc2VhcmNoIHNlbGVjdDItc2VhcmNoLS1kcm9wZG93blwiPjxpbnB1dCBjbGFzcz1cInNlbGVjdDItc2VhcmNoX19maWVsZFwiIHR5cGU9XCJzZWFyY2hcIiB0YWJpbmRleD1cIi0xXCIgYXV0b2NvbXBsZXRlPVwib2ZmXCIgYXV0b2NvcnJlY3Q9XCJvZmZcIiBhdXRvY2FwaXRhbGl6ZT1cIm5vbmVcIiBzcGVsbGNoZWNrPVwiZmFsc2VcIiByb2xlPVwidGV4dGJveFwiIC8+PC9zcGFuPicpO3JldHVybiB0aGlzLiRzZWFyY2hDb250YWluZXI9bix0aGlzLiRzZWFyY2g9bi5maW5kKFwiaW5wdXRcIiksdC5wcmVwZW5kKG4pLHR9LHQucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPXRoaXM7ZS5jYWxsKHRoaXMsdCxuKSx0aGlzLiRzZWFyY2gub24oXCJrZXlkb3duXCIsZnVuY3Rpb24oZSl7aS50cmlnZ2VyKFwia2V5cHJlc3NcIixlKSxpLl9rZXlVcFByZXZlbnRlZD1lLmlzRGVmYXVsdFByZXZlbnRlZCgpfSksdGhpcy4kc2VhcmNoLm9uKFwiaW5wdXRcIixmdW5jdGlvbihlKXtyKHRoaXMpLm9mZihcImtleXVwXCIpfSksdGhpcy4kc2VhcmNoLm9uKFwia2V5dXAgaW5wdXRcIixmdW5jdGlvbihlKXtpLmhhbmRsZVNlYXJjaChlKX0pLHQub24oXCJvcGVuXCIsZnVuY3Rpb24oKXtpLiRzZWFyY2guYXR0cihcInRhYmluZGV4XCIsMCksaS4kc2VhcmNoLmZvY3VzKCksd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXtpLiRzZWFyY2guZm9jdXMoKX0sMCl9KSx0Lm9uKFwiY2xvc2VcIixmdW5jdGlvbigpe2kuJHNlYXJjaC5hdHRyKFwidGFiaW5kZXhcIiwtMSksaS4kc2VhcmNoLnZhbChcIlwiKSxpLiRzZWFyY2guYmx1cigpfSksdC5vbihcImZvY3VzXCIsZnVuY3Rpb24oKXt0LmlzT3BlbigpfHxpLiRzZWFyY2guZm9jdXMoKX0pLHQub24oXCJyZXN1bHRzOmFsbFwiLGZ1bmN0aW9uKGUpe251bGwhPWUucXVlcnkudGVybSYmXCJcIiE9PWUucXVlcnkudGVybXx8KGkuc2hvd1NlYXJjaChlKT9pLiRzZWFyY2hDb250YWluZXIucmVtb3ZlQ2xhc3MoXCJzZWxlY3QyLXNlYXJjaC0taGlkZVwiKTppLiRzZWFyY2hDb250YWluZXIuYWRkQ2xhc3MoXCJzZWxlY3QyLXNlYXJjaC0taGlkZVwiKSl9KX0sdC5wcm90b3R5cGUuaGFuZGxlU2VhcmNoPWZ1bmN0aW9uKGUpe2lmKCF0aGlzLl9rZXlVcFByZXZlbnRlZCl7dmFyIHQ9dGhpcy4kc2VhcmNoLnZhbCgpO3RoaXMudHJpZ2dlcihcInF1ZXJ5XCIse3Rlcm06dH0pfXRoaXMuX2tleVVwUHJldmVudGVkPSExfSx0LnByb3RvdHlwZS5zaG93U2VhcmNoPWZ1bmN0aW9uKGUsdCl7cmV0dXJuITB9LHR9KSxlLmRlZmluZShcInNlbGVjdDIvZHJvcGRvd24vaGlkZVBsYWNlaG9sZGVyXCIsW10sZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCxuLGkpe3RoaXMucGxhY2Vob2xkZXI9dGhpcy5ub3JtYWxpemVQbGFjZWhvbGRlcihuLmdldChcInBsYWNlaG9sZGVyXCIpKSxlLmNhbGwodGhpcyx0LG4saSl9cmV0dXJuIGUucHJvdG90eXBlLmFwcGVuZD1mdW5jdGlvbihlLHQpe3QucmVzdWx0cz10aGlzLnJlbW92ZVBsYWNlaG9sZGVyKHQucmVzdWx0cyksZS5jYWxsKHRoaXMsdCl9LGUucHJvdG90eXBlLm5vcm1hbGl6ZVBsYWNlaG9sZGVyPWZ1bmN0aW9uKGUsdCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQmJih0PXtpZDpcIlwiLHRleHQ6dH0pLHR9LGUucHJvdG90eXBlLnJlbW92ZVBsYWNlaG9sZGVyPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPXQuc2xpY2UoMCksaT10Lmxlbmd0aC0xOzA8PWk7aS0tKXt2YXIgcj10W2ldO3RoaXMucGxhY2Vob2xkZXIuaWQ9PT1yLmlkJiZuLnNwbGljZShpLDEpfXJldHVybiBufSxlfSksZS5kZWZpbmUoXCJzZWxlY3QyL2Ryb3Bkb3duL2luZmluaXRlU2Nyb2xsXCIsW1wianF1ZXJ5XCJdLGZ1bmN0aW9uKHIpe2Z1bmN0aW9uIGUoZSx0LG4saSl7dGhpcy5sYXN0UGFyYW1zPXt9LGUuY2FsbCh0aGlzLHQsbixpKSx0aGlzLiRsb2FkaW5nTW9yZT10aGlzLmNyZWF0ZUxvYWRpbmdNb3JlKCksdGhpcy5sb2FkaW5nPSExfXJldHVybiBlLnByb3RvdHlwZS5hcHBlbmQ9ZnVuY3Rpb24oZSx0KXt0aGlzLiRsb2FkaW5nTW9yZS5yZW1vdmUoKSx0aGlzLmxvYWRpbmc9ITEsZS5jYWxsKHRoaXMsdCksdGhpcy5zaG93TG9hZGluZ01vcmUodCkmJnRoaXMuJHJlc3VsdHMuYXBwZW5kKHRoaXMuJGxvYWRpbmdNb3JlKX0sZS5wcm90b3R5cGUuYmluZD1mdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcztlLmNhbGwodGhpcyx0LG4pLHQub24oXCJxdWVyeVwiLGZ1bmN0aW9uKGUpe2kubGFzdFBhcmFtcz1lLGkubG9hZGluZz0hMH0pLHQub24oXCJxdWVyeTphcHBlbmRcIixmdW5jdGlvbihlKXtpLmxhc3RQYXJhbXM9ZSxpLmxvYWRpbmc9ITB9KSx0aGlzLiRyZXN1bHRzLm9uKFwic2Nyb2xsXCIsZnVuY3Rpb24oKXt2YXIgZT1yLmNvbnRhaW5zKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxpLiRsb2FkaW5nTW9yZVswXSk7aWYoIWkubG9hZGluZyYmZSl7dmFyIHQ9aS4kcmVzdWx0cy5vZmZzZXQoKS50b3AraS4kcmVzdWx0cy5vdXRlckhlaWdodCghMSk7aS4kbG9hZGluZ01vcmUub2Zmc2V0KCkudG9wK2kuJGxvYWRpbmdNb3JlLm91dGVySGVpZ2h0KCExKTw9dCs1MCYmaS5sb2FkTW9yZSgpfX0pfSxlLnByb3RvdHlwZS5sb2FkTW9yZT1mdW5jdGlvbigpe3RoaXMubG9hZGluZz0hMDt2YXIgZT1yLmV4dGVuZCh7fSx7cGFnZToxfSx0aGlzLmxhc3RQYXJhbXMpO2UucGFnZSsrLHRoaXMudHJpZ2dlcihcInF1ZXJ5OmFwcGVuZFwiLGUpfSxlLnByb3RvdHlwZS5zaG93TG9hZGluZ01vcmU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC5wYWdpbmF0aW9uJiZ0LnBhZ2luYXRpb24ubW9yZX0sZS5wcm90b3R5cGUuY3JlYXRlTG9hZGluZ01vcmU9ZnVuY3Rpb24oKXt2YXIgZT1yKCc8bGkgY2xhc3M9XCJzZWxlY3QyLXJlc3VsdHNfX29wdGlvbiBzZWxlY3QyLXJlc3VsdHNfX29wdGlvbi0tbG9hZC1tb3JlXCJyb2xlPVwidHJlZWl0ZW1cIiBhcmlhLWRpc2FibGVkPVwidHJ1ZVwiPjwvbGk+JyksdD10aGlzLm9wdGlvbnMuZ2V0KFwidHJhbnNsYXRpb25zXCIpLmdldChcImxvYWRpbmdNb3JlXCIpO3JldHVybiBlLmh0bWwodCh0aGlzLmxhc3RQYXJhbXMpKSxlfSxlfSksZS5kZWZpbmUoXCJzZWxlY3QyL2Ryb3Bkb3duL2F0dGFjaEJvZHlcIixbXCJqcXVlcnlcIixcIi4uL3V0aWxzXCJdLGZ1bmN0aW9uKGYsYSl7ZnVuY3Rpb24gZShlLHQsbil7dGhpcy4kZHJvcGRvd25QYXJlbnQ9bi5nZXQoXCJkcm9wZG93blBhcmVudFwiKXx8Zihkb2N1bWVudC5ib2R5KSxlLmNhbGwodGhpcyx0LG4pfXJldHVybiBlLnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKGUsdCxuKXt2YXIgaT10aGlzLHI9ITE7ZS5jYWxsKHRoaXMsdCxuKSx0Lm9uKFwib3BlblwiLGZ1bmN0aW9uKCl7aS5fc2hvd0Ryb3Bkb3duKCksaS5fYXR0YWNoUG9zaXRpb25pbmdIYW5kbGVyKHQpLHJ8fChyPSEwLHQub24oXCJyZXN1bHRzOmFsbFwiLGZ1bmN0aW9uKCl7aS5fcG9zaXRpb25Ecm9wZG93bigpLGkuX3Jlc2l6ZURyb3Bkb3duKCl9KSx0Lm9uKFwicmVzdWx0czphcHBlbmRcIixmdW5jdGlvbigpe2kuX3Bvc2l0aW9uRHJvcGRvd24oKSxpLl9yZXNpemVEcm9wZG93bigpfSkpfSksdC5vbihcImNsb3NlXCIsZnVuY3Rpb24oKXtpLl9oaWRlRHJvcGRvd24oKSxpLl9kZXRhY2hQb3NpdGlvbmluZ0hhbmRsZXIodCl9KSx0aGlzLiRkcm9wZG93bkNvbnRhaW5lci5vbihcIm1vdXNlZG93blwiLGZ1bmN0aW9uKGUpe2Uuc3RvcFByb3BhZ2F0aW9uKCl9KX0sZS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbihlKXtlLmNhbGwodGhpcyksdGhpcy4kZHJvcGRvd25Db250YWluZXIucmVtb3ZlKCl9LGUucHJvdG90eXBlLnBvc2l0aW9uPWZ1bmN0aW9uKGUsdCxuKXt0LmF0dHIoXCJjbGFzc1wiLG4uYXR0cihcImNsYXNzXCIpKSx0LnJlbW92ZUNsYXNzKFwic2VsZWN0MlwiKSx0LmFkZENsYXNzKFwic2VsZWN0Mi1jb250YWluZXItLW9wZW5cIiksdC5jc3Moe3Bvc2l0aW9uOlwiYWJzb2x1dGVcIix0b3A6LTk5OTk5OX0pLHRoaXMuJGNvbnRhaW5lcj1ufSxlLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oZSl7dmFyIHQ9ZihcIjxzcGFuPjwvc3Bhbj5cIiksbj1lLmNhbGwodGhpcyk7cmV0dXJuIHQuYXBwZW5kKG4pLHRoaXMuJGRyb3Bkb3duQ29udGFpbmVyPXR9LGUucHJvdG90eXBlLl9oaWRlRHJvcGRvd249ZnVuY3Rpb24oZSl7dGhpcy4kZHJvcGRvd25Db250YWluZXIuZGV0YWNoKCl9LGUucHJvdG90eXBlLl9hdHRhY2hQb3NpdGlvbmluZ0hhbmRsZXI9ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzLGk9XCJzY3JvbGwuc2VsZWN0Mi5cIit0LmlkLHI9XCJyZXNpemUuc2VsZWN0Mi5cIit0LmlkLG89XCJvcmllbnRhdGlvbmNoYW5nZS5zZWxlY3QyLlwiK3QuaWQscz10aGlzLiRjb250YWluZXIucGFyZW50cygpLmZpbHRlcihhLmhhc1Njcm9sbCk7cy5lYWNoKGZ1bmN0aW9uKCl7YS5TdG9yZURhdGEodGhpcyxcInNlbGVjdDItc2Nyb2xsLXBvc2l0aW9uXCIse3g6Zih0aGlzKS5zY3JvbGxMZWZ0KCkseTpmKHRoaXMpLnNjcm9sbFRvcCgpfSl9KSxzLm9uKGksZnVuY3Rpb24oZSl7dmFyIHQ9YS5HZXREYXRhKHRoaXMsXCJzZWxlY3QyLXNjcm9sbC1wb3NpdGlvblwiKTtmKHRoaXMpLnNjcm9sbFRvcCh0LnkpfSksZih3aW5kb3cpLm9uKGkrXCIgXCIrcitcIiBcIitvLGZ1bmN0aW9uKGUpe24uX3Bvc2l0aW9uRHJvcGRvd24oKSxuLl9yZXNpemVEcm9wZG93bigpfSl9LGUucHJvdG90eXBlLl9kZXRhY2hQb3NpdGlvbmluZ0hhbmRsZXI9ZnVuY3Rpb24oZSx0KXt2YXIgbj1cInNjcm9sbC5zZWxlY3QyLlwiK3QuaWQsaT1cInJlc2l6ZS5zZWxlY3QyLlwiK3QuaWQscj1cIm9yaWVudGF0aW9uY2hhbmdlLnNlbGVjdDIuXCIrdC5pZDt0aGlzLiRjb250YWluZXIucGFyZW50cygpLmZpbHRlcihhLmhhc1Njcm9sbCkub2ZmKG4pLGYod2luZG93KS5vZmYobitcIiBcIitpK1wiIFwiK3IpfSxlLnByb3RvdHlwZS5fcG9zaXRpb25Ecm9wZG93bj1mdW5jdGlvbigpe3ZhciBlPWYod2luZG93KSx0PXRoaXMuJGRyb3Bkb3duLmhhc0NsYXNzKFwic2VsZWN0Mi1kcm9wZG93bi0tYWJvdmVcIiksbj10aGlzLiRkcm9wZG93bi5oYXNDbGFzcyhcInNlbGVjdDItZHJvcGRvd24tLWJlbG93XCIpLGk9bnVsbCxyPXRoaXMuJGNvbnRhaW5lci5vZmZzZXQoKTtyLmJvdHRvbT1yLnRvcCt0aGlzLiRjb250YWluZXIub3V0ZXJIZWlnaHQoITEpO3ZhciBvPXtoZWlnaHQ6dGhpcy4kY29udGFpbmVyLm91dGVySGVpZ2h0KCExKX07by50b3A9ci50b3Asby5ib3R0b209ci50b3Arby5oZWlnaHQ7dmFyIHM9dGhpcy4kZHJvcGRvd24ub3V0ZXJIZWlnaHQoITEpLGE9ZS5zY3JvbGxUb3AoKSxsPWUuc2Nyb2xsVG9wKCkrZS5oZWlnaHQoKSxjPWE8ci50b3Atcyx1PWw+ci5ib3R0b20rcyxkPXtsZWZ0OnIubGVmdCx0b3A6by5ib3R0b219LHA9dGhpcy4kZHJvcGRvd25QYXJlbnQ7XCJzdGF0aWNcIj09PXAuY3NzKFwicG9zaXRpb25cIikmJihwPXAub2Zmc2V0UGFyZW50KCkpO3ZhciBoPXAub2Zmc2V0KCk7ZC50b3AtPWgudG9wLGQubGVmdC09aC5sZWZ0LHR8fG58fChpPVwiYmVsb3dcIiksdXx8IWN8fHQ/IWMmJnUmJnQmJihpPVwiYmVsb3dcIik6aT1cImFib3ZlXCIsKFwiYWJvdmVcIj09aXx8dCYmXCJiZWxvd1wiIT09aSkmJihkLnRvcD1vLnRvcC1oLnRvcC1zKSxudWxsIT1pJiYodGhpcy4kZHJvcGRvd24ucmVtb3ZlQ2xhc3MoXCJzZWxlY3QyLWRyb3Bkb3duLS1iZWxvdyBzZWxlY3QyLWRyb3Bkb3duLS1hYm92ZVwiKS5hZGRDbGFzcyhcInNlbGVjdDItZHJvcGRvd24tLVwiK2kpLHRoaXMuJGNvbnRhaW5lci5yZW1vdmVDbGFzcyhcInNlbGVjdDItY29udGFpbmVyLS1iZWxvdyBzZWxlY3QyLWNvbnRhaW5lci0tYWJvdmVcIikuYWRkQ2xhc3MoXCJzZWxlY3QyLWNvbnRhaW5lci0tXCIraSkpLHRoaXMuJGRyb3Bkb3duQ29udGFpbmVyLmNzcyhkKX0sZS5wcm90b3R5cGUuX3Jlc2l6ZURyb3Bkb3duPWZ1bmN0aW9uKCl7dmFyIGU9e3dpZHRoOnRoaXMuJGNvbnRhaW5lci5vdXRlcldpZHRoKCExKStcInB4XCJ9O3RoaXMub3B0aW9ucy5nZXQoXCJkcm9wZG93bkF1dG9XaWR0aFwiKSYmKGUubWluV2lkdGg9ZS53aWR0aCxlLnBvc2l0aW9uPVwicmVsYXRpdmVcIixlLndpZHRoPVwiYXV0b1wiKSx0aGlzLiRkcm9wZG93bi5jc3MoZSl9LGUucHJvdG90eXBlLl9zaG93RHJvcGRvd249ZnVuY3Rpb24oZSl7dGhpcy4kZHJvcGRvd25Db250YWluZXIuYXBwZW5kVG8odGhpcy4kZHJvcGRvd25QYXJlbnQpLHRoaXMuX3Bvc2l0aW9uRHJvcGRvd24oKSx0aGlzLl9yZXNpemVEcm9wZG93bigpfSxlfSksZS5kZWZpbmUoXCJzZWxlY3QyL2Ryb3Bkb3duL21pbmltdW1SZXN1bHRzRm9yU2VhcmNoXCIsW10sZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCxuLGkpe3RoaXMubWluaW11bVJlc3VsdHNGb3JTZWFyY2g9bi5nZXQoXCJtaW5pbXVtUmVzdWx0c0ZvclNlYXJjaFwiKSx0aGlzLm1pbmltdW1SZXN1bHRzRm9yU2VhcmNoPDAmJih0aGlzLm1pbmltdW1SZXN1bHRzRm9yU2VhcmNoPTEvMCksZS5jYWxsKHRoaXMsdCxuLGkpfXJldHVybiBlLnByb3RvdHlwZS5zaG93U2VhcmNoPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIShmdW5jdGlvbiBlKHQpe2Zvcih2YXIgbj0wLGk9MDtpPHQubGVuZ3RoO2krKyl7dmFyIHI9dFtpXTtyLmNoaWxkcmVuP24rPWUoci5jaGlsZHJlbik6bisrfXJldHVybiBufSh0LmRhdGEucmVzdWx0cyk8dGhpcy5taW5pbXVtUmVzdWx0c0ZvclNlYXJjaCkmJmUuY2FsbCh0aGlzLHQpfSxlfSksZS5kZWZpbmUoXCJzZWxlY3QyL2Ryb3Bkb3duL3NlbGVjdE9uQ2xvc2VcIixbXCIuLi91dGlsc1wiXSxmdW5jdGlvbihvKXtmdW5jdGlvbiBlKCl7fXJldHVybiBlLnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKGUsdCxuKXt2YXIgaT10aGlzO2UuY2FsbCh0aGlzLHQsbiksdC5vbihcImNsb3NlXCIsZnVuY3Rpb24oZSl7aS5faGFuZGxlU2VsZWN0T25DbG9zZShlKX0pfSxlLnByb3RvdHlwZS5faGFuZGxlU2VsZWN0T25DbG9zZT1mdW5jdGlvbihlLHQpe2lmKHQmJm51bGwhPXQub3JpZ2luYWxTZWxlY3QyRXZlbnQpe3ZhciBuPXQub3JpZ2luYWxTZWxlY3QyRXZlbnQ7aWYoXCJzZWxlY3RcIj09PW4uX3R5cGV8fFwidW5zZWxlY3RcIj09PW4uX3R5cGUpcmV0dXJufXZhciBpPXRoaXMuZ2V0SGlnaGxpZ2h0ZWRSZXN1bHRzKCk7aWYoIShpLmxlbmd0aDwxKSl7dmFyIHI9by5HZXREYXRhKGlbMF0sXCJkYXRhXCIpO251bGwhPXIuZWxlbWVudCYmci5lbGVtZW50LnNlbGVjdGVkfHxudWxsPT1yLmVsZW1lbnQmJnIuc2VsZWN0ZWR8fHRoaXMudHJpZ2dlcihcInNlbGVjdFwiLHtkYXRhOnJ9KX19LGV9KSxlLmRlZmluZShcInNlbGVjdDIvZHJvcGRvd24vY2xvc2VPblNlbGVjdFwiLFtdLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe31yZXR1cm4gZS5wcm90b3R5cGUuYmluZD1mdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcztlLmNhbGwodGhpcyx0LG4pLHQub24oXCJzZWxlY3RcIixmdW5jdGlvbihlKXtpLl9zZWxlY3RUcmlnZ2VyZWQoZSl9KSx0Lm9uKFwidW5zZWxlY3RcIixmdW5jdGlvbihlKXtpLl9zZWxlY3RUcmlnZ2VyZWQoZSl9KX0sZS5wcm90b3R5cGUuX3NlbGVjdFRyaWdnZXJlZD1mdW5jdGlvbihlLHQpe3ZhciBuPXQub3JpZ2luYWxFdmVudDtuJiYobi5jdHJsS2V5fHxuLm1ldGFLZXkpfHx0aGlzLnRyaWdnZXIoXCJjbG9zZVwiLHtvcmlnaW5hbEV2ZW50Om4sb3JpZ2luYWxTZWxlY3QyRXZlbnQ6dH0pfSxlfSksZS5kZWZpbmUoXCJzZWxlY3QyL2kxOG4vZW5cIixbXSxmdW5jdGlvbigpe3JldHVybntlcnJvckxvYWRpbmc6ZnVuY3Rpb24oKXtyZXR1cm5cIlRoZSByZXN1bHRzIGNvdWxkIG5vdCBiZSBsb2FkZWQuXCJ9LGlucHV0VG9vTG9uZzpmdW5jdGlvbihlKXt2YXIgdD1lLmlucHV0Lmxlbmd0aC1lLm1heGltdW0sbj1cIlBsZWFzZSBkZWxldGUgXCIrdCtcIiBjaGFyYWN0ZXJcIjtyZXR1cm4gMSE9dCYmKG4rPVwic1wiKSxufSxpbnB1dFRvb1Nob3J0OmZ1bmN0aW9uKGUpe3JldHVyblwiUGxlYXNlIGVudGVyIFwiKyhlLm1pbmltdW0tZS5pbnB1dC5sZW5ndGgpK1wiIG9yIG1vcmUgY2hhcmFjdGVyc1wifSxsb2FkaW5nTW9yZTpmdW5jdGlvbigpe3JldHVyblwiTG9hZGluZyBtb3JlIHJlc3VsdHPigKZcIn0sbWF4aW11bVNlbGVjdGVkOmZ1bmN0aW9uKGUpe3ZhciB0PVwiWW91IGNhbiBvbmx5IHNlbGVjdCBcIitlLm1heGltdW0rXCIgaXRlbVwiO3JldHVybiAxIT1lLm1heGltdW0mJih0Kz1cInNcIiksdH0sbm9SZXN1bHRzOmZ1bmN0aW9uKCl7cmV0dXJuXCJObyByZXN1bHRzIGZvdW5kXCJ9LHNlYXJjaGluZzpmdW5jdGlvbigpe3JldHVyblwiU2VhcmNoaW5n4oCmXCJ9LHJlbW92ZUFsbEl0ZW1zOmZ1bmN0aW9uKCl7cmV0dXJuXCJSZW1vdmUgYWxsIGl0ZW1zXCJ9fX0pLGUuZGVmaW5lKFwic2VsZWN0Mi9kZWZhdWx0c1wiLFtcImpxdWVyeVwiLFwicmVxdWlyZVwiLFwiLi9yZXN1bHRzXCIsXCIuL3NlbGVjdGlvbi9zaW5nbGVcIixcIi4vc2VsZWN0aW9uL211bHRpcGxlXCIsXCIuL3NlbGVjdGlvbi9wbGFjZWhvbGRlclwiLFwiLi9zZWxlY3Rpb24vYWxsb3dDbGVhclwiLFwiLi9zZWxlY3Rpb24vc2VhcmNoXCIsXCIuL3NlbGVjdGlvbi9ldmVudFJlbGF5XCIsXCIuL3V0aWxzXCIsXCIuL3RyYW5zbGF0aW9uXCIsXCIuL2RpYWNyaXRpY3NcIixcIi4vZGF0YS9zZWxlY3RcIixcIi4vZGF0YS9hcnJheVwiLFwiLi9kYXRhL2FqYXhcIixcIi4vZGF0YS90YWdzXCIsXCIuL2RhdGEvdG9rZW5pemVyXCIsXCIuL2RhdGEvbWluaW11bUlucHV0TGVuZ3RoXCIsXCIuL2RhdGEvbWF4aW11bUlucHV0TGVuZ3RoXCIsXCIuL2RhdGEvbWF4aW11bVNlbGVjdGlvbkxlbmd0aFwiLFwiLi9kcm9wZG93blwiLFwiLi9kcm9wZG93bi9zZWFyY2hcIixcIi4vZHJvcGRvd24vaGlkZVBsYWNlaG9sZGVyXCIsXCIuL2Ryb3Bkb3duL2luZmluaXRlU2Nyb2xsXCIsXCIuL2Ryb3Bkb3duL2F0dGFjaEJvZHlcIixcIi4vZHJvcGRvd24vbWluaW11bVJlc3VsdHNGb3JTZWFyY2hcIixcIi4vZHJvcGRvd24vc2VsZWN0T25DbG9zZVwiLFwiLi9kcm9wZG93bi9jbG9zZU9uU2VsZWN0XCIsXCIuL2kxOG4vZW5cIl0sZnVuY3Rpb24oZixnLG0sdix5LF8sdywkLGIsQSx4LHQsUyxELEMsRSxPLHEsVCxqLEwsayxQLEksTSxSLFUseixlKXtmdW5jdGlvbiBuKCl7dGhpcy5yZXNldCgpfXJldHVybiBuLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbih0KXtpZihudWxsPT0odD1mLmV4dGVuZCghMCx7fSx0aGlzLmRlZmF1bHRzLHQpKS5kYXRhQWRhcHRlcil7aWYobnVsbCE9dC5hamF4P3QuZGF0YUFkYXB0ZXI9QzpudWxsIT10LmRhdGE/dC5kYXRhQWRhcHRlcj1EOnQuZGF0YUFkYXB0ZXI9UywwPHQubWluaW11bUlucHV0TGVuZ3RoJiYodC5kYXRhQWRhcHRlcj1BLkRlY29yYXRlKHQuZGF0YUFkYXB0ZXIscSkpLDA8dC5tYXhpbXVtSW5wdXRMZW5ndGgmJih0LmRhdGFBZGFwdGVyPUEuRGVjb3JhdGUodC5kYXRhQWRhcHRlcixUKSksMDx0Lm1heGltdW1TZWxlY3Rpb25MZW5ndGgmJih0LmRhdGFBZGFwdGVyPUEuRGVjb3JhdGUodC5kYXRhQWRhcHRlcixqKSksdC50YWdzJiYodC5kYXRhQWRhcHRlcj1BLkRlY29yYXRlKHQuZGF0YUFkYXB0ZXIsRSkpLG51bGw9PXQudG9rZW5TZXBhcmF0b3JzJiZudWxsPT10LnRva2VuaXplcnx8KHQuZGF0YUFkYXB0ZXI9QS5EZWNvcmF0ZSh0LmRhdGFBZGFwdGVyLE8pKSxudWxsIT10LnF1ZXJ5KXt2YXIgZT1nKHQuYW1kQmFzZStcImNvbXBhdC9xdWVyeVwiKTt0LmRhdGFBZGFwdGVyPUEuRGVjb3JhdGUodC5kYXRhQWRhcHRlcixlKX1pZihudWxsIT10LmluaXRTZWxlY3Rpb24pe3ZhciBuPWcodC5hbWRCYXNlK1wiY29tcGF0L2luaXRTZWxlY3Rpb25cIik7dC5kYXRhQWRhcHRlcj1BLkRlY29yYXRlKHQuZGF0YUFkYXB0ZXIsbil9fWlmKG51bGw9PXQucmVzdWx0c0FkYXB0ZXImJih0LnJlc3VsdHNBZGFwdGVyPW0sbnVsbCE9dC5hamF4JiYodC5yZXN1bHRzQWRhcHRlcj1BLkRlY29yYXRlKHQucmVzdWx0c0FkYXB0ZXIsSSkpLG51bGwhPXQucGxhY2Vob2xkZXImJih0LnJlc3VsdHNBZGFwdGVyPUEuRGVjb3JhdGUodC5yZXN1bHRzQWRhcHRlcixQKSksdC5zZWxlY3RPbkNsb3NlJiYodC5yZXN1bHRzQWRhcHRlcj1BLkRlY29yYXRlKHQucmVzdWx0c0FkYXB0ZXIsVSkpKSxudWxsPT10LmRyb3Bkb3duQWRhcHRlcil7aWYodC5tdWx0aXBsZSl0LmRyb3Bkb3duQWRhcHRlcj1MO2Vsc2V7dmFyIGk9QS5EZWNvcmF0ZShMLGspO3QuZHJvcGRvd25BZGFwdGVyPWl9aWYoMCE9PXQubWluaW11bVJlc3VsdHNGb3JTZWFyY2gmJih0LmRyb3Bkb3duQWRhcHRlcj1BLkRlY29yYXRlKHQuZHJvcGRvd25BZGFwdGVyLFIpKSx0LmNsb3NlT25TZWxlY3QmJih0LmRyb3Bkb3duQWRhcHRlcj1BLkRlY29yYXRlKHQuZHJvcGRvd25BZGFwdGVyLHopKSxudWxsIT10LmRyb3Bkb3duQ3NzQ2xhc3N8fG51bGwhPXQuZHJvcGRvd25Dc3N8fG51bGwhPXQuYWRhcHREcm9wZG93bkNzc0NsYXNzKXt2YXIgcj1nKHQuYW1kQmFzZStcImNvbXBhdC9kcm9wZG93bkNzc1wiKTt0LmRyb3Bkb3duQWRhcHRlcj1BLkRlY29yYXRlKHQuZHJvcGRvd25BZGFwdGVyLHIpfXQuZHJvcGRvd25BZGFwdGVyPUEuRGVjb3JhdGUodC5kcm9wZG93bkFkYXB0ZXIsTSl9aWYobnVsbD09dC5zZWxlY3Rpb25BZGFwdGVyKXtpZih0Lm11bHRpcGxlP3Quc2VsZWN0aW9uQWRhcHRlcj15OnQuc2VsZWN0aW9uQWRhcHRlcj12LG51bGwhPXQucGxhY2Vob2xkZXImJih0LnNlbGVjdGlvbkFkYXB0ZXI9QS5EZWNvcmF0ZSh0LnNlbGVjdGlvbkFkYXB0ZXIsXykpLHQuYWxsb3dDbGVhciYmKHQuc2VsZWN0aW9uQWRhcHRlcj1BLkRlY29yYXRlKHQuc2VsZWN0aW9uQWRhcHRlcix3KSksdC5tdWx0aXBsZSYmKHQuc2VsZWN0aW9uQWRhcHRlcj1BLkRlY29yYXRlKHQuc2VsZWN0aW9uQWRhcHRlciwkKSksbnVsbCE9dC5jb250YWluZXJDc3NDbGFzc3x8bnVsbCE9dC5jb250YWluZXJDc3N8fG51bGwhPXQuYWRhcHRDb250YWluZXJDc3NDbGFzcyl7dmFyIG89Zyh0LmFtZEJhc2UrXCJjb21wYXQvY29udGFpbmVyQ3NzXCIpO3Quc2VsZWN0aW9uQWRhcHRlcj1BLkRlY29yYXRlKHQuc2VsZWN0aW9uQWRhcHRlcixvKX10LnNlbGVjdGlvbkFkYXB0ZXI9QS5EZWNvcmF0ZSh0LnNlbGVjdGlvbkFkYXB0ZXIsYil9aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQubGFuZ3VhZ2UpaWYoMDx0Lmxhbmd1YWdlLmluZGV4T2YoXCItXCIpKXt2YXIgcz10Lmxhbmd1YWdlLnNwbGl0KFwiLVwiKVswXTt0Lmxhbmd1YWdlPVt0Lmxhbmd1YWdlLHNdfWVsc2UgdC5sYW5ndWFnZT1bdC5sYW5ndWFnZV07aWYoZi5pc0FycmF5KHQubGFuZ3VhZ2UpKXt2YXIgYT1uZXcgeDt0Lmxhbmd1YWdlLnB1c2goXCJlblwiKTtmb3IodmFyIGw9dC5sYW5ndWFnZSxjPTA7YzxsLmxlbmd0aDtjKyspe3ZhciB1PWxbY10sZD17fTt0cnl7ZD14LmxvYWRQYXRoKHUpfWNhdGNoKGUpe3RyeXt1PXRoaXMuZGVmYXVsdHMuYW1kTGFuZ3VhZ2VCYXNlK3UsZD14LmxvYWRQYXRoKHUpfWNhdGNoKGUpe3QuZGVidWcmJndpbmRvdy5jb25zb2xlJiZjb25zb2xlLndhcm4mJmNvbnNvbGUud2FybignU2VsZWN0MjogVGhlIGxhbmd1YWdlIGZpbGUgZm9yIFwiJyt1KydcIiBjb3VsZCBub3QgYmUgYXV0b21hdGljYWxseSBsb2FkZWQuIEEgZmFsbGJhY2sgd2lsbCBiZSB1c2VkIGluc3RlYWQuJyk7Y29udGludWV9fWEuZXh0ZW5kKGQpfXQudHJhbnNsYXRpb25zPWF9ZWxzZXt2YXIgcD14LmxvYWRQYXRoKHRoaXMuZGVmYXVsdHMuYW1kTGFuZ3VhZ2VCYXNlK1wiZW5cIiksaD1uZXcgeCh0Lmxhbmd1YWdlKTtoLmV4dGVuZChwKSx0LnRyYW5zbGF0aW9ucz1ofXJldHVybiB0fSxuLnByb3RvdHlwZS5yZXNldD1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoZSl7cmV0dXJuIGUucmVwbGFjZSgvW15cXHUwMDAwLVxcdTAwN0VdL2csZnVuY3Rpb24oZSl7cmV0dXJuIHRbZV18fGV9KX10aGlzLmRlZmF1bHRzPXthbWRCYXNlOlwiLi9cIixhbWRMYW5ndWFnZUJhc2U6XCIuL2kxOG4vXCIsY2xvc2VPblNlbGVjdDohMCxkZWJ1ZzohMSxkcm9wZG93bkF1dG9XaWR0aDohMSxlc2NhcGVNYXJrdXA6QS5lc2NhcGVNYXJrdXAsbGFuZ3VhZ2U6ZSxtYXRjaGVyOmZ1bmN0aW9uIGUodCxuKXtpZihcIlwiPT09Zi50cmltKHQudGVybSkpcmV0dXJuIG47aWYobi5jaGlsZHJlbiYmMDxuLmNoaWxkcmVuLmxlbmd0aCl7Zm9yKHZhciBpPWYuZXh0ZW5kKCEwLHt9LG4pLHI9bi5jaGlsZHJlbi5sZW5ndGgtMTswPD1yO3ItLSludWxsPT1lKHQsbi5jaGlsZHJlbltyXSkmJmkuY2hpbGRyZW4uc3BsaWNlKHIsMSk7cmV0dXJuIDA8aS5jaGlsZHJlbi5sZW5ndGg/aTplKHQsaSl9dmFyIG89YShuLnRleHQpLnRvVXBwZXJDYXNlKCkscz1hKHQudGVybSkudG9VcHBlckNhc2UoKTtyZXR1cm4tMTxvLmluZGV4T2Yocyk/bjpudWxsfSxtaW5pbXVtSW5wdXRMZW5ndGg6MCxtYXhpbXVtSW5wdXRMZW5ndGg6MCxtYXhpbXVtU2VsZWN0aW9uTGVuZ3RoOjAsbWluaW11bVJlc3VsdHNGb3JTZWFyY2g6MCxzZWxlY3RPbkNsb3NlOiExLHNjcm9sbEFmdGVyU2VsZWN0OiExLHNvcnRlcjpmdW5jdGlvbihlKXtyZXR1cm4gZX0sdGVtcGxhdGVSZXN1bHQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGUudGV4dH0sdGVtcGxhdGVTZWxlY3Rpb246ZnVuY3Rpb24oZSl7cmV0dXJuIGUudGV4dH0sdGhlbWU6XCJkZWZhdWx0XCIsd2lkdGg6XCJyZXNvbHZlXCJ9fSxuLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oZSx0KXt2YXIgbj17fTtuW2YuY2FtZWxDYXNlKGUpXT10O3ZhciBpPUEuX2NvbnZlcnREYXRhKG4pO2YuZXh0ZW5kKCEwLHRoaXMuZGVmYXVsdHMsaSl9LG5ldyBufSksZS5kZWZpbmUoXCJzZWxlY3QyL29wdGlvbnNcIixbXCJyZXF1aXJlXCIsXCJqcXVlcnlcIixcIi4vZGVmYXVsdHNcIixcIi4vdXRpbHNcIl0sZnVuY3Rpb24oaSxkLHIscCl7ZnVuY3Rpb24gZShlLHQpe2lmKHRoaXMub3B0aW9ucz1lLG51bGwhPXQmJnRoaXMuZnJvbUVsZW1lbnQodCksdGhpcy5vcHRpb25zPXIuYXBwbHkodGhpcy5vcHRpb25zKSx0JiZ0LmlzKFwiaW5wdXRcIikpe3ZhciBuPWkodGhpcy5nZXQoXCJhbWRCYXNlXCIpK1wiY29tcGF0L2lucHV0RGF0YVwiKTt0aGlzLm9wdGlvbnMuZGF0YUFkYXB0ZXI9cC5EZWNvcmF0ZSh0aGlzLm9wdGlvbnMuZGF0YUFkYXB0ZXIsbil9fXJldHVybiBlLnByb3RvdHlwZS5mcm9tRWxlbWVudD1mdW5jdGlvbihlKXt2YXIgdD1bXCJzZWxlY3QyXCJdO251bGw9PXRoaXMub3B0aW9ucy5tdWx0aXBsZSYmKHRoaXMub3B0aW9ucy5tdWx0aXBsZT1lLnByb3AoXCJtdWx0aXBsZVwiKSksbnVsbD09dGhpcy5vcHRpb25zLmRpc2FibGVkJiYodGhpcy5vcHRpb25zLmRpc2FibGVkPWUucHJvcChcImRpc2FibGVkXCIpKSxudWxsPT10aGlzLm9wdGlvbnMubGFuZ3VhZ2UmJihlLnByb3AoXCJsYW5nXCIpP3RoaXMub3B0aW9ucy5sYW5ndWFnZT1lLnByb3AoXCJsYW5nXCIpLnRvTG93ZXJDYXNlKCk6ZS5jbG9zZXN0KFwiW2xhbmddXCIpLnByb3AoXCJsYW5nXCIpJiYodGhpcy5vcHRpb25zLmxhbmd1YWdlPWUuY2xvc2VzdChcIltsYW5nXVwiKS5wcm9wKFwibGFuZ1wiKSkpLG51bGw9PXRoaXMub3B0aW9ucy5kaXImJihlLnByb3AoXCJkaXJcIik/dGhpcy5vcHRpb25zLmRpcj1lLnByb3AoXCJkaXJcIik6ZS5jbG9zZXN0KFwiW2Rpcl1cIikucHJvcChcImRpclwiKT90aGlzLm9wdGlvbnMuZGlyPWUuY2xvc2VzdChcIltkaXJdXCIpLnByb3AoXCJkaXJcIik6dGhpcy5vcHRpb25zLmRpcj1cImx0clwiKSxlLnByb3AoXCJkaXNhYmxlZFwiLHRoaXMub3B0aW9ucy5kaXNhYmxlZCksZS5wcm9wKFwibXVsdGlwbGVcIix0aGlzLm9wdGlvbnMubXVsdGlwbGUpLHAuR2V0RGF0YShlWzBdLFwic2VsZWN0MlRhZ3NcIikmJih0aGlzLm9wdGlvbnMuZGVidWcmJndpbmRvdy5jb25zb2xlJiZjb25zb2xlLndhcm4mJmNvbnNvbGUud2FybignU2VsZWN0MjogVGhlIGBkYXRhLXNlbGVjdDItdGFnc2AgYXR0cmlidXRlIGhhcyBiZWVuIGNoYW5nZWQgdG8gdXNlIHRoZSBgZGF0YS1kYXRhYCBhbmQgYGRhdGEtdGFncz1cInRydWVcImAgYXR0cmlidXRlcyBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGZ1dHVyZSB2ZXJzaW9ucyBvZiBTZWxlY3QyLicpLHAuU3RvcmVEYXRhKGVbMF0sXCJkYXRhXCIscC5HZXREYXRhKGVbMF0sXCJzZWxlY3QyVGFnc1wiKSkscC5TdG9yZURhdGEoZVswXSxcInRhZ3NcIiwhMCkpLHAuR2V0RGF0YShlWzBdLFwiYWpheFVybFwiKSYmKHRoaXMub3B0aW9ucy5kZWJ1ZyYmd2luZG93LmNvbnNvbGUmJmNvbnNvbGUud2FybiYmY29uc29sZS53YXJuKFwiU2VsZWN0MjogVGhlIGBkYXRhLWFqYXgtdXJsYCBhdHRyaWJ1dGUgaGFzIGJlZW4gY2hhbmdlZCB0byBgZGF0YS1hamF4LS11cmxgIGFuZCBzdXBwb3J0IGZvciB0aGUgb2xkIGF0dHJpYnV0ZSB3aWxsIGJlIHJlbW92ZWQgaW4gZnV0dXJlIHZlcnNpb25zIG9mIFNlbGVjdDIuXCIpLGUuYXR0cihcImFqYXgtLXVybFwiLHAuR2V0RGF0YShlWzBdLFwiYWpheFVybFwiKSkscC5TdG9yZURhdGEoZVswXSxcImFqYXgtVXJsXCIscC5HZXREYXRhKGVbMF0sXCJhamF4VXJsXCIpKSk7dmFyIG49e307ZnVuY3Rpb24gaShlLHQpe3JldHVybiB0LnRvVXBwZXJDYXNlKCl9Zm9yKHZhciByPTA7cjxlWzBdLmF0dHJpYnV0ZXMubGVuZ3RoO3IrKyl7dmFyIG89ZVswXS5hdHRyaWJ1dGVzW3JdLm5hbWUscz1cImRhdGEtXCI7aWYoby5zdWJzdHIoMCxzLmxlbmd0aCk9PXMpe3ZhciBhPW8uc3Vic3RyaW5nKHMubGVuZ3RoKSxsPXAuR2V0RGF0YShlWzBdLGEpO25bYS5yZXBsYWNlKC8tKFthLXpdKS9nLGkpXT1sfX1kLmZuLmpxdWVyeSYmXCIxLlwiPT1kLmZuLmpxdWVyeS5zdWJzdHIoMCwyKSYmZVswXS5kYXRhc2V0JiYobj1kLmV4dGVuZCghMCx7fSxlWzBdLmRhdGFzZXQsbikpO3ZhciBjPWQuZXh0ZW5kKCEwLHt9LHAuR2V0RGF0YShlWzBdKSxuKTtmb3IodmFyIHUgaW4gYz1wLl9jb252ZXJ0RGF0YShjKSktMTxkLmluQXJyYXkodSx0KXx8KGQuaXNQbGFpbk9iamVjdCh0aGlzLm9wdGlvbnNbdV0pP2QuZXh0ZW5kKHRoaXMub3B0aW9uc1t1XSxjW3VdKTp0aGlzLm9wdGlvbnNbdV09Y1t1XSk7cmV0dXJuIHRoaXN9LGUucHJvdG90eXBlLmdldD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5vcHRpb25zW2VdfSxlLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oZSx0KXt0aGlzLm9wdGlvbnNbZV09dH0sZX0pLGUuZGVmaW5lKFwic2VsZWN0Mi9jb3JlXCIsW1wianF1ZXJ5XCIsXCIuL29wdGlvbnNcIixcIi4vdXRpbHNcIixcIi4va2V5c1wiXSxmdW5jdGlvbihyLGMsdSxpKXt2YXIgZD1mdW5jdGlvbihlLHQpe251bGwhPXUuR2V0RGF0YShlWzBdLFwic2VsZWN0MlwiKSYmdS5HZXREYXRhKGVbMF0sXCJzZWxlY3QyXCIpLmRlc3Ryb3koKSx0aGlzLiRlbGVtZW50PWUsdGhpcy5pZD10aGlzLl9nZW5lcmF0ZUlkKGUpLHQ9dHx8e30sdGhpcy5vcHRpb25zPW5ldyBjKHQsZSksZC5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzKTt2YXIgbj1lLmF0dHIoXCJ0YWJpbmRleFwiKXx8MDt1LlN0b3JlRGF0YShlWzBdLFwib2xkLXRhYmluZGV4XCIsbiksZS5hdHRyKFwidGFiaW5kZXhcIixcIi0xXCIpO3ZhciBpPXRoaXMub3B0aW9ucy5nZXQoXCJkYXRhQWRhcHRlclwiKTt0aGlzLmRhdGFBZGFwdGVyPW5ldyBpKGUsdGhpcy5vcHRpb25zKTt2YXIgcj10aGlzLnJlbmRlcigpO3RoaXMuX3BsYWNlQ29udGFpbmVyKHIpO3ZhciBvPXRoaXMub3B0aW9ucy5nZXQoXCJzZWxlY3Rpb25BZGFwdGVyXCIpO3RoaXMuc2VsZWN0aW9uPW5ldyBvKGUsdGhpcy5vcHRpb25zKSx0aGlzLiRzZWxlY3Rpb249dGhpcy5zZWxlY3Rpb24ucmVuZGVyKCksdGhpcy5zZWxlY3Rpb24ucG9zaXRpb24odGhpcy4kc2VsZWN0aW9uLHIpO3ZhciBzPXRoaXMub3B0aW9ucy5nZXQoXCJkcm9wZG93bkFkYXB0ZXJcIik7dGhpcy5kcm9wZG93bj1uZXcgcyhlLHRoaXMub3B0aW9ucyksdGhpcy4kZHJvcGRvd249dGhpcy5kcm9wZG93bi5yZW5kZXIoKSx0aGlzLmRyb3Bkb3duLnBvc2l0aW9uKHRoaXMuJGRyb3Bkb3duLHIpO3ZhciBhPXRoaXMub3B0aW9ucy5nZXQoXCJyZXN1bHRzQWRhcHRlclwiKTt0aGlzLnJlc3VsdHM9bmV3IGEoZSx0aGlzLm9wdGlvbnMsdGhpcy5kYXRhQWRhcHRlciksdGhpcy4kcmVzdWx0cz10aGlzLnJlc3VsdHMucmVuZGVyKCksdGhpcy5yZXN1bHRzLnBvc2l0aW9uKHRoaXMuJHJlc3VsdHMsdGhpcy4kZHJvcGRvd24pO3ZhciBsPXRoaXM7dGhpcy5fYmluZEFkYXB0ZXJzKCksdGhpcy5fcmVnaXN0ZXJEb21FdmVudHMoKSx0aGlzLl9yZWdpc3RlckRhdGFFdmVudHMoKSx0aGlzLl9yZWdpc3RlclNlbGVjdGlvbkV2ZW50cygpLHRoaXMuX3JlZ2lzdGVyRHJvcGRvd25FdmVudHMoKSx0aGlzLl9yZWdpc3RlclJlc3VsdHNFdmVudHMoKSx0aGlzLl9yZWdpc3RlckV2ZW50cygpLHRoaXMuZGF0YUFkYXB0ZXIuY3VycmVudChmdW5jdGlvbihlKXtsLnRyaWdnZXIoXCJzZWxlY3Rpb246dXBkYXRlXCIse2RhdGE6ZX0pfSksZS5hZGRDbGFzcyhcInNlbGVjdDItaGlkZGVuLWFjY2Vzc2libGVcIiksZS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcInRydWVcIiksdGhpcy5fc3luY0F0dHJpYnV0ZXMoKSx1LlN0b3JlRGF0YShlWzBdLFwic2VsZWN0MlwiLHRoaXMpLGUuZGF0YShcInNlbGVjdDJcIix0aGlzKX07cmV0dXJuIHUuRXh0ZW5kKGQsdS5PYnNlcnZhYmxlKSxkLnByb3RvdHlwZS5fZ2VuZXJhdGVJZD1mdW5jdGlvbihlKXtyZXR1cm5cInNlbGVjdDItXCIrKG51bGwhPWUuYXR0cihcImlkXCIpP2UuYXR0cihcImlkXCIpOm51bGwhPWUuYXR0cihcIm5hbWVcIik/ZS5hdHRyKFwibmFtZVwiKStcIi1cIit1LmdlbmVyYXRlQ2hhcnMoMik6dS5nZW5lcmF0ZUNoYXJzKDQpKS5yZXBsYWNlKC8oOnxcXC58XFxbfFxcXXwsKS9nLFwiXCIpfSxkLnByb3RvdHlwZS5fcGxhY2VDb250YWluZXI9ZnVuY3Rpb24oZSl7ZS5pbnNlcnRBZnRlcih0aGlzLiRlbGVtZW50KTt2YXIgdD10aGlzLl9yZXNvbHZlV2lkdGgodGhpcy4kZWxlbWVudCx0aGlzLm9wdGlvbnMuZ2V0KFwid2lkdGhcIikpO251bGwhPXQmJmUuY3NzKFwid2lkdGhcIix0KX0sZC5wcm90b3R5cGUuX3Jlc29sdmVXaWR0aD1mdW5jdGlvbihlLHQpe3ZhciBuPS9ed2lkdGg6KChbLStdPyhbMC05XSpcXC4pP1swLTldKykocHh8ZW18ZXh8JXxpbnxjbXxtbXxwdHxwYykpL2k7aWYoXCJyZXNvbHZlXCI9PXQpe3ZhciBpPXRoaXMuX3Jlc29sdmVXaWR0aChlLFwic3R5bGVcIik7cmV0dXJuIG51bGwhPWk/aTp0aGlzLl9yZXNvbHZlV2lkdGgoZSxcImVsZW1lbnRcIil9aWYoXCJlbGVtZW50XCI9PXQpe3ZhciByPWUub3V0ZXJXaWR0aCghMSk7cmV0dXJuIHI8PTA/XCJhdXRvXCI6citcInB4XCJ9aWYoXCJzdHlsZVwiIT10KXJldHVybiB0O3ZhciBvPWUuYXR0cihcInN0eWxlXCIpO2lmKFwic3RyaW5nXCIhPXR5cGVvZiBvKXJldHVybiBudWxsO2Zvcih2YXIgcz1vLnNwbGl0KFwiO1wiKSxhPTAsbD1zLmxlbmd0aDthPGw7YSs9MSl7dmFyIGM9c1thXS5yZXBsYWNlKC9cXHMvZyxcIlwiKS5tYXRjaChuKTtpZihudWxsIT09YyYmMTw9Yy5sZW5ndGgpcmV0dXJuIGNbMV19cmV0dXJuIG51bGx9LGQucHJvdG90eXBlLl9iaW5kQWRhcHRlcnM9ZnVuY3Rpb24oKXt0aGlzLmRhdGFBZGFwdGVyLmJpbmQodGhpcyx0aGlzLiRjb250YWluZXIpLHRoaXMuc2VsZWN0aW9uLmJpbmQodGhpcyx0aGlzLiRjb250YWluZXIpLHRoaXMuZHJvcGRvd24uYmluZCh0aGlzLHRoaXMuJGNvbnRhaW5lciksdGhpcy5yZXN1bHRzLmJpbmQodGhpcyx0aGlzLiRjb250YWluZXIpfSxkLnByb3RvdHlwZS5fcmVnaXN0ZXJEb21FdmVudHM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuJGVsZW1lbnQub24oXCJjaGFuZ2Uuc2VsZWN0MlwiLGZ1bmN0aW9uKCl7dC5kYXRhQWRhcHRlci5jdXJyZW50KGZ1bmN0aW9uKGUpe3QudHJpZ2dlcihcInNlbGVjdGlvbjp1cGRhdGVcIix7ZGF0YTplfSl9KX0pLHRoaXMuJGVsZW1lbnQub24oXCJmb2N1cy5zZWxlY3QyXCIsZnVuY3Rpb24oZSl7dC50cmlnZ2VyKFwiZm9jdXNcIixlKX0pLHRoaXMuX3N5bmNBPXUuYmluZCh0aGlzLl9zeW5jQXR0cmlidXRlcyx0aGlzKSx0aGlzLl9zeW5jUz11LmJpbmQodGhpcy5fc3luY1N1YnRyZWUsdGhpcyksdGhpcy4kZWxlbWVudFswXS5hdHRhY2hFdmVudCYmdGhpcy4kZWxlbWVudFswXS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIix0aGlzLl9zeW5jQSk7dmFyIGU9d2luZG93Lk11dGF0aW9uT2JzZXJ2ZXJ8fHdpbmRvdy5XZWJLaXRNdXRhdGlvbk9ic2VydmVyfHx3aW5kb3cuTW96TXV0YXRpb25PYnNlcnZlcjtudWxsIT1lPyh0aGlzLl9vYnNlcnZlcj1uZXcgZShmdW5jdGlvbihlKXtyLmVhY2goZSx0Ll9zeW5jQSksci5lYWNoKGUsdC5fc3luY1MpfSksdGhpcy5fb2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLiRlbGVtZW50WzBdLHthdHRyaWJ1dGVzOiEwLGNoaWxkTGlzdDohMCxzdWJ0cmVlOiExfSkpOnRoaXMuJGVsZW1lbnRbMF0uYWRkRXZlbnRMaXN0ZW5lciYmKHRoaXMuJGVsZW1lbnRbMF0uYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUF0dHJNb2RpZmllZFwiLHQuX3N5bmNBLCExKSx0aGlzLiRlbGVtZW50WzBdLmFkZEV2ZW50TGlzdGVuZXIoXCJET01Ob2RlSW5zZXJ0ZWRcIix0Ll9zeW5jUywhMSksdGhpcy4kZWxlbWVudFswXS5hZGRFdmVudExpc3RlbmVyKFwiRE9NTm9kZVJlbW92ZWRcIix0Ll9zeW5jUywhMSkpfSxkLnByb3RvdHlwZS5fcmVnaXN0ZXJEYXRhRXZlbnRzPWZ1bmN0aW9uKCl7dmFyIG49dGhpczt0aGlzLmRhdGFBZGFwdGVyLm9uKFwiKlwiLGZ1bmN0aW9uKGUsdCl7bi50cmlnZ2VyKGUsdCl9KX0sZC5wcm90b3R5cGUuX3JlZ2lzdGVyU2VsZWN0aW9uRXZlbnRzPWZ1bmN0aW9uKCl7dmFyIG49dGhpcyxpPVtcInRvZ2dsZVwiLFwiZm9jdXNcIl07dGhpcy5zZWxlY3Rpb24ub24oXCJ0b2dnbGVcIixmdW5jdGlvbigpe24udG9nZ2xlRHJvcGRvd24oKX0pLHRoaXMuc2VsZWN0aW9uLm9uKFwiZm9jdXNcIixmdW5jdGlvbihlKXtuLmZvY3VzKGUpfSksdGhpcy5zZWxlY3Rpb24ub24oXCIqXCIsZnVuY3Rpb24oZSx0KXstMT09PXIuaW5BcnJheShlLGkpJiZuLnRyaWdnZXIoZSx0KX0pfSxkLnByb3RvdHlwZS5fcmVnaXN0ZXJEcm9wZG93bkV2ZW50cz1mdW5jdGlvbigpe3ZhciBuPXRoaXM7dGhpcy5kcm9wZG93bi5vbihcIipcIixmdW5jdGlvbihlLHQpe24udHJpZ2dlcihlLHQpfSl9LGQucHJvdG90eXBlLl9yZWdpc3RlclJlc3VsdHNFdmVudHM9ZnVuY3Rpb24oKXt2YXIgbj10aGlzO3RoaXMucmVzdWx0cy5vbihcIipcIixmdW5jdGlvbihlLHQpe24udHJpZ2dlcihlLHQpfSl9LGQucHJvdG90eXBlLl9yZWdpc3RlckV2ZW50cz1mdW5jdGlvbigpe3ZhciBuPXRoaXM7dGhpcy5vbihcIm9wZW5cIixmdW5jdGlvbigpe24uJGNvbnRhaW5lci5hZGRDbGFzcyhcInNlbGVjdDItY29udGFpbmVyLS1vcGVuXCIpfSksdGhpcy5vbihcImNsb3NlXCIsZnVuY3Rpb24oKXtuLiRjb250YWluZXIucmVtb3ZlQ2xhc3MoXCJzZWxlY3QyLWNvbnRhaW5lci0tb3BlblwiKX0pLHRoaXMub24oXCJlbmFibGVcIixmdW5jdGlvbigpe24uJGNvbnRhaW5lci5yZW1vdmVDbGFzcyhcInNlbGVjdDItY29udGFpbmVyLS1kaXNhYmxlZFwiKX0pLHRoaXMub24oXCJkaXNhYmxlXCIsZnVuY3Rpb24oKXtuLiRjb250YWluZXIuYWRkQ2xhc3MoXCJzZWxlY3QyLWNvbnRhaW5lci0tZGlzYWJsZWRcIil9KSx0aGlzLm9uKFwiYmx1clwiLGZ1bmN0aW9uKCl7bi4kY29udGFpbmVyLnJlbW92ZUNsYXNzKFwic2VsZWN0Mi1jb250YWluZXItLWZvY3VzXCIpfSksdGhpcy5vbihcInF1ZXJ5XCIsZnVuY3Rpb24odCl7bi5pc09wZW4oKXx8bi50cmlnZ2VyKFwib3BlblwiLHt9KSx0aGlzLmRhdGFBZGFwdGVyLnF1ZXJ5KHQsZnVuY3Rpb24oZSl7bi50cmlnZ2VyKFwicmVzdWx0czphbGxcIix7ZGF0YTplLHF1ZXJ5OnR9KX0pfSksdGhpcy5vbihcInF1ZXJ5OmFwcGVuZFwiLGZ1bmN0aW9uKHQpe3RoaXMuZGF0YUFkYXB0ZXIucXVlcnkodCxmdW5jdGlvbihlKXtuLnRyaWdnZXIoXCJyZXN1bHRzOmFwcGVuZFwiLHtkYXRhOmUscXVlcnk6dH0pfSl9KSx0aGlzLm9uKFwia2V5cHJlc3NcIixmdW5jdGlvbihlKXt2YXIgdD1lLndoaWNoO24uaXNPcGVuKCk/dD09PWkuRVNDfHx0PT09aS5UQUJ8fHQ9PT1pLlVQJiZlLmFsdEtleT8obi5jbG9zZSgpLGUucHJldmVudERlZmF1bHQoKSk6dD09PWkuRU5URVI/KG4udHJpZ2dlcihcInJlc3VsdHM6c2VsZWN0XCIse30pLGUucHJldmVudERlZmF1bHQoKSk6dD09PWkuU1BBQ0UmJmUuY3RybEtleT8obi50cmlnZ2VyKFwicmVzdWx0czp0b2dnbGVcIix7fSksZS5wcmV2ZW50RGVmYXVsdCgpKTp0PT09aS5VUD8obi50cmlnZ2VyKFwicmVzdWx0czpwcmV2aW91c1wiLHt9KSxlLnByZXZlbnREZWZhdWx0KCkpOnQ9PT1pLkRPV04mJihuLnRyaWdnZXIoXCJyZXN1bHRzOm5leHRcIix7fSksZS5wcmV2ZW50RGVmYXVsdCgpKToodD09PWkuRU5URVJ8fHQ9PT1pLlNQQUNFfHx0PT09aS5ET1dOJiZlLmFsdEtleSkmJihuLm9wZW4oKSxlLnByZXZlbnREZWZhdWx0KCkpfSl9LGQucHJvdG90eXBlLl9zeW5jQXR0cmlidXRlcz1mdW5jdGlvbigpe3RoaXMub3B0aW9ucy5zZXQoXCJkaXNhYmxlZFwiLHRoaXMuJGVsZW1lbnQucHJvcChcImRpc2FibGVkXCIpKSx0aGlzLm9wdGlvbnMuZ2V0KFwiZGlzYWJsZWRcIik/KHRoaXMuaXNPcGVuKCkmJnRoaXMuY2xvc2UoKSx0aGlzLnRyaWdnZXIoXCJkaXNhYmxlXCIse30pKTp0aGlzLnRyaWdnZXIoXCJlbmFibGVcIix7fSl9LGQucHJvdG90eXBlLl9zeW5jU3VidHJlZT1mdW5jdGlvbihlLHQpe3ZhciBuPSExLGk9dGhpcztpZighZXx8IWUudGFyZ2V0fHxcIk9QVElPTlwiPT09ZS50YXJnZXQubm9kZU5hbWV8fFwiT1BUR1JPVVBcIj09PWUudGFyZ2V0Lm5vZGVOYW1lKXtpZih0KWlmKHQuYWRkZWROb2RlcyYmMDx0LmFkZGVkTm9kZXMubGVuZ3RoKWZvcih2YXIgcj0wO3I8dC5hZGRlZE5vZGVzLmxlbmd0aDtyKyspe3QuYWRkZWROb2Rlc1tyXS5zZWxlY3RlZCYmKG49ITApfWVsc2UgdC5yZW1vdmVkTm9kZXMmJjA8dC5yZW1vdmVkTm9kZXMubGVuZ3RoJiYobj0hMCk7ZWxzZSBuPSEwO24mJnRoaXMuZGF0YUFkYXB0ZXIuY3VycmVudChmdW5jdGlvbihlKXtpLnRyaWdnZXIoXCJzZWxlY3Rpb246dXBkYXRlXCIse2RhdGE6ZX0pfSl9fSxkLnByb3RvdHlwZS50cmlnZ2VyPWZ1bmN0aW9uKGUsdCl7dmFyIG49ZC5fX3N1cGVyX18udHJpZ2dlcixpPXtvcGVuOlwib3BlbmluZ1wiLGNsb3NlOlwiY2xvc2luZ1wiLHNlbGVjdDpcInNlbGVjdGluZ1wiLHVuc2VsZWN0OlwidW5zZWxlY3RpbmdcIixjbGVhcjpcImNsZWFyaW5nXCJ9O2lmKHZvaWQgMD09PXQmJih0PXt9KSxlIGluIGkpe3ZhciByPWlbZV0sbz17cHJldmVudGVkOiExLG5hbWU6ZSxhcmdzOnR9O2lmKG4uY2FsbCh0aGlzLHIsbyksby5wcmV2ZW50ZWQpcmV0dXJuIHZvaWQodC5wcmV2ZW50ZWQ9ITApfW4uY2FsbCh0aGlzLGUsdCl9LGQucHJvdG90eXBlLnRvZ2dsZURyb3Bkb3duPWZ1bmN0aW9uKCl7dGhpcy5vcHRpb25zLmdldChcImRpc2FibGVkXCIpfHwodGhpcy5pc09wZW4oKT90aGlzLmNsb3NlKCk6dGhpcy5vcGVuKCkpfSxkLnByb3RvdHlwZS5vcGVuPWZ1bmN0aW9uKCl7dGhpcy5pc09wZW4oKXx8dGhpcy50cmlnZ2VyKFwicXVlcnlcIix7fSl9LGQucHJvdG90eXBlLmNsb3NlPWZ1bmN0aW9uKCl7dGhpcy5pc09wZW4oKSYmdGhpcy50cmlnZ2VyKFwiY2xvc2VcIix7fSl9LGQucHJvdG90eXBlLmlzT3Blbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLiRjb250YWluZXIuaGFzQ2xhc3MoXCJzZWxlY3QyLWNvbnRhaW5lci0tb3BlblwiKX0sZC5wcm90b3R5cGUuaGFzRm9jdXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy4kY29udGFpbmVyLmhhc0NsYXNzKFwic2VsZWN0Mi1jb250YWluZXItLWZvY3VzXCIpfSxkLnByb3RvdHlwZS5mb2N1cz1mdW5jdGlvbihlKXt0aGlzLmhhc0ZvY3VzKCl8fCh0aGlzLiRjb250YWluZXIuYWRkQ2xhc3MoXCJzZWxlY3QyLWNvbnRhaW5lci0tZm9jdXNcIiksdGhpcy50cmlnZ2VyKFwiZm9jdXNcIix7fSkpfSxkLnByb3RvdHlwZS5lbmFibGU9ZnVuY3Rpb24oZSl7dGhpcy5vcHRpb25zLmdldChcImRlYnVnXCIpJiZ3aW5kb3cuY29uc29sZSYmY29uc29sZS53YXJuJiZjb25zb2xlLndhcm4oJ1NlbGVjdDI6IFRoZSBgc2VsZWN0MihcImVuYWJsZVwiKWAgbWV0aG9kIGhhcyBiZWVuIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiBsYXRlciBTZWxlY3QyIHZlcnNpb25zLiBVc2UgJGVsZW1lbnQucHJvcChcImRpc2FibGVkXCIpIGluc3RlYWQuJyksbnVsbCE9ZSYmMCE9PWUubGVuZ3RofHwoZT1bITBdKTt2YXIgdD0hZVswXTt0aGlzLiRlbGVtZW50LnByb3AoXCJkaXNhYmxlZFwiLHQpfSxkLnByb3RvdHlwZS5kYXRhPWZ1bmN0aW9uKCl7dGhpcy5vcHRpb25zLmdldChcImRlYnVnXCIpJiYwPGFyZ3VtZW50cy5sZW5ndGgmJndpbmRvdy5jb25zb2xlJiZjb25zb2xlLndhcm4mJmNvbnNvbGUud2FybignU2VsZWN0MjogRGF0YSBjYW4gbm8gbG9uZ2VyIGJlIHNldCB1c2luZyBgc2VsZWN0MihcImRhdGFcIilgLiBZb3Ugc2hvdWxkIGNvbnNpZGVyIHNldHRpbmcgdGhlIHZhbHVlIGluc3RlYWQgdXNpbmcgYCRlbGVtZW50LnZhbCgpYC4nKTt2YXIgdD1bXTtyZXR1cm4gdGhpcy5kYXRhQWRhcHRlci5jdXJyZW50KGZ1bmN0aW9uKGUpe3Q9ZX0pLHR9LGQucHJvdG90eXBlLnZhbD1mdW5jdGlvbihlKXtpZih0aGlzLm9wdGlvbnMuZ2V0KFwiZGVidWdcIikmJndpbmRvdy5jb25zb2xlJiZjb25zb2xlLndhcm4mJmNvbnNvbGUud2FybignU2VsZWN0MjogVGhlIGBzZWxlY3QyKFwidmFsXCIpYCBtZXRob2QgaGFzIGJlZW4gZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGxhdGVyIFNlbGVjdDIgdmVyc2lvbnMuIFVzZSAkZWxlbWVudC52YWwoKSBpbnN0ZWFkLicpLG51bGw9PWV8fDA9PT1lLmxlbmd0aClyZXR1cm4gdGhpcy4kZWxlbWVudC52YWwoKTt2YXIgdD1lWzBdO3IuaXNBcnJheSh0KSYmKHQ9ci5tYXAodCxmdW5jdGlvbihlKXtyZXR1cm4gZS50b1N0cmluZygpfSkpLHRoaXMuJGVsZW1lbnQudmFsKHQpLnRyaWdnZXIoXCJjaGFuZ2VcIil9LGQucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLiRjb250YWluZXIucmVtb3ZlKCksdGhpcy4kZWxlbWVudFswXS5kZXRhY2hFdmVudCYmdGhpcy4kZWxlbWVudFswXS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIix0aGlzLl9zeW5jQSksbnVsbCE9dGhpcy5fb2JzZXJ2ZXI/KHRoaXMuX29ic2VydmVyLmRpc2Nvbm5lY3QoKSx0aGlzLl9vYnNlcnZlcj1udWxsKTp0aGlzLiRlbGVtZW50WzBdLnJlbW92ZUV2ZW50TGlzdGVuZXImJih0aGlzLiRlbGVtZW50WzBdLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJET01BdHRyTW9kaWZpZWRcIix0aGlzLl9zeW5jQSwhMSksdGhpcy4kZWxlbWVudFswXS5yZW1vdmVFdmVudExpc3RlbmVyKFwiRE9NTm9kZUluc2VydGVkXCIsdGhpcy5fc3luY1MsITEpLHRoaXMuJGVsZW1lbnRbMF0ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIkRPTU5vZGVSZW1vdmVkXCIsdGhpcy5fc3luY1MsITEpKSx0aGlzLl9zeW5jQT1udWxsLHRoaXMuX3N5bmNTPW51bGwsdGhpcy4kZWxlbWVudC5vZmYoXCIuc2VsZWN0MlwiKSx0aGlzLiRlbGVtZW50LmF0dHIoXCJ0YWJpbmRleFwiLHUuR2V0RGF0YSh0aGlzLiRlbGVtZW50WzBdLFwib2xkLXRhYmluZGV4XCIpKSx0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKFwic2VsZWN0Mi1oaWRkZW4tYWNjZXNzaWJsZVwiKSx0aGlzLiRlbGVtZW50LmF0dHIoXCJhcmlhLWhpZGRlblwiLFwiZmFsc2VcIiksdS5SZW1vdmVEYXRhKHRoaXMuJGVsZW1lbnRbMF0pLHRoaXMuJGVsZW1lbnQucmVtb3ZlRGF0YShcInNlbGVjdDJcIiksdGhpcy5kYXRhQWRhcHRlci5kZXN0cm95KCksdGhpcy5zZWxlY3Rpb24uZGVzdHJveSgpLHRoaXMuZHJvcGRvd24uZGVzdHJveSgpLHRoaXMucmVzdWx0cy5kZXN0cm95KCksdGhpcy5kYXRhQWRhcHRlcj1udWxsLHRoaXMuc2VsZWN0aW9uPW51bGwsdGhpcy5kcm9wZG93bj1udWxsLHRoaXMucmVzdWx0cz1udWxsfSxkLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgZT1yKCc8c3BhbiBjbGFzcz1cInNlbGVjdDIgc2VsZWN0Mi1jb250YWluZXJcIj48c3BhbiBjbGFzcz1cInNlbGVjdGlvblwiPjwvc3Bhbj48c3BhbiBjbGFzcz1cImRyb3Bkb3duLXdyYXBwZXJcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L3NwYW4+PC9zcGFuPicpO3JldHVybiBlLmF0dHIoXCJkaXJcIix0aGlzLm9wdGlvbnMuZ2V0KFwiZGlyXCIpKSx0aGlzLiRjb250YWluZXI9ZSx0aGlzLiRjb250YWluZXIuYWRkQ2xhc3MoXCJzZWxlY3QyLWNvbnRhaW5lci0tXCIrdGhpcy5vcHRpb25zLmdldChcInRoZW1lXCIpKSx1LlN0b3JlRGF0YShlWzBdLFwiZWxlbWVudFwiLHRoaXMuJGVsZW1lbnQpLGV9LGR9KSxlLmRlZmluZShcInNlbGVjdDIvY29tcGF0L3V0aWxzXCIsW1wianF1ZXJ5XCJdLGZ1bmN0aW9uKHMpe3JldHVybntzeW5jQ3NzQ2xhc3NlczpmdW5jdGlvbihlLHQsbil7dmFyIGkscixvPVtdOyhpPXMudHJpbShlLmF0dHIoXCJjbGFzc1wiKSkpJiZzKChpPVwiXCIraSkuc3BsaXQoL1xccysvKSkuZWFjaChmdW5jdGlvbigpezA9PT10aGlzLmluZGV4T2YoXCJzZWxlY3QyLVwiKSYmby5wdXNoKHRoaXMpfSksKGk9cy50cmltKHQuYXR0cihcImNsYXNzXCIpKSkmJnMoKGk9XCJcIitpKS5zcGxpdCgvXFxzKy8pKS5lYWNoKGZ1bmN0aW9uKCl7MCE9PXRoaXMuaW5kZXhPZihcInNlbGVjdDItXCIpJiZudWxsIT0ocj1uKHRoaXMpKSYmby5wdXNoKHIpfSksZS5hdHRyKFwiY2xhc3NcIixvLmpvaW4oXCIgXCIpKX19fSksZS5kZWZpbmUoXCJzZWxlY3QyL2NvbXBhdC9jb250YWluZXJDc3NcIixbXCJqcXVlcnlcIixcIi4vdXRpbHNcIl0sZnVuY3Rpb24ocyxhKXtmdW5jdGlvbiBsKGUpe3JldHVybiBudWxsfWZ1bmN0aW9uIGUoKXt9cmV0dXJuIGUucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihlKXt2YXIgdD1lLmNhbGwodGhpcyksbj10aGlzLm9wdGlvbnMuZ2V0KFwiY29udGFpbmVyQ3NzQ2xhc3NcIil8fFwiXCI7cy5pc0Z1bmN0aW9uKG4pJiYobj1uKHRoaXMuJGVsZW1lbnQpKTt2YXIgaT10aGlzLm9wdGlvbnMuZ2V0KFwiYWRhcHRDb250YWluZXJDc3NDbGFzc1wiKTtpZihpPWl8fGwsLTEhPT1uLmluZGV4T2YoXCI6YWxsOlwiKSl7bj1uLnJlcGxhY2UoXCI6YWxsOlwiLFwiXCIpO3ZhciByPWk7aT1mdW5jdGlvbihlKXt2YXIgdD1yKGUpO3JldHVybiBudWxsIT10P3QrXCIgXCIrZTplfX12YXIgbz10aGlzLm9wdGlvbnMuZ2V0KFwiY29udGFpbmVyQ3NzXCIpfHx7fTtyZXR1cm4gcy5pc0Z1bmN0aW9uKG8pJiYobz1vKHRoaXMuJGVsZW1lbnQpKSxhLnN5bmNDc3NDbGFzc2VzKHQsdGhpcy4kZWxlbWVudCxpKSx0LmNzcyhvKSx0LmFkZENsYXNzKG4pLHR9LGV9KSxlLmRlZmluZShcInNlbGVjdDIvY29tcGF0L2Ryb3Bkb3duQ3NzXCIsW1wianF1ZXJ5XCIsXCIuL3V0aWxzXCJdLGZ1bmN0aW9uKHMsYSl7ZnVuY3Rpb24gbChlKXtyZXR1cm4gbnVsbH1mdW5jdGlvbiBlKCl7fXJldHVybiBlLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jYWxsKHRoaXMpLG49dGhpcy5vcHRpb25zLmdldChcImRyb3Bkb3duQ3NzQ2xhc3NcIil8fFwiXCI7cy5pc0Z1bmN0aW9uKG4pJiYobj1uKHRoaXMuJGVsZW1lbnQpKTt2YXIgaT10aGlzLm9wdGlvbnMuZ2V0KFwiYWRhcHREcm9wZG93bkNzc0NsYXNzXCIpO2lmKGk9aXx8bCwtMSE9PW4uaW5kZXhPZihcIjphbGw6XCIpKXtuPW4ucmVwbGFjZShcIjphbGw6XCIsXCJcIik7dmFyIHI9aTtpPWZ1bmN0aW9uKGUpe3ZhciB0PXIoZSk7cmV0dXJuIG51bGwhPXQ/dCtcIiBcIitlOmV9fXZhciBvPXRoaXMub3B0aW9ucy5nZXQoXCJkcm9wZG93bkNzc1wiKXx8e307cmV0dXJuIHMuaXNGdW5jdGlvbihvKSYmKG89byh0aGlzLiRlbGVtZW50KSksYS5zeW5jQ3NzQ2xhc3Nlcyh0LHRoaXMuJGVsZW1lbnQsaSksdC5jc3MobyksdC5hZGRDbGFzcyhuKSx0fSxlfSksZS5kZWZpbmUoXCJzZWxlY3QyL2NvbXBhdC9pbml0U2VsZWN0aW9uXCIsW1wianF1ZXJ5XCJdLGZ1bmN0aW9uKGkpe2Z1bmN0aW9uIGUoZSx0LG4pe24uZ2V0KFwiZGVidWdcIikmJndpbmRvdy5jb25zb2xlJiZjb25zb2xlLndhcm4mJmNvbnNvbGUud2FybihcIlNlbGVjdDI6IFRoZSBgaW5pdFNlbGVjdGlvbmAgb3B0aW9uIGhhcyBiZWVuIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgYSBjdXN0b20gZGF0YSBhZGFwdGVyIHRoYXQgb3ZlcnJpZGVzIHRoZSBgY3VycmVudGAgbWV0aG9kLiBUaGlzIG1ldGhvZCBpcyBub3cgY2FsbGVkIG11bHRpcGxlIHRpbWVzIGluc3RlYWQgb2YgYSBzaW5nbGUgdGltZSB3aGVuIHRoZSBpbnN0YW5jZSBpcyBpbml0aWFsaXplZC4gU3VwcG9ydCB3aWxsIGJlIHJlbW92ZWQgZm9yIHRoZSBgaW5pdFNlbGVjdGlvbmAgb3B0aW9uIGluIGZ1dHVyZSB2ZXJzaW9ucyBvZiBTZWxlY3QyXCIpLHRoaXMuaW5pdFNlbGVjdGlvbj1uLmdldChcImluaXRTZWxlY3Rpb25cIiksdGhpcy5faXNJbml0aWFsaXplZD0hMSxlLmNhbGwodGhpcyx0LG4pfXJldHVybiBlLnByb3RvdHlwZS5jdXJyZW50PWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpczt0aGlzLl9pc0luaXRpYWxpemVkP2UuY2FsbCh0aGlzLHQpOnRoaXMuaW5pdFNlbGVjdGlvbi5jYWxsKG51bGwsdGhpcy4kZWxlbWVudCxmdW5jdGlvbihlKXtuLl9pc0luaXRpYWxpemVkPSEwLGkuaXNBcnJheShlKXx8KGU9W2VdKSx0KGUpfSl9LGV9KSxlLmRlZmluZShcInNlbGVjdDIvY29tcGF0L2lucHV0RGF0YVwiLFtcImpxdWVyeVwiLFwiLi4vdXRpbHNcIl0sZnVuY3Rpb24ocyxpKXtmdW5jdGlvbiBlKGUsdCxuKXt0aGlzLl9jdXJyZW50RGF0YT1bXSx0aGlzLl92YWx1ZVNlcGFyYXRvcj1uLmdldChcInZhbHVlU2VwYXJhdG9yXCIpfHxcIixcIixcImhpZGRlblwiPT09dC5wcm9wKFwidHlwZVwiKSYmbi5nZXQoXCJkZWJ1Z1wiKSYmY29uc29sZSYmY29uc29sZS53YXJuJiZjb25zb2xlLndhcm4oXCJTZWxlY3QyOiBVc2luZyBhIGhpZGRlbiBpbnB1dCB3aXRoIFNlbGVjdDIgaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZCBhbmQgbWF5IHN0b3Agd29ya2luZyBpbiB0aGUgZnV0dXJlLiBJdCBpcyByZWNvbW1lbmRlZCB0byB1c2UgYSBgPHNlbGVjdD5gIGVsZW1lbnQgaW5zdGVhZC5cIiksZS5jYWxsKHRoaXMsdCxuKX1yZXR1cm4gZS5wcm90b3R5cGUuY3VycmVudD1mdW5jdGlvbihlLHQpe2Z1bmN0aW9uIGkoZSx0KXt2YXIgbj1bXTtyZXR1cm4gZS5zZWxlY3RlZHx8LTEhPT1zLmluQXJyYXkoZS5pZCx0KT8oZS5zZWxlY3RlZD0hMCxuLnB1c2goZSkpOmUuc2VsZWN0ZWQ9ITEsZS5jaGlsZHJlbiYmbi5wdXNoLmFwcGx5KG4saShlLmNoaWxkcmVuLHQpKSxufWZvcih2YXIgbj1bXSxyPTA7cjx0aGlzLl9jdXJyZW50RGF0YS5sZW5ndGg7cisrKXt2YXIgbz10aGlzLl9jdXJyZW50RGF0YVtyXTtuLnB1c2guYXBwbHkobixpKG8sdGhpcy4kZWxlbWVudC52YWwoKS5zcGxpdCh0aGlzLl92YWx1ZVNlcGFyYXRvcikpKX10KG4pfSxlLnByb3RvdHlwZS5zZWxlY3Q9ZnVuY3Rpb24oZSx0KXtpZih0aGlzLm9wdGlvbnMuZ2V0KFwibXVsdGlwbGVcIikpe3ZhciBuPXRoaXMuJGVsZW1lbnQudmFsKCk7bis9dGhpcy5fdmFsdWVTZXBhcmF0b3IrdC5pZCx0aGlzLiRlbGVtZW50LnZhbChuKSx0aGlzLiRlbGVtZW50LnRyaWdnZXIoXCJjaGFuZ2VcIil9ZWxzZSB0aGlzLmN1cnJlbnQoZnVuY3Rpb24oZSl7cy5tYXAoZSxmdW5jdGlvbihlKXtlLnNlbGVjdGVkPSExfSl9KSx0aGlzLiRlbGVtZW50LnZhbCh0LmlkKSx0aGlzLiRlbGVtZW50LnRyaWdnZXIoXCJjaGFuZ2VcIil9LGUucHJvdG90eXBlLnVuc2VsZWN0PWZ1bmN0aW9uKGUscil7dmFyIG89dGhpcztyLnNlbGVjdGVkPSExLHRoaXMuY3VycmVudChmdW5jdGlvbihlKXtmb3IodmFyIHQ9W10sbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgaT1lW25dO3IuaWQhPWkuaWQmJnQucHVzaChpLmlkKX1vLiRlbGVtZW50LnZhbCh0LmpvaW4oby5fdmFsdWVTZXBhcmF0b3IpKSxvLiRlbGVtZW50LnRyaWdnZXIoXCJjaGFuZ2VcIil9KX0sZS5wcm90b3R5cGUucXVlcnk9ZnVuY3Rpb24oZSx0LG4pe2Zvcih2YXIgaT1bXSxyPTA7cjx0aGlzLl9jdXJyZW50RGF0YS5sZW5ndGg7cisrKXt2YXIgbz10aGlzLl9jdXJyZW50RGF0YVtyXSxzPXRoaXMubWF0Y2hlcyh0LG8pO251bGwhPT1zJiZpLnB1c2gocyl9bih7cmVzdWx0czppfSl9LGUucHJvdG90eXBlLmFkZE9wdGlvbnM9ZnVuY3Rpb24oZSx0KXt2YXIgbj1zLm1hcCh0LGZ1bmN0aW9uKGUpe3JldHVybiBpLkdldERhdGEoZVswXSxcImRhdGFcIil9KTt0aGlzLl9jdXJyZW50RGF0YS5wdXNoLmFwcGx5KHRoaXMuX2N1cnJlbnREYXRhLG4pfSxlfSksZS5kZWZpbmUoXCJzZWxlY3QyL2NvbXBhdC9tYXRjaGVyXCIsW1wianF1ZXJ5XCJdLGZ1bmN0aW9uKHMpe3JldHVybiBmdW5jdGlvbihvKXtyZXR1cm4gZnVuY3Rpb24oZSx0KXt2YXIgbj1zLmV4dGVuZCghMCx7fSx0KTtpZihudWxsPT1lLnRlcm18fFwiXCI9PT1zLnRyaW0oZS50ZXJtKSlyZXR1cm4gbjtpZih0LmNoaWxkcmVuKXtmb3IodmFyIGk9dC5jaGlsZHJlbi5sZW5ndGgtMTswPD1pO2ktLSl7dmFyIHI9dC5jaGlsZHJlbltpXTtvKGUudGVybSxyLnRleHQscil8fG4uY2hpbGRyZW4uc3BsaWNlKGksMSl9aWYoMDxuLmNoaWxkcmVuLmxlbmd0aClyZXR1cm4gbn1yZXR1cm4gbyhlLnRlcm0sdC50ZXh0LHQpP246bnVsbH19fSksZS5kZWZpbmUoXCJzZWxlY3QyL2NvbXBhdC9xdWVyeVwiLFtdLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQsbil7bi5nZXQoXCJkZWJ1Z1wiKSYmd2luZG93LmNvbnNvbGUmJmNvbnNvbGUud2FybiYmY29uc29sZS53YXJuKFwiU2VsZWN0MjogVGhlIGBxdWVyeWAgb3B0aW9uIGhhcyBiZWVuIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgYSBjdXN0b20gZGF0YSBhZGFwdGVyIHRoYXQgb3ZlcnJpZGVzIHRoZSBgcXVlcnlgIG1ldGhvZC4gU3VwcG9ydCB3aWxsIGJlIHJlbW92ZWQgZm9yIHRoZSBgcXVlcnlgIG9wdGlvbiBpbiBmdXR1cmUgdmVyc2lvbnMgb2YgU2VsZWN0Mi5cIiksZS5jYWxsKHRoaXMsdCxuKX1yZXR1cm4gZS5wcm90b3R5cGUucXVlcnk9ZnVuY3Rpb24oZSx0LG4pe3QuY2FsbGJhY2s9bix0aGlzLm9wdGlvbnMuZ2V0KFwicXVlcnlcIikuY2FsbChudWxsLHQpfSxlfSksZS5kZWZpbmUoXCJzZWxlY3QyL2Ryb3Bkb3duL2F0dGFjaENvbnRhaW5lclwiLFtdLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQsbil7ZS5jYWxsKHRoaXMsdCxuKX1yZXR1cm4gZS5wcm90b3R5cGUucG9zaXRpb249ZnVuY3Rpb24oZSx0LG4pe24uZmluZChcIi5kcm9wZG93bi13cmFwcGVyXCIpLmFwcGVuZCh0KSx0LmFkZENsYXNzKFwic2VsZWN0Mi1kcm9wZG93bi0tYmVsb3dcIiksbi5hZGRDbGFzcyhcInNlbGVjdDItY29udGFpbmVyLS1iZWxvd1wiKX0sZX0pLGUuZGVmaW5lKFwic2VsZWN0Mi9kcm9wZG93bi9zdG9wUHJvcGFnYXRpb25cIixbXSxmdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt9cmV0dXJuIGUucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oZSx0LG4pe2UuY2FsbCh0aGlzLHQsbik7dGhpcy4kZHJvcGRvd24ub24oW1wiYmx1clwiLFwiY2hhbmdlXCIsXCJjbGlja1wiLFwiZGJsY2xpY2tcIixcImZvY3VzXCIsXCJmb2N1c2luXCIsXCJmb2N1c291dFwiLFwiaW5wdXRcIixcImtleWRvd25cIixcImtleXVwXCIsXCJrZXlwcmVzc1wiLFwibW91c2Vkb3duXCIsXCJtb3VzZWVudGVyXCIsXCJtb3VzZWxlYXZlXCIsXCJtb3VzZW1vdmVcIixcIm1vdXNlb3ZlclwiLFwibW91c2V1cFwiLFwic2VhcmNoXCIsXCJ0b3VjaGVuZFwiLFwidG91Y2hzdGFydFwiXS5qb2luKFwiIFwiKSxmdW5jdGlvbihlKXtlLnN0b3BQcm9wYWdhdGlvbigpfSl9LGV9KSxlLmRlZmluZShcInNlbGVjdDIvc2VsZWN0aW9uL3N0b3BQcm9wYWdhdGlvblwiLFtdLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe31yZXR1cm4gZS5wcm90b3R5cGUuYmluZD1mdW5jdGlvbihlLHQsbil7ZS5jYWxsKHRoaXMsdCxuKTt0aGlzLiRzZWxlY3Rpb24ub24oW1wiYmx1clwiLFwiY2hhbmdlXCIsXCJjbGlja1wiLFwiZGJsY2xpY2tcIixcImZvY3VzXCIsXCJmb2N1c2luXCIsXCJmb2N1c291dFwiLFwiaW5wdXRcIixcImtleWRvd25cIixcImtleXVwXCIsXCJrZXlwcmVzc1wiLFwibW91c2Vkb3duXCIsXCJtb3VzZWVudGVyXCIsXCJtb3VzZWxlYXZlXCIsXCJtb3VzZW1vdmVcIixcIm1vdXNlb3ZlclwiLFwibW91c2V1cFwiLFwic2VhcmNoXCIsXCJ0b3VjaGVuZFwiLFwidG91Y2hzdGFydFwiXS5qb2luKFwiIFwiKSxmdW5jdGlvbihlKXtlLnN0b3BQcm9wYWdhdGlvbigpfSl9LGV9KSxsPWZ1bmN0aW9uKHApe3ZhciBoLGYsZT1bXCJ3aGVlbFwiLFwibW91c2V3aGVlbFwiLFwiRE9NTW91c2VTY3JvbGxcIixcIk1vek1vdXNlUGl4ZWxTY3JvbGxcIl0sdD1cIm9ud2hlZWxcImluIGRvY3VtZW50fHw5PD1kb2N1bWVudC5kb2N1bWVudE1vZGU/W1wid2hlZWxcIl06W1wibW91c2V3aGVlbFwiLFwiRG9tTW91c2VTY3JvbGxcIixcIk1vek1vdXNlUGl4ZWxTY3JvbGxcIl0sZz1BcnJheS5wcm90b3R5cGUuc2xpY2U7aWYocC5ldmVudC5maXhIb29rcylmb3IodmFyIG49ZS5sZW5ndGg7bjspcC5ldmVudC5maXhIb29rc1tlWy0tbl1dPXAuZXZlbnQubW91c2VIb29rczt2YXIgbT1wLmV2ZW50LnNwZWNpYWwubW91c2V3aGVlbD17dmVyc2lvbjpcIjMuMS4xMlwiLHNldHVwOmZ1bmN0aW9uKCl7aWYodGhpcy5hZGRFdmVudExpc3RlbmVyKWZvcih2YXIgZT10Lmxlbmd0aDtlOyl0aGlzLmFkZEV2ZW50TGlzdGVuZXIodFstLWVdLGksITEpO2Vsc2UgdGhpcy5vbm1vdXNld2hlZWw9aTtwLmRhdGEodGhpcyxcIm1vdXNld2hlZWwtbGluZS1oZWlnaHRcIixtLmdldExpbmVIZWlnaHQodGhpcykpLHAuZGF0YSh0aGlzLFwibW91c2V3aGVlbC1wYWdlLWhlaWdodFwiLG0uZ2V0UGFnZUhlaWdodCh0aGlzKSl9LHRlYXJkb3duOmZ1bmN0aW9uKCl7aWYodGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKWZvcih2YXIgZT10Lmxlbmd0aDtlOyl0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIodFstLWVdLGksITEpO2Vsc2UgdGhpcy5vbm1vdXNld2hlZWw9bnVsbDtwLnJlbW92ZURhdGEodGhpcyxcIm1vdXNld2hlZWwtbGluZS1oZWlnaHRcIikscC5yZW1vdmVEYXRhKHRoaXMsXCJtb3VzZXdoZWVsLXBhZ2UtaGVpZ2h0XCIpfSxnZXRMaW5lSGVpZ2h0OmZ1bmN0aW9uKGUpe3ZhciB0PXAoZSksbj10W1wib2Zmc2V0UGFyZW50XCJpbiBwLmZuP1wib2Zmc2V0UGFyZW50XCI6XCJwYXJlbnRcIl0oKTtyZXR1cm4gbi5sZW5ndGh8fChuPXAoXCJib2R5XCIpKSxwYXJzZUludChuLmNzcyhcImZvbnRTaXplXCIpLDEwKXx8cGFyc2VJbnQodC5jc3MoXCJmb250U2l6ZVwiKSwxMCl8fDE2fSxnZXRQYWdlSGVpZ2h0OmZ1bmN0aW9uKGUpe3JldHVybiBwKGUpLmhlaWdodCgpfSxzZXR0aW5nczp7YWRqdXN0T2xkRGVsdGFzOiEwLG5vcm1hbGl6ZU9mZnNldDohMH19O2Z1bmN0aW9uIGkoZSl7dmFyIHQsbj1lfHx3aW5kb3cuZXZlbnQsaT1nLmNhbGwoYXJndW1lbnRzLDEpLHI9MCxvPTAscz0wLGE9MCxsPTA7aWYoKGU9cC5ldmVudC5maXgobikpLnR5cGU9XCJtb3VzZXdoZWVsXCIsXCJkZXRhaWxcImluIG4mJihzPS0xKm4uZGV0YWlsKSxcIndoZWVsRGVsdGFcImluIG4mJihzPW4ud2hlZWxEZWx0YSksXCJ3aGVlbERlbHRhWVwiaW4gbiYmKHM9bi53aGVlbERlbHRhWSksXCJ3aGVlbERlbHRhWFwiaW4gbiYmKG89LTEqbi53aGVlbERlbHRhWCksXCJheGlzXCJpbiBuJiZuLmF4aXM9PT1uLkhPUklaT05UQUxfQVhJUyYmKG89LTEqcyxzPTApLHI9MD09PXM/bzpzLFwiZGVsdGFZXCJpbiBuJiYocj1zPS0xKm4uZGVsdGFZKSxcImRlbHRhWFwiaW4gbiYmKG89bi5kZWx0YVgsMD09PXMmJihyPS0xKm8pKSwwIT09c3x8MCE9PW8pe2lmKDE9PT1uLmRlbHRhTW9kZSl7dmFyIGM9cC5kYXRhKHRoaXMsXCJtb3VzZXdoZWVsLWxpbmUtaGVpZ2h0XCIpO3IqPWMscyo9YyxvKj1jfWVsc2UgaWYoMj09PW4uZGVsdGFNb2RlKXt2YXIgdT1wLmRhdGEodGhpcyxcIm1vdXNld2hlZWwtcGFnZS1oZWlnaHRcIik7cio9dSxzKj11LG8qPXV9aWYodD1NYXRoLm1heChNYXRoLmFicyhzKSxNYXRoLmFicyhvKSksKCFmfHx0PGYpJiZ5KG4sZj10KSYmKGYvPTQwKSx5KG4sdCkmJihyLz00MCxvLz00MCxzLz00MCkscj1NYXRoWzE8PXI/XCJmbG9vclwiOlwiY2VpbFwiXShyL2YpLG89TWF0aFsxPD1vP1wiZmxvb3JcIjpcImNlaWxcIl0oby9mKSxzPU1hdGhbMTw9cz9cImZsb29yXCI6XCJjZWlsXCJdKHMvZiksbS5zZXR0aW5ncy5ub3JtYWxpemVPZmZzZXQmJnRoaXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KXt2YXIgZD10aGlzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO2E9ZS5jbGllbnRYLWQubGVmdCxsPWUuY2xpZW50WS1kLnRvcH1yZXR1cm4gZS5kZWx0YVg9byxlLmRlbHRhWT1zLGUuZGVsdGFGYWN0b3I9ZixlLm9mZnNldFg9YSxlLm9mZnNldFk9bCxlLmRlbHRhTW9kZT0wLGkudW5zaGlmdChlLHIsbyxzKSxoJiZjbGVhclRpbWVvdXQoaCksaD1zZXRUaW1lb3V0KHYsMjAwKSwocC5ldmVudC5kaXNwYXRjaHx8cC5ldmVudC5oYW5kbGUpLmFwcGx5KHRoaXMsaSl9fWZ1bmN0aW9uIHYoKXtmPW51bGx9ZnVuY3Rpb24geShlLHQpe3JldHVybiBtLnNldHRpbmdzLmFkanVzdE9sZERlbHRhcyYmXCJtb3VzZXdoZWVsXCI9PT1lLnR5cGUmJnQlMTIwPT0wfXAuZm4uZXh0ZW5kKHttb3VzZXdoZWVsOmZ1bmN0aW9uKGUpe3JldHVybiBlP3RoaXMuYmluZChcIm1vdXNld2hlZWxcIixlKTp0aGlzLnRyaWdnZXIoXCJtb3VzZXdoZWVsXCIpfSx1bm1vdXNld2hlZWw6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudW5iaW5kKFwibW91c2V3aGVlbFwiLGUpfX0pfSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLmRlZmluZSYmZS5kZWZpbmUuYW1kP2UuZGVmaW5lKFwianF1ZXJ5LW1vdXNld2hlZWxcIixbXCJqcXVlcnlcIl0sbCk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9bDpsKGQpLGUuZGVmaW5lKFwianF1ZXJ5LnNlbGVjdDJcIixbXCJqcXVlcnlcIixcImpxdWVyeS1tb3VzZXdoZWVsXCIsXCIuL3NlbGVjdDIvY29yZVwiLFwiLi9zZWxlY3QyL2RlZmF1bHRzXCIsXCIuL3NlbGVjdDIvdXRpbHNcIl0sZnVuY3Rpb24ocixlLG8sdCxzKXtpZihudWxsPT1yLmZuLnNlbGVjdDIpe3ZhciBhPVtcIm9wZW5cIixcImNsb3NlXCIsXCJkZXN0cm95XCJdO3IuZm4uc2VsZWN0Mj1mdW5jdGlvbih0KXtpZihcIm9iamVjdFwiPT10eXBlb2YodD10fHx7fSkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBlPXIuZXh0ZW5kKCEwLHt9LHQpO25ldyBvKHIodGhpcyksZSl9KSx0aGlzO2lmKFwic3RyaW5nXCIhPXR5cGVvZiB0KXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIGZvciBTZWxlY3QyOiBcIit0KTt2YXIgbixpPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9cy5HZXREYXRhKHRoaXMsXCJzZWxlY3QyXCIpO251bGw9PWUmJndpbmRvdy5jb25zb2xlJiZjb25zb2xlLmVycm9yJiZjb25zb2xlLmVycm9yKFwiVGhlIHNlbGVjdDIoJ1wiK3QrXCInKSBtZXRob2Qgd2FzIGNhbGxlZCBvbiBhbiBlbGVtZW50IHRoYXQgaXMgbm90IHVzaW5nIFNlbGVjdDIuXCIpLG49ZVt0XS5hcHBseShlLGkpfSksLTE8ci5pbkFycmF5KHQsYSk/dGhpczpufX1yZXR1cm4gbnVsbD09ci5mbi5zZWxlY3QyLmRlZmF1bHRzJiYoci5mbi5zZWxlY3QyLmRlZmF1bHRzPXQpLG99KSx7ZGVmaW5lOmUuZGVmaW5lLHJlcXVpcmU6ZS5yZXF1aXJlfX0oKSx0PWUucmVxdWlyZShcImpxdWVyeS5zZWxlY3QyXCIpO3JldHVybiBkLmZuLnNlbGVjdDIuYW1kPWUsdH0pOyIsIi8qXG4gICAgIF8gXyAgICAgIF8gICAgICAgX1xuIF9fX3wgKF8pIF9fX3wgfCBfXyAgKF8pX19fXG4vIF9ffCB8IHwvIF9ffCB8LyAvICB8IC8gX198XG5cXF9fIFxcIHwgfCAoX198ICAgPCBfIHwgXFxfXyBcXFxufF9fXy9ffF98XFxfX198X3xcXF8oXykvIHxfX18vXG4gICAgICAgICAgICAgICAgICAgfF9fL1xuXG4gVmVyc2lvbjogMS42LjBcbiAgQXV0aG9yOiBLZW4gV2hlZWxlclxuIFdlYnNpdGU6IGh0dHA6Ly9rZW53aGVlbGVyLmdpdGh1Yi5pb1xuICAgIERvY3M6IGh0dHA6Ly9rZW53aGVlbGVyLmdpdGh1Yi5pby9zbGlja1xuICAgIFJlcG86IGh0dHA6Ly9naXRodWIuY29tL2tlbndoZWVsZXIvc2xpY2tcbiAgSXNzdWVzOiBodHRwOi8vZ2l0aHViLmNvbS9rZW53aGVlbGVyL3NsaWNrL2lzc3Vlc1xuXG4gKi9cbiFmdW5jdGlvbihhKXtcInVzZSBzdHJpY3RcIjtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtcImpxdWVyeVwiXSxhKTpcInVuZGVmaW5lZFwiIT10eXBlb2YgZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1hKHJlcXVpcmUoXCJqcXVlcnlcIikpOmEoalF1ZXJ5KX0oZnVuY3Rpb24oYSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGI9d2luZG93LlNsaWNrfHx7fTtiPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYyhjLGQpe3ZhciBmLGU9dGhpcztlLmRlZmF1bHRzPXthY2Nlc3NpYmlsaXR5OiEwLGFkYXB0aXZlSGVpZ2h0OiExLGFwcGVuZEFycm93czphKGMpLGFwcGVuZERvdHM6YShjKSxhcnJvd3M6ITAsYXNOYXZGb3I6bnVsbCxwcmV2QXJyb3c6JzxidXR0b24gdHlwZT1cImJ1dHRvblwiIGRhdGEtcm9sZT1cIm5vbmVcIiBjbGFzcz1cInNsaWNrLXByZXZcIiBhcmlhLWxhYmVsPVwiUHJldmlvdXNcIiB0YWJpbmRleD1cIjBcIiByb2xlPVwiYnV0dG9uXCI+UHJldmlvdXM8L2J1dHRvbj4nLG5leHRBcnJvdzonPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgZGF0YS1yb2xlPVwibm9uZVwiIGNsYXNzPVwic2xpY2stbmV4dFwiIGFyaWEtbGFiZWw9XCJOZXh0XCIgdGFiaW5kZXg9XCIwXCIgcm9sZT1cImJ1dHRvblwiPk5leHQ8L2J1dHRvbj4nLGF1dG9wbGF5OiExLGF1dG9wbGF5U3BlZWQ6M2UzLGNlbnRlck1vZGU6ITEsY2VudGVyUGFkZGluZzpcIjUwcHhcIixjc3NFYXNlOlwiZWFzZVwiLGN1c3RvbVBhZ2luZzpmdW5jdGlvbihiLGMpe3JldHVybiBhKCc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBkYXRhLXJvbGU9XCJub25lXCIgcm9sZT1cImJ1dHRvblwiIHRhYmluZGV4PVwiMFwiIC8+JykudGV4dChjKzEpfSxkb3RzOiExLGRvdHNDbGFzczpcInNsaWNrLWRvdHNcIixkcmFnZ2FibGU6ITAsZWFzaW5nOlwibGluZWFyXCIsZWRnZUZyaWN0aW9uOi4zNSxmYWRlOiExLGZvY3VzT25TZWxlY3Q6ITEsaW5maW5pdGU6ITAsaW5pdGlhbFNsaWRlOjAsbGF6eUxvYWQ6XCJvbmRlbWFuZFwiLG1vYmlsZUZpcnN0OiExLHBhdXNlT25Ib3ZlcjohMCxwYXVzZU9uRm9jdXM6ITAscGF1c2VPbkRvdHNIb3ZlcjohMSxyZXNwb25kVG86XCJ3aW5kb3dcIixyZXNwb25zaXZlOm51bGwscm93czoxLHJ0bDohMSxzbGlkZTpcIlwiLHNsaWRlc1BlclJvdzoxLHNsaWRlc1RvU2hvdzoxLHNsaWRlc1RvU2Nyb2xsOjEsc3BlZWQ6NTAwLHN3aXBlOiEwLHN3aXBlVG9TbGlkZTohMSx0b3VjaE1vdmU6ITAsdG91Y2hUaHJlc2hvbGQ6NSx1c2VDU1M6ITAsdXNlVHJhbnNmb3JtOiEwLHZhcmlhYmxlV2lkdGg6ITEsdmVydGljYWw6ITEsdmVydGljYWxTd2lwaW5nOiExLHdhaXRGb3JBbmltYXRlOiEwLHpJbmRleDoxZTN9LGUuaW5pdGlhbHM9e2FuaW1hdGluZzohMSxkcmFnZ2luZzohMSxhdXRvUGxheVRpbWVyOm51bGwsY3VycmVudERpcmVjdGlvbjowLGN1cnJlbnRMZWZ0Om51bGwsY3VycmVudFNsaWRlOjAsZGlyZWN0aW9uOjEsJGRvdHM6bnVsbCxsaXN0V2lkdGg6bnVsbCxsaXN0SGVpZ2h0Om51bGwsbG9hZEluZGV4OjAsJG5leHRBcnJvdzpudWxsLCRwcmV2QXJyb3c6bnVsbCxzbGlkZUNvdW50Om51bGwsc2xpZGVXaWR0aDpudWxsLCRzbGlkZVRyYWNrOm51bGwsJHNsaWRlczpudWxsLHNsaWRpbmc6ITEsc2xpZGVPZmZzZXQ6MCxzd2lwZUxlZnQ6bnVsbCwkbGlzdDpudWxsLHRvdWNoT2JqZWN0Ont9LHRyYW5zZm9ybXNFbmFibGVkOiExLHVuc2xpY2tlZDohMX0sYS5leHRlbmQoZSxlLmluaXRpYWxzKSxlLmFjdGl2ZUJyZWFrcG9pbnQ9bnVsbCxlLmFuaW1UeXBlPW51bGwsZS5hbmltUHJvcD1udWxsLGUuYnJlYWtwb2ludHM9W10sZS5icmVha3BvaW50U2V0dGluZ3M9W10sZS5jc3NUcmFuc2l0aW9ucz0hMSxlLmZvY3Vzc2VkPSExLGUuaW50ZXJydXB0ZWQ9ITEsZS5oaWRkZW49XCJoaWRkZW5cIixlLnBhdXNlZD0hMCxlLnBvc2l0aW9uUHJvcD1udWxsLGUucmVzcG9uZFRvPW51bGwsZS5yb3dDb3VudD0xLGUuc2hvdWxkQ2xpY2s9ITAsZS4kc2xpZGVyPWEoYyksZS4kc2xpZGVzQ2FjaGU9bnVsbCxlLnRyYW5zZm9ybVR5cGU9bnVsbCxlLnRyYW5zaXRpb25UeXBlPW51bGwsZS52aXNpYmlsaXR5Q2hhbmdlPVwidmlzaWJpbGl0eWNoYW5nZVwiLGUud2luZG93V2lkdGg9MCxlLndpbmRvd1RpbWVyPW51bGwsZj1hKGMpLmRhdGEoXCJzbGlja1wiKXx8e30sZS5vcHRpb25zPWEuZXh0ZW5kKHt9LGUuZGVmYXVsdHMsZCxmKSxlLmN1cnJlbnRTbGlkZT1lLm9wdGlvbnMuaW5pdGlhbFNsaWRlLGUub3JpZ2luYWxTZXR0aW5ncz1lLm9wdGlvbnMsXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGRvY3VtZW50Lm1vekhpZGRlbj8oZS5oaWRkZW49XCJtb3pIaWRkZW5cIixlLnZpc2liaWxpdHlDaGFuZ2U9XCJtb3p2aXNpYmlsaXR5Y2hhbmdlXCIpOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBkb2N1bWVudC53ZWJraXRIaWRkZW4mJihlLmhpZGRlbj1cIndlYmtpdEhpZGRlblwiLGUudmlzaWJpbGl0eUNoYW5nZT1cIndlYmtpdHZpc2liaWxpdHljaGFuZ2VcIiksZS5hdXRvUGxheT1hLnByb3h5KGUuYXV0b1BsYXksZSksZS5hdXRvUGxheUNsZWFyPWEucHJveHkoZS5hdXRvUGxheUNsZWFyLGUpLGUuYXV0b1BsYXlJdGVyYXRvcj1hLnByb3h5KGUuYXV0b1BsYXlJdGVyYXRvcixlKSxlLmNoYW5nZVNsaWRlPWEucHJveHkoZS5jaGFuZ2VTbGlkZSxlKSxlLmNsaWNrSGFuZGxlcj1hLnByb3h5KGUuY2xpY2tIYW5kbGVyLGUpLGUuc2VsZWN0SGFuZGxlcj1hLnByb3h5KGUuc2VsZWN0SGFuZGxlcixlKSxlLnNldFBvc2l0aW9uPWEucHJveHkoZS5zZXRQb3NpdGlvbixlKSxlLnN3aXBlSGFuZGxlcj1hLnByb3h5KGUuc3dpcGVIYW5kbGVyLGUpLGUuZHJhZ0hhbmRsZXI9YS5wcm94eShlLmRyYWdIYW5kbGVyLGUpLGUua2V5SGFuZGxlcj1hLnByb3h5KGUua2V5SGFuZGxlcixlKSxlLmluc3RhbmNlVWlkPWIrKyxlLmh0bWxFeHByPS9eKD86XFxzKig8W1xcd1xcV10rPilbXj5dKikkLyxlLnJlZ2lzdGVyQnJlYWtwb2ludHMoKSxlLmluaXQoITApfXZhciBiPTA7cmV0dXJuIGN9KCksYi5wcm90b3R5cGUuYWN0aXZhdGVBREE9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO2EuJHNsaWRlVHJhY2suZmluZChcIi5zbGljay1hY3RpdmVcIikuYXR0cih7XCJhcmlhLWhpZGRlblwiOlwiZmFsc2VcIn0pLmZpbmQoXCJhLCBpbnB1dCwgYnV0dG9uLCBzZWxlY3RcIikuYXR0cih7dGFiaW5kZXg6XCIwXCJ9KX0sYi5wcm90b3R5cGUuYWRkU2xpZGU9Yi5wcm90b3R5cGUuc2xpY2tBZGQ9ZnVuY3Rpb24oYixjLGQpe3ZhciBlPXRoaXM7aWYoXCJib29sZWFuXCI9PXR5cGVvZiBjKWQ9YyxjPW51bGw7ZWxzZSBpZigwPmN8fGM+PWUuc2xpZGVDb3VudClyZXR1cm4hMTtlLnVubG9hZCgpLFwibnVtYmVyXCI9PXR5cGVvZiBjPzA9PT1jJiYwPT09ZS4kc2xpZGVzLmxlbmd0aD9hKGIpLmFwcGVuZFRvKGUuJHNsaWRlVHJhY2spOmQ/YShiKS5pbnNlcnRCZWZvcmUoZS4kc2xpZGVzLmVxKGMpKTphKGIpLmluc2VydEFmdGVyKGUuJHNsaWRlcy5lcShjKSk6ZD09PSEwP2EoYikucHJlcGVuZFRvKGUuJHNsaWRlVHJhY2spOmEoYikuYXBwZW5kVG8oZS4kc2xpZGVUcmFjayksZS4kc2xpZGVzPWUuJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKSxlLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZGV0YWNoKCksZS4kc2xpZGVUcmFjay5hcHBlbmQoZS4kc2xpZGVzKSxlLiRzbGlkZXMuZWFjaChmdW5jdGlvbihiLGMpe2EoYykuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIixiKX0pLGUuJHNsaWRlc0NhY2hlPWUuJHNsaWRlcyxlLnJlaW5pdCgpfSxiLnByb3RvdHlwZS5hbmltYXRlSGVpZ2h0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcztpZigxPT09YS5vcHRpb25zLnNsaWRlc1RvU2hvdyYmYS5vcHRpb25zLmFkYXB0aXZlSGVpZ2h0PT09ITAmJmEub3B0aW9ucy52ZXJ0aWNhbD09PSExKXt2YXIgYj1hLiRzbGlkZXMuZXEoYS5jdXJyZW50U2xpZGUpLm91dGVySGVpZ2h0KCEwKTthLiRsaXN0LmFuaW1hdGUoe2hlaWdodDpifSxhLm9wdGlvbnMuc3BlZWQpfX0sYi5wcm90b3R5cGUuYW5pbWF0ZVNsaWRlPWZ1bmN0aW9uKGIsYyl7dmFyIGQ9e30sZT10aGlzO2UuYW5pbWF0ZUhlaWdodCgpLGUub3B0aW9ucy5ydGw9PT0hMCYmZS5vcHRpb25zLnZlcnRpY2FsPT09ITEmJihiPS1iKSxlLnRyYW5zZm9ybXNFbmFibGVkPT09ITE/ZS5vcHRpb25zLnZlcnRpY2FsPT09ITE/ZS4kc2xpZGVUcmFjay5hbmltYXRlKHtsZWZ0OmJ9LGUub3B0aW9ucy5zcGVlZCxlLm9wdGlvbnMuZWFzaW5nLGMpOmUuJHNsaWRlVHJhY2suYW5pbWF0ZSh7dG9wOmJ9LGUub3B0aW9ucy5zcGVlZCxlLm9wdGlvbnMuZWFzaW5nLGMpOmUuY3NzVHJhbnNpdGlvbnM9PT0hMT8oZS5vcHRpb25zLnJ0bD09PSEwJiYoZS5jdXJyZW50TGVmdD0tZS5jdXJyZW50TGVmdCksYSh7YW5pbVN0YXJ0OmUuY3VycmVudExlZnR9KS5hbmltYXRlKHthbmltU3RhcnQ6Yn0se2R1cmF0aW9uOmUub3B0aW9ucy5zcGVlZCxlYXNpbmc6ZS5vcHRpb25zLmVhc2luZyxzdGVwOmZ1bmN0aW9uKGEpe2E9TWF0aC5jZWlsKGEpLGUub3B0aW9ucy52ZXJ0aWNhbD09PSExPyhkW2UuYW5pbVR5cGVdPVwidHJhbnNsYXRlKFwiK2ErXCJweCwgMHB4KVwiLGUuJHNsaWRlVHJhY2suY3NzKGQpKTooZFtlLmFuaW1UeXBlXT1cInRyYW5zbGF0ZSgwcHgsXCIrYStcInB4KVwiLGUuJHNsaWRlVHJhY2suY3NzKGQpKX0sY29tcGxldGU6ZnVuY3Rpb24oKXtjJiZjLmNhbGwoKX19KSk6KGUuYXBwbHlUcmFuc2l0aW9uKCksYj1NYXRoLmNlaWwoYiksZS5vcHRpb25zLnZlcnRpY2FsPT09ITE/ZFtlLmFuaW1UeXBlXT1cInRyYW5zbGF0ZTNkKFwiK2IrXCJweCwgMHB4LCAwcHgpXCI6ZFtlLmFuaW1UeXBlXT1cInRyYW5zbGF0ZTNkKDBweCxcIitiK1wicHgsIDBweClcIixlLiRzbGlkZVRyYWNrLmNzcyhkKSxjJiZzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZS5kaXNhYmxlVHJhbnNpdGlvbigpLGMuY2FsbCgpfSxlLm9wdGlvbnMuc3BlZWQpKX0sYi5wcm90b3R5cGUuZ2V0TmF2VGFyZ2V0PWZ1bmN0aW9uKCl7dmFyIGI9dGhpcyxjPWIub3B0aW9ucy5hc05hdkZvcjtyZXR1cm4gYyYmbnVsbCE9PWMmJihjPWEoYykubm90KGIuJHNsaWRlcikpLGN9LGIucHJvdG90eXBlLmFzTmF2Rm9yPWZ1bmN0aW9uKGIpe3ZhciBjPXRoaXMsZD1jLmdldE5hdlRhcmdldCgpO251bGwhPT1kJiZcIm9iamVjdFwiPT10eXBlb2YgZCYmZC5lYWNoKGZ1bmN0aW9uKCl7dmFyIGM9YSh0aGlzKS5zbGljayhcImdldFNsaWNrXCIpO2MudW5zbGlja2VkfHxjLnNsaWRlSGFuZGxlcihiLCEwKX0pfSxiLnByb3RvdHlwZS5hcHBseVRyYW5zaXRpb249ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPXt9O2Iub3B0aW9ucy5mYWRlPT09ITE/Y1tiLnRyYW5zaXRpb25UeXBlXT1iLnRyYW5zZm9ybVR5cGUrXCIgXCIrYi5vcHRpb25zLnNwZWVkK1wibXMgXCIrYi5vcHRpb25zLmNzc0Vhc2U6Y1tiLnRyYW5zaXRpb25UeXBlXT1cIm9wYWNpdHkgXCIrYi5vcHRpb25zLnNwZWVkK1wibXMgXCIrYi5vcHRpb25zLmNzc0Vhc2UsYi5vcHRpb25zLmZhZGU9PT0hMT9iLiRzbGlkZVRyYWNrLmNzcyhjKTpiLiRzbGlkZXMuZXEoYSkuY3NzKGMpfSxiLnByb3RvdHlwZS5hdXRvUGxheT1mdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5hdXRvUGxheUNsZWFyKCksYS5zbGlkZUNvdW50PmEub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihhLmF1dG9QbGF5VGltZXI9c2V0SW50ZXJ2YWwoYS5hdXRvUGxheUl0ZXJhdG9yLGEub3B0aW9ucy5hdXRvcGxheVNwZWVkKSl9LGIucHJvdG90eXBlLmF1dG9QbGF5Q2xlYXI9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO2EuYXV0b1BsYXlUaW1lciYmY2xlYXJJbnRlcnZhbChhLmF1dG9QbGF5VGltZXIpfSxiLnByb3RvdHlwZS5hdXRvUGxheUl0ZXJhdG9yPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWEuY3VycmVudFNsaWRlK2Eub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDthLnBhdXNlZHx8YS5pbnRlcnJ1cHRlZHx8YS5mb2N1c3NlZHx8KGEub3B0aW9ucy5pbmZpbml0ZT09PSExJiYoMT09PWEuZGlyZWN0aW9uJiZhLmN1cnJlbnRTbGlkZSsxPT09YS5zbGlkZUNvdW50LTE/YS5kaXJlY3Rpb249MDowPT09YS5kaXJlY3Rpb24mJihiPWEuY3VycmVudFNsaWRlLWEub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCxhLmN1cnJlbnRTbGlkZS0xPT09MCYmKGEuZGlyZWN0aW9uPTEpKSksYS5zbGlkZUhhbmRsZXIoYikpfSxiLnByb3RvdHlwZS5idWlsZEFycm93cz1mdW5jdGlvbigpe3ZhciBiPXRoaXM7Yi5vcHRpb25zLmFycm93cz09PSEwJiYoYi4kcHJldkFycm93PWEoYi5vcHRpb25zLnByZXZBcnJvdykuYWRkQ2xhc3MoXCJzbGljay1hcnJvd1wiKSxiLiRuZXh0QXJyb3c9YShiLm9wdGlvbnMubmV4dEFycm93KS5hZGRDbGFzcyhcInNsaWNrLWFycm93XCIpLGIuc2xpZGVDb3VudD5iLm9wdGlvbnMuc2xpZGVzVG9TaG93PyhiLiRwcmV2QXJyb3cucmVtb3ZlQ2xhc3MoXCJzbGljay1oaWRkZW5cIikucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuIHRhYmluZGV4XCIpLGIuJG5leHRBcnJvdy5yZW1vdmVDbGFzcyhcInNsaWNrLWhpZGRlblwiKS5yZW1vdmVBdHRyKFwiYXJpYS1oaWRkZW4gdGFiaW5kZXhcIiksYi5odG1sRXhwci50ZXN0KGIub3B0aW9ucy5wcmV2QXJyb3cpJiZiLiRwcmV2QXJyb3cucHJlcGVuZFRvKGIub3B0aW9ucy5hcHBlbmRBcnJvd3MpLGIuaHRtbEV4cHIudGVzdChiLm9wdGlvbnMubmV4dEFycm93KSYmYi4kbmV4dEFycm93LmFwcGVuZFRvKGIub3B0aW9ucy5hcHBlbmRBcnJvd3MpLGIub3B0aW9ucy5pbmZpbml0ZSE9PSEwJiZiLiRwcmV2QXJyb3cuYWRkQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKS5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLFwidHJ1ZVwiKSk6Yi4kcHJldkFycm93LmFkZChiLiRuZXh0QXJyb3cpLmFkZENsYXNzKFwic2xpY2staGlkZGVuXCIpLmF0dHIoe1wiYXJpYS1kaXNhYmxlZFwiOlwidHJ1ZVwiLHRhYmluZGV4OlwiLTFcIn0pKX0sYi5wcm90b3R5cGUuYnVpbGREb3RzPWZ1bmN0aW9uKCl7dmFyIGMsZCxiPXRoaXM7aWYoYi5vcHRpb25zLmRvdHM9PT0hMCYmYi5zbGlkZUNvdW50PmIub3B0aW9ucy5zbGlkZXNUb1Nob3cpe2ZvcihiLiRzbGlkZXIuYWRkQ2xhc3MoXCJzbGljay1kb3R0ZWRcIiksZD1hKFwiPHVsIC8+XCIpLmFkZENsYXNzKGIub3B0aW9ucy5kb3RzQ2xhc3MpLGM9MDtjPD1iLmdldERvdENvdW50KCk7Yys9MSlkLmFwcGVuZChhKFwiPGxpIC8+XCIpLmFwcGVuZChiLm9wdGlvbnMuY3VzdG9tUGFnaW5nLmNhbGwodGhpcyxiLGMpKSk7Yi4kZG90cz1kLmFwcGVuZFRvKGIub3B0aW9ucy5hcHBlbmREb3RzKSxiLiRkb3RzLmZpbmQoXCJsaVwiKS5maXJzdCgpLmFkZENsYXNzKFwic2xpY2stYWN0aXZlXCIpLmF0dHIoXCJhcmlhLWhpZGRlblwiLFwiZmFsc2VcIil9fSxiLnByb3RvdHlwZS5idWlsZE91dD1mdW5jdGlvbigpe3ZhciBiPXRoaXM7Yi4kc2xpZGVzPWIuJHNsaWRlci5jaGlsZHJlbihiLm9wdGlvbnMuc2xpZGUrXCI6bm90KC5zbGljay1jbG9uZWQpXCIpLmFkZENsYXNzKFwic2xpY2stc2xpZGVcIiksYi5zbGlkZUNvdW50PWIuJHNsaWRlcy5sZW5ndGgsYi4kc2xpZGVzLmVhY2goZnVuY3Rpb24oYixjKXthKGMpLmF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIsYikuZGF0YShcIm9yaWdpbmFsU3R5bGluZ1wiLGEoYykuYXR0cihcInN0eWxlXCIpfHxcIlwiKX0pLGIuJHNsaWRlci5hZGRDbGFzcyhcInNsaWNrLXNsaWRlclwiKSxiLiRzbGlkZVRyYWNrPTA9PT1iLnNsaWRlQ291bnQ/YSgnPGRpdiBjbGFzcz1cInNsaWNrLXRyYWNrXCIvPicpLmFwcGVuZFRvKGIuJHNsaWRlcik6Yi4kc2xpZGVzLndyYXBBbGwoJzxkaXYgY2xhc3M9XCJzbGljay10cmFja1wiLz4nKS5wYXJlbnQoKSxiLiRsaXN0PWIuJHNsaWRlVHJhY2sud3JhcCgnPGRpdiBhcmlhLWxpdmU9XCJwb2xpdGVcIiBjbGFzcz1cInNsaWNrLWxpc3RcIi8+JykucGFyZW50KCksYi4kc2xpZGVUcmFjay5jc3MoXCJvcGFjaXR5XCIsMCksKGIub3B0aW9ucy5jZW50ZXJNb2RlPT09ITB8fGIub3B0aW9ucy5zd2lwZVRvU2xpZGU9PT0hMCkmJihiLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw9MSksYShcImltZ1tkYXRhLWxhenldXCIsYi4kc2xpZGVyKS5ub3QoXCJbc3JjXVwiKS5hZGRDbGFzcyhcInNsaWNrLWxvYWRpbmdcIiksYi5zZXR1cEluZmluaXRlKCksYi5idWlsZEFycm93cygpLGIuYnVpbGREb3RzKCksYi51cGRhdGVEb3RzKCksYi5zZXRTbGlkZUNsYXNzZXMoXCJudW1iZXJcIj09dHlwZW9mIGIuY3VycmVudFNsaWRlP2IuY3VycmVudFNsaWRlOjApLGIub3B0aW9ucy5kcmFnZ2FibGU9PT0hMCYmYi4kbGlzdC5hZGRDbGFzcyhcImRyYWdnYWJsZVwiKX0sYi5wcm90b3R5cGUuYnVpbGRSb3dzPWZ1bmN0aW9uKCl7dmFyIGIsYyxkLGUsZixnLGgsYT10aGlzO2lmKGU9ZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLGc9YS4kc2xpZGVyLmNoaWxkcmVuKCksYS5vcHRpb25zLnJvd3M+MSl7Zm9yKGg9YS5vcHRpb25zLnNsaWRlc1BlclJvdyphLm9wdGlvbnMucm93cyxmPU1hdGguY2VpbChnLmxlbmd0aC9oKSxiPTA7Zj5iO2IrKyl7dmFyIGk9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtmb3IoYz0wO2M8YS5vcHRpb25zLnJvd3M7YysrKXt2YXIgaj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2ZvcihkPTA7ZDxhLm9wdGlvbnMuc2xpZGVzUGVyUm93O2QrKyl7dmFyIGs9YipoKyhjKmEub3B0aW9ucy5zbGlkZXNQZXJSb3crZCk7Zy5nZXQoaykmJmouYXBwZW5kQ2hpbGQoZy5nZXQoaykpfWkuYXBwZW5kQ2hpbGQoail9ZS5hcHBlbmRDaGlsZChpKX1hLiRzbGlkZXIuZW1wdHkoKS5hcHBlbmQoZSksYS4kc2xpZGVyLmNoaWxkcmVuKCkuY2hpbGRyZW4oKS5jaGlsZHJlbigpLmNzcyh7d2lkdGg6MTAwL2Eub3B0aW9ucy5zbGlkZXNQZXJSb3crXCIlXCIsZGlzcGxheTpcImlubGluZS1ibG9ja1wifSl9fSxiLnByb3RvdHlwZS5jaGVja1Jlc3BvbnNpdmU9ZnVuY3Rpb24oYixjKXt2YXIgZSxmLGcsZD10aGlzLGg9ITEsaT1kLiRzbGlkZXIud2lkdGgoKSxqPXdpbmRvdy5pbm5lcldpZHRofHxhKHdpbmRvdykud2lkdGgoKTtpZihcIndpbmRvd1wiPT09ZC5yZXNwb25kVG8/Zz1qOlwic2xpZGVyXCI9PT1kLnJlc3BvbmRUbz9nPWk6XCJtaW5cIj09PWQucmVzcG9uZFRvJiYoZz1NYXRoLm1pbihqLGkpKSxkLm9wdGlvbnMucmVzcG9uc2l2ZSYmZC5vcHRpb25zLnJlc3BvbnNpdmUubGVuZ3RoJiZudWxsIT09ZC5vcHRpb25zLnJlc3BvbnNpdmUpe2Y9bnVsbDtmb3IoZSBpbiBkLmJyZWFrcG9pbnRzKWQuYnJlYWtwb2ludHMuaGFzT3duUHJvcGVydHkoZSkmJihkLm9yaWdpbmFsU2V0dGluZ3MubW9iaWxlRmlyc3Q9PT0hMT9nPGQuYnJlYWtwb2ludHNbZV0mJihmPWQuYnJlYWtwb2ludHNbZV0pOmc+ZC5icmVha3BvaW50c1tlXSYmKGY9ZC5icmVha3BvaW50c1tlXSkpO251bGwhPT1mP251bGwhPT1kLmFjdGl2ZUJyZWFrcG9pbnQ/KGYhPT1kLmFjdGl2ZUJyZWFrcG9pbnR8fGMpJiYoZC5hY3RpdmVCcmVha3BvaW50PWYsXCJ1bnNsaWNrXCI9PT1kLmJyZWFrcG9pbnRTZXR0aW5nc1tmXT9kLnVuc2xpY2soZik6KGQub3B0aW9ucz1hLmV4dGVuZCh7fSxkLm9yaWdpbmFsU2V0dGluZ3MsZC5icmVha3BvaW50U2V0dGluZ3NbZl0pLGI9PT0hMCYmKGQuY3VycmVudFNsaWRlPWQub3B0aW9ucy5pbml0aWFsU2xpZGUpLGQucmVmcmVzaChiKSksaD1mKTooZC5hY3RpdmVCcmVha3BvaW50PWYsXCJ1bnNsaWNrXCI9PT1kLmJyZWFrcG9pbnRTZXR0aW5nc1tmXT9kLnVuc2xpY2soZik6KGQub3B0aW9ucz1hLmV4dGVuZCh7fSxkLm9yaWdpbmFsU2V0dGluZ3MsZC5icmVha3BvaW50U2V0dGluZ3NbZl0pLGI9PT0hMCYmKGQuY3VycmVudFNsaWRlPWQub3B0aW9ucy5pbml0aWFsU2xpZGUpLGQucmVmcmVzaChiKSksaD1mKTpudWxsIT09ZC5hY3RpdmVCcmVha3BvaW50JiYoZC5hY3RpdmVCcmVha3BvaW50PW51bGwsZC5vcHRpb25zPWQub3JpZ2luYWxTZXR0aW5ncyxiPT09ITAmJihkLmN1cnJlbnRTbGlkZT1kLm9wdGlvbnMuaW5pdGlhbFNsaWRlKSxkLnJlZnJlc2goYiksaD1mKSxifHxoPT09ITF8fGQuJHNsaWRlci50cmlnZ2VyKFwiYnJlYWtwb2ludFwiLFtkLGhdKX19LGIucHJvdG90eXBlLmNoYW5nZVNsaWRlPWZ1bmN0aW9uKGIsYyl7dmFyIGYsZyxoLGQ9dGhpcyxlPWEoYi5jdXJyZW50VGFyZ2V0KTtzd2l0Y2goZS5pcyhcImFcIikmJmIucHJldmVudERlZmF1bHQoKSxlLmlzKFwibGlcIil8fChlPWUuY2xvc2VzdChcImxpXCIpKSxoPWQuc2xpZGVDb3VudCVkLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwhPT0wLGY9aD8wOihkLnNsaWRlQ291bnQtZC5jdXJyZW50U2xpZGUpJWQub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCxiLmRhdGEubWVzc2FnZSl7Y2FzZVwicHJldmlvdXNcIjpnPTA9PT1mP2Qub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDpkLm9wdGlvbnMuc2xpZGVzVG9TaG93LWYsZC5zbGlkZUNvdW50PmQub3B0aW9ucy5zbGlkZXNUb1Nob3cmJmQuc2xpZGVIYW5kbGVyKGQuY3VycmVudFNsaWRlLWcsITEsYyk7YnJlYWs7Y2FzZVwibmV4dFwiOmc9MD09PWY/ZC5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsOmYsZC5zbGlkZUNvdW50PmQub3B0aW9ucy5zbGlkZXNUb1Nob3cmJmQuc2xpZGVIYW5kbGVyKGQuY3VycmVudFNsaWRlK2csITEsYyk7YnJlYWs7Y2FzZVwiaW5kZXhcIjp2YXIgaT0wPT09Yi5kYXRhLmluZGV4PzA6Yi5kYXRhLmluZGV4fHxlLmluZGV4KCkqZC5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsO2Quc2xpZGVIYW5kbGVyKGQuY2hlY2tOYXZpZ2FibGUoaSksITEsYyksZS5jaGlsZHJlbigpLnRyaWdnZXIoXCJmb2N1c1wiKTticmVhaztkZWZhdWx0OnJldHVybn19LGIucHJvdG90eXBlLmNoZWNrTmF2aWdhYmxlPWZ1bmN0aW9uKGEpe3ZhciBjLGQsYj10aGlzO2lmKGM9Yi5nZXROYXZpZ2FibGVJbmRleGVzKCksZD0wLGE+Y1tjLmxlbmd0aC0xXSlhPWNbYy5sZW5ndGgtMV07ZWxzZSBmb3IodmFyIGUgaW4gYyl7aWYoYTxjW2VdKXthPWQ7YnJlYWt9ZD1jW2VdfXJldHVybiBhfSxiLnByb3RvdHlwZS5jbGVhblVwRXZlbnRzPWZ1bmN0aW9uKCl7dmFyIGI9dGhpcztiLm9wdGlvbnMuZG90cyYmbnVsbCE9PWIuJGRvdHMmJmEoXCJsaVwiLGIuJGRvdHMpLm9mZihcImNsaWNrLnNsaWNrXCIsYi5jaGFuZ2VTbGlkZSkub2ZmKFwibW91c2VlbnRlci5zbGlja1wiLGEucHJveHkoYi5pbnRlcnJ1cHQsYiwhMCkpLm9mZihcIm1vdXNlbGVhdmUuc2xpY2tcIixhLnByb3h5KGIuaW50ZXJydXB0LGIsITEpKSxiLiRzbGlkZXIub2ZmKFwiZm9jdXMuc2xpY2sgYmx1ci5zbGlja1wiKSxiLm9wdGlvbnMuYXJyb3dzPT09ITAmJmIuc2xpZGVDb3VudD5iLm9wdGlvbnMuc2xpZGVzVG9TaG93JiYoYi4kcHJldkFycm93JiZiLiRwcmV2QXJyb3cub2ZmKFwiY2xpY2suc2xpY2tcIixiLmNoYW5nZVNsaWRlKSxiLiRuZXh0QXJyb3cmJmIuJG5leHRBcnJvdy5vZmYoXCJjbGljay5zbGlja1wiLGIuY2hhbmdlU2xpZGUpKSxiLiRsaXN0Lm9mZihcInRvdWNoc3RhcnQuc2xpY2sgbW91c2Vkb3duLnNsaWNrXCIsYi5zd2lwZUhhbmRsZXIpLGIuJGxpc3Qub2ZmKFwidG91Y2htb3ZlLnNsaWNrIG1vdXNlbW92ZS5zbGlja1wiLGIuc3dpcGVIYW5kbGVyKSxiLiRsaXN0Lm9mZihcInRvdWNoZW5kLnNsaWNrIG1vdXNldXAuc2xpY2tcIixiLnN3aXBlSGFuZGxlciksYi4kbGlzdC5vZmYoXCJ0b3VjaGNhbmNlbC5zbGljayBtb3VzZWxlYXZlLnNsaWNrXCIsYi5zd2lwZUhhbmRsZXIpLGIuJGxpc3Qub2ZmKFwiY2xpY2suc2xpY2tcIixiLmNsaWNrSGFuZGxlciksYShkb2N1bWVudCkub2ZmKGIudmlzaWJpbGl0eUNoYW5nZSxiLnZpc2liaWxpdHkpLGIuY2xlYW5VcFNsaWRlRXZlbnRzKCksYi5vcHRpb25zLmFjY2Vzc2liaWxpdHk9PT0hMCYmYi4kbGlzdC5vZmYoXCJrZXlkb3duLnNsaWNrXCIsYi5rZXlIYW5kbGVyKSxiLm9wdGlvbnMuZm9jdXNPblNlbGVjdD09PSEwJiZhKGIuJHNsaWRlVHJhY2spLmNoaWxkcmVuKCkub2ZmKFwiY2xpY2suc2xpY2tcIixiLnNlbGVjdEhhbmRsZXIpLGEod2luZG93KS5vZmYoXCJvcmllbnRhdGlvbmNoYW5nZS5zbGljay5zbGljay1cIitiLmluc3RhbmNlVWlkLGIub3JpZW50YXRpb25DaGFuZ2UpLGEod2luZG93KS5vZmYoXCJyZXNpemUuc2xpY2suc2xpY2stXCIrYi5pbnN0YW5jZVVpZCxiLnJlc2l6ZSksYShcIltkcmFnZ2FibGUhPXRydWVdXCIsYi4kc2xpZGVUcmFjaykub2ZmKFwiZHJhZ3N0YXJ0XCIsYi5wcmV2ZW50RGVmYXVsdCksYSh3aW5kb3cpLm9mZihcImxvYWQuc2xpY2suc2xpY2stXCIrYi5pbnN0YW5jZVVpZCxiLnNldFBvc2l0aW9uKSxhKGRvY3VtZW50KS5vZmYoXCJyZWFkeS5zbGljay5zbGljay1cIitiLmluc3RhbmNlVWlkLGIuc2V0UG9zaXRpb24pfSxiLnByb3RvdHlwZS5jbGVhblVwU2xpZGVFdmVudHM9ZnVuY3Rpb24oKXt2YXIgYj10aGlzO2IuJGxpc3Qub2ZmKFwibW91c2VlbnRlci5zbGlja1wiLGEucHJveHkoYi5pbnRlcnJ1cHQsYiwhMCkpLGIuJGxpc3Qub2ZmKFwibW91c2VsZWF2ZS5zbGlja1wiLGEucHJveHkoYi5pbnRlcnJ1cHQsYiwhMSkpfSxiLnByb3RvdHlwZS5jbGVhblVwUm93cz1mdW5jdGlvbigpe3ZhciBiLGE9dGhpczthLm9wdGlvbnMucm93cz4xJiYoYj1hLiRzbGlkZXMuY2hpbGRyZW4oKS5jaGlsZHJlbigpLGIucmVtb3ZlQXR0cihcInN0eWxlXCIpLGEuJHNsaWRlci5lbXB0eSgpLmFwcGVuZChiKSl9LGIucHJvdG90eXBlLmNsaWNrSGFuZGxlcj1mdW5jdGlvbihhKXt2YXIgYj10aGlzO2Iuc2hvdWxkQ2xpY2s9PT0hMSYmKGEuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksYS5zdG9wUHJvcGFnYXRpb24oKSxhLnByZXZlbnREZWZhdWx0KCkpfSxiLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKGIpe3ZhciBjPXRoaXM7Yy5hdXRvUGxheUNsZWFyKCksYy50b3VjaE9iamVjdD17fSxjLmNsZWFuVXBFdmVudHMoKSxhKFwiLnNsaWNrLWNsb25lZFwiLGMuJHNsaWRlcikuZGV0YWNoKCksYy4kZG90cyYmYy4kZG90cy5yZW1vdmUoKSxjLiRwcmV2QXJyb3cmJmMuJHByZXZBcnJvdy5sZW5ndGgmJihjLiRwcmV2QXJyb3cucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZCBzbGljay1hcnJvdyBzbGljay1oaWRkZW5cIikucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuIGFyaWEtZGlzYWJsZWQgdGFiaW5kZXhcIikuY3NzKFwiZGlzcGxheVwiLFwiXCIpLGMuaHRtbEV4cHIudGVzdChjLm9wdGlvbnMucHJldkFycm93KSYmYy4kcHJldkFycm93LnJlbW92ZSgpKSxjLiRuZXh0QXJyb3cmJmMuJG5leHRBcnJvdy5sZW5ndGgmJihjLiRuZXh0QXJyb3cucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZCBzbGljay1hcnJvdyBzbGljay1oaWRkZW5cIikucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuIGFyaWEtZGlzYWJsZWQgdGFiaW5kZXhcIikuY3NzKFwiZGlzcGxheVwiLFwiXCIpLGMuaHRtbEV4cHIudGVzdChjLm9wdGlvbnMubmV4dEFycm93KSYmYy4kbmV4dEFycm93LnJlbW92ZSgpKSxjLiRzbGlkZXMmJihjLiRzbGlkZXMucmVtb3ZlQ2xhc3MoXCJzbGljay1zbGlkZSBzbGljay1hY3RpdmUgc2xpY2stY2VudGVyIHNsaWNrLXZpc2libGUgc2xpY2stY3VycmVudFwiKS5yZW1vdmVBdHRyKFwiYXJpYS1oaWRkZW5cIikucmVtb3ZlQXR0cihcImRhdGEtc2xpY2staW5kZXhcIikuZWFjaChmdW5jdGlvbigpe2EodGhpcykuYXR0cihcInN0eWxlXCIsYSh0aGlzKS5kYXRhKFwib3JpZ2luYWxTdHlsaW5nXCIpKX0pLGMuJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKS5kZXRhY2goKSxjLiRzbGlkZVRyYWNrLmRldGFjaCgpLGMuJGxpc3QuZGV0YWNoKCksYy4kc2xpZGVyLmFwcGVuZChjLiRzbGlkZXMpKSxjLmNsZWFuVXBSb3dzKCksYy4kc2xpZGVyLnJlbW92ZUNsYXNzKFwic2xpY2stc2xpZGVyXCIpLGMuJHNsaWRlci5yZW1vdmVDbGFzcyhcInNsaWNrLWluaXRpYWxpemVkXCIpLGMuJHNsaWRlci5yZW1vdmVDbGFzcyhcInNsaWNrLWRvdHRlZFwiKSxjLnVuc2xpY2tlZD0hMCxifHxjLiRzbGlkZXIudHJpZ2dlcihcImRlc3Ryb3lcIixbY10pfSxiLnByb3RvdHlwZS5kaXNhYmxlVHJhbnNpdGlvbj1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9e307Y1tiLnRyYW5zaXRpb25UeXBlXT1cIlwiLGIub3B0aW9ucy5mYWRlPT09ITE/Yi4kc2xpZGVUcmFjay5jc3MoYyk6Yi4kc2xpZGVzLmVxKGEpLmNzcyhjKX0sYi5wcm90b3R5cGUuZmFkZVNsaWRlPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcztjLmNzc1RyYW5zaXRpb25zPT09ITE/KGMuJHNsaWRlcy5lcShhKS5jc3Moe3pJbmRleDpjLm9wdGlvbnMuekluZGV4fSksYy4kc2xpZGVzLmVxKGEpLmFuaW1hdGUoe29wYWNpdHk6MX0sYy5vcHRpb25zLnNwZWVkLGMub3B0aW9ucy5lYXNpbmcsYikpOihjLmFwcGx5VHJhbnNpdGlvbihhKSxjLiRzbGlkZXMuZXEoYSkuY3NzKHtvcGFjaXR5OjEsekluZGV4OmMub3B0aW9ucy56SW5kZXh9KSxiJiZzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5kaXNhYmxlVHJhbnNpdGlvbihhKSxiLmNhbGwoKX0sYy5vcHRpb25zLnNwZWVkKSl9LGIucHJvdG90eXBlLmZhZGVTbGlkZU91dD1mdW5jdGlvbihhKXt2YXIgYj10aGlzO2IuY3NzVHJhbnNpdGlvbnM9PT0hMT9iLiRzbGlkZXMuZXEoYSkuYW5pbWF0ZSh7b3BhY2l0eTowLHpJbmRleDpiLm9wdGlvbnMuekluZGV4LTJ9LGIub3B0aW9ucy5zcGVlZCxiLm9wdGlvbnMuZWFzaW5nKTooYi5hcHBseVRyYW5zaXRpb24oYSksYi4kc2xpZGVzLmVxKGEpLmNzcyh7b3BhY2l0eTowLHpJbmRleDpiLm9wdGlvbnMuekluZGV4LTJ9KSl9LGIucHJvdG90eXBlLmZpbHRlclNsaWRlcz1iLnByb3RvdHlwZS5zbGlja0ZpbHRlcj1mdW5jdGlvbihhKXt2YXIgYj10aGlzO251bGwhPT1hJiYoYi4kc2xpZGVzQ2FjaGU9Yi4kc2xpZGVzLGIudW5sb2FkKCksYi4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpLGIuJHNsaWRlc0NhY2hlLmZpbHRlcihhKS5hcHBlbmRUbyhiLiRzbGlkZVRyYWNrKSxiLnJlaW5pdCgpKX0sYi5wcm90b3R5cGUuZm9jdXNIYW5kbGVyPWZ1bmN0aW9uKCl7dmFyIGI9dGhpcztiLiRzbGlkZXIub2ZmKFwiZm9jdXMuc2xpY2sgYmx1ci5zbGlja1wiKS5vbihcImZvY3VzLnNsaWNrIGJsdXIuc2xpY2tcIixcIio6bm90KC5zbGljay1hcnJvdylcIixmdW5jdGlvbihjKXtjLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO3ZhciBkPWEodGhpcyk7c2V0VGltZW91dChmdW5jdGlvbigpe2Iub3B0aW9ucy5wYXVzZU9uRm9jdXMmJihiLmZvY3Vzc2VkPWQuaXMoXCI6Zm9jdXNcIiksYi5hdXRvUGxheSgpKX0sMCl9KX0sYi5wcm90b3R5cGUuZ2V0Q3VycmVudD1iLnByb3RvdHlwZS5zbGlja0N1cnJlbnRTbGlkZT1mdW5jdGlvbigpe3ZhciBhPXRoaXM7cmV0dXJuIGEuY3VycmVudFNsaWRlfSxiLnByb3RvdHlwZS5nZXREb3RDb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMsYj0wLGM9MCxkPTA7aWYoYS5vcHRpb25zLmluZmluaXRlPT09ITApZm9yKDtiPGEuc2xpZGVDb3VudDspKytkLGI9YythLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwsYys9YS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsPD1hLm9wdGlvbnMuc2xpZGVzVG9TaG93P2Eub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDphLm9wdGlvbnMuc2xpZGVzVG9TaG93O2Vsc2UgaWYoYS5vcHRpb25zLmNlbnRlck1vZGU9PT0hMClkPWEuc2xpZGVDb3VudDtlbHNlIGlmKGEub3B0aW9ucy5hc05hdkZvcilmb3IoO2I8YS5zbGlkZUNvdW50OykrK2QsYj1jK2Eub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCxjKz1hLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw8PWEub3B0aW9ucy5zbGlkZXNUb1Nob3c/YS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsOmEub3B0aW9ucy5zbGlkZXNUb1Nob3c7ZWxzZSBkPTErTWF0aC5jZWlsKChhLnNsaWRlQ291bnQtYS5vcHRpb25zLnNsaWRlc1RvU2hvdykvYS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKTtyZXR1cm4gZC0xfSxiLnByb3RvdHlwZS5nZXRMZWZ0PWZ1bmN0aW9uKGEpe3ZhciBjLGQsZixiPXRoaXMsZT0wO3JldHVybiBiLnNsaWRlT2Zmc2V0PTAsZD1iLiRzbGlkZXMuZmlyc3QoKS5vdXRlckhlaWdodCghMCksYi5vcHRpb25zLmluZmluaXRlPT09ITA/KGIuc2xpZGVDb3VudD5iLm9wdGlvbnMuc2xpZGVzVG9TaG93JiYoYi5zbGlkZU9mZnNldD1iLnNsaWRlV2lkdGgqYi5vcHRpb25zLnNsaWRlc1RvU2hvdyotMSxlPWQqYi5vcHRpb25zLnNsaWRlc1RvU2hvdyotMSksYi5zbGlkZUNvdW50JWIub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCE9PTAmJmErYi5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsPmIuc2xpZGVDb3VudCYmYi5zbGlkZUNvdW50PmIub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihhPmIuc2xpZGVDb3VudD8oYi5zbGlkZU9mZnNldD0oYi5vcHRpb25zLnNsaWRlc1RvU2hvdy0oYS1iLnNsaWRlQ291bnQpKSpiLnNsaWRlV2lkdGgqLTEsZT0oYi5vcHRpb25zLnNsaWRlc1RvU2hvdy0oYS1iLnNsaWRlQ291bnQpKSpkKi0xKTooYi5zbGlkZU9mZnNldD1iLnNsaWRlQ291bnQlYi5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKmIuc2xpZGVXaWR0aCotMSxlPWIuc2xpZGVDb3VudCViLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwqZCotMSkpKTphK2Iub3B0aW9ucy5zbGlkZXNUb1Nob3c+Yi5zbGlkZUNvdW50JiYoYi5zbGlkZU9mZnNldD0oYStiLm9wdGlvbnMuc2xpZGVzVG9TaG93LWIuc2xpZGVDb3VudCkqYi5zbGlkZVdpZHRoLGU9KGErYi5vcHRpb25zLnNsaWRlc1RvU2hvdy1iLnNsaWRlQ291bnQpKmQpLGIuc2xpZGVDb3VudDw9Yi5vcHRpb25zLnNsaWRlc1RvU2hvdyYmKGIuc2xpZGVPZmZzZXQ9MCxlPTApLGIub3B0aW9ucy5jZW50ZXJNb2RlPT09ITAmJmIub3B0aW9ucy5pbmZpbml0ZT09PSEwP2Iuc2xpZGVPZmZzZXQrPWIuc2xpZGVXaWR0aCpNYXRoLmZsb29yKGIub3B0aW9ucy5zbGlkZXNUb1Nob3cvMiktYi5zbGlkZVdpZHRoOmIub3B0aW9ucy5jZW50ZXJNb2RlPT09ITAmJihiLnNsaWRlT2Zmc2V0PTAsYi5zbGlkZU9mZnNldCs9Yi5zbGlkZVdpZHRoKk1hdGguZmxvb3IoYi5vcHRpb25zLnNsaWRlc1RvU2hvdy8yKSksYz1iLm9wdGlvbnMudmVydGljYWw9PT0hMT9hKmIuc2xpZGVXaWR0aCotMStiLnNsaWRlT2Zmc2V0OmEqZCotMStlLGIub3B0aW9ucy52YXJpYWJsZVdpZHRoPT09ITAmJihmPWIuc2xpZGVDb3VudDw9Yi5vcHRpb25zLnNsaWRlc1RvU2hvd3x8Yi5vcHRpb25zLmluZmluaXRlPT09ITE/Yi4kc2xpZGVUcmFjay5jaGlsZHJlbihcIi5zbGljay1zbGlkZVwiKS5lcShhKTpiLiRzbGlkZVRyYWNrLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpLmVxKGErYi5vcHRpb25zLnNsaWRlc1RvU2hvdyksYz1iLm9wdGlvbnMucnRsPT09ITA/ZlswXT8tMSooYi4kc2xpZGVUcmFjay53aWR0aCgpLWZbMF0ub2Zmc2V0TGVmdC1mLndpZHRoKCkpOjA6ZlswXT8tMSpmWzBdLm9mZnNldExlZnQ6MCxiLm9wdGlvbnMuY2VudGVyTW9kZT09PSEwJiYoZj1iLnNsaWRlQ291bnQ8PWIub3B0aW9ucy5zbGlkZXNUb1Nob3d8fGIub3B0aW9ucy5pbmZpbml0ZT09PSExP2IuJHNsaWRlVHJhY2suY2hpbGRyZW4oXCIuc2xpY2stc2xpZGVcIikuZXEoYSk6Yi4kc2xpZGVUcmFjay5jaGlsZHJlbihcIi5zbGljay1zbGlkZVwiKS5lcShhK2Iub3B0aW9ucy5zbGlkZXNUb1Nob3crMSksYz1iLm9wdGlvbnMucnRsPT09ITA/ZlswXT8tMSooYi4kc2xpZGVUcmFjay53aWR0aCgpLWZbMF0ub2Zmc2V0TGVmdC1mLndpZHRoKCkpOjA6ZlswXT8tMSpmWzBdLm9mZnNldExlZnQ6MCxjKz0oYi4kbGlzdC53aWR0aCgpLWYub3V0ZXJXaWR0aCgpKS8yKSksY30sYi5wcm90b3R5cGUuZ2V0T3B0aW9uPWIucHJvdG90eXBlLnNsaWNrR2V0T3B0aW9uPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7cmV0dXJuIGIub3B0aW9uc1thXX0sYi5wcm90b3R5cGUuZ2V0TmF2aWdhYmxlSW5kZXhlcz1mdW5jdGlvbigpe3ZhciBlLGE9dGhpcyxiPTAsYz0wLGQ9W107Zm9yKGEub3B0aW9ucy5pbmZpbml0ZT09PSExP2U9YS5zbGlkZUNvdW50OihiPS0xKmEub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCxjPS0xKmEub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCxlPTIqYS5zbGlkZUNvdW50KTtlPmI7KWQucHVzaChiKSxiPWMrYS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsLGMrPWEub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDw9YS5vcHRpb25zLnNsaWRlc1RvU2hvdz9hLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw6YS5vcHRpb25zLnNsaWRlc1RvU2hvdztyZXR1cm4gZH0sYi5wcm90b3R5cGUuZ2V0U2xpY2s9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sYi5wcm90b3R5cGUuZ2V0U2xpZGVDb3VudD1mdW5jdGlvbigpe3ZhciBjLGQsZSxiPXRoaXM7cmV0dXJuIGU9Yi5vcHRpb25zLmNlbnRlck1vZGU9PT0hMD9iLnNsaWRlV2lkdGgqTWF0aC5mbG9vcihiLm9wdGlvbnMuc2xpZGVzVG9TaG93LzIpOjAsYi5vcHRpb25zLnN3aXBlVG9TbGlkZT09PSEwPyhiLiRzbGlkZVRyYWNrLmZpbmQoXCIuc2xpY2stc2xpZGVcIikuZWFjaChmdW5jdGlvbihjLGYpe3JldHVybiBmLm9mZnNldExlZnQtZSthKGYpLm91dGVyV2lkdGgoKS8yPi0xKmIuc3dpcGVMZWZ0PyhkPWYsITEpOnZvaWQgMH0pLGM9TWF0aC5hYnMoYShkKS5hdHRyKFwiZGF0YS1zbGljay1pbmRleFwiKS1iLmN1cnJlbnRTbGlkZSl8fDEpOmIub3B0aW9ucy5zbGlkZXNUb1Njcm9sbH0sYi5wcm90b3R5cGUuZ29Ubz1iLnByb3RvdHlwZS5zbGlja0dvVG89ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO2MuY2hhbmdlU2xpZGUoe2RhdGE6e21lc3NhZ2U6XCJpbmRleFwiLGluZGV4OnBhcnNlSW50KGEpfX0sYil9LGIucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oYil7dmFyIGM9dGhpczthKGMuJHNsaWRlcikuaGFzQ2xhc3MoXCJzbGljay1pbml0aWFsaXplZFwiKXx8KGEoYy4kc2xpZGVyKS5hZGRDbGFzcyhcInNsaWNrLWluaXRpYWxpemVkXCIpLGMuYnVpbGRSb3dzKCksYy5idWlsZE91dCgpLGMuc2V0UHJvcHMoKSxjLnN0YXJ0TG9hZCgpLGMubG9hZFNsaWRlcigpLGMuaW5pdGlhbGl6ZUV2ZW50cygpLGMudXBkYXRlQXJyb3dzKCksYy51cGRhdGVEb3RzKCksYy5jaGVja1Jlc3BvbnNpdmUoITApLGMuZm9jdXNIYW5kbGVyKCkpLGImJmMuJHNsaWRlci50cmlnZ2VyKFwiaW5pdFwiLFtjXSksYy5vcHRpb25zLmFjY2Vzc2liaWxpdHk9PT0hMCYmYy5pbml0QURBKCksYy5vcHRpb25zLmF1dG9wbGF5JiYoYy5wYXVzZWQ9ITEsYy5hdXRvUGxheSgpKX0sYi5wcm90b3R5cGUuaW5pdEFEQT1mdW5jdGlvbigpe3ZhciBiPXRoaXM7Yi4kc2xpZGVzLmFkZChiLiRzbGlkZVRyYWNrLmZpbmQoXCIuc2xpY2stY2xvbmVkXCIpKS5hdHRyKHtcImFyaWEtaGlkZGVuXCI6XCJ0cnVlXCIsdGFiaW5kZXg6XCItMVwifSkuZmluZChcImEsIGlucHV0LCBidXR0b24sIHNlbGVjdFwiKS5hdHRyKHt0YWJpbmRleDpcIi0xXCJ9KSxiLiRzbGlkZVRyYWNrLmF0dHIoXCJyb2xlXCIsXCJsaXN0Ym94XCIpLGIuJHNsaWRlcy5ub3QoYi4kc2xpZGVUcmFjay5maW5kKFwiLnNsaWNrLWNsb25lZFwiKSkuZWFjaChmdW5jdGlvbihjKXthKHRoaXMpLmF0dHIoe3JvbGU6XCJvcHRpb25cIixcImFyaWEtZGVzY3JpYmVkYnlcIjpcInNsaWNrLXNsaWRlXCIrYi5pbnN0YW5jZVVpZCtjfSl9KSxudWxsIT09Yi4kZG90cyYmYi4kZG90cy5hdHRyKFwicm9sZVwiLFwidGFibGlzdFwiKS5maW5kKFwibGlcIikuZWFjaChmdW5jdGlvbihjKXthKHRoaXMpLmF0dHIoe3JvbGU6XCJwcmVzZW50YXRpb25cIixcImFyaWEtc2VsZWN0ZWRcIjpcImZhbHNlXCIsXCJhcmlhLWNvbnRyb2xzXCI6XCJuYXZpZ2F0aW9uXCIrYi5pbnN0YW5jZVVpZCtjLGlkOlwic2xpY2stc2xpZGVcIitiLmluc3RhbmNlVWlkK2N9KX0pLmZpcnN0KCkuYXR0cihcImFyaWEtc2VsZWN0ZWRcIixcInRydWVcIikuZW5kKCkuZmluZChcImJ1dHRvblwiKS5hdHRyKFwicm9sZVwiLFwiYnV0dG9uXCIpLmVuZCgpLmNsb3Nlc3QoXCJkaXZcIikuYXR0cihcInJvbGVcIixcInRvb2xiYXJcIiksYi5hY3RpdmF0ZUFEQSgpfSxiLnByb3RvdHlwZS5pbml0QXJyb3dFdmVudHM9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO2Eub3B0aW9ucy5hcnJvd3M9PT0hMCYmYS5zbGlkZUNvdW50PmEub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihhLiRwcmV2QXJyb3cub2ZmKFwiY2xpY2suc2xpY2tcIikub24oXCJjbGljay5zbGlja1wiLHttZXNzYWdlOlwicHJldmlvdXNcIn0sYS5jaGFuZ2VTbGlkZSksYS4kbmV4dEFycm93Lm9mZihcImNsaWNrLnNsaWNrXCIpLm9uKFwiY2xpY2suc2xpY2tcIix7bWVzc2FnZTpcIm5leHRcIn0sYS5jaGFuZ2VTbGlkZSkpfSxiLnByb3RvdHlwZS5pbml0RG90RXZlbnRzPWZ1bmN0aW9uKCl7dmFyIGI9dGhpcztiLm9wdGlvbnMuZG90cz09PSEwJiZiLnNsaWRlQ291bnQ+Yi5vcHRpb25zLnNsaWRlc1RvU2hvdyYmYShcImxpXCIsYi4kZG90cykub24oXCJjbGljay5zbGlja1wiLHttZXNzYWdlOlwiaW5kZXhcIn0sYi5jaGFuZ2VTbGlkZSksYi5vcHRpb25zLmRvdHM9PT0hMCYmYi5vcHRpb25zLnBhdXNlT25Eb3RzSG92ZXI9PT0hMCYmYShcImxpXCIsYi4kZG90cykub24oXCJtb3VzZWVudGVyLnNsaWNrXCIsYS5wcm94eShiLmludGVycnVwdCxiLCEwKSkub24oXCJtb3VzZWxlYXZlLnNsaWNrXCIsYS5wcm94eShiLmludGVycnVwdCxiLCExKSl9LGIucHJvdG90eXBlLmluaXRTbGlkZUV2ZW50cz1mdW5jdGlvbigpe3ZhciBiPXRoaXM7Yi5vcHRpb25zLnBhdXNlT25Ib3ZlciYmKGIuJGxpc3Qub24oXCJtb3VzZWVudGVyLnNsaWNrXCIsYS5wcm94eShiLmludGVycnVwdCxiLCEwKSksYi4kbGlzdC5vbihcIm1vdXNlbGVhdmUuc2xpY2tcIixhLnByb3h5KGIuaW50ZXJydXB0LGIsITEpKSl9LGIucHJvdG90eXBlLmluaXRpYWxpemVFdmVudHM9ZnVuY3Rpb24oKXt2YXIgYj10aGlzO2IuaW5pdEFycm93RXZlbnRzKCksYi5pbml0RG90RXZlbnRzKCksYi5pbml0U2xpZGVFdmVudHMoKSxiLiRsaXN0Lm9uKFwidG91Y2hzdGFydC5zbGljayBtb3VzZWRvd24uc2xpY2tcIix7YWN0aW9uOlwic3RhcnRcIn0sYi5zd2lwZUhhbmRsZXIpLGIuJGxpc3Qub24oXCJ0b3VjaG1vdmUuc2xpY2sgbW91c2Vtb3ZlLnNsaWNrXCIse2FjdGlvbjpcIm1vdmVcIn0sYi5zd2lwZUhhbmRsZXIpLGIuJGxpc3Qub24oXCJ0b3VjaGVuZC5zbGljayBtb3VzZXVwLnNsaWNrXCIse2FjdGlvbjpcImVuZFwifSxiLnN3aXBlSGFuZGxlciksYi4kbGlzdC5vbihcInRvdWNoY2FuY2VsLnNsaWNrIG1vdXNlbGVhdmUuc2xpY2tcIix7YWN0aW9uOlwiZW5kXCJ9LGIuc3dpcGVIYW5kbGVyKSxiLiRsaXN0Lm9uKFwiY2xpY2suc2xpY2tcIixiLmNsaWNrSGFuZGxlciksYShkb2N1bWVudCkub24oYi52aXNpYmlsaXR5Q2hhbmdlLGEucHJveHkoYi52aXNpYmlsaXR5LGIpKSxiLm9wdGlvbnMuYWNjZXNzaWJpbGl0eT09PSEwJiZiLiRsaXN0Lm9uKFwia2V5ZG93bi5zbGlja1wiLGIua2V5SGFuZGxlciksYi5vcHRpb25zLmZvY3VzT25TZWxlY3Q9PT0hMCYmYShiLiRzbGlkZVRyYWNrKS5jaGlsZHJlbigpLm9uKFwiY2xpY2suc2xpY2tcIixiLnNlbGVjdEhhbmRsZXIpLGEod2luZG93KS5vbihcIm9yaWVudGF0aW9uY2hhbmdlLnNsaWNrLnNsaWNrLVwiK2IuaW5zdGFuY2VVaWQsYS5wcm94eShiLm9yaWVudGF0aW9uQ2hhbmdlLGIpKSxhKHdpbmRvdykub24oXCJyZXNpemUuc2xpY2suc2xpY2stXCIrYi5pbnN0YW5jZVVpZCxhLnByb3h5KGIucmVzaXplLGIpKSxhKFwiW2RyYWdnYWJsZSE9dHJ1ZV1cIixiLiRzbGlkZVRyYWNrKS5vbihcImRyYWdzdGFydFwiLGIucHJldmVudERlZmF1bHQpLGEod2luZG93KS5vbihcImxvYWQuc2xpY2suc2xpY2stXCIrYi5pbnN0YW5jZVVpZCxiLnNldFBvc2l0aW9uKSxhKGRvY3VtZW50KS5vbihcInJlYWR5LnNsaWNrLnNsaWNrLVwiK2IuaW5zdGFuY2VVaWQsYi5zZXRQb3NpdGlvbil9LGIucHJvdG90eXBlLmluaXRVST1mdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5vcHRpb25zLmFycm93cz09PSEwJiZhLnNsaWRlQ291bnQ+YS5vcHRpb25zLnNsaWRlc1RvU2hvdyYmKGEuJHByZXZBcnJvdy5zaG93KCksYS4kbmV4dEFycm93LnNob3coKSksYS5vcHRpb25zLmRvdHM9PT0hMCYmYS5zbGlkZUNvdW50PmEub3B0aW9ucy5zbGlkZXNUb1Nob3cmJmEuJGRvdHMuc2hvdygpfSxiLnByb3RvdHlwZS5rZXlIYW5kbGVyPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7YS50YXJnZXQudGFnTmFtZS5tYXRjaChcIlRFWFRBUkVBfElOUFVUfFNFTEVDVFwiKXx8KDM3PT09YS5rZXlDb2RlJiZiLm9wdGlvbnMuYWNjZXNzaWJpbGl0eT09PSEwP2IuY2hhbmdlU2xpZGUoe2RhdGE6e21lc3NhZ2U6Yi5vcHRpb25zLnJ0bD09PSEwP1wibmV4dFwiOlwicHJldmlvdXNcIn19KTozOT09PWEua2V5Q29kZSYmYi5vcHRpb25zLmFjY2Vzc2liaWxpdHk9PT0hMCYmYi5jaGFuZ2VTbGlkZSh7ZGF0YTp7bWVzc2FnZTpiLm9wdGlvbnMucnRsPT09ITA/XCJwcmV2aW91c1wiOlwibmV4dFwifX0pKX0sYi5wcm90b3R5cGUubGF6eUxvYWQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBnKGMpe2EoXCJpbWdbZGF0YS1sYXp5XVwiLGMpLmVhY2goZnVuY3Rpb24oKXt2YXIgYz1hKHRoaXMpLGQ9YSh0aGlzKS5hdHRyKFwiZGF0YS1sYXp5XCIpLGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtlLm9ubG9hZD1mdW5jdGlvbigpe2MuYW5pbWF0ZSh7b3BhY2l0eTowfSwxMDAsZnVuY3Rpb24oKXtjLmF0dHIoXCJzcmNcIixkKS5hbmltYXRlKHtvcGFjaXR5OjF9LDIwMCxmdW5jdGlvbigpe2MucmVtb3ZlQXR0cihcImRhdGEtbGF6eVwiKS5yZW1vdmVDbGFzcyhcInNsaWNrLWxvYWRpbmdcIil9KSxiLiRzbGlkZXIudHJpZ2dlcihcImxhenlMb2FkZWRcIixbYixjLGRdKX0pfSxlLm9uZXJyb3I9ZnVuY3Rpb24oKXtjLnJlbW92ZUF0dHIoXCJkYXRhLWxhenlcIikucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpLmFkZENsYXNzKFwic2xpY2stbGF6eWxvYWQtZXJyb3JcIiksYi4kc2xpZGVyLnRyaWdnZXIoXCJsYXp5TG9hZEVycm9yXCIsW2IsYyxkXSl9LGUuc3JjPWR9KX12YXIgYyxkLGUsZixiPXRoaXM7Yi5vcHRpb25zLmNlbnRlck1vZGU9PT0hMD9iLm9wdGlvbnMuaW5maW5pdGU9PT0hMD8oZT1iLmN1cnJlbnRTbGlkZSsoYi5vcHRpb25zLnNsaWRlc1RvU2hvdy8yKzEpLGY9ZStiLm9wdGlvbnMuc2xpZGVzVG9TaG93KzIpOihlPU1hdGgubWF4KDAsYi5jdXJyZW50U2xpZGUtKGIub3B0aW9ucy5zbGlkZXNUb1Nob3cvMisxKSksZj0yKyhiLm9wdGlvbnMuc2xpZGVzVG9TaG93LzIrMSkrYi5jdXJyZW50U2xpZGUpOihlPWIub3B0aW9ucy5pbmZpbml0ZT9iLm9wdGlvbnMuc2xpZGVzVG9TaG93K2IuY3VycmVudFNsaWRlOmIuY3VycmVudFNsaWRlLGY9TWF0aC5jZWlsKGUrYi5vcHRpb25zLnNsaWRlc1RvU2hvdyksYi5vcHRpb25zLmZhZGU9PT0hMCYmKGU+MCYmZS0tLGY8PWIuc2xpZGVDb3VudCYmZisrKSksYz1iLiRzbGlkZXIuZmluZChcIi5zbGljay1zbGlkZVwiKS5zbGljZShlLGYpLGcoYyksYi5zbGlkZUNvdW50PD1iLm9wdGlvbnMuc2xpZGVzVG9TaG93PyhkPWIuJHNsaWRlci5maW5kKFwiLnNsaWNrLXNsaWRlXCIpLGcoZCkpOmIuY3VycmVudFNsaWRlPj1iLnNsaWRlQ291bnQtYi5vcHRpb25zLnNsaWRlc1RvU2hvdz8oZD1iLiRzbGlkZXIuZmluZChcIi5zbGljay1jbG9uZWRcIikuc2xpY2UoMCxiLm9wdGlvbnMuc2xpZGVzVG9TaG93KSxnKGQpKTowPT09Yi5jdXJyZW50U2xpZGUmJihkPWIuJHNsaWRlci5maW5kKFwiLnNsaWNrLWNsb25lZFwiKS5zbGljZSgtMSpiLm9wdGlvbnMuc2xpZGVzVG9TaG93KSxnKGQpKX0sYi5wcm90b3R5cGUubG9hZFNsaWRlcj1mdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5zZXRQb3NpdGlvbigpLGEuJHNsaWRlVHJhY2suY3NzKHtvcGFjaXR5OjF9KSxhLiRzbGlkZXIucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpLGEuaW5pdFVJKCksXCJwcm9ncmVzc2l2ZVwiPT09YS5vcHRpb25zLmxhenlMb2FkJiZhLnByb2dyZXNzaXZlTGF6eUxvYWQoKX0sYi5wcm90b3R5cGUubmV4dD1iLnByb3RvdHlwZS5zbGlja05leHQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO2EuY2hhbmdlU2xpZGUoe2RhdGE6e21lc3NhZ2U6XCJuZXh0XCJ9fSl9LGIucHJvdG90eXBlLm9yaWVudGF0aW9uQ2hhbmdlPWZ1bmN0aW9uKCl7dmFyIGE9dGhpczthLmNoZWNrUmVzcG9uc2l2ZSgpLGEuc2V0UG9zaXRpb24oKX0sYi5wcm90b3R5cGUucGF1c2U9Yi5wcm90b3R5cGUuc2xpY2tQYXVzZT1mdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5hdXRvUGxheUNsZWFyKCksYS5wYXVzZWQ9ITB9LGIucHJvdG90eXBlLnBsYXk9Yi5wcm90b3R5cGUuc2xpY2tQbGF5PWZ1bmN0aW9uKCl7dmFyIGE9dGhpczthLmF1dG9QbGF5KCksYS5vcHRpb25zLmF1dG9wbGF5PSEwLGEucGF1c2VkPSExLGEuZm9jdXNzZWQ9ITEsYS5pbnRlcnJ1cHRlZD0hMX0sYi5wcm90b3R5cGUucG9zdFNsaWRlPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7Yi51bnNsaWNrZWR8fChiLiRzbGlkZXIudHJpZ2dlcihcImFmdGVyQ2hhbmdlXCIsW2IsYV0pLGIuYW5pbWF0aW5nPSExLGIuc2V0UG9zaXRpb24oKSxiLnN3aXBlTGVmdD1udWxsLGIub3B0aW9ucy5hdXRvcGxheSYmYi5hdXRvUGxheSgpLGIub3B0aW9ucy5hY2Nlc3NpYmlsaXR5PT09ITAmJmIuaW5pdEFEQSgpKX0sYi5wcm90b3R5cGUucHJldj1iLnByb3RvdHlwZS5zbGlja1ByZXY9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO2EuY2hhbmdlU2xpZGUoe2RhdGE6e21lc3NhZ2U6XCJwcmV2aW91c1wifX0pfSxiLnByb3RvdHlwZS5wcmV2ZW50RGVmYXVsdD1mdW5jdGlvbihhKXthLnByZXZlbnREZWZhdWx0KCl9LGIucHJvdG90eXBlLnByb2dyZXNzaXZlTGF6eUxvYWQ9ZnVuY3Rpb24oYil7Yj1ifHwxO3ZhciBlLGYsZyxjPXRoaXMsZD1hKFwiaW1nW2RhdGEtbGF6eV1cIixjLiRzbGlkZXIpO2QubGVuZ3RoPyhlPWQuZmlyc3QoKSxmPWUuYXR0cihcImRhdGEtbGF6eVwiKSxnPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIiksZy5vbmxvYWQ9ZnVuY3Rpb24oKXtlLmF0dHIoXCJzcmNcIixmKS5yZW1vdmVBdHRyKFwiZGF0YS1sYXp5XCIpLnJlbW92ZUNsYXNzKFwic2xpY2stbG9hZGluZ1wiKSxjLm9wdGlvbnMuYWRhcHRpdmVIZWlnaHQ9PT0hMCYmYy5zZXRQb3NpdGlvbigpLGMuJHNsaWRlci50cmlnZ2VyKFwibGF6eUxvYWRlZFwiLFtjLGUsZl0pLGMucHJvZ3Jlc3NpdmVMYXp5TG9hZCgpfSxnLm9uZXJyb3I9ZnVuY3Rpb24oKXszPmI/c2V0VGltZW91dChmdW5jdGlvbigpe2MucHJvZ3Jlc3NpdmVMYXp5TG9hZChiKzEpfSw1MDApOihlLnJlbW92ZUF0dHIoXCJkYXRhLWxhenlcIikucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpLmFkZENsYXNzKFwic2xpY2stbGF6eWxvYWQtZXJyb3JcIiksYy4kc2xpZGVyLnRyaWdnZXIoXCJsYXp5TG9hZEVycm9yXCIsW2MsZSxmXSksYy5wcm9ncmVzc2l2ZUxhenlMb2FkKCkpfSxnLnNyYz1mKTpjLiRzbGlkZXIudHJpZ2dlcihcImFsbEltYWdlc0xvYWRlZFwiLFtjXSl9LGIucHJvdG90eXBlLnJlZnJlc2g9ZnVuY3Rpb24oYil7dmFyIGQsZSxjPXRoaXM7ZT1jLnNsaWRlQ291bnQtYy5vcHRpb25zLnNsaWRlc1RvU2hvdywhYy5vcHRpb25zLmluZmluaXRlJiZjLmN1cnJlbnRTbGlkZT5lJiYoYy5jdXJyZW50U2xpZGU9ZSksYy5zbGlkZUNvdW50PD1jLm9wdGlvbnMuc2xpZGVzVG9TaG93JiYoYy5jdXJyZW50U2xpZGU9MCksZD1jLmN1cnJlbnRTbGlkZSxjLmRlc3Ryb3koITApLGEuZXh0ZW5kKGMsYy5pbml0aWFscyx7Y3VycmVudFNsaWRlOmR9KSxjLmluaXQoKSxifHxjLmNoYW5nZVNsaWRlKHtkYXRhOnttZXNzYWdlOlwiaW5kZXhcIixpbmRleDpkfX0sITEpfSxiLnByb3RvdHlwZS5yZWdpc3RlckJyZWFrcG9pbnRzPWZ1bmN0aW9uKCl7dmFyIGMsZCxlLGI9dGhpcyxmPWIub3B0aW9ucy5yZXNwb25zaXZlfHxudWxsO2lmKFwiYXJyYXlcIj09PWEudHlwZShmKSYmZi5sZW5ndGgpe2IucmVzcG9uZFRvPWIub3B0aW9ucy5yZXNwb25kVG98fFwid2luZG93XCI7Zm9yKGMgaW4gZilpZihlPWIuYnJlYWtwb2ludHMubGVuZ3RoLTEsZD1mW2NdLmJyZWFrcG9pbnQsZi5oYXNPd25Qcm9wZXJ0eShjKSl7Zm9yKDtlPj0wOyliLmJyZWFrcG9pbnRzW2VdJiZiLmJyZWFrcG9pbnRzW2VdPT09ZCYmYi5icmVha3BvaW50cy5zcGxpY2UoZSwxKSxlLS07Yi5icmVha3BvaW50cy5wdXNoKGQpLGIuYnJlYWtwb2ludFNldHRpbmdzW2RdPWZbY10uc2V0dGluZ3N9Yi5icmVha3BvaW50cy5zb3J0KGZ1bmN0aW9uKGEsYyl7cmV0dXJuIGIub3B0aW9ucy5tb2JpbGVGaXJzdD9hLWM6Yy1hfSl9fSxiLnByb3RvdHlwZS5yZWluaXQ9ZnVuY3Rpb24oKXt2YXIgYj10aGlzO2IuJHNsaWRlcz1iLiRzbGlkZVRyYWNrLmNoaWxkcmVuKGIub3B0aW9ucy5zbGlkZSkuYWRkQ2xhc3MoXCJzbGljay1zbGlkZVwiKSxiLnNsaWRlQ291bnQ9Yi4kc2xpZGVzLmxlbmd0aCxiLmN1cnJlbnRTbGlkZT49Yi5zbGlkZUNvdW50JiYwIT09Yi5jdXJyZW50U2xpZGUmJihiLmN1cnJlbnRTbGlkZT1iLmN1cnJlbnRTbGlkZS1iLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpLGIuc2xpZGVDb3VudDw9Yi5vcHRpb25zLnNsaWRlc1RvU2hvdyYmKGIuY3VycmVudFNsaWRlPTApLGIucmVnaXN0ZXJCcmVha3BvaW50cygpLGIuc2V0UHJvcHMoKSxiLnNldHVwSW5maW5pdGUoKSxiLmJ1aWxkQXJyb3dzKCksYi51cGRhdGVBcnJvd3MoKSxiLmluaXRBcnJvd0V2ZW50cygpLGIuYnVpbGREb3RzKCksYi51cGRhdGVEb3RzKCksYi5pbml0RG90RXZlbnRzKCksYi5jbGVhblVwU2xpZGVFdmVudHMoKSxiLmluaXRTbGlkZUV2ZW50cygpLGIuY2hlY2tSZXNwb25zaXZlKCExLCEwKSxiLm9wdGlvbnMuZm9jdXNPblNlbGVjdD09PSEwJiZhKGIuJHNsaWRlVHJhY2spLmNoaWxkcmVuKCkub24oXCJjbGljay5zbGlja1wiLGIuc2VsZWN0SGFuZGxlciksYi5zZXRTbGlkZUNsYXNzZXMoXCJudW1iZXJcIj09dHlwZW9mIGIuY3VycmVudFNsaWRlP2IuY3VycmVudFNsaWRlOjApLGIuc2V0UG9zaXRpb24oKSxiLmZvY3VzSGFuZGxlcigpLGIucGF1c2VkPSFiLm9wdGlvbnMuYXV0b3BsYXksYi5hdXRvUGxheSgpLGIuJHNsaWRlci50cmlnZ2VyKFwicmVJbml0XCIsW2JdKX0sYi5wcm90b3R5cGUucmVzaXplPWZ1bmN0aW9uKCl7dmFyIGI9dGhpczthKHdpbmRvdykud2lkdGgoKSE9PWIud2luZG93V2lkdGgmJihjbGVhclRpbWVvdXQoYi53aW5kb3dEZWxheSksYi53aW5kb3dEZWxheT13aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpe2Iud2luZG93V2lkdGg9YSh3aW5kb3cpLndpZHRoKCksYi5jaGVja1Jlc3BvbnNpdmUoKSxiLnVuc2xpY2tlZHx8Yi5zZXRQb3NpdGlvbigpfSw1MCkpfSxiLnByb3RvdHlwZS5yZW1vdmVTbGlkZT1iLnByb3RvdHlwZS5zbGlja1JlbW92ZT1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcztyZXR1cm5cImJvb2xlYW5cIj09dHlwZW9mIGE/KGI9YSxhPWI9PT0hMD8wOmQuc2xpZGVDb3VudC0xKTphPWI9PT0hMD8tLWE6YSxkLnNsaWRlQ291bnQ8MXx8MD5hfHxhPmQuc2xpZGVDb3VudC0xPyExOihkLnVubG9hZCgpLGM9PT0hMD9kLiRzbGlkZVRyYWNrLmNoaWxkcmVuKCkucmVtb3ZlKCk6ZC4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmVxKGEpLnJlbW92ZSgpLGQuJHNsaWRlcz1kLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSksZC4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpLGQuJHNsaWRlVHJhY2suYXBwZW5kKGQuJHNsaWRlcyksZC4kc2xpZGVzQ2FjaGU9ZC4kc2xpZGVzLHZvaWQgZC5yZWluaXQoKSl9LGIucHJvdG90eXBlLnNldENTUz1mdW5jdGlvbihhKXt2YXIgZCxlLGI9dGhpcyxjPXt9O2Iub3B0aW9ucy5ydGw9PT0hMCYmKGE9LWEpLGQ9XCJsZWZ0XCI9PWIucG9zaXRpb25Qcm9wP01hdGguY2VpbChhKStcInB4XCI6XCIwcHhcIixlPVwidG9wXCI9PWIucG9zaXRpb25Qcm9wP01hdGguY2VpbChhKStcInB4XCI6XCIwcHhcIixjW2IucG9zaXRpb25Qcm9wXT1hLGIudHJhbnNmb3Jtc0VuYWJsZWQ9PT0hMT9iLiRzbGlkZVRyYWNrLmNzcyhjKTooYz17fSxiLmNzc1RyYW5zaXRpb25zPT09ITE/KGNbYi5hbmltVHlwZV09XCJ0cmFuc2xhdGUoXCIrZCtcIiwgXCIrZStcIilcIixiLiRzbGlkZVRyYWNrLmNzcyhjKSk6KGNbYi5hbmltVHlwZV09XCJ0cmFuc2xhdGUzZChcIitkK1wiLCBcIitlK1wiLCAwcHgpXCIsYi4kc2xpZGVUcmFjay5jc3MoYykpKX0sYi5wcm90b3R5cGUuc2V0RGltZW5zaW9ucz1mdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5vcHRpb25zLnZlcnRpY2FsPT09ITE/YS5vcHRpb25zLmNlbnRlck1vZGU9PT0hMCYmYS4kbGlzdC5jc3Moe3BhZGRpbmc6XCIwcHggXCIrYS5vcHRpb25zLmNlbnRlclBhZGRpbmd9KTooYS4kbGlzdC5oZWlnaHQoYS4kc2xpZGVzLmZpcnN0KCkub3V0ZXJIZWlnaHQoITApKmEub3B0aW9ucy5zbGlkZXNUb1Nob3cpLGEub3B0aW9ucy5jZW50ZXJNb2RlPT09ITAmJmEuJGxpc3QuY3NzKHtwYWRkaW5nOmEub3B0aW9ucy5jZW50ZXJQYWRkaW5nK1wiIDBweFwifSkpLGEubGlzdFdpZHRoPWEuJGxpc3Qud2lkdGgoKSxhLmxpc3RIZWlnaHQ9YS4kbGlzdC5oZWlnaHQoKSxhLm9wdGlvbnMudmVydGljYWw9PT0hMSYmYS5vcHRpb25zLnZhcmlhYmxlV2lkdGg9PT0hMT8oYS5zbGlkZVdpZHRoPU1hdGguY2VpbChhLmxpc3RXaWR0aC9hLm9wdGlvbnMuc2xpZGVzVG9TaG93KSxhLiRzbGlkZVRyYWNrLndpZHRoKE1hdGguY2VpbChhLnNsaWRlV2lkdGgqYS4kc2xpZGVUcmFjay5jaGlsZHJlbihcIi5zbGljay1zbGlkZVwiKS5sZW5ndGgpKSk6YS5vcHRpb25zLnZhcmlhYmxlV2lkdGg9PT0hMD9hLiRzbGlkZVRyYWNrLndpZHRoKDVlMyphLnNsaWRlQ291bnQpOihhLnNsaWRlV2lkdGg9TWF0aC5jZWlsKGEubGlzdFdpZHRoKSxhLiRzbGlkZVRyYWNrLmhlaWdodChNYXRoLmNlaWwoYS4kc2xpZGVzLmZpcnN0KCkub3V0ZXJIZWlnaHQoITApKmEuJHNsaWRlVHJhY2suY2hpbGRyZW4oXCIuc2xpY2stc2xpZGVcIikubGVuZ3RoKSkpO3ZhciBiPWEuJHNsaWRlcy5maXJzdCgpLm91dGVyV2lkdGgoITApLWEuJHNsaWRlcy5maXJzdCgpLndpZHRoKCk7YS5vcHRpb25zLnZhcmlhYmxlV2lkdGg9PT0hMSYmYS4kc2xpZGVUcmFjay5jaGlsZHJlbihcIi5zbGljay1zbGlkZVwiKS53aWR0aChhLnNsaWRlV2lkdGgtYil9LGIucHJvdG90eXBlLnNldEZhZGU9ZnVuY3Rpb24oKXt2YXIgYyxiPXRoaXM7Yi4kc2xpZGVzLmVhY2goZnVuY3Rpb24oZCxlKXtjPWIuc2xpZGVXaWR0aCpkKi0xLGIub3B0aW9ucy5ydGw9PT0hMD9hKGUpLmNzcyh7cG9zaXRpb246XCJyZWxhdGl2ZVwiLHJpZ2h0OmMsdG9wOjAsekluZGV4OmIub3B0aW9ucy56SW5kZXgtMixvcGFjaXR5OjB9KTphKGUpLmNzcyh7cG9zaXRpb246XCJyZWxhdGl2ZVwiLGxlZnQ6Yyx0b3A6MCx6SW5kZXg6Yi5vcHRpb25zLnpJbmRleC0yLG9wYWNpdHk6MH0pfSksYi4kc2xpZGVzLmVxKGIuY3VycmVudFNsaWRlKS5jc3Moe3pJbmRleDpiLm9wdGlvbnMuekluZGV4LTEsb3BhY2l0eToxfSl9LGIucHJvdG90eXBlLnNldEhlaWdodD1mdW5jdGlvbigpe3ZhciBhPXRoaXM7aWYoMT09PWEub3B0aW9ucy5zbGlkZXNUb1Nob3cmJmEub3B0aW9ucy5hZGFwdGl2ZUhlaWdodD09PSEwJiZhLm9wdGlvbnMudmVydGljYWw9PT0hMSl7dmFyIGI9YS4kc2xpZGVzLmVxKGEuY3VycmVudFNsaWRlKS5vdXRlckhlaWdodCghMCk7YS4kbGlzdC5jc3MoXCJoZWlnaHRcIixiKX19LGIucHJvdG90eXBlLnNldE9wdGlvbj1iLnByb3RvdHlwZS5zbGlja1NldE9wdGlvbj1mdW5jdGlvbigpe3ZhciBjLGQsZSxmLGgsYj10aGlzLGc9ITE7aWYoXCJvYmplY3RcIj09PWEudHlwZShhcmd1bWVudHNbMF0pPyhlPWFyZ3VtZW50c1swXSxnPWFyZ3VtZW50c1sxXSxoPVwibXVsdGlwbGVcIik6XCJzdHJpbmdcIj09PWEudHlwZShhcmd1bWVudHNbMF0pJiYoZT1hcmd1bWVudHNbMF0sZj1hcmd1bWVudHNbMV0sZz1hcmd1bWVudHNbMl0sXCJyZXNwb25zaXZlXCI9PT1hcmd1bWVudHNbMF0mJlwiYXJyYXlcIj09PWEudHlwZShhcmd1bWVudHNbMV0pP2g9XCJyZXNwb25zaXZlXCI6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGFyZ3VtZW50c1sxXSYmKGg9XCJzaW5nbGVcIikpLFwic2luZ2xlXCI9PT1oKWIub3B0aW9uc1tlXT1mO2Vsc2UgaWYoXCJtdWx0aXBsZVwiPT09aClhLmVhY2goZSxmdW5jdGlvbihhLGMpe2Iub3B0aW9uc1thXT1jfSk7ZWxzZSBpZihcInJlc3BvbnNpdmVcIj09PWgpZm9yKGQgaW4gZilpZihcImFycmF5XCIhPT1hLnR5cGUoYi5vcHRpb25zLnJlc3BvbnNpdmUpKWIub3B0aW9ucy5yZXNwb25zaXZlPVtmW2RdXTtlbHNle2ZvcihjPWIub3B0aW9ucy5yZXNwb25zaXZlLmxlbmd0aC0xO2M+PTA7KWIub3B0aW9ucy5yZXNwb25zaXZlW2NdLmJyZWFrcG9pbnQ9PT1mW2RdLmJyZWFrcG9pbnQmJmIub3B0aW9ucy5yZXNwb25zaXZlLnNwbGljZShjLDEpLGMtLTtiLm9wdGlvbnMucmVzcG9uc2l2ZS5wdXNoKGZbZF0pfWcmJihiLnVubG9hZCgpLGIucmVpbml0KCkpfSxiLnByb3RvdHlwZS5zZXRQb3NpdGlvbj1mdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5zZXREaW1lbnNpb25zKCksYS5zZXRIZWlnaHQoKSxhLm9wdGlvbnMuZmFkZT09PSExP2Euc2V0Q1NTKGEuZ2V0TGVmdChhLmN1cnJlbnRTbGlkZSkpOmEuc2V0RmFkZSgpLGEuJHNsaWRlci50cmlnZ2VyKFwic2V0UG9zaXRpb25cIixbYV0pfSxiLnByb3RvdHlwZS5zZXRQcm9wcz1mdW5jdGlvbigpe3ZhciBhPXRoaXMsYj1kb2N1bWVudC5ib2R5LnN0eWxlO2EucG9zaXRpb25Qcm9wPWEub3B0aW9ucy52ZXJ0aWNhbD09PSEwP1widG9wXCI6XCJsZWZ0XCIsXCJ0b3BcIj09PWEucG9zaXRpb25Qcm9wP2EuJHNsaWRlci5hZGRDbGFzcyhcInNsaWNrLXZlcnRpY2FsXCIpOmEuJHNsaWRlci5yZW1vdmVDbGFzcyhcInNsaWNrLXZlcnRpY2FsXCIpLCh2b2lkIDAhPT1iLldlYmtpdFRyYW5zaXRpb258fHZvaWQgMCE9PWIuTW96VHJhbnNpdGlvbnx8dm9pZCAwIT09Yi5tc1RyYW5zaXRpb24pJiZhLm9wdGlvbnMudXNlQ1NTPT09ITAmJihhLmNzc1RyYW5zaXRpb25zPSEwKSxhLm9wdGlvbnMuZmFkZSYmKFwibnVtYmVyXCI9PXR5cGVvZiBhLm9wdGlvbnMuekluZGV4P2Eub3B0aW9ucy56SW5kZXg8MyYmKGEub3B0aW9ucy56SW5kZXg9Myk6YS5vcHRpb25zLnpJbmRleD1hLmRlZmF1bHRzLnpJbmRleCksdm9pZCAwIT09Yi5PVHJhbnNmb3JtJiYoYS5hbmltVHlwZT1cIk9UcmFuc2Zvcm1cIixhLnRyYW5zZm9ybVR5cGU9XCItby10cmFuc2Zvcm1cIixhLnRyYW5zaXRpb25UeXBlPVwiT1RyYW5zaXRpb25cIix2b2lkIDA9PT1iLnBlcnNwZWN0aXZlUHJvcGVydHkmJnZvaWQgMD09PWIud2Via2l0UGVyc3BlY3RpdmUmJihhLmFuaW1UeXBlPSExKSksdm9pZCAwIT09Yi5Nb3pUcmFuc2Zvcm0mJihhLmFuaW1UeXBlPVwiTW96VHJhbnNmb3JtXCIsYS50cmFuc2Zvcm1UeXBlPVwiLW1vei10cmFuc2Zvcm1cIixhLnRyYW5zaXRpb25UeXBlPVwiTW96VHJhbnNpdGlvblwiLHZvaWQgMD09PWIucGVyc3BlY3RpdmVQcm9wZXJ0eSYmdm9pZCAwPT09Yi5Nb3pQZXJzcGVjdGl2ZSYmKGEuYW5pbVR5cGU9ITEpKSx2b2lkIDAhPT1iLndlYmtpdFRyYW5zZm9ybSYmKGEuYW5pbVR5cGU9XCJ3ZWJraXRUcmFuc2Zvcm1cIixhLnRyYW5zZm9ybVR5cGU9XCItd2Via2l0LXRyYW5zZm9ybVwiLGEudHJhbnNpdGlvblR5cGU9XCJ3ZWJraXRUcmFuc2l0aW9uXCIsdm9pZCAwPT09Yi5wZXJzcGVjdGl2ZVByb3BlcnR5JiZ2b2lkIDA9PT1iLndlYmtpdFBlcnNwZWN0aXZlJiYoYS5hbmltVHlwZT0hMSkpLHZvaWQgMCE9PWIubXNUcmFuc2Zvcm0mJihhLmFuaW1UeXBlPVwibXNUcmFuc2Zvcm1cIixhLnRyYW5zZm9ybVR5cGU9XCItbXMtdHJhbnNmb3JtXCIsYS50cmFuc2l0aW9uVHlwZT1cIm1zVHJhbnNpdGlvblwiLHZvaWQgMD09PWIubXNUcmFuc2Zvcm0mJihhLmFuaW1UeXBlPSExKSksdm9pZCAwIT09Yi50cmFuc2Zvcm0mJmEuYW5pbVR5cGUhPT0hMSYmKGEuYW5pbVR5cGU9XCJ0cmFuc2Zvcm1cIixhLnRyYW5zZm9ybVR5cGU9XCJ0cmFuc2Zvcm1cIixhLnRyYW5zaXRpb25UeXBlPVwidHJhbnNpdGlvblwiKSxhLnRyYW5zZm9ybXNFbmFibGVkPWEub3B0aW9ucy51c2VUcmFuc2Zvcm0mJm51bGwhPT1hLmFuaW1UeXBlJiZhLmFuaW1UeXBlIT09ITF9LGIucHJvdG90eXBlLnNldFNsaWRlQ2xhc3Nlcz1mdW5jdGlvbihhKXt2YXIgYyxkLGUsZixiPXRoaXM7ZD1iLiRzbGlkZXIuZmluZChcIi5zbGljay1zbGlkZVwiKS5yZW1vdmVDbGFzcyhcInNsaWNrLWFjdGl2ZSBzbGljay1jZW50ZXIgc2xpY2stY3VycmVudFwiKS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcInRydWVcIiksYi4kc2xpZGVzLmVxKGEpLmFkZENsYXNzKFwic2xpY2stY3VycmVudFwiKSxiLm9wdGlvbnMuY2VudGVyTW9kZT09PSEwPyhjPU1hdGguZmxvb3IoYi5vcHRpb25zLnNsaWRlc1RvU2hvdy8yKSxiLm9wdGlvbnMuaW5maW5pdGU9PT0hMCYmKGE+PWMmJmE8PWIuc2xpZGVDb3VudC0xLWM/Yi4kc2xpZGVzLnNsaWNlKGEtYyxhK2MrMSkuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIikuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJmYWxzZVwiKTooZT1iLm9wdGlvbnMuc2xpZGVzVG9TaG93K2EsXG5kLnNsaWNlKGUtYysxLGUrYysyKS5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcImZhbHNlXCIpKSwwPT09YT9kLmVxKGQubGVuZ3RoLTEtYi5vcHRpb25zLnNsaWRlc1RvU2hvdykuYWRkQ2xhc3MoXCJzbGljay1jZW50ZXJcIik6YT09PWIuc2xpZGVDb3VudC0xJiZkLmVxKGIub3B0aW9ucy5zbGlkZXNUb1Nob3cpLmFkZENsYXNzKFwic2xpY2stY2VudGVyXCIpKSxiLiRzbGlkZXMuZXEoYSkuYWRkQ2xhc3MoXCJzbGljay1jZW50ZXJcIikpOmE+PTAmJmE8PWIuc2xpZGVDb3VudC1iLm9wdGlvbnMuc2xpZGVzVG9TaG93P2IuJHNsaWRlcy5zbGljZShhLGErYi5vcHRpb25zLnNsaWRlc1RvU2hvdykuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIikuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJmYWxzZVwiKTpkLmxlbmd0aDw9Yi5vcHRpb25zLnNsaWRlc1RvU2hvdz9kLmFkZENsYXNzKFwic2xpY2stYWN0aXZlXCIpLmF0dHIoXCJhcmlhLWhpZGRlblwiLFwiZmFsc2VcIik6KGY9Yi5zbGlkZUNvdW50JWIub3B0aW9ucy5zbGlkZXNUb1Nob3csZT1iLm9wdGlvbnMuaW5maW5pdGU9PT0hMD9iLm9wdGlvbnMuc2xpZGVzVG9TaG93K2E6YSxiLm9wdGlvbnMuc2xpZGVzVG9TaG93PT1iLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwmJmIuc2xpZGVDb3VudC1hPGIub3B0aW9ucy5zbGlkZXNUb1Nob3c/ZC5zbGljZShlLShiLm9wdGlvbnMuc2xpZGVzVG9TaG93LWYpLGUrZikuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIikuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJmYWxzZVwiKTpkLnNsaWNlKGUsZStiLm9wdGlvbnMuc2xpZGVzVG9TaG93KS5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcImZhbHNlXCIpKSxcIm9uZGVtYW5kXCI9PT1iLm9wdGlvbnMubGF6eUxvYWQmJmIubGF6eUxvYWQoKX0sYi5wcm90b3R5cGUuc2V0dXBJbmZpbml0ZT1mdW5jdGlvbigpe3ZhciBjLGQsZSxiPXRoaXM7aWYoYi5vcHRpb25zLmZhZGU9PT0hMCYmKGIub3B0aW9ucy5jZW50ZXJNb2RlPSExKSxiLm9wdGlvbnMuaW5maW5pdGU9PT0hMCYmYi5vcHRpb25zLmZhZGU9PT0hMSYmKGQ9bnVsbCxiLnNsaWRlQ291bnQ+Yi5vcHRpb25zLnNsaWRlc1RvU2hvdykpe2ZvcihlPWIub3B0aW9ucy5jZW50ZXJNb2RlPT09ITA/Yi5vcHRpb25zLnNsaWRlc1RvU2hvdysxOmIub3B0aW9ucy5zbGlkZXNUb1Nob3csYz1iLnNsaWRlQ291bnQ7Yz5iLnNsaWRlQ291bnQtZTtjLT0xKWQ9Yy0xLGEoYi4kc2xpZGVzW2RdKS5jbG9uZSghMCkuYXR0cihcImlkXCIsXCJcIikuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIixkLWIuc2xpZGVDb3VudCkucHJlcGVuZFRvKGIuJHNsaWRlVHJhY2spLmFkZENsYXNzKFwic2xpY2stY2xvbmVkXCIpO2ZvcihjPTA7ZT5jO2MrPTEpZD1jLGEoYi4kc2xpZGVzW2RdKS5jbG9uZSghMCkuYXR0cihcImlkXCIsXCJcIikuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIixkK2Iuc2xpZGVDb3VudCkuYXBwZW5kVG8oYi4kc2xpZGVUcmFjaykuYWRkQ2xhc3MoXCJzbGljay1jbG9uZWRcIik7Yi4kc2xpZGVUcmFjay5maW5kKFwiLnNsaWNrLWNsb25lZFwiKS5maW5kKFwiW2lkXVwiKS5lYWNoKGZ1bmN0aW9uKCl7YSh0aGlzKS5hdHRyKFwiaWRcIixcIlwiKX0pfX0sYi5wcm90b3R5cGUuaW50ZXJydXB0PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7YXx8Yi5hdXRvUGxheSgpLGIuaW50ZXJydXB0ZWQ9YX0sYi5wcm90b3R5cGUuc2VsZWN0SGFuZGxlcj1mdW5jdGlvbihiKXt2YXIgYz10aGlzLGQ9YShiLnRhcmdldCkuaXMoXCIuc2xpY2stc2xpZGVcIik/YShiLnRhcmdldCk6YShiLnRhcmdldCkucGFyZW50cyhcIi5zbGljay1zbGlkZVwiKSxlPXBhcnNlSW50KGQuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIikpO3JldHVybiBlfHwoZT0wKSxjLnNsaWRlQ291bnQ8PWMub3B0aW9ucy5zbGlkZXNUb1Nob3c/KGMuc2V0U2xpZGVDbGFzc2VzKGUpLHZvaWQgYy5hc05hdkZvcihlKSk6dm9pZCBjLnNsaWRlSGFuZGxlcihlKX0sYi5wcm90b3R5cGUuc2xpZGVIYW5kbGVyPWZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGYsZyxqLGg9bnVsbCxpPXRoaXM7cmV0dXJuIGI9Ynx8ITEsaS5hbmltYXRpbmc9PT0hMCYmaS5vcHRpb25zLndhaXRGb3JBbmltYXRlPT09ITB8fGkub3B0aW9ucy5mYWRlPT09ITAmJmkuY3VycmVudFNsaWRlPT09YXx8aS5zbGlkZUNvdW50PD1pLm9wdGlvbnMuc2xpZGVzVG9TaG93P3ZvaWQgMDooYj09PSExJiZpLmFzTmF2Rm9yKGEpLGQ9YSxoPWkuZ2V0TGVmdChkKSxnPWkuZ2V0TGVmdChpLmN1cnJlbnRTbGlkZSksaS5jdXJyZW50TGVmdD1udWxsPT09aS5zd2lwZUxlZnQ/ZzppLnN3aXBlTGVmdCxpLm9wdGlvbnMuaW5maW5pdGU9PT0hMSYmaS5vcHRpb25zLmNlbnRlck1vZGU9PT0hMSYmKDA+YXx8YT5pLmdldERvdENvdW50KCkqaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKT92b2lkKGkub3B0aW9ucy5mYWRlPT09ITEmJihkPWkuY3VycmVudFNsaWRlLGMhPT0hMD9pLmFuaW1hdGVTbGlkZShnLGZ1bmN0aW9uKCl7aS5wb3N0U2xpZGUoZCl9KTppLnBvc3RTbGlkZShkKSkpOmkub3B0aW9ucy5pbmZpbml0ZT09PSExJiZpLm9wdGlvbnMuY2VudGVyTW9kZT09PSEwJiYoMD5hfHxhPmkuc2xpZGVDb3VudC1pLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpP3ZvaWQoaS5vcHRpb25zLmZhZGU9PT0hMSYmKGQ9aS5jdXJyZW50U2xpZGUsYyE9PSEwP2kuYW5pbWF0ZVNsaWRlKGcsZnVuY3Rpb24oKXtpLnBvc3RTbGlkZShkKX0pOmkucG9zdFNsaWRlKGQpKSk6KGkub3B0aW9ucy5hdXRvcGxheSYmY2xlYXJJbnRlcnZhbChpLmF1dG9QbGF5VGltZXIpLGU9MD5kP2kuc2xpZGVDb3VudCVpLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwhPT0wP2kuc2xpZGVDb3VudC1pLnNsaWRlQ291bnQlaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsOmkuc2xpZGVDb3VudCtkOmQ+PWkuc2xpZGVDb3VudD9pLnNsaWRlQ291bnQlaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsIT09MD8wOmQtaS5zbGlkZUNvdW50OmQsaS5hbmltYXRpbmc9ITAsaS4kc2xpZGVyLnRyaWdnZXIoXCJiZWZvcmVDaGFuZ2VcIixbaSxpLmN1cnJlbnRTbGlkZSxlXSksZj1pLmN1cnJlbnRTbGlkZSxpLmN1cnJlbnRTbGlkZT1lLGkuc2V0U2xpZGVDbGFzc2VzKGkuY3VycmVudFNsaWRlKSxpLm9wdGlvbnMuYXNOYXZGb3ImJihqPWkuZ2V0TmF2VGFyZ2V0KCksaj1qLnNsaWNrKFwiZ2V0U2xpY2tcIiksai5zbGlkZUNvdW50PD1qLm9wdGlvbnMuc2xpZGVzVG9TaG93JiZqLnNldFNsaWRlQ2xhc3NlcyhpLmN1cnJlbnRTbGlkZSkpLGkudXBkYXRlRG90cygpLGkudXBkYXRlQXJyb3dzKCksaS5vcHRpb25zLmZhZGU9PT0hMD8oYyE9PSEwPyhpLmZhZGVTbGlkZU91dChmKSxpLmZhZGVTbGlkZShlLGZ1bmN0aW9uKCl7aS5wb3N0U2xpZGUoZSl9KSk6aS5wb3N0U2xpZGUoZSksdm9pZCBpLmFuaW1hdGVIZWlnaHQoKSk6dm9pZChjIT09ITA/aS5hbmltYXRlU2xpZGUoaCxmdW5jdGlvbigpe2kucG9zdFNsaWRlKGUpfSk6aS5wb3N0U2xpZGUoZSkpKSl9LGIucHJvdG90eXBlLnN0YXJ0TG9hZD1mdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5vcHRpb25zLmFycm93cz09PSEwJiZhLnNsaWRlQ291bnQ+YS5vcHRpb25zLnNsaWRlc1RvU2hvdyYmKGEuJHByZXZBcnJvdy5oaWRlKCksYS4kbmV4dEFycm93LmhpZGUoKSksYS5vcHRpb25zLmRvdHM9PT0hMCYmYS5zbGlkZUNvdW50PmEub3B0aW9ucy5zbGlkZXNUb1Nob3cmJmEuJGRvdHMuaGlkZSgpLGEuJHNsaWRlci5hZGRDbGFzcyhcInNsaWNrLWxvYWRpbmdcIil9LGIucHJvdG90eXBlLnN3aXBlRGlyZWN0aW9uPWZ1bmN0aW9uKCl7dmFyIGEsYixjLGQsZT10aGlzO3JldHVybiBhPWUudG91Y2hPYmplY3Quc3RhcnRYLWUudG91Y2hPYmplY3QuY3VyWCxiPWUudG91Y2hPYmplY3Quc3RhcnRZLWUudG91Y2hPYmplY3QuY3VyWSxjPU1hdGguYXRhbjIoYixhKSxkPU1hdGgucm91bmQoMTgwKmMvTWF0aC5QSSksMD5kJiYoZD0zNjAtTWF0aC5hYnMoZCkpLDQ1Pj1kJiZkPj0wP2Uub3B0aW9ucy5ydGw9PT0hMT9cImxlZnRcIjpcInJpZ2h0XCI6MzYwPj1kJiZkPj0zMTU/ZS5vcHRpb25zLnJ0bD09PSExP1wibGVmdFwiOlwicmlnaHRcIjpkPj0xMzUmJjIyNT49ZD9lLm9wdGlvbnMucnRsPT09ITE/XCJyaWdodFwiOlwibGVmdFwiOmUub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmc9PT0hMD9kPj0zNSYmMTM1Pj1kP1wiZG93blwiOlwidXBcIjpcInZlcnRpY2FsXCJ9LGIucHJvdG90eXBlLnN3aXBlRW5kPWZ1bmN0aW9uKGEpe3ZhciBjLGQsYj10aGlzO2lmKGIuZHJhZ2dpbmc9ITEsYi5pbnRlcnJ1cHRlZD0hMSxiLnNob3VsZENsaWNrPWIudG91Y2hPYmplY3Quc3dpcGVMZW5ndGg+MTA/ITE6ITAsdm9pZCAwPT09Yi50b3VjaE9iamVjdC5jdXJYKXJldHVybiExO2lmKGIudG91Y2hPYmplY3QuZWRnZUhpdD09PSEwJiZiLiRzbGlkZXIudHJpZ2dlcihcImVkZ2VcIixbYixiLnN3aXBlRGlyZWN0aW9uKCldKSxiLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoPj1iLnRvdWNoT2JqZWN0Lm1pblN3aXBlKXtzd2l0Y2goZD1iLnN3aXBlRGlyZWN0aW9uKCkpe2Nhc2VcImxlZnRcIjpjYXNlXCJkb3duXCI6Yz1iLm9wdGlvbnMuc3dpcGVUb1NsaWRlP2IuY2hlY2tOYXZpZ2FibGUoYi5jdXJyZW50U2xpZGUrYi5nZXRTbGlkZUNvdW50KCkpOmIuY3VycmVudFNsaWRlK2IuZ2V0U2xpZGVDb3VudCgpLGIuY3VycmVudERpcmVjdGlvbj0wO2JyZWFrO2Nhc2VcInJpZ2h0XCI6Y2FzZVwidXBcIjpjPWIub3B0aW9ucy5zd2lwZVRvU2xpZGU/Yi5jaGVja05hdmlnYWJsZShiLmN1cnJlbnRTbGlkZS1iLmdldFNsaWRlQ291bnQoKSk6Yi5jdXJyZW50U2xpZGUtYi5nZXRTbGlkZUNvdW50KCksYi5jdXJyZW50RGlyZWN0aW9uPTF9XCJ2ZXJ0aWNhbFwiIT1kJiYoYi5zbGlkZUhhbmRsZXIoYyksYi50b3VjaE9iamVjdD17fSxiLiRzbGlkZXIudHJpZ2dlcihcInN3aXBlXCIsW2IsZF0pKX1lbHNlIGIudG91Y2hPYmplY3Quc3RhcnRYIT09Yi50b3VjaE9iamVjdC5jdXJYJiYoYi5zbGlkZUhhbmRsZXIoYi5jdXJyZW50U2xpZGUpLGIudG91Y2hPYmplY3Q9e30pfSxiLnByb3RvdHlwZS5zd2lwZUhhbmRsZXI9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcztpZighKGIub3B0aW9ucy5zd2lwZT09PSExfHxcIm9udG91Y2hlbmRcImluIGRvY3VtZW50JiZiLm9wdGlvbnMuc3dpcGU9PT0hMXx8Yi5vcHRpb25zLmRyYWdnYWJsZT09PSExJiYtMSE9PWEudHlwZS5pbmRleE9mKFwibW91c2VcIikpKXN3aXRjaChiLnRvdWNoT2JqZWN0LmZpbmdlckNvdW50PWEub3JpZ2luYWxFdmVudCYmdm9pZCAwIT09YS5vcmlnaW5hbEV2ZW50LnRvdWNoZXM/YS5vcmlnaW5hbEV2ZW50LnRvdWNoZXMubGVuZ3RoOjEsYi50b3VjaE9iamVjdC5taW5Td2lwZT1iLmxpc3RXaWR0aC9iLm9wdGlvbnMudG91Y2hUaHJlc2hvbGQsYi5vcHRpb25zLnZlcnRpY2FsU3dpcGluZz09PSEwJiYoYi50b3VjaE9iamVjdC5taW5Td2lwZT1iLmxpc3RIZWlnaHQvYi5vcHRpb25zLnRvdWNoVGhyZXNob2xkKSxhLmRhdGEuYWN0aW9uKXtjYXNlXCJzdGFydFwiOmIuc3dpcGVTdGFydChhKTticmVhaztjYXNlXCJtb3ZlXCI6Yi5zd2lwZU1vdmUoYSk7YnJlYWs7Y2FzZVwiZW5kXCI6Yi5zd2lwZUVuZChhKX19LGIucHJvdG90eXBlLnN3aXBlTW92ZT1mdW5jdGlvbihhKXt2YXIgZCxlLGYsZyxoLGI9dGhpcztyZXR1cm4gaD12b2lkIDAhPT1hLm9yaWdpbmFsRXZlbnQ/YS5vcmlnaW5hbEV2ZW50LnRvdWNoZXM6bnVsbCwhYi5kcmFnZ2luZ3x8aCYmMSE9PWgubGVuZ3RoPyExOihkPWIuZ2V0TGVmdChiLmN1cnJlbnRTbGlkZSksYi50b3VjaE9iamVjdC5jdXJYPXZvaWQgMCE9PWg/aFswXS5wYWdlWDphLmNsaWVudFgsYi50b3VjaE9iamVjdC5jdXJZPXZvaWQgMCE9PWg/aFswXS5wYWdlWTphLmNsaWVudFksYi50b3VjaE9iamVjdC5zd2lwZUxlbmd0aD1NYXRoLnJvdW5kKE1hdGguc3FydChNYXRoLnBvdyhiLnRvdWNoT2JqZWN0LmN1clgtYi50b3VjaE9iamVjdC5zdGFydFgsMikpKSxiLm9wdGlvbnMudmVydGljYWxTd2lwaW5nPT09ITAmJihiLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoPU1hdGgucm91bmQoTWF0aC5zcXJ0KE1hdGgucG93KGIudG91Y2hPYmplY3QuY3VyWS1iLnRvdWNoT2JqZWN0LnN0YXJ0WSwyKSkpKSxlPWIuc3dpcGVEaXJlY3Rpb24oKSxcInZlcnRpY2FsXCIhPT1lPyh2b2lkIDAhPT1hLm9yaWdpbmFsRXZlbnQmJmIudG91Y2hPYmplY3Quc3dpcGVMZW5ndGg+NCYmYS5wcmV2ZW50RGVmYXVsdCgpLGc9KGIub3B0aW9ucy5ydGw9PT0hMT8xOi0xKSooYi50b3VjaE9iamVjdC5jdXJYPmIudG91Y2hPYmplY3Quc3RhcnRYPzE6LTEpLGIub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmc9PT0hMCYmKGc9Yi50b3VjaE9iamVjdC5jdXJZPmIudG91Y2hPYmplY3Quc3RhcnRZPzE6LTEpLGY9Yi50b3VjaE9iamVjdC5zd2lwZUxlbmd0aCxiLnRvdWNoT2JqZWN0LmVkZ2VIaXQ9ITEsYi5vcHRpb25zLmluZmluaXRlPT09ITEmJigwPT09Yi5jdXJyZW50U2xpZGUmJlwicmlnaHRcIj09PWV8fGIuY3VycmVudFNsaWRlPj1iLmdldERvdENvdW50KCkmJlwibGVmdFwiPT09ZSkmJihmPWIudG91Y2hPYmplY3Quc3dpcGVMZW5ndGgqYi5vcHRpb25zLmVkZ2VGcmljdGlvbixiLnRvdWNoT2JqZWN0LmVkZ2VIaXQ9ITApLGIub3B0aW9ucy52ZXJ0aWNhbD09PSExP2Iuc3dpcGVMZWZ0PWQrZipnOmIuc3dpcGVMZWZ0PWQrZiooYi4kbGlzdC5oZWlnaHQoKS9iLmxpc3RXaWR0aCkqZyxiLm9wdGlvbnMudmVydGljYWxTd2lwaW5nPT09ITAmJihiLnN3aXBlTGVmdD1kK2YqZyksYi5vcHRpb25zLmZhZGU9PT0hMHx8Yi5vcHRpb25zLnRvdWNoTW92ZT09PSExPyExOmIuYW5pbWF0aW5nPT09ITA/KGIuc3dpcGVMZWZ0PW51bGwsITEpOnZvaWQgYi5zZXRDU1MoYi5zd2lwZUxlZnQpKTp2b2lkIDApfSxiLnByb3RvdHlwZS5zd2lwZVN0YXJ0PWZ1bmN0aW9uKGEpe3ZhciBjLGI9dGhpcztyZXR1cm4gYi5pbnRlcnJ1cHRlZD0hMCwxIT09Yi50b3VjaE9iamVjdC5maW5nZXJDb3VudHx8Yi5zbGlkZUNvdW50PD1iLm9wdGlvbnMuc2xpZGVzVG9TaG93PyhiLnRvdWNoT2JqZWN0PXt9LCExKToodm9pZCAwIT09YS5vcmlnaW5hbEV2ZW50JiZ2b2lkIDAhPT1hLm9yaWdpbmFsRXZlbnQudG91Y2hlcyYmKGM9YS5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF0pLGIudG91Y2hPYmplY3Quc3RhcnRYPWIudG91Y2hPYmplY3QuY3VyWD12b2lkIDAhPT1jP2MucGFnZVg6YS5jbGllbnRYLGIudG91Y2hPYmplY3Quc3RhcnRZPWIudG91Y2hPYmplY3QuY3VyWT12b2lkIDAhPT1jP2MucGFnZVk6YS5jbGllbnRZLHZvaWQoYi5kcmFnZ2luZz0hMCkpfSxiLnByb3RvdHlwZS51bmZpbHRlclNsaWRlcz1iLnByb3RvdHlwZS5zbGlja1VuZmlsdGVyPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcztudWxsIT09YS4kc2xpZGVzQ2FjaGUmJihhLnVubG9hZCgpLGEuJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKS5kZXRhY2goKSxhLiRzbGlkZXNDYWNoZS5hcHBlbmRUbyhhLiRzbGlkZVRyYWNrKSxhLnJlaW5pdCgpKX0sYi5wcm90b3R5cGUudW5sb2FkPWZ1bmN0aW9uKCl7dmFyIGI9dGhpczthKFwiLnNsaWNrLWNsb25lZFwiLGIuJHNsaWRlcikucmVtb3ZlKCksYi4kZG90cyYmYi4kZG90cy5yZW1vdmUoKSxiLiRwcmV2QXJyb3cmJmIuaHRtbEV4cHIudGVzdChiLm9wdGlvbnMucHJldkFycm93KSYmYi4kcHJldkFycm93LnJlbW92ZSgpLGIuJG5leHRBcnJvdyYmYi5odG1sRXhwci50ZXN0KGIub3B0aW9ucy5uZXh0QXJyb3cpJiZiLiRuZXh0QXJyb3cucmVtb3ZlKCksYi4kc2xpZGVzLnJlbW92ZUNsYXNzKFwic2xpY2stc2xpZGUgc2xpY2stYWN0aXZlIHNsaWNrLXZpc2libGUgc2xpY2stY3VycmVudFwiKS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcInRydWVcIikuY3NzKFwid2lkdGhcIixcIlwiKX0sYi5wcm90b3R5cGUudW5zbGljaz1mdW5jdGlvbihhKXt2YXIgYj10aGlzO2IuJHNsaWRlci50cmlnZ2VyKFwidW5zbGlja1wiLFtiLGFdKSxiLmRlc3Ryb3koKX0sYi5wcm90b3R5cGUudXBkYXRlQXJyb3dzPWZ1bmN0aW9uKCl7dmFyIGIsYT10aGlzO2I9TWF0aC5mbG9vcihhLm9wdGlvbnMuc2xpZGVzVG9TaG93LzIpLGEub3B0aW9ucy5hcnJvd3M9PT0hMCYmYS5zbGlkZUNvdW50PmEub3B0aW9ucy5zbGlkZXNUb1Nob3cmJiFhLm9wdGlvbnMuaW5maW5pdGUmJihhLiRwcmV2QXJyb3cucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKS5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLFwiZmFsc2VcIiksYS4kbmV4dEFycm93LnJlbW92ZUNsYXNzKFwic2xpY2stZGlzYWJsZWRcIikuYXR0cihcImFyaWEtZGlzYWJsZWRcIixcImZhbHNlXCIpLDA9PT1hLmN1cnJlbnRTbGlkZT8oYS4kcHJldkFycm93LmFkZENsYXNzKFwic2xpY2stZGlzYWJsZWRcIikuYXR0cihcImFyaWEtZGlzYWJsZWRcIixcInRydWVcIiksYS4kbmV4dEFycm93LnJlbW92ZUNsYXNzKFwic2xpY2stZGlzYWJsZWRcIikuYXR0cihcImFyaWEtZGlzYWJsZWRcIixcImZhbHNlXCIpKTphLmN1cnJlbnRTbGlkZT49YS5zbGlkZUNvdW50LWEub3B0aW9ucy5zbGlkZXNUb1Nob3cmJmEub3B0aW9ucy5jZW50ZXJNb2RlPT09ITE/KGEuJG5leHRBcnJvdy5hZGRDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJ0cnVlXCIpLGEuJHByZXZBcnJvdy5yZW1vdmVDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJmYWxzZVwiKSk6YS5jdXJyZW50U2xpZGU+PWEuc2xpZGVDb3VudC0xJiZhLm9wdGlvbnMuY2VudGVyTW9kZT09PSEwJiYoYS4kbmV4dEFycm93LmFkZENsYXNzKFwic2xpY2stZGlzYWJsZWRcIikuYXR0cihcImFyaWEtZGlzYWJsZWRcIixcInRydWVcIiksYS4kcHJldkFycm93LnJlbW92ZUNsYXNzKFwic2xpY2stZGlzYWJsZWRcIikuYXR0cihcImFyaWEtZGlzYWJsZWRcIixcImZhbHNlXCIpKSl9LGIucHJvdG90eXBlLnVwZGF0ZURvdHM9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO251bGwhPT1hLiRkb3RzJiYoYS4kZG90cy5maW5kKFwibGlcIikucmVtb3ZlQ2xhc3MoXCJzbGljay1hY3RpdmVcIikuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJ0cnVlXCIpLGEuJGRvdHMuZmluZChcImxpXCIpLmVxKE1hdGguZmxvb3IoYS5jdXJyZW50U2xpZGUvYS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSkuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIikuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJmYWxzZVwiKSl9LGIucHJvdG90eXBlLnZpc2liaWxpdHk9ZnVuY3Rpb24oKXt2YXIgYT10aGlzO2Eub3B0aW9ucy5hdXRvcGxheSYmKGRvY3VtZW50W2EuaGlkZGVuXT9hLmludGVycnVwdGVkPSEwOmEuaW50ZXJydXB0ZWQ9ITEpfSxhLmZuLnNsaWNrPWZ1bmN0aW9uKCl7dmFyIGYsZyxhPXRoaXMsYz1hcmd1bWVudHNbMF0sZD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSksZT1hLmxlbmd0aDtmb3IoZj0wO2U+ZjtmKyspaWYoXCJvYmplY3RcIj09dHlwZW9mIGN8fFwidW5kZWZpbmVkXCI9PXR5cGVvZiBjP2FbZl0uc2xpY2s9bmV3IGIoYVtmXSxjKTpnPWFbZl0uc2xpY2tbY10uYXBwbHkoYVtmXS5zbGljayxkKSxcInVuZGVmaW5lZFwiIT10eXBlb2YgZylyZXR1cm4gZztyZXR1cm4gYX19KTsiXX0=