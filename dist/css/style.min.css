@font-face{font-family:"OpenSans";font-display:swap;src:url(../fonts/OpenSans-Regular.woff) format("woff"),url(../fonts/OpenSans-Regular.woff2) format("woff2");font-weight:400;font-style:normal}@font-face{font-family:"Copperplate";font-display:swap;src:url(../fonts/Copperplate-Bold.woff) format("woff"),url(../fonts/Copperplate-Bold.woff2) format("woff2");font-weight:700;font-style:normal}*{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-tap-highlight-color:transparent}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit}body{border:0}label,table{font:inherit}*,body,table{margin:0;padding:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}pre{white-space:pre-wrap;word-wrap:break-word}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border:0;border-collapse:collapse;border-spacing:0}caption,td,th{text-align:left;font-weight:400}td{vertical-align:top}button,input,label,select,textarea{margin:0;border:0;padding:0;display:inline-block;vertical-align:middle;white-space:normal;background:0 0;line-height:1;font-family:Arial}button,input[type=button],input[type=checkbox],input[type=radio],input[type=reset],input[type=submit],select{-webkit-box-sizing:border-box;box-sizing:border-box}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button,input[type=button],input[type=reset],input[type=submit]{cursor:pointer}input:focus{outline:0}textarea{resize:none}input[type=submit]{padding:0;border:0;outline:0}input[type]:-webkit-autofill,input[type]:-webkit-autofill:active,input[type]:-webkit-autofill:focus,input[type]:-webkit-autofill:hover{-webkit-transition:background-color 5000s ease-in-out 0s;transition:background-color 5000s ease-in-out 0s;-webkit-text-fill-color:#fff!important;text-fill-color:#fff!important}strong{font-weight:400}sup{font-size:11px}body{font:20px "OpenSans";color:#00151e}a,a:active,a:focus,a:hover,a:link,a:visited{text-decoration:none;outline:0;color:inherit}a{-webkit-transition:all .3s ease 0s;-o-transition:all .3s ease 0s;transition:all .3s ease 0s}img{max-width:100%}.container{max-width:1680px;margin:0 auto;padding:0 70px}.title{font:700 40px "Copperplate";text-transform:uppercase}.banner{width:100%;height:400px;background:url(../images/banners/banner.jpg) no-repeat;background-size:cover}.logo{max-width:350px}.news-wrapper{list-style:none;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media (max-width:700px){.news-wrapper{display:block}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */